{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The spectrum1-explorer command-line interface (CLI) allows to use most features of the Google spectrum service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the spectrum API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-spectrum1_explorer-cli Find the source code on github . Usage This documentation was generated from the spectrum API at revision 20170306 . The CLI is at version 5.0.4 . spectrum1-explorer [options] paws get-spectrum (-r <kv>)... [-p <v>]... [-o <out>] get-spectrum-batch (-r <kv>)... [-p <v>]... [-o <out>] init (-r <kv>)... [-p <v>]... [-o <out>] notify-spectrum-use (-r <kv>)... [-p <v>]... [-o <out>] register (-r <kv>)... [-p <v>]... [-o <out>] verify-device (-r <kv>)... [-p <v>]... [-o <out>] spectrum1-explorer --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with spectrum1-explorer- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/spectrum1-explorer-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/spectrum1-explorer-secret.json , assuming that the required spectrum API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. spectrum1-explorer --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-spectrum1_explorer-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the spectrum API at revision 20170306 . The CLI is at version 5.0.4 . spectrum1-explorer [options] paws get-spectrum (-r <kv>)... [-p <v>]... [-o <out>] get-spectrum-batch (-r <kv>)... [-p <v>]... [-o <out>] init (-r <kv>)... [-p <v>]... [-o <out>] notify-spectrum-use (-r <kv>)... [-p <v>]... [-o <out>] register (-r <kv>)... [-p <v>]... [-o <out>] verify-device (-r <kv>)... [-p <v>]... [-o <out>] spectrum1-explorer --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with spectrum1-explorer- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/spectrum1-explorer-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/spectrum1-explorer-secret.json , assuming that the required spectrum API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. spectrum1-explorer --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"paws_get-spectrum-batch/","text":"The Google Spectrum Database does not support batch requests, so this method always yields an UNIMPLEMENTED error. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsGetSpectrumBatchRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string master-device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string request-type: string type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.7735052857092053 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=diam If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.40747000249106957 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=et Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=et Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sadipscing Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=stet Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=dolor Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=duo Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=vero The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=vero The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=invidunt The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=stet - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..master-device-desc etsi-en-device-category=vero Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=elitr Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=lorem Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=diam Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=no Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=ipsum Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=accusam The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=takimata The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=consetetur The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=voluptua. - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..owner.operator.adr code=et The postal code associated with the address. For example: 94423. country=erat The country name. For example: US. locality=consetetur The city or local equivalent portion of the address. For example: San Jose. pobox=amet. An optional post office box number. region=sed The state or local equivalent portion of the address. For example: CA. street=takimata The street number and name. For example: 123 Any St. ..email text=dolores The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=gubergren The full name of the contact person. For example: John A. Smith. org text=et The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=accusam A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=voluptua. The postal code associated with the address. For example: 94423. country=dolore The country name. For example: US. locality=dolore The city or local equivalent portion of the address. For example: San Jose. pobox=dolore An optional post office box number. region=voluptua. The state or local equivalent portion of the address. For example: CA. street=amet. The street number and name. For example: 123 Any St. ..email text=ea The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=sadipscing The full name of the contact person. For example: John A. Smith. org text=lorem The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=invidunt A nested telephone URI of the form: tel:+1-123-456-7890. .... request-type=no The request type parameter is an optional parameter that can be used to modify an available spectrum batch request, but its use depends on applicable regulatory rules. For example, It may be used to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the device descriptor parameter for the device on whose behalf the batch request is made is required. type=est The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=at - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get Spectrum Batch"},{"location":"paws_get-spectrum-batch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsGetSpectrumBatchRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string master-device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string request-type: string type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.7735052857092053 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=diam If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.40747000249106957 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=et Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=et Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sadipscing Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=stet Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=dolor Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=duo Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=vero The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=vero The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=invidunt The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=stet - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..master-device-desc etsi-en-device-category=vero Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=elitr Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=lorem Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=diam Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=no Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=ipsum Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=accusam The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=takimata The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=consetetur The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=voluptua. - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..owner.operator.adr code=et The postal code associated with the address. For example: 94423. country=erat The country name. For example: US. locality=consetetur The city or local equivalent portion of the address. For example: San Jose. pobox=amet. An optional post office box number. region=sed The state or local equivalent portion of the address. For example: CA. street=takimata The street number and name. For example: 123 Any St. ..email text=dolores The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=gubergren The full name of the contact person. For example: John A. Smith. org text=et The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=accusam A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=voluptua. The postal code associated with the address. For example: 94423. country=dolore The country name. For example: US. locality=dolore The city or local equivalent portion of the address. For example: San Jose. pobox=dolore An optional post office box number. region=voluptua. The state or local equivalent portion of the address. For example: CA. street=amet. The street number and name. For example: 123 Any St. ..email text=ea The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=sadipscing The full name of the contact person. For example: John A. Smith. org text=lorem The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=invidunt A nested telephone URI of the form: tel:+1-123-456-7890. .... request-type=no The request type parameter is an optional parameter that can be used to modify an available spectrum batch request, but its use depends on applicable regulatory rules. For example, It may be used to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the device descriptor parameter for the device on whose behalf the batch request is made is required. type=est The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=at - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_get-spectrum-batch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_get-spectrum-batch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_get-spectrum-batch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"paws_get-spectrum/","text":"Requests information about the available spectrum for a device at a location. Requests from a fixed-mode device must include owner information so the device can be registered with the database. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsGetSpectrumRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number master-device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string request-type: string type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.6177528569514706 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=magna If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.7098799822170164 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=voluptua. Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=at Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sanctus Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=sed Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=amet. Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=takimata Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=amet. The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=duo The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=ipsum The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=gubergren - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=50 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.9922470725858205 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.20494600207758173 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.6562776331888889 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.912305342889376 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.1092883976212714 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ...master-device-desc etsi-en-device-category=duo Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=ipsum Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sed Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=ut Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=gubergren Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=rebum. Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=est The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=ipsum The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=ipsum The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..owner.operator.adr code=gubergren The postal code associated with the address. For example: 94423. country=ea The country name. For example: US. locality=dolor The city or local equivalent portion of the address. For example: San Jose. pobox=lorem An optional post office box number. region=eos The state or local equivalent portion of the address. For example: CA. street=labore The street number and name. For example: 123 Any St. ..email text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=duo The full name of the contact person. For example: John A. Smith. org text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=no A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=stet The postal code associated with the address. For example: 94423. country=kasd The country name. For example: US. locality=et The city or local equivalent portion of the address. For example: San Jose. pobox=sed An optional post office box number. region=et The state or local equivalent portion of the address. For example: CA. street=et The street number and name. For example: 123 Any St. ..email text=vero The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=erat The full name of the contact person. For example: John A. Smith. org text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=duo A nested telephone URI of the form: tel:+1-123-456-7890. .... request-type=dolore The request type parameter is an optional parameter that can be used to modify an available spectrum request, but its use depends on applicable regulatory rules. It may be used, for example, to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the deviceDesc parameter for the device on whose behalf the request is made is required. type=et The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=voluptua. - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get Spectrum"},{"location":"paws_get-spectrum/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsGetSpectrumRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number master-device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string request-type: string type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.6177528569514706 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=magna If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.7098799822170164 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=voluptua. Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=at Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sanctus Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=sed Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=amet. Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=takimata Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=amet. The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=duo The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=ipsum The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=gubergren - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=50 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.9922470725858205 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.20494600207758173 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.6562776331888889 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.912305342889376 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.1092883976212714 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ...master-device-desc etsi-en-device-category=duo Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=ipsum Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sed Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=ut Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=gubergren Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=rebum. Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=est The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=ipsum The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=ipsum The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..owner.operator.adr code=gubergren The postal code associated with the address. For example: 94423. country=ea The country name. For example: US. locality=dolor The city or local equivalent portion of the address. For example: San Jose. pobox=lorem An optional post office box number. region=eos The state or local equivalent portion of the address. For example: CA. street=labore The street number and name. For example: 123 Any St. ..email text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=duo The full name of the contact person. For example: John A. Smith. org text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=no A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=stet The postal code associated with the address. For example: 94423. country=kasd The country name. For example: US. locality=et The city or local equivalent portion of the address. For example: San Jose. pobox=sed An optional post office box number. region=et The state or local equivalent portion of the address. For example: CA. street=et The street number and name. For example: 123 Any St. ..email text=vero The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=erat The full name of the contact person. For example: John A. Smith. org text=sed The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=duo A nested telephone URI of the form: tel:+1-123-456-7890. .... request-type=dolore The request type parameter is an optional parameter that can be used to modify an available spectrum request, but its use depends on applicable regulatory rules. It may be used, for example, to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the deviceDesc parameter for the device on whose behalf the request is made is required. type=et The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=voluptua. - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_get-spectrum/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_get-spectrum/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_get-spectrum/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"paws_init/","text":"Initializes the connection between a white space device and the database. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsInitRequest: device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-desc etsi-en-device-category=sed Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=sit Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=et Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=tempor Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=aliquyam Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=ipsum Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=et The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=sanctus The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=lorem The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=71 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.798394050963041 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.6446652953124616 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.261779375871928 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.7087562540955133 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.9478375320054573 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=sed The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=no - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Init"},{"location":"paws_init/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsInitRequest: device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-desc etsi-en-device-category=sed Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=sit Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=et Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=tempor Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=aliquyam Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=ipsum Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=et The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=sanctus The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=lorem The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=71 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.798394050963041 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.6446652953124616 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.261779375871928 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.7087562540955133 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.9478375320054573 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=sed The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=no - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_init/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_init/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_init/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"paws_notify-spectrum-use/","text":"Notifies the database that the device has selected certain frequency ranges for transmission. Only to be invoked when required by the regulator. The Google Spectrum Database does not operate in domains that require notification, so this always yields an UNIMPLEMENTED error. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsNotifySpectrumUseRequest: device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-desc etsi-en-device-category=nonumy Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=at Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sadipscing Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=aliquyam Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=dolores Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=sadipscing Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=erat The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=aliquyam The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=amet The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=77 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.7169672018374179 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.906716808162772 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.04285143636125732 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.28750413463325764 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.9713160109189481 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=elitr The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=duo - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Notify Spectrum Use"},{"location":"paws_notify-spectrum-use/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsNotifySpectrumUseRequest: device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-desc etsi-en-device-category=nonumy Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=at Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=sadipscing Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=aliquyam Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=dolores Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=sadipscing Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=erat The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=aliquyam The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=amet The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=est - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..location confidence=77 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.7169672018374179 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.906716808162772 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.04285143636125732 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.28750413463325764 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.9713160109189481 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=elitr The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=duo - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_notify-spectrum-use/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_notify-spectrum-use/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_notify-spectrum-use/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"paws_register/","text":"The Google Spectrum Database implements registration in the getSpectrum method. As such this always returns an UNIMPLEMENTED error. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsRegisterRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string device-owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.46131836881712285 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=sit If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.06840925818992016 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=lorem Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=ea Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=stet Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=dolores Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=eos Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=et Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=sea The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=et The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=at The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=dolore - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..device-owner.operator.adr code=eirmod The postal code associated with the address. For example: 94423. country=lorem The country name. For example: US. locality=accusam The city or local equivalent portion of the address. For example: San Jose. pobox=amet An optional post office box number. region=erat The state or local equivalent portion of the address. For example: CA. street=dolores The street number and name. For example: 123 Any St. ..email text=erat The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=accusam The full name of the contact person. For example: John A. Smith. org text=sea The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=takimata A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=lorem The postal code associated with the address. For example: 94423. country=et The country name. For example: US. locality=at The city or local equivalent portion of the address. For example: San Jose. pobox=dolor An optional post office box number. region=et The state or local equivalent portion of the address. For example: CA. street=sit The street number and name. For example: 123 Any St. ..email text=erat The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=sea The full name of the contact person. For example: John A. Smith. org text=nonumy The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=et A nested telephone URI of the form: tel:+1-123-456-7890. ....location confidence=89 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.6291766861205718 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.03937387488958621 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.5399657234545516 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.19212006510277202 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.43748262753292944 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=dolor The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=aliquyam - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Register"},{"location":"paws_register/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsRegisterRequest: antenna: height: number height-type: string height-uncertainty: number device-desc: etsi-en-device-category: string etsi-en-device-emissions-class: string etsi-en-device-type: string etsi-en-technology-id: string fcc-id: string fcc-tvbd-device-type: string manufacturer-id: string model-id: string ruleset-ids: [string] serial-number: string device-owner: operator: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string owner: adr: code: string country: string locality: string pobox: string region: string street: string email: text: string fn: string org: text: string tel: uri: string location: confidence: integer point: center: latitude: number longitude: number orientation: number semi-major-axis: number semi-minor-axis: number type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .antenna height=0.46131836881712285 The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative. height-type=sit If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL. height-uncertainty=0.06840925818992016 The height uncertainty in meters. Whether this is required depends on the regulatory domain. ..device-desc etsi-en-device-category=lorem Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types. etsi-en-device-emissions-class=ea Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types. etsi-en-device-type=stet Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types. etsi-en-technology-id=dolores Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types. fcc-id=eos Specifies the device's FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters. fcc-tvbd-device-type=et Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2. manufacturer-id=sea The manufacturer's ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length. model-id=et The device's model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length. ruleset-ids=at The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry. For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset. - Each invocation of this argument appends the given value to the array. * serial-number=dolore - The manufacturer's device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters. ..device-owner.operator.adr code=eirmod The postal code associated with the address. For example: 94423. country=lorem The country name. For example: US. locality=accusam The city or local equivalent portion of the address. For example: San Jose. pobox=amet An optional post office box number. region=erat The state or local equivalent portion of the address. For example: CA. street=dolores The street number and name. For example: 123 Any St. ..email text=erat The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=accusam The full name of the contact person. For example: John A. Smith. org text=sea The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=takimata A nested telephone URI of the form: tel:+1-123-456-7890. ...owner.adr code=lorem The postal code associated with the address. For example: 94423. country=et The country name. For example: US. locality=at The city or local equivalent portion of the address. For example: San Jose. pobox=dolor An optional post office box number. region=et The state or local equivalent portion of the address. For example: CA. street=sit The street number and name. For example: 123 Any St. ..email text=erat The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. .. fn=sea The full name of the contact person. For example: John A. Smith. org text=nonumy The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com. ..tel uri=et A nested telephone URI of the form: tel:+1-123-456-7890. ....location confidence=89 The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty. point.center latitude=0.6291766861205718 A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. longitude=0.03937387488958621 A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency's Technical Report TR8350.2. .. orientation=0.5399657234545516 A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0. semi-major-axis=0.19212006510277202 A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. semi-minor-axis=0.43748262753292944 A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0. ... type=dolor The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=aliquyam - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_register/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_register/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_register/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"paws_verify-device/","text":"Validates a device for white space use in accordance with regulatory rules. The Google Spectrum Database does not support master/slave configurations, so this always yields an UNIMPLEMENTED error. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsVerifyDeviceRequest: type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . type=no The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=amet. - The PAWS version. Must be exactly 1.0. Required field. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Verify Device"},{"location":"paws_verify-device/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PawsVerifyDeviceRequest: type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . type=no The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...). Required field. * version=amet. - The PAWS version. Must be exactly 1.0. Required field.","title":"Required Request Value"},{"location":"paws_verify-device/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"paws_verify-device/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"paws_verify-device/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"}]}