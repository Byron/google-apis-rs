initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["CloudRedis","Central instance to access all CloudRedis related resource activities"],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["ExportInstanceRequest","Request for Export."],["FailoverInstanceRequest","Request for Failover."],["GcsDestination","The Cloud Storage location for the output content"],["GcsSource","The Cloud Storage location for the input content"],["ImportInstanceRequest","Request for Import."],["InputConfig","The input content"],["Instance","A Google Cloud Redis instance."],["InstanceAuthString","Instance AUTH string details."],["ListInstancesResponse","Response for ListInstances."],["ListLocationsResponse","The response message for Locations.ListLocations."],["ListOperationsResponse","The response message for Operations.ListOperations."],["Location","A resource that represents Google Cloud Platform location."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["OutputConfig","The output content"],["ProjectLocationGetCall","Gets information about a location."],["ProjectLocationInstanceCreateCall","Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project's default network. The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation."],["ProjectLocationInstanceDeleteCall","Deletes a specific Redis instance. Instance stops serving and data is deleted."],["ProjectLocationInstanceExportCall","Export Redis instance data into a Redis RDB format file in Cloud Storage. Redis will continue serving during this operation. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation."],["ProjectLocationInstanceFailoverCall","Initiates a failover of the primary node to current replica node for a specific STANDARD tier Cloud Memorystore for Redis instance."],["ProjectLocationInstanceGetAuthStringCall","Gets the AUTH string for a Redis instance. If AUTH is not enabled for the instance the response will be empty. This information is not included in the details returned to GetInstance."],["ProjectLocationInstanceGetCall","Gets the details of a specific Redis instance."],["ProjectLocationInstanceImportCall","Import a Redis RDB snapshot file from Cloud Storage into a Redis instance. Redis may stop serving during this operation. Instance state will be IMPORTING for entire operation. When complete, the instance will contain only data from the imported file. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation."],["ProjectLocationInstanceListCall","Lists all Redis instances owned by a project in either the specified location (region) or all locations. The location should have the following format: * `projects/{project_id}/locations/{location_id}` If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated."],["ProjectLocationInstancePatchCall","Updates the metadata and configuration of a specific Redis instance. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation."],["ProjectLocationInstanceUpgradeCall","Upgrades Redis instance to the newer Redis version specified in the request."],["ProjectLocationListCall","Lists information about the supported locations for this service."],["ProjectLocationOperationCancelCall","Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."],["ProjectLocationOperationDeleteCall","Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."],["ProjectLocationOperationGetCall","Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."],["ProjectLocationOperationListCall","Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `CloudRedis` hub."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide."],["TlsCertificate","TlsCertificate Resource"],["UpgradeInstanceRequest","Request for UpgradeInstance."]]});