{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The deploymentmanager2 command-line interface (CLI) allows to use most features of the Google Deployment Manager service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Deployment Manager API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-deploymentmanager2-cli Find the source code on github . Usage This documentation was generated from the Deployment Manager API at revision 20240229 . The CLI is at version 5.0.4 . deploymentmanager2 [options] deployments cancel-preview <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] delete <project> <deployment> [-p <v>]... [-o <out>] get <project> <deployment> [-p <v>]... [-o <out>] get-iam-policy <project> <resource> [-p <v>]... [-o <out>] insert <project> (-r <kv>)... [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] patch <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] set-iam-policy <project> <resource> (-r <kv>)... [-p <v>]... [-o <out>] stop <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] test-iam-permissions <project> <resource> (-r <kv>)... [-p <v>]... [-o <out>] update <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] manifests get <project> <deployment> <manifest> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] operations get <project> <operation> [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] resources get <project> <deployment> <resource> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] types list <project> [-p <v>]... [-o <out>] deploymentmanager2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with deploymentmanager2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/deploymentmanager2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/deploymentmanager2-secret.json , assuming that the required deploymentmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. deploymentmanager2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-deploymentmanager2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Deployment Manager API at revision 20240229 . The CLI is at version 5.0.4 . deploymentmanager2 [options] deployments cancel-preview <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] delete <project> <deployment> [-p <v>]... [-o <out>] get <project> <deployment> [-p <v>]... [-o <out>] get-iam-policy <project> <resource> [-p <v>]... [-o <out>] insert <project> (-r <kv>)... [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] patch <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] set-iam-policy <project> <resource> (-r <kv>)... [-p <v>]... [-o <out>] stop <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] test-iam-permissions <project> <resource> (-r <kv>)... [-p <v>]... [-o <out>] update <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] manifests get <project> <deployment> <manifest> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] operations get <project> <operation> [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] resources get <project> <deployment> <resource> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] types list <project> [-p <v>]... [-o <out>] deploymentmanager2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with deploymentmanager2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/deploymentmanager2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/deploymentmanager2-secret.json , assuming that the required deploymentmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. deploymentmanager2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"deployments_cancel-preview/","text":"Cancels and removes the preview currently associated with the deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments cancel-preview ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeploymentsCancelPreviewRequest: fingerprint: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . fingerprint=et Specifies a fingerprint for cancelPreview() requests. A fingerprint is a randomly generated value that must be provided in cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Cancel Preview"},{"location":"deployments_cancel-preview/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments cancel-preview ...","title":"Scopes"},{"location":"deployments_cancel-preview/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_cancel-preview/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeploymentsCancelPreviewRequest: fingerprint: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . fingerprint=et Specifies a fingerprint for cancelPreview() requests. A fingerprint is a randomly generated value that must be provided in cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment.","title":"Required Request Value"},{"location":"deployments_cancel-preview/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_cancel-preview/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_cancel-preview/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_delete/","text":"Deletes a deployment and all of the resources in the deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments delete ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p delete-policy=string Sets the policy to use for deleting resources. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"deployments_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments delete ...","title":"Scopes"},{"location":"deployments_delete/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p delete-policy=string Sets the policy to use for deleting resources.","title":"Optional Method Properties"},{"location":"deployments_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_get-iam-policy/","text":"Gets the access control policy for a resource. May be empty if no such policy or resource exists. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments get-iam-policy ... Required Scalar Arguments <project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Requested IAM Policy version. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Iam Policy"},{"location":"deployments_get-iam-policy/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments get-iam-policy ...","title":"Scopes"},{"location":"deployments_get-iam-policy/#required-scalar-arguments","text":"<project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request.","title":"Required Scalar Arguments"},{"location":"deployments_get-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_get-iam-policy/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Requested IAM Policy version.","title":"Optional Method Properties"},{"location":"deployments_get-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_get/","text":"Gets information about a specific deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"deployments_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments get ...","title":"Scopes"},{"location":"deployments_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_insert/","text":"Creates a deployment and all of the resources described by the deployment manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments insert ... Required Scalar Argument <project> (string) The project ID for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=magna An optional user-provided description of the deployment. fingerprint=no Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=ipsum No description provided. insert-time=voluptua. Output only. Creation timestamp in RFC3339 text format. manifest=at Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=sanctus Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=sed [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=amet. [Deprecated] This field is deprecated. description=takimata [Output Only] A textual description of the operation, which is set when the operation is created. end-time=amet. [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=duo [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=46 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=gubergren [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=lorem [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=gubergren [Output Only] Type of the resource. Always compute#operation for Operation resources. name=eos [Output Only] Name of the operation. operation-group-id=dolor [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=ea [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=46 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=invidunt [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=duo [Output Only] The client operation id. .. start-time=ipsum [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=sed [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=ut [Output Only] An optional textual description of the current status of the operation. target-id=gubergren [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=rebum. [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=est [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=ipsum [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=ipsum Output only. Server defined URL for the resource. target.config content=est The contents of the file. ...update description=gubergren Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=ea Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=dolor Output only. Update timestamp in RFC3339 text format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p preview=boolean If set to true, creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. After previewing a deployment, you can deploy your resources by making a request with the update() method or you can use the cancelPreview() method to cancel the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"deployments_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments insert ...","title":"Scopes"},{"location":"deployments_insert/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"deployments_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=magna An optional user-provided description of the deployment. fingerprint=no Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=ipsum No description provided. insert-time=voluptua. Output only. Creation timestamp in RFC3339 text format. manifest=at Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=sanctus Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=sed [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=amet. [Deprecated] This field is deprecated. description=takimata [Output Only] A textual description of the operation, which is set when the operation is created. end-time=amet. [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=duo [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=46 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=gubergren [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=lorem [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=gubergren [Output Only] Type of the resource. Always compute#operation for Operation resources. name=eos [Output Only] Name of the operation. operation-group-id=dolor [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=ea [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=46 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=invidunt [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=duo [Output Only] The client operation id. .. start-time=ipsum [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=sed [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=ut [Output Only] An optional textual description of the current status of the operation. target-id=gubergren [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=rebum. [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=est [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=ipsum [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=ipsum Output only. Server defined URL for the resource. target.config content=est The contents of the file. ...update description=gubergren Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=ea Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=dolor Output only. Update timestamp in RFC3339 text format.","title":"Required Request Value"},{"location":"deployments_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p preview=boolean If set to true, creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. After previewing a deployment, you can deploy your resources by making a request with the update() method or you can use the cancelPreview() method to cancel the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.","title":"Optional Method Properties"},{"location":"deployments_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_list/","text":"Lists all deployments for a given project. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"deployments_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments list ...","title":"Scopes"},{"location":"deployments_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"deployments_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"deployments_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_patch/","text":"Patches a deployment and all of the resources described by the deployment manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments patch ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=lorem An optional user-provided description of the deployment. fingerprint=eos Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=labore No description provided. insert-time=sed Output only. Creation timestamp in RFC3339 text format. manifest=duo Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=sed Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=no [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=stet [Deprecated] This field is deprecated. description=kasd [Output Only] A textual description of the operation, which is set when the operation is created. end-time=et [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=sed [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=77 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=et [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=vero [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=erat [Output Only] Type of the resource. Always compute#operation for Operation resources. name=sed [Output Only] Name of the operation. operation-group-id=duo [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=dolore [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=79 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=voluptua. [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet. [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=consetetur [Output Only] The client operation id. .. start-time=diam [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=dolor [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=et [Output Only] An optional textual description of the current status of the operation. target-id=et [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=sadipscing [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=stet [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=dolor [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=duo Output only. Server defined URL for the resource. target.config content=vero The contents of the file. ...update description=vero Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=invidunt Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=stet Output only. Update timestamp in RFC3339 text format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p preview=boolean If set to true, updates the deployment and creates and updates the \"shell\" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"deployments_patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments patch ...","title":"Scopes"},{"location":"deployments_patch/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=lorem An optional user-provided description of the deployment. fingerprint=eos Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=labore No description provided. insert-time=sed Output only. Creation timestamp in RFC3339 text format. manifest=duo Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=sed Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=no [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=stet [Deprecated] This field is deprecated. description=kasd [Output Only] A textual description of the operation, which is set when the operation is created. end-time=et [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=sed [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=77 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=et [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=vero [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=erat [Output Only] Type of the resource. Always compute#operation for Operation resources. name=sed [Output Only] Name of the operation. operation-group-id=duo [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=dolore [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=79 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=voluptua. [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet. [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=consetetur [Output Only] The client operation id. .. start-time=diam [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=dolor [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=et [Output Only] An optional textual description of the current status of the operation. target-id=et [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=sadipscing [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=stet [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=dolor [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=duo Output only. Server defined URL for the resource. target.config content=vero The contents of the file. ...update description=vero Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=invidunt Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=stet Output only. Update timestamp in RFC3339 text format.","title":"Required Request Value"},{"location":"deployments_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p preview=boolean If set to true, updates the deployment and creates and updates the \"shell\" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.","title":"Optional Method Properties"},{"location":"deployments_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_set-iam-policy/","text":"Sets the access control policy on the specified resource. Replaces any existing policy. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments set-iam-policy ... Required Scalar Arguments <project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GlobalSetPolicyRequest: etag: string policy: etag: string version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=vero Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag. policy etag=elitr etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=95 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set Iam Policy"},{"location":"deployments_set-iam-policy/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments set-iam-policy ...","title":"Scopes"},{"location":"deployments_set-iam-policy/#required-scalar-arguments","text":"<project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request.","title":"Required Scalar Arguments"},{"location":"deployments_set-iam-policy/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GlobalSetPolicyRequest: etag: string policy: etag: string version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=vero Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag. policy etag=elitr etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=95 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation .","title":"Required Request Value"},{"location":"deployments_set-iam-policy/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_set-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_set-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_stop/","text":"Stops an ongoing operation. This does not roll back any work that has already been completed, but prevents any new work from being started. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments stop ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeploymentsStopRequest: fingerprint: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . fingerprint=diam Specifies a fingerprint for stop() requests. A fingerprint is a randomly generated value that must be provided in stop() requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to stop an ongoing update request, this would prevent a collision). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Stop"},{"location":"deployments_stop/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments stop ...","title":"Scopes"},{"location":"deployments_stop/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_stop/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeploymentsStopRequest: fingerprint: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . fingerprint=diam Specifies a fingerprint for stop() requests. A fingerprint is a randomly generated value that must be provided in stop() requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to stop an ongoing update request, this would prevent a collision). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment.","title":"Required Request Value"},{"location":"deployments_stop/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_stop/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_stop/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_test-iam-permissions/","text":"Returns permissions that a caller has on the specified resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments test-iam-permissions ... Required Scalar Arguments <project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=no The set of permissions to check for the 'resource'. Permissions with wildcards (such as ' ' or 'storage. ') are not allowed. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Test Iam Permissions"},{"location":"deployments_test-iam-permissions/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments test-iam-permissions ...","title":"Scopes"},{"location":"deployments_test-iam-permissions/#required-scalar-arguments","text":"<project> (string) Project ID for this request. <resource> (string) Name or id of the resource for this request.","title":"Required Scalar Arguments"},{"location":"deployments_test-iam-permissions/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=no The set of permissions to check for the 'resource'. Permissions with wildcards (such as ' ' or 'storage. ') are not allowed. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"deployments_test-iam-permissions/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_test-iam-permissions/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_test-iam-permissions/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_update/","text":"Updates a deployment and all of the resources described by the deployment manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments update ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=ipsum An optional user-provided description of the deployment. fingerprint=accusam Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=takimata No description provided. insert-time=consetetur Output only. Creation timestamp in RFC3339 text format. manifest=voluptua. Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=et Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=erat [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=consetetur [Deprecated] This field is deprecated. description=amet. [Output Only] A textual description of the operation, which is set when the operation is created. end-time=sed [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=takimata [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=82 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=gubergren [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=et [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=accusam [Output Only] Type of the resource. Always compute#operation for Operation resources. name=voluptua. [Output Only] Name of the operation. operation-group-id=dolore [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=dolore [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=67 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=voluptua. [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet. [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=ea [Output Only] The client operation id. .. start-time=sadipscing [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=lorem [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=invidunt [Output Only] An optional textual description of the current status of the operation. target-id=no [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=est [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=at [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=sed [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=sit Output only. Server defined URL for the resource. target.config content=et The contents of the file. ...update description=tempor Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=aliquyam Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=ipsum Output only. Update timestamp in RFC3339 text format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p preview=boolean If set to true, updates the deployment and creates and updates the \"shell\" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"deployments_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2 --scope <scope> deployments update ...","title":"Scopes"},{"location":"deployments_update/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string manifest: string name: string operation: client-operation-id: string creation-timestamp: string description: string end-time: string http-error-message: string http-error-status-code: integer id: string insert-time: string kind: string name: string operation-group-id: string operation-type: string progress: integer region: string self-link: string set-common-instance-metadata-operation-metadata: client-operation-id: string start-time: string status: string status-message: string target-id: string target-link: string user: string zone: string self-link: string target: config: content: string update: description: string manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=ipsum An optional user-provided description of the deployment. fingerprint=accusam Provides a fingerprint to use in requests to modify a deployment, such as update() , stop() , and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update() , stop() , and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=takimata No description provided. insert-time=consetetur Output only. Creation timestamp in RFC3339 text format. manifest=voluptua. Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. name=et Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. operation client-operation-id=erat [Output Only] The value of requestId if you provided it in the request. Not present otherwise. creation-timestamp=consetetur [Deprecated] This field is deprecated. description=amet. [Output Only] A textual description of the operation, which is set when the operation is created. end-time=sed [Output Only] The time that this operation was completed. This value is in RFC3339 text format. http-error-message=takimata [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND . http-error-status-code=82 [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found. id=gubergren [Output Only] The unique identifier for the operation. This identifier is defined by the server. insert-time=et [Output Only] The time that this operation was requested. This value is in RFC3339 text format. kind=accusam [Output Only] Type of the resource. Always compute#operation for Operation resources. name=voluptua. [Output Only] Name of the operation. operation-group-id=dolore [Output Only] An ID that represents a group of operations, such as when a group of operations results from a bulkInsert API request. operation-type=dolore [Output Only] The type of operation, such as insert , update , or delete , and so on. progress=67 [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. region=voluptua. [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. self-link=amet. [Output Only] Server-defined URL for the resource. set-common-instance-metadata-operation-metadata client-operation-id=ea [Output Only] The client operation id. .. start-time=sadipscing [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. status=lorem [Output Only] The status of the operation, which can be one of the following: PENDING , RUNNING , or DONE . status-message=invidunt [Output Only] An optional textual description of the current status of the operation. target-id=no [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. target-link=est [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from. user=at [Output Only] User who requested the operation, for example: user@example.com or alice_smith_identifier (global/workforcePools/example-com-us-employees) . zone=sed [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. .. self-link=sit Output only. Server defined URL for the resource. target.config content=et The contents of the file. ...update description=tempor Output only. An optional user-provided description of the deployment after the current update has been applied. manifest=aliquyam Output only. URL of the manifest representing the update configuration of this deployment. .. update-time=ipsum Output only. Update timestamp in RFC3339 text format.","title":"Required Request Value"},{"location":"deployments_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p preview=boolean If set to true, updates the deployment and creates and updates the \"shell\" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.","title":"Optional Method Properties"},{"location":"deployments_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"manifests_get/","text":"Gets information about a specific manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> manifests get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <manifest> (string) The name of the manifest for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"manifests_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> manifests get ...","title":"Scopes"},{"location":"manifests_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <manifest> (string) The name of the manifest for this request.","title":"Required Scalar Arguments"},{"location":"manifests_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"manifests_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"manifests_list/","text":"Lists all manifests for a given deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> manifests list ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"manifests_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> manifests list ...","title":"Scopes"},{"location":"manifests_list/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"manifests_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"manifests_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"manifests_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"operations_get/","text":"Gets information about a specific operation. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> operations get ... Required Scalar Arguments <project> (string) The project ID for this request. <operation> (string) The name of the operation for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"operations_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> operations get ...","title":"Scopes"},{"location":"operations_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <operation> (string) The name of the operation for this request.","title":"Required Scalar Arguments"},{"location":"operations_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"operations_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"operations_list/","text":"Lists all operations for a project. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> operations list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"operations_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> operations list ...","title":"Scopes"},{"location":"operations_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"operations_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"operations_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"operations_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"resources_get/","text":"Gets information about a single resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> resources get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <resource> (string) The name of the resource for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"resources_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> resources get ...","title":"Scopes"},{"location":"resources_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <resource> (string) The name of the resource for this request.","title":"Required Scalar Arguments"},{"location":"resources_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"resources_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"resources_list/","text":"Lists all resources in a given deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> resources list ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"resources_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> resources list ...","title":"Scopes"},{"location":"resources_list/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"resources_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"resources_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"resources_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"types_list/","text":"Lists all resource types for Deployment Manager. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> types list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"types_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2 --scope <scope> types list ...","title":"Scopes"},{"location":"types_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"types_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"types_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either = , != , &gt; , &lt; , &lt;= , &gt;= or : . For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance . The :* comparison can be used to test whether a key has been defined. For example, to find all objects with owner label use: labels.owner:* You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: (scheduling.automaticRestart = true) (cpuPlatform = &#34;Intel Skylake&#34;) By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example: (cpuPlatform = &#34;Intel Skylake&#34;) OR (cpuPlatform = &#34;Intel Broadwell&#34;) AND (scheduling.automaticRestart = true) If you want to use a regular expression, use the eq (equal) or ne (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: fieldname eq unquoted literal fieldname eq &#39;single quoted literal&#39; fieldname eq &#34;double quoted literal&#34; (fieldname1 eq literal) (fieldname2 ne &#34;literal&#34;) The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use name ne .*instance . You cannot combine constraints on multiple fields using regular expressions. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults , Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500 , inclusive. (Default: 500 ) -p order-by=string Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using orderBy=&#34;creationTimestamp desc&#34; . This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by name or creationTimestamp desc is supported. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"types_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}