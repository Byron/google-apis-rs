{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The deploymentmanager2-beta2 command-line interface (CLI) allows to use most features of the Google Deployment Manager service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Deployment Manager API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-deploymentmanager2_beta2-cli Find the source code on github . Usage This documentation was generated from the Deployment Manager API at revision 20160201 . The CLI is at version 5.0.4 . deploymentmanager2-beta2 [options] deployments delete <project> <deployment> [-p <v>]... [-o <out>] get <project> <deployment> [-p <v>]... [-o <out>] insert <project> (-r <kv>)... [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] patch <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] update <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] manifests get <project> <deployment> <manifest> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] operations get <project> <operation> [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] resources get <project> <deployment> <resource> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] types list <project> [-p <v>]... [-o <out>] deploymentmanager2-beta2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with deploymentmanager2-beta2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/deploymentmanager2-beta2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/deploymentmanager2-beta2-secret.json , assuming that the required deploymentmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. deploymentmanager2-beta2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-deploymentmanager2_beta2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Deployment Manager API at revision 20160201 . The CLI is at version 5.0.4 . deploymentmanager2-beta2 [options] deployments delete <project> <deployment> [-p <v>]... [-o <out>] get <project> <deployment> [-p <v>]... [-o <out>] insert <project> (-r <kv>)... [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] patch <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] update <project> <deployment> (-r <kv>)... [-p <v>]... [-o <out>] manifests get <project> <deployment> <manifest> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] operations get <project> <operation> [-p <v>]... [-o <out>] list <project> [-p <v>]... [-o <out>] resources get <project> <deployment> <resource> [-p <v>]... [-o <out>] list <project> <deployment> [-p <v>]... [-o <out>] types list <project> [-p <v>]... [-o <out>] deploymentmanager2-beta2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with deploymentmanager2-beta2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/deploymentmanager2-beta2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/deploymentmanager2-beta2-secret.json , assuming that the required deploymentmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. deploymentmanager2-beta2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"deployments_delete/","text":"Deletes a deployment and all of the resources in the deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments delete ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Delete"},{"location":"deployments_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments delete ...","title":"Scopes"},{"location":"deployments_delete/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"deployments_get/","text":"Gets information about a specific deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"deployments_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments get ...","title":"Scopes"},{"location":"deployments_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"deployments_insert/","text":"Creates a deployment and all of the resources described by the deployment manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments insert ... Required Scalar Argument <project> (string) The project ID for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=et An optional user-provided description of the deployment. fingerprint=magna Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=no [Output Only] Unique identifier for the resource; defined by the server. insert-time=ipsum [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=voluptua. [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=at - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=sanctus - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=sed - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=amet. - The configuration to use for this deployment. ..update errors=takimata [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=amet. [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=duo [Output Only] Timestamp when the deployment was updated, in RFC3339 text format . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Insert"},{"location":"deployments_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments insert ...","title":"Scopes"},{"location":"deployments_insert/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"deployments_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=et An optional user-provided description of the deployment. fingerprint=magna Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=no [Output Only] Unique identifier for the resource; defined by the server. insert-time=ipsum [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=voluptua. [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=at - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=sanctus - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=sed - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=amet. - The configuration to use for this deployment. ..update errors=takimata [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=amet. [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=duo [Output Only] Timestamp when the deployment was updated, in RFC3339 text format .","title":"Required Request Value"},{"location":"deployments_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"deployments_list/","text":"Lists all deployments for a given project. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"deployments_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments list ...","title":"Scopes"},{"location":"deployments_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"deployments_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"deployments_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"deployments_patch/","text":"Updates a deployment and all of the resources described by the deployment manifest. This method supports patch semantics. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments patch ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=ipsum An optional user-provided description of the deployment. fingerprint=gubergren Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=lorem [Output Only] Unique identifier for the resource; defined by the server. insert-time=gubergren [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=eos [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=dolor - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=ea - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=ipsum - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=invidunt - The configuration to use for this deployment. ..update errors=amet [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=duo [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=ipsum [Output Only] Timestamp when the deployment was updated, in RFC3339 text format . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p update-policy=string Sets the policy to use for updating resources. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Patch"},{"location":"deployments_patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments patch ...","title":"Scopes"},{"location":"deployments_patch/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=ipsum An optional user-provided description of the deployment. fingerprint=gubergren Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=lorem [Output Only] Unique identifier for the resource; defined by the server. insert-time=gubergren [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=eos [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=dolor - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=ea - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=ipsum - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=invidunt - The configuration to use for this deployment. ..update errors=amet [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=duo [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=ipsum [Output Only] Timestamp when the deployment was updated, in RFC3339 text format .","title":"Required Request Value"},{"location":"deployments_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p update-policy=string Sets the policy to use for updating resources.","title":"Optional Method Properties"},{"location":"deployments_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"deployments_update/","text":"Updates a deployment and all of the resources described by the deployment manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments update ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=sed An optional user-provided description of the deployment. fingerprint=ut Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=gubergren [Output Only] Unique identifier for the resource; defined by the server. insert-time=rebum. [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=est [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=ipsum - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=ipsum - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=est - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=gubergren - The configuration to use for this deployment. ..update errors=ea [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=dolor [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=lorem [Output Only] Timestamp when the deployment was updated, in RFC3339 text format . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p update-policy=string Sets the policy to use for updating resources. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Update"},{"location":"deployments_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/ndev.cloudman If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> deployments update ...","title":"Scopes"},{"location":"deployments_update/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"deployments_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deployment: description: string fingerprint: string id: string insert-time: string intent: string manifest: string name: string state: string target: config: string update: errors: [string] manifest: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=sed An optional user-provided description of the deployment. fingerprint=ut Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment. id=gubergren [Output Only] Unique identifier for the resource; defined by the server. insert-time=rebum. [Output Only] Timestamp when the deployment was created, in RFC3339 text format . intent=est [Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL. PREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it. UPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration. CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made. * manifest=ipsum - [Output Only] URL of the manifest representing the last manifest that was successfully deployed. * name=ipsum - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z ? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. * state=est - [Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING. * target config=gubergren - The configuration to use for this deployment. ..update errors=ea [Output Only] List of all errors encountered while trying to enact the update. Each invocation of this argument appends the given value to the array. manifest=dolor [Output Only] URL of the manifest representing the update configuration of this deployment. .. update-time=lorem [Output Only] Timestamp when the deployment was updated, in RFC3339 text format .","title":"Required Request Value"},{"location":"deployments_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p create-policy=string Sets the policy to use for creating new resources. -p delete-policy=string Sets the policy to use for deleting resources. -p update-policy=string Sets the policy to use for updating resources.","title":"Optional Method Properties"},{"location":"deployments_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"manifests_get/","text":"Gets information about a specific manifest. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> manifests get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <manifest> (string) The name of the manifest for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"manifests_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> manifests get ...","title":"Scopes"},{"location":"manifests_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <manifest> (string) The name of the manifest for this request.","title":"Required Scalar Arguments"},{"location":"manifests_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"manifests_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"manifests_list/","text":"Lists all manifests for a given deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> manifests list ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"manifests_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> manifests list ...","title":"Scopes"},{"location":"manifests_list/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"manifests_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"manifests_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"manifests_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"operations_get/","text":"Gets information about a specific operation. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> operations get ... Required Scalar Arguments <project> (string) The project ID for this request. <operation> (string) The name of the operation for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"operations_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> operations get ...","title":"Scopes"},{"location":"operations_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <operation> (string) The name of the operation for this request.","title":"Required Scalar Arguments"},{"location":"operations_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"operations_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"operations_list/","text":"Lists all operations for a project. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> operations list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"operations_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> operations list ...","title":"Scopes"},{"location":"operations_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"operations_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"operations_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"operations_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"resources_get/","text":"Gets information about a single resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> resources get ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <resource> (string) The name of the resource for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"resources_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> resources get ...","title":"Scopes"},{"location":"resources_get/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. <resource> (string) The name of the resource for this request.","title":"Required Scalar Arguments"},{"location":"resources_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"resources_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"resources_list/","text":"Lists all resources in a given deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> resources list ... Required Scalar Arguments <project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"resources_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> resources list ...","title":"Scopes"},{"location":"resources_list/#required-scalar-arguments","text":"<project> (string) The project ID for this request. <deployment> (string) The name of the deployment for this request.","title":"Required Scalar Arguments"},{"location":"resources_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"resources_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"resources_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"types_list/","text":"Lists all resource types for Deployment Manager. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> types list ... Required Scalar Argument <project> (string) The project ID for this request. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"types_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-platform.read-only https://www.googleapis.com/auth/ndev.cloudman https://www.googleapis.com/auth/ndev.cloudman.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/ndev.cloudman.readonly . You can set the scope for this method like this: deploymentmanager2-beta2 --scope <scope> types list ...","title":"Scopes"},{"location":"types_list/#required-scalar-argument","text":"<project> (string) The project ID for this request.","title":"Required Scalar Argument"},{"location":"types_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"types_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string. The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field. For example, to filter for instances whose name is not equal to example-instance, you would use filter=name ne example-instance. Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values. The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions meaning that resources must match all expressions to pass the filters. -p max-results=integer The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. -p page-token=string Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.","title":"Optional Method Properties"},{"location":"types_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"}]}