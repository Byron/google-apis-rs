initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["ApiConfigHandler","Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/) configuration for API handlers."],["ApiEndpointHandler","Uses Google Cloud Endpoints to handle requests."],["AppCreateCall","Creates an App Engine application for a Google Cloud Platform project. Required fields: id - The ID of the target Cloud Platform project. location - The region (https://cloud.google.com/appengine/docs/locations) where you want the App Engine application located.For more information about App Engine applications, see Managing Projects, Applications, and Billing (https://cloud.google.com/appengine/docs/python/console/)."],["AppGetCall","Gets information about an application."],["AppLocationGetCall","Gets information about a location."],["AppLocationListCall","Lists information about the supported locations for this service."],["AppMethods","A builder providing access to all methods supported on app resources. It is not used directly, but through the `Appengine` hub."],["AppModuleDeleteCall","Deletes the specified module and all enclosed versions."],["AppModuleGetCall","Gets the current configuration of the specified module."],["AppModuleListCall","Lists all the modules in the application."],["AppModulePatchCall","Updates the configuration of the specified module."],["AppModuleVersionCreateCall","Deploys code and resource files to a new version."],["AppModuleVersionDeleteCall","Deletes an existing version."],["AppModuleVersionGetCall","Gets the specified Version resource. By default, only a BASIC_VIEW will be returned. Specify the FULL_VIEW parameter to get the full resource."],["AppModuleVersionInstanceDebugCall","Enables debugging on a VM instance. This allows you to use the SSH command to connect to the virtual machine where the instance lives. While in \"debug mode\", the instance continues to serve live traffic. You should delete the instance when you are done debugging and then allow the system to take over and determine if another instance should be started.Only applicable for instances in App Engine flexible environment."],["AppModuleVersionInstanceDeleteCall","Stops a running instance."],["AppModuleVersionInstanceGetCall","Gets instance information."],["AppModuleVersionInstanceListCall","Lists the instances of a version.Tip: To aggregate details about instances over time, see the Stackdriver Monitoring API (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)."],["AppModuleVersionListCall","Lists the versions of a module."],["AppModuleVersionPatchCall","Updates the specified Version resource. You can specify the following fields depending on the App Engine environment and type of scaling that the version resource uses: serving_status (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps.modules.versions#Version.FIELDS.serving_status):  For Version resources that use basic scaling, manual scaling, or run in  the App Engine flexible environment. instance_class (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps.modules.versions#Version.FIELDS.instance_class):  For Version resources that run in the App Engine standard environment. automatic_scaling.min_idle_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps.modules.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine standard environment. automatic_scaling.max_idle_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps.modules.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine standard environment."],["AppOperationGetCall","Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."],["AppOperationListCall","Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users//operations. To override the binding, API services can add a binding such as \"/v1/{name=users/}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."],["AppPatchCall","Updates the specified Application resource. You can update the following fields: auth_domain (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps#Application.FIELDS.auth_domain) default_cookie_expiration (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta4/apps#Application.FIELDS.default_cookie_expiration)"],["Appengine","Central instance to access all Appengine related resource activities"],["Application","An Application resource contains the top-level configuration of an App Engine application."],["AutomaticScaling","Automatic scaling is based on request rate, response latencies, and other application metrics."],["BasicScaling","A module with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity."],["ContainerInfo","Docker image that is used to create a container and start a VM instance for the version that you deploy. Only applicable for instances running in the App Engine flexible environment."],["CpuUtilization","Target scaling by CPU usage."],["DebugInstanceRequest","Request message for Instances.DebugInstance."],["Deployment","Code and application artifacts used to deploy a version to App Engine."],["DiskUtilization","Target scaling by disk usage. Only applicable for VM runtimes."],["EndpointsApiService","Cloud Endpoints (https://cloud.google.com/endpoints) configuration. The Endpoints API Service provides tooling for serving Open API and gRPC endpoints via an NGINX proxy. Only valid for App Engine Flexible environment deployments..The fields here refer to the name and configuration id of a \"service\" resource in the Service Management API (https://cloud.google.com/service-management/overview)."],["ErrorHandler","Custom static error page to be served when an error occurs."],["FileInfo","Single source file that is part of the version to be deployed. Each source file that is deployed must be specified separately."],["HealthCheck","Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment."],["IdentityAwareProxy","Identity-Aware Proxy"],["Instance","An Instance resource is the computing unit that App Engine uses to automatically scale an application."],["Library","Third-party Python runtime library that is required by the application."],["ListInstancesResponse","Response message for Instances.ListInstances."],["ListLocationsResponse","The response message for Locations.ListLocations."],["ListModulesResponse","Response message for Modules.ListModules."],["ListOperationsResponse","The response message for Operations.ListOperations."],["ListVersionsResponse","Response message for Versions.ListVersions."],["Location","A resource that represents Google Cloud Platform location."],["ManualScaling","A module with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time."],["Module","A Module resource is a logical component of an application that can share state and communicate in a secure fashion with other modules. For example, an application that handles customer requests might include separate modules to handle tasks such as backend data analysis or API requests from mobile devices. Each module has a collection of versions that define a specific set of code used to implement the functionality of that module."],["Network","Extra network settings. Only applicable for VM runtimes."],["NetworkUtilization","Target scaling by network usage. Only applicable for VM runtimes."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["RequestUtilization","Target scaling by request utilization. Only applicable for VM runtimes."],["Resources","Machine resources for a version."],["ScriptHandler","Executes a script to handle the request that matches the URL pattern."],["SourceReference","Reference to a particular snapshot of the source tree used to build and deploy the application."],["StaticDirectoryHandler","Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static directory handlers make it easy to serve the entire contents of a directory as static files."],["StaticFilesHandler","Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them."],["Status","The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to be: Simple to use and understand for most users Flexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include: Partial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors. Workflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting. Batch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response. Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message. Logging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons."],["TrafficSplit","Traffic routing configuration for versions within a single module. Traffic splits define how traffic directed to the module is assigned to versions."],["UrlDispatchRule","Rules to match an HTTP request and dispatch that request to a module."],["UrlMap","URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code, or by serving static files uploaded with the version, such as images, CSS, or JavaScript."],["Version","A Version resource is a specific set of source code and configuration files that are deployed into a module."],["Volume","Volumes mounted within the app container. Only applicable for VM runtimes."]]});