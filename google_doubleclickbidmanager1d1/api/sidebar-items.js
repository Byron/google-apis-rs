initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["ChannelGrouping","A channel grouping defines a set of rules that can be used to categorize events in a path report."],["DisjunctiveMatchStatement","DisjunctiveMatchStatement that OR's all contained filters."],["DoubleClickBidManager","Central instance to access all DoubleClickBidManager related resource activities"],["DownloadLineItemsRequest","Request to fetch stored line items."],["DownloadLineItemsResponse","Download line items response."],["DownloadRequest","Request to fetch stored inventory sources, campaigns, insertion orders, line items, YouTube ad groups and ads."],["DownloadResponse","Download response."],["EventFilter","Defines the type of filter to be applied to the path, a DV360 event dimension filter."],["FilterPair","Filter used to match traffic data in your report."],["LineitemDownloadlineitemCall","Retrieves line items in CSV format. YouTube & partners line items are not supported."],["LineitemMethods","A builder providing access to all methods supported on lineitem resources. It is not used directly, but through the `DoubleClickBidManager` hub."],["LineitemUploadlineitemCall","Uploads line items in CSV format. YouTube & partners line items are not supported."],["ListQueriesResponse","List queries response."],["ListReportsResponse","List reports response."],["Options","Additional query options."],["Parameters","Parameters of a query or report."],["PathFilter","Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded."],["PathQueryOptions","Path Query Options for Report Options."],["PathQueryOptionsFilter","Dimension Filter on path events."],["Query","Represents a query."],["QueryCreatequeryCall","Creates a query."],["QueryDeletequeryCall","Deletes a stored query as well as the associated stored reports."],["QueryGetqueryCall","Retrieves a stored query."],["QueryListqueryCall","Retrieves stored queries."],["QueryMetadata","Query metadata."],["QueryMethods","A builder providing access to all methods supported on query resources. It is not used directly, but through the `DoubleClickBidManager` hub."],["QueryRunqueryCall","Runs a stored query to generate a report."],["QuerySchedule","Information on how frequently and when to run a query."],["Report","Represents a report."],["ReportFailure","An explanation of a report failure."],["ReportKey","Key used to identify a report."],["ReportListreportCall","Retrieves stored reports."],["ReportMetadata","Report metadata."],["ReportMethods","A builder providing access to all methods supported on report resources. It is not used directly, but through the `DoubleClickBidManager` hub."],["ReportStatus","Report status."],["RowStatus","Represents the upload status of a row in the request."],["Rule","A Rule defines a name, and a boolean expression in [conjunctive normal form](http: //mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be // applied to a path event to determine if that name should be applied."],["RunQueryRequest","Request to run a stored query to generate a report."],["SdfDownloadCall","Retrieves entities in SDF format."],["SdfMethods","A builder providing access to all methods supported on sdf resources. It is not used directly, but through the `DoubleClickBidManager` hub."],["UploadLineItemsRequest","Request to upload line items."],["UploadLineItemsResponse","Upload line items response."],["UploadStatus","Represents the status of upload."]]});