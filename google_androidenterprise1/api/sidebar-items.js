initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["Administrator","This represents an enterprise admin who can manage the enterprise in the managed Google Play store."],["AdministratorWebToken","A token authorizing an admin to access an iframe."],["AdministratorWebTokenSpec","Specification for a token used to generate iframes. The token specifies what data the admin is allowed to modify and the URI the iframe is allowed to communiate with."],["AdministratorWebTokenSpecManagedConfigurations","There is no detailed description."],["AdministratorWebTokenSpecPlaySearch","There is no detailed description."],["AdministratorWebTokenSpecPrivateApps","There is no detailed description."],["AdministratorWebTokenSpecStoreBuilder","There is no detailed description."],["AdministratorWebTokenSpecWebApps","There is no detailed description."],["AndroidEnterprise","Central instance to access all AndroidEnterprise related resource activities"],["AppRestrictionsSchema","Represents the list of app restrictions available to be pre-configured for the product."],["AppRestrictionsSchemaChangeEvent","An event generated when a new app version is uploaded to Google Play and its app restrictions schema changed. To fetch the app restrictions schema for an app, use Products.getAppRestrictionsSchema on the EMM API."],["AppRestrictionsSchemaRestriction","A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied."],["AppRestrictionsSchemaRestrictionRestrictionValue","A typed value for the restriction."],["AppState","List of states set by the app."],["AppUpdateEvent","An event generated when a new version of an app is uploaded to Google Play. Notifications are sent for new public versions only: alpha, beta, or canary versions do not generate this event. To fetch up-to-date version history for an app, use Products.Get on the EMM API."],["AppVersion","This represents a single version of the app."],["ApprovalUrlInfo","Information on an approval URL."],["AuthenticationToken","An AuthenticationToken is used by the EMM's device policy client on a device to provision the given EMM-managed user on that device."],["AutoInstallConstraint","The auto-install constraint. Defines a set of restrictions for installation. At least one of the fields must be set."],["AutoInstallPolicy","There is no detailed description."],["ConfigurationVariables","A configuration variables resource contains the managed configuration settings ID to be applied to a single user, as well as the variable set that is attributed to the user. The variable set will be used to replace placeholders in the managed configuration settings."],["Device","A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user."],["DeviceForceReportUploadCall","Uploads a report containing any changes in app states on the device since the last report was generated. You can call this method up to 3 times every 24 hours for a given device. If you exceed the quota, then the Google Play EMM API returns HTTP 429 Too Many Requests."],["DeviceGetCall","Retrieves the details of a device."],["DeviceGetStateCall","Retrieves whether a device's access to Google services is enabled or disabled. The device state takes effect only if enforcing EMM policies on Android devices is enabled in the Google Admin Console. Otherwise, the device state is ignored and all devices are allowed access to Google services. This is only supported for Google-managed users."],["DeviceListCall","Retrieves the IDs of all of a user's devices."],["DeviceMethods","A builder providing access to all methods supported on device resources. It is not used directly, but through the `AndroidEnterprise` hub."],["DeviceReport","Device report updated with the latest app states for managed apps on the device."],["DeviceReportUpdateEvent","An event generated when an updated device report is available."],["DeviceSetStateCall","Sets whether a device's access to Google services is enabled or disabled. The device state takes effect only if enforcing EMM policies on Android devices is enabled in the Google Admin Console. Otherwise, the device state is ignored and all devices are allowed access to Google services. This is only supported for Google-managed users."],["DeviceState","The state of a user's device, as accessed by the getState and setState methods on device resources."],["DeviceUpdateCall","Updates the device policy. To ensure the policy is properly enforced, you need to prevent unmanaged accounts from accessing Google Play by setting the allowed_accounts in the managed configuration for the Google Play package. See restrict accounts in Google Play."],["DevicesListResponse","There is no detailed description."],["Enterprise","An Enterprises resource represents the binding between an EMM and a specific organization. That binding can be instantiated in one of two different ways using this API as follows: - For Google managed domain customers, the process involves using Enterprises.enroll and Enterprises.setAccount (in conjunction with artifacts obtained from the Admin console and the Google API Console) and submitted to the EMM through a more-or-less manual process. - For managed Google Play Accounts customers, the process involves using Enterprises.generateSignupUrl and Enterprises.completeSignup in conjunction with the managed Google Play sign-up UI (Google-provided mechanism) to create the binding without manual steps. As an EMM, you can support either or both approaches in your EMM console. See Create an Enterprise for details."],["EnterpriseAccount","A service account that can be used to authenticate as the enterprise to API calls that require such authentication."],["EnterpriseAcknowledgeNotificationSetCall","Acknowledges notifications that were received from Enterprises.PullNotificationSet to prevent subsequent calls from returning the same notifications."],["EnterpriseCompleteSignupCall","Completes the signup flow, by specifying the Completion token and Enterprise token. This request must not be called multiple times for a given Enterprise Token."],["EnterpriseCreateWebTokenCall","Returns a unique token to access an embeddable UI. To generate a web UI, pass the generated token into the managed Google Play javascript API. Each token may only be used to start one UI session. See the javascript API documentation for further information."],["EnterpriseEnrollCall","Enrolls an enterprise with the calling EMM."],["EnterpriseGenerateSignupUrlCall","Generates a sign-up URL."],["EnterpriseGetCall","Retrieves the name and domain of an enterprise."],["EnterpriseGetServiceAccountCall","Returns a service account and credentials. The service account can be bound to the enterprise by calling setAccount. The service account is unique to this enterprise and EMM, and will be deleted if the enterprise is unbound. The credentials contain private key data and are not stored server-side. This method can only be called after calling Enterprises.Enroll or Enterprises.CompleteSignup, and before Enterprises.SetAccount; at other times it will return an error. Subsequent calls after the first will generate a new, unique set of credentials, and invalidate the previously generated credentials. Once the service account is bound to the enterprise, it can be managed using the serviceAccountKeys resource."],["EnterpriseGetStoreLayoutCall","Returns the store layout for the enterprise. If the store layout has not been set, returns \"basic\" as the store layout type and no homepage."],["EnterpriseListCall","Looks up an enterprise by domain name. This is only supported for enterprises created via the Google-initiated creation flow. Lookup of the id is not needed for enterprises created via the EMM-initiated flow since the EMM learns the enterprise ID in the callback specified in the Enterprises.generateSignupUrl call."],["EnterpriseMethods","A builder providing access to all methods supported on enterprise resources. It is not used directly, but through the `AndroidEnterprise` hub."],["EnterprisePullNotificationSetCall","Pulls and returns a notification set for the enterprises associated with the service account authenticated for the request. The notification set may be empty if no notification are pending. A notification set returned needs to be acknowledged within 20 seconds by calling Enterprises.AcknowledgeNotificationSet, unless the notification set is empty. Notifications that are not acknowledged within the 20 seconds will eventually be included again in the response to another PullNotificationSet request, and those that are never acknowledged will ultimately be deleted according to the Google Cloud Platform Pub/Sub system policy. Multiple requests might be performed concurrently to retrieve notifications, in which case the pending notifications (if any) will be split among each caller, if any are pending. If no notifications are present, an empty notification list is returned. Subsequent requests may return more notifications once they become available."],["EnterpriseSendTestPushNotificationCall","Sends a test notification to validate the EMM integration with the Google Cloud Pub/Sub service for this enterprise."],["EnterpriseSetAccountCall","Sets the account that will be used to authenticate to the API as the enterprise."],["EnterpriseSetStoreLayoutCall","Sets the store layout for the enterprise. By default, storeLayoutType is set to \"basic\" and the basic store layout is enabled. The basic layout only contains apps approved by the admin, and that have been added to the available product set for a user (using the setAvailableProductSet call). Apps on the page are sorted in order of their product ID value. If you create a custom store layout (by setting storeLayoutType = \"custom\" and setting a homepage), the basic store layout is disabled."],["EnterpriseUnenrollCall","Unenrolls an enterprise from the calling EMM."],["EnterprisesListResponse","There is no detailed description."],["EnterprisesSendTestPushNotificationResponse","There is no detailed description."],["Entitlement","The presence of an Entitlements resource indicates that a user has the right to use a particular app. Entitlements are user specific, not device specific. This allows a user with an entitlement to an app to install the app on all their devices. It's also possible for a user to hold an entitlement to an app without installing the app on any device. The API can be used to create an entitlement. As an option, you can also use the API to trigger the installation of an app on all a user's managed devices at the same time the entitlement is created. If the app is free, creating the entitlement also creates a group license for that app. For paid apps, creating the entitlement consumes one license, and that license remains consumed until the entitlement is removed. If the enterprise hasn't purchased enough licenses, then no entitlement is created and the installation fails. An entitlement is also not created for an app if the app requires permissions that the enterprise hasn't accepted. If an entitlement is deleted, the app may be uninstalled from a user's device. As a best practice, uninstall the app by calling Installs.delete() before deleting the entitlement. Entitlements for apps that a user pays for on an unmanaged profile have \"userPurchase\" as the entitlement reason. These entitlements cannot be removed via the API."],["EntitlementDeleteCall","Removes an entitlement to an app for a user."],["EntitlementGetCall","Retrieves details of an entitlement."],["EntitlementListCall","Lists all entitlements for the specified user. Only the ID is set."],["EntitlementMethods","A builder providing access to all methods supported on entitlement resources. It is not used directly, but through the `AndroidEnterprise` hub."],["EntitlementUpdateCall","Adds or updates an entitlement to an app for a user."],["EntitlementsListResponse","There is no detailed description."],["GroupLicense","Group license objects allow you to keep track of licenses (called entitlements) for both free and paid apps. For a free app, a group license is created when an enterprise admin first approves the product in Google Play or when the first entitlement for the product is created for a user via the API. For a paid app, a group license object is only created when an enterprise admin purchases the product in Google Play for the first time. Use the API to query group licenses. A Grouplicenses resource includes the total number of licenses purchased (paid apps only) and the total number of licenses currently in use. In other words, the total number of Entitlements that exist for the product. Only one group license object is created per product and group license objects are never deleted. If a product is unapproved, its group license remains. This allows enterprise admins to keep track of any remaining entitlements for the product."],["GroupLicenseUsersListResponse","There is no detailed description."],["GroupLicensesListResponse","There is no detailed description."],["GrouplicenseGetCall","Retrieves details of an enterprise's group license for a product."],["GrouplicenseListCall","Retrieves IDs of all products for which the enterprise has a group license."],["GrouplicenseMethods","A builder providing access to all methods supported on grouplicense resources. It is not used directly, but through the `AndroidEnterprise` hub."],["GrouplicenseuserListCall","Retrieves the IDs of the users who have been granted entitlements under the license."],["GrouplicenseuserMethods","A builder providing access to all methods supported on grouplicenseuser resources. It is not used directly, but through the `AndroidEnterprise` hub."],["Install","The existence of an Installs resource indicates that an app is installed on a particular device (or that an install is pending). The API can be used to create an install resource using the update method. This triggers the actual install of the app on the device. If the user does not already have an entitlement for the app, then an attempt is made to create one. If this fails (for example, because the app is not free and there is no available license), then the creation of the install fails. The API can also be used to update an installed app. If the update method is used on an existing install, then the app will be updated to the latest available version. Note that it is not possible to force the installation of a specific version of an app: the version code is read-only. If a user installs an app themselves (as permitted by the enterprise), then again an install resource and possibly an entitlement resource are automatically created. The API can also be used to delete an install resource, which triggers the removal of the app from the device. Note that deleting an install does not automatically remove the corresponding entitlement, even if there are no remaining installs. The install resource will also be deleted if the user uninstalls the app themselves."],["InstallDeleteCall","Requests to remove an app from a device. A call to get or list will still show the app as installed on the device until it is actually removed."],["InstallFailureEvent","An event generated when an app installation failed on a device"],["InstallGetCall","Retrieves details of an installation of an app on a device."],["InstallListCall","Retrieves the details of all apps installed on the specified device."],["InstallMethods","A builder providing access to all methods supported on install resources. It is not used directly, but through the `AndroidEnterprise` hub."],["InstallUpdateCall","Requests to install the latest version of an app to a device. If the app is already installed, then it is updated to the latest version if necessary."],["InstallsListResponse","There is no detailed description."],["KeyedAppState","Represents a keyed app state containing a key, timestamp, severity level, optional description, and optional data."],["LocalizedText","A localized string with its locale."],["MaintenanceWindow","Maintenance window for managed Google Play Accounts. This allows Play store to update the apps on the foreground in the designated window."],["ManagedConfiguration","A managed configuration resource contains the set of managed properties defined by the app developer in the app's managed configurations schema, as well as any configuration variables defined for the user."],["ManagedConfigurationsForDeviceListResponse","There is no detailed description."],["ManagedConfigurationsForUserListResponse","There is no detailed description."],["ManagedConfigurationsSettings","A managed configurations settings resource contains the set of managed properties that have been configured for an Android app to be applied to a set of users. The app's developer would have defined configurable properties in the managed configurations schema."],["ManagedConfigurationsSettingsListResponse","There is no detailed description."],["ManagedProperty","A managed property of a managed configuration. The property must match one of the properties in the app restrictions schema of the product. Exactly one of the value fields must be populated, and it must match the property's type in the app restrictions schema."],["ManagedPropertyBundle","A bundle of managed properties."],["ManagedconfigurationsfordeviceDeleteCall","Removes a per-device managed configuration for an app for the specified device."],["ManagedconfigurationsfordeviceGetCall","Retrieves details of a per-device managed configuration."],["ManagedconfigurationsfordeviceListCall","Lists all the per-device managed configurations for the specified device. Only the ID is set."],["ManagedconfigurationsfordeviceMethods","A builder providing access to all methods supported on managedconfigurationsfordevice resources. It is not used directly, but through the `AndroidEnterprise` hub."],["ManagedconfigurationsfordeviceUpdateCall","Adds or updates a per-device managed configuration for an app for the specified device."],["ManagedconfigurationsforuserDeleteCall","Removes a per-user managed configuration for an app for the specified user."],["ManagedconfigurationsforuserGetCall","Retrieves details of a per-user managed configuration for an app for the specified user."],["ManagedconfigurationsforuserListCall","Lists all the per-user managed configurations for the specified user. Only the ID is set."],["ManagedconfigurationsforuserMethods","A builder providing access to all methods supported on managedconfigurationsforuser resources. It is not used directly, but through the `AndroidEnterprise` hub."],["ManagedconfigurationsforuserUpdateCall","Adds or updates the managed configuration settings for an app for the specified user. If you support the Managed configurations iframe, you can apply managed configurations to a user by specifying an mcmId and its associated configuration variables (if any) in the request. Alternatively, all EMMs can apply managed configurations by passing a list of managed properties."],["ManagedconfigurationssettingListCall","Lists all the managed configurations settings for the specified app."],["ManagedconfigurationssettingMethods","A builder providing access to all methods supported on managedconfigurationssetting resources. It is not used directly, but through the `AndroidEnterprise` hub."],["NewDeviceEvent","An event generated when a new device is ready to be managed."],["NewPermissionsEvent","An event generated when new permissions are added to an app."],["Notification","A notification of one event relating to an enterprise."],["NotificationSet","A resource returned by the PullNotificationSet API, which contains a collection of notifications for enterprises associated with the service account authenticated for the request."],["PageInfo","Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned."],["Permission","A Permissions resource represents some extra capability, to be granted to an Android app, which requires explicit consent. An enterprise admin must consent to these permissions on behalf of their users before an entitlement for the app can be created. The permissions collection is read-only. The information provided for each permission (localized name and description) is intended to be used in the MDM user interface when obtaining consent from the enterprise."],["PermissionGetCall","Retrieves details of an Android app permission for display to an enterprise admin."],["PermissionMethods","A builder providing access to all methods supported on permission resources. It is not used directly, but through the `AndroidEnterprise` hub."],["Policy","The device policy for a given managed device."],["Product","A Products resource represents an app in the Google Play store that is available to at least some users in the enterprise. (Some apps are restricted to a single enterprise, and no information about them is made available outside that enterprise.) The information provided for each product (localized name, icon, link to the full Google Play details page) is intended to allow a basic representation of the product within an EMM user interface."],["ProductApprovalEvent","An event generated when a product's approval status is changed."],["ProductApproveCall","Approves the specified product and the relevant app permissions, if any. The maximum number of products that you can approve per enterprise customer is 1,000. To learn how to use managed Google Play to design and create a store layout to display approved products to your users, see Store Layout Design. "],["ProductAvailabilityChangeEvent","An event generated whenever a product's availability changes."],["ProductGenerateApprovalUrlCall","Generates a URL that can be rendered in an iframe to display the permissions (if any) of a product. An enterprise admin must view these permissions and accept them on behalf of their organization in order to approve that product. Admins should accept the displayed permissions by interacting with a separate UI element in the EMM console, which in turn should trigger the use of this URL as the approvalUrlInfo.approvalUrl property in a Products.approve call to approve the product. This URL can only be used to display permissions for up to 1 day."],["ProductGetAppRestrictionsSchemaCall","Retrieves the schema that defines the configurable properties for this product. All products have a schema, but this schema may be empty if no managed configurations have been defined. This schema can be used to populate a UI that allows an admin to configure the product. To apply a managed configuration based on the schema obtained using this API, see Managed Configurations through Play."],["ProductGetCall","Retrieves details of a product for display to an enterprise admin."],["ProductGetPermissionCall","Retrieves the Android app permissions required by this app."],["ProductListCall","Finds approved products that match a query, or all approved products if there is no query."],["ProductMethods","A builder providing access to all methods supported on product resources. It is not used directly, but through the `AndroidEnterprise` hub."],["ProductPermission","A product permissions resource represents the set of permissions required by a specific app and whether or not they have been accepted by an enterprise admin. The API can be used to read the set of permissions, and also to update the set to indicate that permissions have been accepted."],["ProductPermissions","Information about the permissions required by a specific app and whether they have been accepted by the enterprise."],["ProductPolicy","The policy for a product."],["ProductSet","A set of products."],["ProductSigningCertificate","There is no detailed description."],["ProductUnapproveCall","Unapproves the specified product (and the relevant app permissions, if any)"],["ProductVisibility","A product to be made visible to a user."],["ProductsApproveRequest","There is no detailed description."],["ProductsGenerateApprovalUrlResponse","There is no detailed description."],["ProductsListResponse","There is no detailed description."],["ServiceAccount","A service account identity, including the name and credentials that can be used to authenticate as the service account."],["ServiceAccountKey","Credentials that can be used to authenticate as a service account."],["ServiceAccountKeysListResponse","There is no detailed description."],["ServiceaccountkeyDeleteCall","Removes and invalidates the specified credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount."],["ServiceaccountkeyInsertCall","Generates new credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount. Only the type of the key should be populated in the resource to be inserted."],["ServiceaccountkeyListCall","Lists all active credentials for the service account associated with this enterprise. Only the ID and key type are returned. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount."],["ServiceaccountkeyMethods","A builder providing access to all methods supported on serviceaccountkey resources. It is not used directly, but through the `AndroidEnterprise` hub."],["SignupInfo","A resource returned by the GenerateSignupUrl API, which contains the Signup URL and Completion Token."],["StoreCluster","Definition of a managed Google Play store cluster, a list of products displayed as part of a store page."],["StoreLayout","General setting for the managed Google Play store layout, currently only specifying the page to display the first time the store is opened."],["StoreLayoutClustersListResponse","There is no detailed description."],["StoreLayoutPagesListResponse","There is no detailed description."],["StorePage","Definition of a managed Google Play store page, made of a localized name and links to other pages. A page also contains clusters defined as a subcollection."],["StorelayoutclusterDeleteCall","Deletes a cluster."],["StorelayoutclusterGetCall","Retrieves details of a cluster."],["StorelayoutclusterInsertCall","Inserts a new cluster in a page."],["StorelayoutclusterListCall","Retrieves the details of all clusters on the specified page."],["StorelayoutclusterMethods","A builder providing access to all methods supported on storelayoutcluster resources. It is not used directly, but through the `AndroidEnterprise` hub."],["StorelayoutclusterUpdateCall","Updates a cluster."],["StorelayoutpageDeleteCall","Deletes a store page."],["StorelayoutpageGetCall","Retrieves details of a store page."],["StorelayoutpageInsertCall","Inserts a new store page."],["StorelayoutpageListCall","Retrieves the details of all pages in the store."],["StorelayoutpageMethods","A builder providing access to all methods supported on storelayoutpage resources. It is not used directly, but through the `AndroidEnterprise` hub."],["StorelayoutpageUpdateCall","Updates the content of a store page."],["TokenPagination","Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page."],["TrackInfo","Id to name association of a track."],["User","A Users resource represents an account associated with an enterprise. The account may be specific to a device or to an individual user (who can then use the account across multiple devices). The account may provide access to managed Google Play only, or to other Google services, depending on the identity model: - The Google managed domain identity model requires synchronization to Google account sources (via primaryEmail). - The managed Google Play Accounts identity model provides a dynamic means for enterprises to create user or device accounts as needed. These accounts provide access to managed Google Play. "],["UserDeleteCall","Deleted an EMM-managed user."],["UserGenerateAuthenticationTokenCall","Generates an authentication token which the device policy client can use to provision the given EMM-managed user account on a device. The generated token is single-use and expires after a few minutes. You can provision a maximum of 10 devices per user. This call only works with EMM-managed accounts."],["UserGetAvailableProductSetCall","Retrieves the set of products a user is entitled to access."],["UserGetCall","Retrieves a user's details."],["UserInsertCall","Creates a new EMM-managed user. The Users resource passed in the body of the request should include an accountIdentifier and an accountType. If a corresponding user already exists with the same account identifier, the user will be updated with the resource. In this case only the displayName field can be changed."],["UserListCall","Looks up a user by primary email address. This is only supported for Google-managed users. Lookup of the id is not needed for EMM-managed users because the id is already returned in the result of the Users.insert call."],["UserMethods","A builder providing access to all methods supported on user resources. It is not used directly, but through the `AndroidEnterprise` hub."],["UserRevokeDeviceAccesCall","Revokes access to all devices currently provisioned to the user. The user will no longer be able to use the managed Play store on any of their managed devices. This call only works with EMM-managed accounts."],["UserSetAvailableProductSetCall","Modifies the set of products that a user is entitled to access (referred to as whitelisted products). Only products that are approved or products that were previously approved (products with revoked approval) can be whitelisted."],["UserUpdateCall","Updates the details of an EMM-managed user. Can be used with EMM-managed users only (not Google managed users). Pass the new details in the Users resource in the request body. Only the displayName field can be changed. Other fields must either be unset or have the currently active value."],["UsersListResponse","There is no detailed description."],["VariableSet","A variable set is a key-value pair of EMM-provided placeholders and its corresponding value, which is attributed to a user. For example, $FIRSTNAME could be a placeholder, and its value could be Alice. Placeholders should start with a '$' sign and should be alphanumeric only."],["WebApp","A WebApps resource represents a web app created for an enterprise. Web apps are published to managed Google Play and can be distributed like other Android apps. On a user's device, a web app opens its specified URL."],["WebAppIcon","Icon for a web app."],["WebAppsListResponse","There is no detailed description."],["WebappDeleteCall","Deletes an existing web app."],["WebappGetCall","Gets an existing web app."],["WebappInsertCall","Creates a new web app for the enterprise."],["WebappListCall","Retrieves the details of all web apps for a given enterprise."],["WebappMethods","A builder providing access to all methods supported on webapp resources. It is not used directly, but through the `AndroidEnterprise` hub."],["WebappUpdateCall","Updates an existing web app."]]});