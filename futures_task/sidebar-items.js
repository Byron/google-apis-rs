initSidebarItems({"fn":[["noop_waker","Create a new [`Waker`] which does nothing when `wake()` is called on it."],["noop_waker_ref","Get a static reference to a [`Waker`] which does nothing when `wake()` is called on it."],["waker","Creates a [`Waker`] from an `Arc<impl ArcWake>`."],["waker_ref","Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`."]],"struct":[["FutureObj","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + Send + 'a>`."],["LocalFutureObj","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + 'a>`."],["SpawnError","An error that occurred during spawning."],["WakerRef","A [`Waker`] that is only valid for a given lifetime."]],"trait":[["ArcWake","A way of waking up a specific task."],["LocalSpawn","The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures that don't implement `Send`."],["Spawn","The `Spawn` trait allows for pushing futures onto an executor that will run them to completion."],["UnsafeFutureObj","A custom implementation of a future trait object for `FutureObj`, providing a vtable with drop support."]]});