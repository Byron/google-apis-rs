{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The adexchangebuyer1d3 command-line interface (CLI) allows to use most features of the Google Ad Exchange Buyer service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Ad Exchange Buyer API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-adexchangebuyer1d3-cli Find the source code on github . Usage This documentation was generated from the Ad Exchange Buyer API at revision 20210330 . The CLI is at version 5.0.4 . adexchangebuyer1d3 [options] accounts get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] billing-info get <account-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] budget get <account-id> <billing-id> [-p <v>]... [-o <out>] patch <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives get <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] direct-deals get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] performance-report list <account-id> <end-date-time> <start-date-time> [-p <v>]... [-o <out>] pretargeting-config delete <account-id> <config-id> [-p <v>]... get <account-id> <config-id> [-p <v>]... [-o <out>] insert <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <account-id> [-p <v>]... [-o <out>] patch <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] adexchangebuyer1d3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer1d3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer1d3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer1d3-secret.json , assuming that the required adexchangebuyer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer1d3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-adexchangebuyer1d3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Ad Exchange Buyer API at revision 20210330 . The CLI is at version 5.0.4 . adexchangebuyer1d3 [options] accounts get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] billing-info get <account-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] budget get <account-id> <billing-id> [-p <v>]... [-o <out>] patch <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives get <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] direct-deals get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] performance-report list <account-id> <end-date-time> <start-date-time> [-p <v>]... [-o <out>] pretargeting-config delete <account-id> <config-id> [-p <v>]... get <account-id> <config-id> [-p <v>]... [-o <out>] insert <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <account-id> [-p <v>]... [-o <out>] patch <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] adexchangebuyer1d3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer1d3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer1d3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer1d3-secret.json , assuming that the required adexchangebuyer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer1d3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_get/","text":"Gets one account by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts get ... Required Scalar Argument <id> (integer) The account id Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"accounts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts get ...","title":"Scopes"},{"location":"accounts_get/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_list/","text":"Retrieves the authenticated user's list of accounts. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"accounts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts list ...","title":"Scopes"},{"location":"accounts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_patch/","text":"Updates an existing account. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts patch ... Required Scalar Argument <id> (integer) The account id Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cookie-matching-nid=et The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=magna The base URL used in cookie match requests. id=90 Account id. kind=ipsum Resource type. maximum-active-creatives=73 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=74 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=93 The number of creatives that this account inserted or bid with in the last 30 days. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"accounts_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts patch ...","title":"Scopes"},{"location":"accounts_patch/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cookie-matching-nid=et The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=magna The base URL used in cookie match requests. id=90 Account id. kind=ipsum Resource type. maximum-active-creatives=73 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=74 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=93 The number of creatives that this account inserted or bid with in the last 30 days.","title":"Required Request Value"},{"location":"accounts_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_update/","text":"Updates an existing account. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts update ... Required Scalar Argument <id> (integer) The account id Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cookie-matching-nid=sed The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=amet. The base URL used in cookie match requests. id=42 Account id. kind=amet. Resource type. maximum-active-creatives=81 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=46 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=39 The number of creatives that this account inserted or bid with in the last 30 days. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"accounts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> accounts update ...","title":"Scopes"},{"location":"accounts_update/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cookie-matching-nid=sed The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=amet. The base URL used in cookie match requests. id=42 Account id. kind=amet. Resource type. maximum-active-creatives=81 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=46 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=39 The number of creatives that this account inserted or bid with in the last 30 days.","title":"Required Request Value"},{"location":"accounts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"billing-info_get/","text":"Returns the billing information for one account specified by account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> billing-info get ... Required Scalar Argument <account-id> (integer) The account id. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"billing-info_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> billing-info get ...","title":"Scopes"},{"location":"billing-info_get/#required-scalar-argument","text":"<account-id> (integer) The account id.","title":"Required Scalar Argument"},{"location":"billing-info_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"billing-info_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"billing-info_list/","text":"Retrieves a list of billing information for all accounts of the authenticated user. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> billing-info list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"billing-info_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> billing-info list ...","title":"Scopes"},{"location":"billing-info_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"billing-info_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_get/","text":"Returns the budget information for the adgroup specified by the accountId and billingId. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget get ... Required Scalar Arguments <account-id> (string) The account id to get the budget information for. <billing-id> (string) The billing id to get the budget information for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"budget_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget get ...","title":"Scopes"},{"location":"budget_get/#required-scalar-arguments","text":"<account-id> (string) The account id to get the budget information for. <billing-id> (string) The billing id to get the budget information for.","title":"Required Scalar Arguments"},{"location":"budget_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_patch/","text":"Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget patch ... Required Scalar Arguments <account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=lorem The id of the account. This is required for get and update requests. billing-id=gubergren The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=eos The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=dolor The currency code for the buyer. This cannot be altered here. id=ea The unique id that describes this item. kind=ipsum The kind of the resource, i.e. \"adexchangebuyer#budget\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"budget_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget patch ...","title":"Scopes"},{"location":"budget_patch/#required-scalar-arguments","text":"<account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated.","title":"Required Scalar Arguments"},{"location":"budget_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=lorem The id of the account. This is required for get and update requests. billing-id=gubergren The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=eos The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=dolor The currency code for the buyer. This cannot be altered here. id=ea The unique id that describes this item. kind=ipsum The kind of the resource, i.e. \"adexchangebuyer#budget\".","title":"Required Request Value"},{"location":"budget_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"budget_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_update/","text":"Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget update ... Required Scalar Arguments <account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=invidunt The id of the account. This is required for get and update requests. billing-id=amet The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=duo The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=sed The unique id that describes this item. kind=ut The kind of the resource, i.e. \"adexchangebuyer#budget\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"budget_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> budget update ...","title":"Scopes"},{"location":"budget_update/#required-scalar-arguments","text":"<account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated.","title":"Required Scalar Arguments"},{"location":"budget_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=invidunt The id of the account. This is required for get and update requests. billing-id=amet The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=duo The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=sed The unique id that describes this item. kind=ut The kind of the resource, i.e. \"adexchangebuyer#budget\".","title":"Required Request Value"},{"location":"budget_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"budget_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_get/","text":"Gets the status for a single creative. A creative will be available 30-40 minutes after submission. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives get ... Required Scalar Arguments <account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"creatives_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives get ...","title":"Scopes"},{"location":"creatives_get/#required-scalar-arguments","text":"<account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative.","title":"Required Scalar Arguments"},{"location":"creatives_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_insert/","text":"Submit a new creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: html-snippet: string account-id: integer ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-id: [string] advertiser-name: string agency-id: string api-upload-timestamp: string attribute: [integer] buyer-creative-id: string click-through-url: [string] filtering-reasons: date: string height: integer impression-tracking-url: [string] kind: string native-ad: advertiser: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-tracking-url: string headline: string image: height: integer url: string width: integer impression-tracking-url: [string] logo: height: integer url: string width: integer price: string star-rating: number product-categories: [integer] restricted-categories: [integer] sensitive-categories: [integer] status: string vendor-type: [integer] version: integer video-url: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . html-snippet=gubergren The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set. account-id=85 Account id. ad-technology-providers detected-provider-ids=est The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the Authorized Buyers Real-Time Bidding protocol or the BidRequest.user.ext.consented_providers_settings.consented_providers field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. .. advertiser-id=ipsum Detected advertiser id, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. advertiser-name=est The name of the company being advertised in the creative. agency-id=gubergren The agency id for this creative. api-upload-timestamp=ea The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp). attribute=2 All attributes for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. buyer-creative-id=lorem A buyer-specific id identifying the creative in this ad. click-through-url=eos The set of destination urls for the snippet. Each invocation of this argument appends the given value to the array. filtering-reasons date=labore The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST. .. height=58 Ad height. impression-tracking-url=duo The set of urls to be called to record an impression. Each invocation of this argument appends the given value to the array. kind=sed Resource type. native-ad advertiser=no No description provided. app-icon height=86 No description provided. url=kasd No description provided. width=77 No description provided. .. body=sed A long description of the ad. call-to-action=et A label for the button that the user is supposed to click. click-tracking-url=et The URL to use for click tracking. headline=vero A short title for the ad. image height=70 No description provided. url=sed No description provided. width=81 No description provided. .. impression-tracking-url=dolore The URLs are called when the impression is rendered. Each invocation of this argument appends the given value to the array. logo height=79 No description provided. url=voluptua. No description provided. width=99 No description provided. .. price=consetetur The price of the promoted app including the currency info. star-rating=0.07223777776561668 The app rating in the app store. Must be in the range [0-5]. .. product-categories=83 Detected product categories, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. restricted-categories=79 All restricted categories for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. sensitive-categories=6 Detected sensitive categories, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. status=stet Creative serving status. Read-only. This field should not be set in requests. vendor-type=2 All vendor types for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. version=81 The version for this creative. Read-only. This field should not be set in requests. video-url=vero The URL to fetch a video ad. If set, HTMLSnippet and the nativeAd should not be set. width=25 Ad width. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"creatives_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives insert ...","title":"Scopes"},{"location":"creatives_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: html-snippet: string account-id: integer ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-id: [string] advertiser-name: string agency-id: string api-upload-timestamp: string attribute: [integer] buyer-creative-id: string click-through-url: [string] filtering-reasons: date: string height: integer impression-tracking-url: [string] kind: string native-ad: advertiser: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-tracking-url: string headline: string image: height: integer url: string width: integer impression-tracking-url: [string] logo: height: integer url: string width: integer price: string star-rating: number product-categories: [integer] restricted-categories: [integer] sensitive-categories: [integer] status: string vendor-type: [integer] version: integer video-url: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . html-snippet=gubergren The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set. account-id=85 Account id. ad-technology-providers detected-provider-ids=est The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the Authorized Buyers Real-Time Bidding protocol or the BidRequest.user.ext.consented_providers_settings.consented_providers field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. .. advertiser-id=ipsum Detected advertiser id, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. advertiser-name=est The name of the company being advertised in the creative. agency-id=gubergren The agency id for this creative. api-upload-timestamp=ea The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp). attribute=2 All attributes for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. buyer-creative-id=lorem A buyer-specific id identifying the creative in this ad. click-through-url=eos The set of destination urls for the snippet. Each invocation of this argument appends the given value to the array. filtering-reasons date=labore The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST. .. height=58 Ad height. impression-tracking-url=duo The set of urls to be called to record an impression. Each invocation of this argument appends the given value to the array. kind=sed Resource type. native-ad advertiser=no No description provided. app-icon height=86 No description provided. url=kasd No description provided. width=77 No description provided. .. body=sed A long description of the ad. call-to-action=et A label for the button that the user is supposed to click. click-tracking-url=et The URL to use for click tracking. headline=vero A short title for the ad. image height=70 No description provided. url=sed No description provided. width=81 No description provided. .. impression-tracking-url=dolore The URLs are called when the impression is rendered. Each invocation of this argument appends the given value to the array. logo height=79 No description provided. url=voluptua. No description provided. width=99 No description provided. .. price=consetetur The price of the promoted app including the currency info. star-rating=0.07223777776561668 The app rating in the app store. Must be in the range [0-5]. .. product-categories=83 Detected product categories, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. restricted-categories=79 All restricted categories for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. sensitive-categories=6 Detected sensitive categories, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. status=stet Creative serving status. Read-only. This field should not be set in requests. vendor-type=2 All vendor types for the ads that may be shown from this snippet. Each invocation of this argument appends the given value to the array. version=81 The version for this creative. Read-only. This field should not be set in requests. video-url=vero The URL to fetch a video ad. If set, HTMLSnippet and the nativeAd should not be set. width=25 Ad width.","title":"Required Request Value"},{"location":"creatives_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"creatives_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_list/","text":"Retrieves a list of the authenticated user's active creatives. A creative will be available 30-40 minutes after submission. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p account-id=integer When specified, only creatives for the given account ids are returned. -p buyer-creative-id=string When specified, only creatives for the given buyer creative ids are returned. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional. -p status-filter=string When specified, only creatives having the given status are returned. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"creatives_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> creatives list ...","title":"Scopes"},{"location":"creatives_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p account-id=integer When specified, only creatives for the given account ids are returned. -p buyer-creative-id=string When specified, only creatives for the given buyer creative ids are returned. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional. -p status-filter=string When specified, only creatives having the given status are returned.","title":"Optional Method Properties"},{"location":"creatives_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"direct-deals_get/","text":"Gets one direct deal by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> direct-deals get ... Required Scalar Argument <id> (string) The direct deal id Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"direct-deals_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> direct-deals get ...","title":"Scopes"},{"location":"direct-deals_get/#required-scalar-argument","text":"<id> (string) The direct deal id","title":"Required Scalar Argument"},{"location":"direct-deals_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"direct-deals_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"direct-deals_list/","text":"Retrieves the authenticated user's list of direct deals. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> direct-deals list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"direct-deals_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> direct-deals list ...","title":"Scopes"},{"location":"direct-deals_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"direct-deals_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"performance-report_list/","text":"Retrieves the authenticated user's list of performance metrics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> performance-report list ... Required Scalar Arguments <account-id> (string) The account id to get the reports. <end-date-time> (string) The end time of the report in ISO 8601 timestamp format using UTC. <start-date-time> (string) The start time of the report in ISO 8601 timestamp format using UTC. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"performance-report_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> performance-report list ...","title":"Scopes"},{"location":"performance-report_list/#required-scalar-arguments","text":"<account-id> (string) The account id to get the reports. <end-date-time> (string) The end time of the report in ISO 8601 timestamp format using UTC. <start-date-time> (string) The start time of the report in ISO 8601 timestamp format using UTC.","title":"Required Scalar Arguments"},{"location":"performance-report_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"performance-report_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional.","title":"Optional Method Properties"},{"location":"performance-report_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_delete/","text":"Deletes an existing pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config delete ... Required Scalar Arguments <account-id> (string) The account id to delete the pretargeting config for. <config-id> (string) The specific id of the configuration to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"pretargeting-config_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config delete ...","title":"Scopes"},{"location":"pretargeting-config_delete/#required-scalar-arguments","text":"<account-id> (string) The account id to delete the pretargeting config for. <config-id> (string) The specific id of the configuration to delete.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_get/","text":"Gets a specific pretargeting configuration Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config get ... Required Scalar Arguments <account-id> (string) The account id to get the pretargeting config for. <config-id> (string) The specific id of the configuration to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"pretargeting-config_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config get ...","title":"Scopes"},{"location":"pretargeting-config_get/#required-scalar-arguments","text":"<account-id> (string) The account id to get the pretargeting config for. <config-id> (string) The specific id of the configuration to retrieve.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_insert/","text":"Inserts a new pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config insert ... Required Scalar Argument <account-id> (string) The account id to insert the pretargeting config for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=invidunt The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=stet The config id; generated automatically. Leave this field blank for insert requests. config-name=vero The name of the config. Must be unique. Required for all requests. creative-type=elitr List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=lorem Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=diam Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=no Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=ipsum Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=accusam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=consetetur The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=voluptua. Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=et The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=erat Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=consetetur Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=amet. Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=sed Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=takimata Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=dolores Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=gubergren Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=et Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"pretargeting-config_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config insert ...","title":"Scopes"},{"location":"pretargeting-config_insert/#required-scalar-argument","text":"<account-id> (string) The account id to insert the pretargeting config for.","title":"Required Scalar Argument"},{"location":"pretargeting-config_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=invidunt The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=stet The config id; generated automatically. Leave this field blank for insert requests. config-name=vero The name of the config. Must be unique. Required for all requests. creative-type=elitr List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=lorem Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=diam Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=no Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=ipsum Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=accusam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=consetetur The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=voluptua. Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=et The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=erat Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=consetetur Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=amet. Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=sed Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=takimata Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=dolores Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=gubergren Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=et Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_list/","text":"Retrieves a list of the authenticated user's pretargeting configurations. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config list ... Required Scalar Argument <account-id> (string) The account id to get the pretargeting configs for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"pretargeting-config_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config list ...","title":"Scopes"},{"location":"pretargeting-config_list/#required-scalar-argument","text":"<account-id> (string) The account id to get the pretargeting configs for.","title":"Required Scalar Argument"},{"location":"pretargeting-config_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_patch/","text":"Updates an existing pretargeting config. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config patch ... Required Scalar Arguments <account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=accusam The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=voluptua. The config id; generated automatically. Leave this field blank for insert requests. config-name=dolore The name of the config. Must be unique. Required for all requests. creative-type=dolore List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=dolore Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=voluptua. Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=amet. Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=ea Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=sadipscing Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=no The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=est Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=at The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=sed Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=sit Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=et Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=tempor Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=aliquyam Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=ipsum Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=et Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=sanctus Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"pretargeting-config_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config patch ...","title":"Scopes"},{"location":"pretargeting-config_patch/#required-scalar-arguments","text":"<account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=accusam The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=voluptua. The config id; generated automatically. Leave this field blank for insert requests. config-name=dolore The name of the config. Must be unique. Required for all requests. creative-type=dolore List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=dolore Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=voluptua. Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=amet. Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=ea Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=sadipscing Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=no The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=est Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=at The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=sed Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=sit Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=et Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=tempor Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=aliquyam Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=ipsum Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=et Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=sanctus Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_update/","text":"Updates an existing pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config update ... Required Scalar Arguments <account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=lorem The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=est The config id; generated automatically. Leave this field blank for insert requests. config-name=sed The name of the config. Must be unique. Required for all requests. creative-type=diam List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=dolores Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=dolores Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=et Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=sed Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=no Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=false Whether this config is active. Required for all requests. kind=elitr The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=sed Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=no The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=nonumy Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=at Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=sadipscing Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=aliquyam Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=dolores Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=sadipscing Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=erat Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=aliquyam Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"pretargeting-config_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d3 --scope <scope> pretargeting-config update ...","title":"Scopes"},{"location":"pretargeting-config_update/#required-scalar-arguments","text":"<account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=lorem The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=est The config id; generated automatically. Leave this field blank for insert requests. config-name=sed The name of the config. Must be unique. Required for all requests. creative-type=diam List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=dolores Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=dolores Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=et Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=sed Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=no Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=false Whether this config is active. Required for all requests. kind=elitr The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=sed Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=no The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). mobile-carriers=nonumy Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=at Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=sadipscing Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=aliquyam Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=dolores Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-lists=sadipscing Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=erat Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=aliquyam Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}