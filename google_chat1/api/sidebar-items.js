initSidebarItems({"struct":[["ActionParameter","List of string parameters to supply when the action method is invoked. For example, consider three snooze buttons: snooze now, snooze 1 day, snooze next week. You might use action method = snooze(), passing the snooze type and snooze time in the list of string parameters."],["ActionResponse","Parameters that a bot can use to configure how it's response is posted."],["Annotation","Annotations associated with the plain-text body of the message. Example plain-text message body: `Hello @FooBot how are you!\"` The corresponding annotations metadata: `\"annotations\":[{ \"type\":\"USER_MENTION\", \"startIndex\":6, \"length\":7, \"userMention\": { \"user\": { \"name\":\"users/107946847022116401880\", \"displayName\":\"FooBot\", \"avatarUrl\":\"https://goo.gl/aeDtrS\", \"type\":\"BOT\" }, \"type\":\"MENTION\" } }]`"],["Attachment","An attachment in Hangouts Chat."],["AttachmentDataRef","A reference to the data of an attachment."],["Button","A button. Can be a text button or an image button."],["Card","A card is a UI element that can contain UI widgets such as texts, images."],["CardAction","A card action is the action associated with the card. For an invoice card, a typical action would be: delete invoice, email invoice or open the invoice in browser."],["CardHeader","There is no detailed description."],["DmConversationMessageCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["DmMessageCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["DmMethods","A builder providing access to all methods supported on dm resources. It is not used directly, but through the `HangoutsChat` hub."],["DmWebhookCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["DriveDataRef","A reference to the data of a drive attachment."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["FormAction","A form action describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form."],["HangoutsChat","Central instance to access all HangoutsChat related resource activities"],["Image","An image that is specified by a URL and can have an onclick action."],["ImageButton","An image button with an onclick action."],["KeyValue","A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button."],["ListMembershipsResponse","There is no detailed description."],["ListSpacesResponse","There is no detailed description."],["Media","Media resource."],["MediaDownloadCall","Downloads media. Download is supported on the URI `/v1/media/{+name}?alt=media`."],["MediaMethods","A builder providing access to all methods supported on media resources. It is not used directly, but through the `HangoutsChat` hub."],["Membership","Represents a membership relation in Hangouts Chat."],["Message","A message in Hangouts Chat."],["OnClick","An onclick action (e.g. open a link)."],["OpenLink","A link that opens a new window."],["RoomConversationMessageCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["RoomMessageCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["RoomMethods","A builder providing access to all methods supported on room resources. It is not used directly, but through the `HangoutsChat` hub."],["RoomWebhookCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["Section","A section contains a collection of widgets that are rendered (vertically) in the order that they are specified. Across all platforms, cards have a narrow fixed width, so there is currently no need for layout properties (e.g. float)."],["SlashCommand","A Slash Command in Chat."],["SlashCommandMetadata","Annotation metadata for slash commands (/)."],["Space","A room or DM in Hangouts Chat."],["SpaceGetCall","Returns a space."],["SpaceListCall","Lists spaces the caller is a member of."],["SpaceMemberGetCall","Returns a membership."],["SpaceMemberListCall","Lists human memberships in a space."],["SpaceMessageAttachmentGetCall","Gets the metadata of a message attachment. The attachment data is fetched using the media API."],["SpaceMessageCreateCall","Creates a message."],["SpaceMessageDeleteCall","Deletes a message."],["SpaceMessageGetCall","Returns a message."],["SpaceMessageUpdateCall","Updates a message."],["SpaceMethods","A builder providing access to all methods supported on space resources. It is not used directly, but through the `HangoutsChat` hub."],["SpaceWebhookCall","Legacy path for creating message. Calling these will result in a BadRequest response."],["TextButton","A button with text and onclick action."],["TextParagraph","A paragraph of text. Formatted text supported."],["Thread","A thread in Hangouts Chat."],["User","A user in Google Chat."],["UserMentionMetadata","Annotation metadata for user mentions (@)."],["WidgetMarkup","A widget is a UI element that presents texts, images, etc."]]});