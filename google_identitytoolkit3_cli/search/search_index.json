{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The identitytoolkit3 command-line interface (CLI) allows to use most features of the Google Identity Toolkit service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Identity Toolkit API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-identitytoolkit3-cli Find the source code on github . Usage This documentation was generated from the Identity Toolkit API at revision 20180723 . The CLI is at version 5.0.4 . identitytoolkit3 [options] relyingparty create-auth-uri (-r <kv>)... [-p <v>]... [-o <out>] delete-account (-r <kv>)... [-p <v>]... [-o <out>] download-account (-r <kv>)... [-p <v>]... [-o <out>] email-link-signin (-r <kv>)... [-p <v>]... [-o <out>] get-account-info (-r <kv>)... [-p <v>]... [-o <out>] get-oob-confirmation-code (-r <kv>)... [-p <v>]... [-o <out>] get-project-config [-p <v>]... [-o <out>] get-public-keys [-p <v>]... [-o <out>] get-recaptcha-param [-p <v>]... [-o <out>] reset-password (-r <kv>)... [-p <v>]... [-o <out>] send-verification-code (-r <kv>)... [-p <v>]... [-o <out>] set-account-info (-r <kv>)... [-p <v>]... [-o <out>] set-project-config (-r <kv>)... [-p <v>]... [-o <out>] sign-out-user (-r <kv>)... [-p <v>]... [-o <out>] signup-new-user (-r <kv>)... [-p <v>]... [-o <out>] upload-account (-r <kv>)... [-p <v>]... [-o <out>] verify-assertion (-r <kv>)... [-p <v>]... [-o <out>] verify-custom-token (-r <kv>)... [-p <v>]... [-o <out>] verify-password (-r <kv>)... [-p <v>]... [-o <out>] verify-phone-number (-r <kv>)... [-p <v>]... [-o <out>] identitytoolkit3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with identitytoolkit3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/identitytoolkit3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/identitytoolkit3-secret.json , assuming that the required identitytoolkit API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. identitytoolkit3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-identitytoolkit3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Identity Toolkit API at revision 20180723 . The CLI is at version 5.0.4 . identitytoolkit3 [options] relyingparty create-auth-uri (-r <kv>)... [-p <v>]... [-o <out>] delete-account (-r <kv>)... [-p <v>]... [-o <out>] download-account (-r <kv>)... [-p <v>]... [-o <out>] email-link-signin (-r <kv>)... [-p <v>]... [-o <out>] get-account-info (-r <kv>)... [-p <v>]... [-o <out>] get-oob-confirmation-code (-r <kv>)... [-p <v>]... [-o <out>] get-project-config [-p <v>]... [-o <out>] get-public-keys [-p <v>]... [-o <out>] get-recaptcha-param [-p <v>]... [-o <out>] reset-password (-r <kv>)... [-p <v>]... [-o <out>] send-verification-code (-r <kv>)... [-p <v>]... [-o <out>] set-account-info (-r <kv>)... [-p <v>]... [-o <out>] set-project-config (-r <kv>)... [-p <v>]... [-o <out>] sign-out-user (-r <kv>)... [-p <v>]... [-o <out>] signup-new-user (-r <kv>)... [-p <v>]... [-o <out>] upload-account (-r <kv>)... [-p <v>]... [-o <out>] verify-assertion (-r <kv>)... [-p <v>]... [-o <out>] verify-custom-token (-r <kv>)... [-p <v>]... [-o <out>] verify-password (-r <kv>)... [-p <v>]... [-o <out>] verify-phone-number (-r <kv>)... [-p <v>]... [-o <out>] identitytoolkit3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with identitytoolkit3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/identitytoolkit3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/identitytoolkit3-secret.json , assuming that the required identitytoolkit API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. identitytoolkit3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"relyingparty_create-auth-uri/","text":"Creates the URI used by the IdP to authenticate the user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty create-auth-uri ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyCreateAuthUriRequest: app-id: string auth-flow-type: string client-id: string context: string continue-uri: string custom-parameter: { string: string } hosted-domain: string identifier: string oauth-consumer-key: string oauth-scope: string openid-realm: string ota-app: string provider-id: string session-id: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-id=et The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS. auth-flow-type=magna Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider. client-id=no The relying party OAuth client ID. context=ipsum The opaque value used by the client to maintain context info between the authentication request and the IDP callback. continue-uri=voluptua. The URI to which the IDP redirects the user after the federated login flow. custom-parameter=key=at The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token. the value will be associated with the given key hosted-domain=sanctus The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts. identifier=sed The email or federated ID of the user. oauth-consumer-key=amet. The developer's consumer key for OpenId OAuth Extension oauth-scope=takimata Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant openid-realm=amet. Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set. ota-app=duo The native app package for OTA installation. provider-id=ipsum The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier. session-id=gubergren The session_id passed by client. tenant-id=lorem For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=gubergren Tenant project number to be used for idp discovery. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Create Auth Uri"},{"location":"relyingparty_create-auth-uri/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty create-auth-uri ...","title":"Scopes"},{"location":"relyingparty_create-auth-uri/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyCreateAuthUriRequest: app-id: string auth-flow-type: string client-id: string context: string continue-uri: string custom-parameter: { string: string } hosted-domain: string identifier: string oauth-consumer-key: string oauth-scope: string openid-realm: string ota-app: string provider-id: string session-id: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-id=et The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS. auth-flow-type=magna Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider. client-id=no The relying party OAuth client ID. context=ipsum The opaque value used by the client to maintain context info between the authentication request and the IDP callback. continue-uri=voluptua. The URI to which the IDP redirects the user after the federated login flow. custom-parameter=key=at The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token. the value will be associated with the given key hosted-domain=sanctus The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts. identifier=sed The email or federated ID of the user. oauth-consumer-key=amet. The developer's consumer key for OpenId OAuth Extension oauth-scope=takimata Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant openid-realm=amet. Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set. ota-app=duo The native app package for OTA installation. provider-id=ipsum The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier. session-id=gubergren The session_id passed by client. tenant-id=lorem For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=gubergren Tenant project number to be used for idp discovery.","title":"Required Request Value"},{"location":"relyingparty_create-auth-uri/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_create-auth-uri/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_create-auth-uri/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_delete-account/","text":"Delete user account. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty delete-account ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyDeleteAccountRequest: delegated-project-number: string id-token: string local-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=eos GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. id-token=dolor The GITKit token or STS id token of the authenticated user. local-id=ea The local ID of the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete Account"},{"location":"relyingparty_delete-account/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty delete-account ...","title":"Scopes"},{"location":"relyingparty_delete-account/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyDeleteAccountRequest: delegated-project-number: string id-token: string local-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=eos GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. id-token=dolor The GITKit token or STS id token of the authenticated user. local-id=ea The local ID of the user.","title":"Required Request Value"},{"location":"relyingparty_delete-account/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_delete-account/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_delete-account/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_download-account/","text":"Batch download user accounts. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/firebase If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty download-account ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyDownloadAccountRequest: delegated-project-number: string max-results: integer next-page-token: string target-project-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=ipsum GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. max-results=13 The max number of results to return in the response. next-page-token=amet The token for the next page. This should be taken from the previous response. target-project-id=duo Specify which project (field value is actually project id) to operate. Only used when provided credential. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Download Account"},{"location":"relyingparty_download-account/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/firebase If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty download-account ...","title":"Scopes"},{"location":"relyingparty_download-account/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyDownloadAccountRequest: delegated-project-number: string max-results: integer next-page-token: string target-project-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=ipsum GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. max-results=13 The max number of results to return in the response. next-page-token=amet The token for the next page. This should be taken from the previous response. target-project-id=duo Specify which project (field value is actually project id) to operate. Only used when provided credential.","title":"Required Request Value"},{"location":"relyingparty_download-account/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_download-account/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_download-account/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_email-link-signin/","text":"Reset password for a user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty email-link-signin ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyEmailLinkSigninRequest: email: string id-token: string oob-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=ipsum The email address of the user. id-token=sed Token for linking flow. oob-code=ut The confirmation code. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Email Link Signin"},{"location":"relyingparty_email-link-signin/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty email-link-signin ...","title":"Scopes"},{"location":"relyingparty_email-link-signin/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyEmailLinkSigninRequest: email: string id-token: string oob-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=ipsum The email address of the user. id-token=sed Token for linking flow. oob-code=ut The confirmation code.","title":"Required Request Value"},{"location":"relyingparty_email-link-signin/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_email-link-signin/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_email-link-signin/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_get-account-info/","text":"Returns the account info. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-account-info ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyGetAccountInfoRequest: delegated-project-number: string email: [string] id-token: string local-id: [string] phone-number: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=gubergren GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. email=rebum. The list of emails of the users to inquiry. Each invocation of this argument appends the given value to the array. id-token=est The GITKit token of the authenticated user. local-id=ipsum The list of local ID's of the users to inquiry. Each invocation of this argument appends the given value to the array. phone-number=ipsum Privileged caller can query users by specified phone number. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get Account Info"},{"location":"relyingparty_get-account-info/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-account-info ...","title":"Scopes"},{"location":"relyingparty_get-account-info/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyGetAccountInfoRequest: delegated-project-number: string email: [string] id-token: string local-id: [string] phone-number: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=gubergren GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. email=rebum. The list of emails of the users to inquiry. Each invocation of this argument appends the given value to the array. id-token=est The GITKit token of the authenticated user. local-id=ipsum The list of local ID's of the users to inquiry. Each invocation of this argument appends the given value to the array. phone-number=ipsum Privileged caller can query users by specified phone number. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"relyingparty_get-account-info/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_get-account-info/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_get-account-info/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_get-oob-confirmation-code/","text":"Get a code for user action confirmation. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-oob-confirmation-code ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Relyingparty: android-install-app: boolean android-minimum-version: string android-package-name: string can-handle-code-in-app: boolean captcha-resp: string challenge: string continue-url: string email: string i-os-app-store-id: string i-os-bundle-id: string id-token: string kind: string new-email: string request-type: string user-ip: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . android-install-app=true whether or not to install the android app on the device where the link is opened android-minimum-version=ea minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app android-package-name=dolor android package name of the android app to handle the action code can-handle-code-in-app=true whether or not the app can handle the oob code without first going to web captcha-resp=eos The recaptcha response from the user. challenge=labore The recaptcha challenge presented to the user. continue-url=sed The url to continue to the Gitkit app email=duo The email of the user. i-os-app-store-id=sed iOS app store id to download the app if it's not already installed i-os-bundle-id=no the iOS bundle id of iOS app to handle the action code id-token=stet The user's Gitkit login token for email change. kind=kasd The fixed string \"identitytoolkit#relyingparty\". new-email=et The new email if the code is for email change. request-type=sed The request type. user-ip=et The IP address of the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get Oob Confirmation Code"},{"location":"relyingparty_get-oob-confirmation-code/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-oob-confirmation-code ...","title":"Scopes"},{"location":"relyingparty_get-oob-confirmation-code/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Relyingparty: android-install-app: boolean android-minimum-version: string android-package-name: string can-handle-code-in-app: boolean captcha-resp: string challenge: string continue-url: string email: string i-os-app-store-id: string i-os-bundle-id: string id-token: string kind: string new-email: string request-type: string user-ip: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . android-install-app=true whether or not to install the android app on the device where the link is opened android-minimum-version=ea minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app android-package-name=dolor android package name of the android app to handle the action code can-handle-code-in-app=true whether or not the app can handle the oob code without first going to web captcha-resp=eos The recaptcha response from the user. challenge=labore The recaptcha challenge presented to the user. continue-url=sed The url to continue to the Gitkit app email=duo The email of the user. i-os-app-store-id=sed iOS app store id to download the app if it's not already installed i-os-bundle-id=no the iOS bundle id of iOS app to handle the action code id-token=stet The user's Gitkit login token for email change. kind=kasd The fixed string \"identitytoolkit#relyingparty\". new-email=et The new email if the code is for email change. request-type=sed The request type. user-ip=et The IP address of the user.","title":"Required Request Value"},{"location":"relyingparty_get-oob-confirmation-code/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_get-oob-confirmation-code/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_get-oob-confirmation-code/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_get-project-config/","text":"Get project configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-project-config ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p delegated-project-number=string Delegated GCP project number of the request. -p project-number=string GCP project number of the request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get Project Config"},{"location":"relyingparty_get-project-config/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-project-config ...","title":"Scopes"},{"location":"relyingparty_get-project-config/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_get-project-config/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p delegated-project-number=string Delegated GCP project number of the request. -p project-number=string GCP project number of the request.","title":"Optional Method Properties"},{"location":"relyingparty_get-project-config/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_get-public-keys/","text":"Get token signing public key. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-public-keys ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get Public Keys"},{"location":"relyingparty_get-public-keys/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-public-keys ...","title":"Scopes"},{"location":"relyingparty_get-public-keys/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_get-public-keys/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_get-recaptcha-param/","text":"Get recaptcha secure param. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-recaptcha-param ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get Recaptcha Param"},{"location":"relyingparty_get-recaptcha-param/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty get-recaptcha-param ...","title":"Scopes"},{"location":"relyingparty_get-recaptcha-param/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_get-recaptcha-param/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_reset-password/","text":"Reset password for a user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty reset-password ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyResetPasswordRequest: email: string new-password: string old-password: string oob-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=et The email address of the user. new-password=vero The new password inputted by the user. old-password=erat The old password inputted by the user. oob-code=sed The confirmation code. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Reset Password"},{"location":"relyingparty_reset-password/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty reset-password ...","title":"Scopes"},{"location":"relyingparty_reset-password/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyResetPasswordRequest: email: string new-password: string old-password: string oob-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=et The email address of the user. new-password=vero The new password inputted by the user. old-password=erat The old password inputted by the user. oob-code=sed The confirmation code.","title":"Required Request Value"},{"location":"relyingparty_reset-password/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_reset-password/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_reset-password/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_send-verification-code/","text":"Send SMS verification code. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty send-verification-code ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySendVerificationCodeRequest: ios-receipt: string ios-secret: string phone-number: string recaptcha-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ios-receipt=duo Receipt of successful app token validation with APNS. ios-secret=dolore Secret delivered to iOS app via APNS. phone-number=et The phone number to send the verification code to in E.164 format. recaptcha-token=voluptua. Recaptcha solution. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Send Verification Code"},{"location":"relyingparty_send-verification-code/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty send-verification-code ...","title":"Scopes"},{"location":"relyingparty_send-verification-code/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySendVerificationCodeRequest: ios-receipt: string ios-secret: string phone-number: string recaptcha-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ios-receipt=duo Receipt of successful app token validation with APNS. ios-secret=dolore Secret delivered to iOS app via APNS. phone-number=et The phone number to send the verification code to in E.164 format. recaptcha-token=voluptua. Recaptcha solution.","title":"Required Request Value"},{"location":"relyingparty_send-verification-code/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_send-verification-code/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_send-verification-code/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_set-account-info/","text":"Set account info for a user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty set-account-info ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySetAccountInfoRequest: captcha-challenge: string captcha-response: string created-at: string custom-attributes: string delegated-project-number: string delete-attribute: [string] delete-provider: [string] disable-user: boolean display-name: string email: string email-verified: boolean id-token: string instance-id: string last-login-at: string local-id: string oob-code: string password: string phone-number: string photo-url: string provider: [string] return-secure-token: boolean upgrade-to-federated-login: boolean valid-since: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=amet. The captcha challenge. captcha-response=consetetur Response to the captcha. created-at=diam The timestamp when the account is created. custom-attributes=dolor The custom attributes to be set in the user's id token. delegated-project-number=et GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. delete-attribute=et The attributes users request to delete. Each invocation of this argument appends the given value to the array. delete-provider=sadipscing The IDPs the user request to delete. Each invocation of this argument appends the given value to the array. disable-user=false Whether to disable the user. display-name=duo The name of the user. email=vero The email of the user. email-verified=false Mark the email as verified or not. id-token=invidunt The GITKit token of the authenticated user. instance-id=stet Instance id token of the app. last-login-at=vero Last login timestamp. local-id=elitr The local ID of the user. oob-code=lorem The out-of-band code of the change email request. password=diam The new password of the user. phone-number=no Privileged caller can update user with specified phone number. photo-url=ipsum The photo url of the user. provider=accusam The associated IDPs of the user. Each invocation of this argument appends the given value to the array. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. upgrade-to-federated-login=true Mark the user to upgrade to federated login. valid-since=voluptua. Timestamp in seconds for valid login token. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Set Account Info"},{"location":"relyingparty_set-account-info/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty set-account-info ...","title":"Scopes"},{"location":"relyingparty_set-account-info/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySetAccountInfoRequest: captcha-challenge: string captcha-response: string created-at: string custom-attributes: string delegated-project-number: string delete-attribute: [string] delete-provider: [string] disable-user: boolean display-name: string email: string email-verified: boolean id-token: string instance-id: string last-login-at: string local-id: string oob-code: string password: string phone-number: string photo-url: string provider: [string] return-secure-token: boolean upgrade-to-federated-login: boolean valid-since: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=amet. The captcha challenge. captcha-response=consetetur Response to the captcha. created-at=diam The timestamp when the account is created. custom-attributes=dolor The custom attributes to be set in the user's id token. delegated-project-number=et GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. delete-attribute=et The attributes users request to delete. Each invocation of this argument appends the given value to the array. delete-provider=sadipscing The IDPs the user request to delete. Each invocation of this argument appends the given value to the array. disable-user=false Whether to disable the user. display-name=duo The name of the user. email=vero The email of the user. email-verified=false Mark the email as verified or not. id-token=invidunt The GITKit token of the authenticated user. instance-id=stet Instance id token of the app. last-login-at=vero Last login timestamp. local-id=elitr The local ID of the user. oob-code=lorem The out-of-band code of the change email request. password=diam The new password of the user. phone-number=no Privileged caller can update user with specified phone number. photo-url=ipsum The photo url of the user. provider=accusam The associated IDPs of the user. Each invocation of this argument appends the given value to the array. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. upgrade-to-federated-login=true Mark the user to upgrade to federated login. valid-since=voluptua. Timestamp in seconds for valid login token.","title":"Required Request Value"},{"location":"relyingparty_set-account-info/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_set-account-info/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_set-account-info/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_set-project-config/","text":"Set project configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty set-project-config ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySetProjectConfigRequest: allow-password-user: boolean api-key: string authorized-domains: [string] change-email-template: body: string format: string from: string from-display-name: string reply-to: string subject: string delegated-project-number: string enable-anonymous-user: boolean legacy-reset-password-template: body: string format: string from: string from-display-name: string reply-to: string subject: string reset-password-template: body: string format: string from: string from-display-name: string reply-to: string subject: string use-email-sending: boolean verify-email-template: body: string format: string from: string from-display-name: string reply-to: string subject: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allow-password-user=false Whether to allow password user sign in or sign up. api-key=erat Browser API key, needed when making http request to Apiary. authorized-domains=consetetur Authorized domains for widget redirect. Each invocation of this argument appends the given value to the array. change-email-template body=amet. Email body. format=sed Email body format. from=takimata From address of the email. from-display-name=dolores From display name. reply-to=gubergren Reply-to address. subject=et Subject of the email. .. delegated-project-number=accusam GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. enable-anonymous-user=false Whether to enable anonymous user. legacy-reset-password-template body=dolore Email body. format=dolore Email body format. from=dolore From address of the email. from-display-name=voluptua. From display name. reply-to=amet. Reply-to address. subject=ea Subject of the email. ..reset-password-template body=sadipscing Email body. format=lorem Email body format. from=invidunt From address of the email. from-display-name=no From display name. reply-to=est Reply-to address. subject=at Subject of the email. .. use-email-sending=true Whether to use email sending provided by Firebear. verify-email-template body=sit Email body. format=et Email body format. from=tempor From address of the email. from-display-name=aliquyam From display name. reply-to=ipsum Reply-to address. subject=et Subject of the email. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Set Project Config"},{"location":"relyingparty_set-project-config/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty set-project-config ...","title":"Scopes"},{"location":"relyingparty_set-project-config/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySetProjectConfigRequest: allow-password-user: boolean api-key: string authorized-domains: [string] change-email-template: body: string format: string from: string from-display-name: string reply-to: string subject: string delegated-project-number: string enable-anonymous-user: boolean legacy-reset-password-template: body: string format: string from: string from-display-name: string reply-to: string subject: string reset-password-template: body: string format: string from: string from-display-name: string reply-to: string subject: string use-email-sending: boolean verify-email-template: body: string format: string from: string from-display-name: string reply-to: string subject: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allow-password-user=false Whether to allow password user sign in or sign up. api-key=erat Browser API key, needed when making http request to Apiary. authorized-domains=consetetur Authorized domains for widget redirect. Each invocation of this argument appends the given value to the array. change-email-template body=amet. Email body. format=sed Email body format. from=takimata From address of the email. from-display-name=dolores From display name. reply-to=gubergren Reply-to address. subject=et Subject of the email. .. delegated-project-number=accusam GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. enable-anonymous-user=false Whether to enable anonymous user. legacy-reset-password-template body=dolore Email body. format=dolore Email body format. from=dolore From address of the email. from-display-name=voluptua. From display name. reply-to=amet. Reply-to address. subject=ea Subject of the email. ..reset-password-template body=sadipscing Email body. format=lorem Email body format. from=invidunt From address of the email. from-display-name=no From display name. reply-to=est Reply-to address. subject=at Subject of the email. .. use-email-sending=true Whether to use email sending provided by Firebear. verify-email-template body=sit Email body. format=et Email body format. from=tempor From address of the email. from-display-name=aliquyam From display name. reply-to=ipsum Reply-to address. subject=et Subject of the email.","title":"Required Request Value"},{"location":"relyingparty_set-project-config/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_set-project-config/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_set-project-config/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_sign-out-user/","text":"Sign out user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty sign-out-user ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySignOutUserRequest: instance-id: string local-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . instance-id=sanctus Instance id token of the app. local-id=lorem The local ID of the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Sign Out User"},{"location":"relyingparty_sign-out-user/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty sign-out-user ...","title":"Scopes"},{"location":"relyingparty_sign-out-user/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySignOutUserRequest: instance-id: string local-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . instance-id=sanctus Instance id token of the app. local-id=lorem The local ID of the user.","title":"Required Request Value"},{"location":"relyingparty_sign-out-user/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_sign-out-user/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_sign-out-user/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_signup-new-user/","text":"Signup new user. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty signup-new-user ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySignupNewUserRequest: captcha-challenge: string captcha-response: string disabled: boolean display-name: string email: string email-verified: boolean id-token: string instance-id: string local-id: string password: string phone-number: string photo-url: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=est The captcha challenge. captcha-response=sed Response to the captcha. disabled=true Whether to disable the user. Only can be used by service account. display-name=et The name of the user. email=sed The email of the user. email-verified=false Mark the email as verified or not. Only can be used by service account. id-token=elitr The GITKit token of the authenticated user. instance-id=sed Instance id token of the app. local-id=no Privileged caller can create user with specified user id. password=nonumy The new password of the user. phone-number=at Privileged caller can create user with specified phone number. photo-url=sadipscing The photo url of the user. tenant-id=aliquyam For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=dolores Tenant project number to be used for idp discovery. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Signup New User"},{"location":"relyingparty_signup-new-user/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty signup-new-user ...","title":"Scopes"},{"location":"relyingparty_signup-new-user/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartySignupNewUserRequest: captcha-challenge: string captcha-response: string disabled: boolean display-name: string email: string email-verified: boolean id-token: string instance-id: string local-id: string password: string phone-number: string photo-url: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=est The captcha challenge. captcha-response=sed Response to the captcha. disabled=true Whether to disable the user. Only can be used by service account. display-name=et The name of the user. email=sed The email of the user. email-verified=false Mark the email as verified or not. Only can be used by service account. id-token=elitr The GITKit token of the authenticated user. instance-id=sed Instance id token of the app. local-id=no Privileged caller can create user with specified user id. password=nonumy The new password of the user. phone-number=at Privileged caller can create user with specified phone number. photo-url=sadipscing The photo url of the user. tenant-id=aliquyam For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=dolores Tenant project number to be used for idp discovery.","title":"Required Request Value"},{"location":"relyingparty_signup-new-user/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_signup-new-user/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_signup-new-user/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_upload-account/","text":"Batch upload existing user accounts. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/firebase If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty upload-account ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyUploadAccountRequest: allow-overwrite: boolean block-size: integer cpu-mem-cost: integer delegated-project-number: string dk-len: integer hash-algorithm: string memory-cost: integer parallelization: integer rounds: integer salt-separator: string sanity-check: boolean signer-key: string target-project-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allow-overwrite=false Whether allow overwrite existing account when user local_id exists. block-size=70 No description provided. cpu-mem-cost=19 The following 4 fields are for standard scrypt algorithm. delegated-project-number=amet GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. dk-len=44 No description provided. hash-algorithm=et The password hash algorithm. memory-cost=91 Memory cost for hash calculation. Used by scrypt similar algorithms. parallelization=5 No description provided. rounds=55 Rounds for hash calculation. Used by scrypt and similar algorithms. salt-separator=stet The salt separator. sanity-check=false If true, backend will do sanity check(including duplicate email and federated id) when uploading account. signer-key=elitr The key for to hash the password. target-project-id=duo Specify which project (field value is actually project id) to operate. Only used when provided credential. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Upload Account"},{"location":"relyingparty_upload-account/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/firebase If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty upload-account ...","title":"Scopes"},{"location":"relyingparty_upload-account/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyUploadAccountRequest: allow-overwrite: boolean block-size: integer cpu-mem-cost: integer delegated-project-number: string dk-len: integer hash-algorithm: string memory-cost: integer parallelization: integer rounds: integer salt-separator: string sanity-check: boolean signer-key: string target-project-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allow-overwrite=false Whether allow overwrite existing account when user local_id exists. block-size=70 No description provided. cpu-mem-cost=19 The following 4 fields are for standard scrypt algorithm. delegated-project-number=amet GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. dk-len=44 No description provided. hash-algorithm=et The password hash algorithm. memory-cost=91 Memory cost for hash calculation. Used by scrypt similar algorithms. parallelization=5 No description provided. rounds=55 Rounds for hash calculation. Used by scrypt and similar algorithms. salt-separator=stet The salt separator. sanity-check=false If true, backend will do sanity check(including duplicate email and federated id) when uploading account. signer-key=elitr The key for to hash the password. target-project-id=duo Specify which project (field value is actually project id) to operate. Only used when provided credential.","title":"Required Request Value"},{"location":"relyingparty_upload-account/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_upload-account/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_upload-account/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_verify-assertion/","text":"Verifies the assertion returned by the IdP. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-assertion ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyAssertionRequest: auto-create: boolean delegated-project-number: string id-token: string instance-id: string pending-id-token: string post-body: string request-uri: string return-idp-credential: boolean return-refresh-token: boolean return-secure-token: boolean session-id: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . auto-create=true When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist. delegated-project-number=est GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. id-token=sit The GITKit token of the authenticated user. instance-id=sed Instance id token of the app. pending-id-token=eos The GITKit token for the non-trusted IDP pending to be confirmed by the user. post-body=lorem The post body if the request is a HTTP POST. request-uri=ea The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP. return-idp-credential=true Whether return 200 and IDP credential rather than throw exception when federated id is already linked. return-refresh-token=false Whether to return refresh tokens. return-secure-token=false Whether return sts id token and refresh token instead of gitkit token. session-id=dolore Session ID, which should match the one in previous createAuthUri request. tenant-id=eirmod For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=lorem Tenant project number to be used for idp discovery. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Verify Assertion"},{"location":"relyingparty_verify-assertion/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-assertion ...","title":"Scopes"},{"location":"relyingparty_verify-assertion/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyAssertionRequest: auto-create: boolean delegated-project-number: string id-token: string instance-id: string pending-id-token: string post-body: string request-uri: string return-idp-credential: boolean return-refresh-token: boolean return-secure-token: boolean session-id: string tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . auto-create=true When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist. delegated-project-number=est GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. id-token=sit The GITKit token of the authenticated user. instance-id=sed Instance id token of the app. pending-id-token=eos The GITKit token for the non-trusted IDP pending to be confirmed by the user. post-body=lorem The post body if the request is a HTTP POST. request-uri=ea The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP. return-idp-credential=true Whether return 200 and IDP credential rather than throw exception when federated id is already linked. return-refresh-token=false Whether to return refresh tokens. return-secure-token=false Whether return sts id token and refresh token instead of gitkit token. session-id=dolore Session ID, which should match the one in previous createAuthUri request. tenant-id=eirmod For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=lorem Tenant project number to be used for idp discovery.","title":"Required Request Value"},{"location":"relyingparty_verify-assertion/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_verify-assertion/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_verify-assertion/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_verify-custom-token/","text":"Verifies the developer asserted ID token. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-custom-token ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest: delegated-project-number: string instance-id: string return-secure-token: boolean token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=accusam GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. instance-id=amet Instance id token of the app. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. token=erat The custom token to verify About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Verify Custom Token"},{"location":"relyingparty_verify-custom-token/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-custom-token ...","title":"Scopes"},{"location":"relyingparty_verify-custom-token/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest: delegated-project-number: string instance-id: string return-secure-token: boolean token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . delegated-project-number=accusam GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. instance-id=amet Instance id token of the app. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. token=erat The custom token to verify","title":"Required Request Value"},{"location":"relyingparty_verify-custom-token/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_verify-custom-token/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_verify-custom-token/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_verify-password/","text":"Verifies the user entered password. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-password ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyPasswordRequest: captcha-challenge: string captcha-response: string delegated-project-number: string email: string id-token: string instance-id: string password: string pending-id-token: string return-secure-token: boolean tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=accusam The captcha challenge. captcha-response=sea Response to the captcha. delegated-project-number=takimata GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. email=lorem The email of the user. id-token=et The GITKit token of the authenticated user. instance-id=at Instance id token of the app. password=dolor The password inputed by the user. pending-id-token=et The GITKit token for the non-trusted IDP, which is to be confirmed by the user. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. tenant-id=erat For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=sea Tenant project number to be used for idp discovery. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Verify Password"},{"location":"relyingparty_verify-password/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-password ...","title":"Scopes"},{"location":"relyingparty_verify-password/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyPasswordRequest: captcha-challenge: string captcha-response: string delegated-project-number: string email: string id-token: string instance-id: string password: string pending-id-token: string return-secure-token: boolean tenant-id: string tenant-project-number: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . captcha-challenge=accusam The captcha challenge. captcha-response=sea Response to the captcha. delegated-project-number=takimata GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. email=lorem The email of the user. id-token=et The GITKit token of the authenticated user. instance-id=at Instance id token of the app. password=dolor The password inputed by the user. pending-id-token=et The GITKit token for the non-trusted IDP, which is to be confirmed by the user. return-secure-token=true Whether return sts id token and refresh token instead of gitkit token. tenant-id=erat For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. tenant-project-number=sea Tenant project number to be used for idp discovery.","title":"Required Request Value"},{"location":"relyingparty_verify-password/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_verify-password/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_verify-password/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"relyingparty_verify-phone-number/","text":"Verifies ownership of a phone number and creates/updates the user account accordingly. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-phone-number ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest: code: string id-token: string operation: string phone-number: string session-info: string temporary-proof: string verification-proof: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . code=nonumy No description provided. id-token=et No description provided. operation=gubergren No description provided. phone-number=justo No description provided. session-info=sea The session info previously returned by IdentityToolkit-SendVerificationCode. temporary-proof=consetetur No description provided. verification-proof=sit No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Verify Phone Number"},{"location":"relyingparty_verify-phone-number/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: identitytoolkit3 --scope <scope> relyingparty verify-phone-number ...","title":"Scopes"},{"location":"relyingparty_verify-phone-number/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest: code: string id-token: string operation: string phone-number: string session-info: string temporary-proof: string verification-proof: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . code=nonumy No description provided. id-token=et No description provided. operation=gubergren No description provided. phone-number=justo No description provided. session-info=sea The session info previously returned by IdentityToolkit-SendVerificationCode. temporary-proof=consetetur No description provided. verification-proof=sit No description provided.","title":"Required Request Value"},{"location":"relyingparty_verify-phone-number/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"relyingparty_verify-phone-number/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"relyingparty_verify-phone-number/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}