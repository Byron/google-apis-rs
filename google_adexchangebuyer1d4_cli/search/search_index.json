{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The adexchangebuyer1d4 command-line interface (CLI) allows to use most features of the Google Ad Exchange Buyer service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Ad Exchange Buyer API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-adexchangebuyer1d4-cli Find the source code on github . Usage This documentation was generated from the Ad Exchange Buyer API at revision 20210330 . The CLI is at version 5.0.4 . adexchangebuyer1d4 [options] accounts get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] billing-info get <account-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] budget get <account-id> <billing-id> [-p <v>]... [-o <out>] patch <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives add-deal <account-id> <buyer-creative-id> <deal-id> [-p <v>]... get <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-deals <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] remove-deal <account-id> <buyer-creative-id> <deal-id> [-p <v>]... marketplacedeals delete <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] insert <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] list <proposal-id> [-p <v>]... [-o <out>] update <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] marketplacenotes insert <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] list <proposal-id> [-p <v>]... [-o <out>] marketplaceprivateauction updateproposal <private-auction-id> (-r <kv>)... [-p <v>]... performance-report list <account-id> <end-date-time> <start-date-time> [-p <v>]... [-o <out>] pretargeting-config delete <account-id> <config-id> [-p <v>]... get <account-id> <config-id> [-p <v>]... [-o <out>] insert <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <account-id> [-p <v>]... [-o <out>] patch <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] products get <product-id> [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] proposals get <proposal-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <proposal-id> <revision-number> <update-action> (-r <kv>)... [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] setupcomplete <proposal-id> [-p <v>]... update <proposal-id> <revision-number> <update-action> (-r <kv>)... [-p <v>]... [-o <out>] pubprofiles list <account-id> [-p <v>]... [-o <out>] adexchangebuyer1d4 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer1d4- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer1d4-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer1d4-secret.json , assuming that the required adexchangebuyer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer1d4 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-adexchangebuyer1d4-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Ad Exchange Buyer API at revision 20210330 . The CLI is at version 5.0.4 . adexchangebuyer1d4 [options] accounts get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] billing-info get <account-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] budget get <account-id> <billing-id> [-p <v>]... [-o <out>] patch <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <billing-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives add-deal <account-id> <buyer-creative-id> <deal-id> [-p <v>]... get <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-deals <account-id> <buyer-creative-id> [-p <v>]... [-o <out>] remove-deal <account-id> <buyer-creative-id> <deal-id> [-p <v>]... marketplacedeals delete <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] insert <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] list <proposal-id> [-p <v>]... [-o <out>] update <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] marketplacenotes insert <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] list <proposal-id> [-p <v>]... [-o <out>] marketplaceprivateauction updateproposal <private-auction-id> (-r <kv>)... [-p <v>]... performance-report list <account-id> <end-date-time> <start-date-time> [-p <v>]... [-o <out>] pretargeting-config delete <account-id> <config-id> [-p <v>]... get <account-id> <config-id> [-p <v>]... [-o <out>] insert <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <account-id> [-p <v>]... [-o <out>] patch <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] update <account-id> <config-id> (-r <kv>)... [-p <v>]... [-o <out>] products get <product-id> [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] proposals get <proposal-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <proposal-id> <revision-number> <update-action> (-r <kv>)... [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] setupcomplete <proposal-id> [-p <v>]... update <proposal-id> <revision-number> <update-action> (-r <kv>)... [-p <v>]... [-o <out>] pubprofiles list <account-id> [-p <v>]... [-o <out>] adexchangebuyer1d4 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer1d4- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer1d4-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer1d4-secret.json , assuming that the required adexchangebuyer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer1d4 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_get/","text":"Gets one account by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts get ... Required Scalar Argument <id> (integer) The account id Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"accounts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts get ...","title":"Scopes"},{"location":"accounts_get/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_list/","text":"Retrieves the authenticated user's list of accounts. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"accounts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts list ...","title":"Scopes"},{"location":"accounts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_patch/","text":"Updates an existing account. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts patch ... Required Scalar Argument <id> (integer) The account id Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: apply-pretargeting-to-non-guaranteed-deals: boolean cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . apply-pretargeting-to-non-guaranteed-deals=true When this is false, bid requests that include a deal ID for a private auction or preferred deal are always sent to your bidder. When true, all active pretargeting configs will be applied to private auctions and preferred deals. Programmatic Guaranteed deals (when enabled) are always sent to your bidder. cookie-matching-nid=voluptua. The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=at The base URL used in cookie match requests. id=93 Account id. kind=sed Resource type. maximum-active-creatives=99 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=42 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=49 The number of creatives that this account inserted or bid with in the last 30 days. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p confirm-unsafe-account-change=boolean Confirmation for erasing bidder and cookie matching urls. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"accounts_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts patch ...","title":"Scopes"},{"location":"accounts_patch/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: apply-pretargeting-to-non-guaranteed-deals: boolean cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . apply-pretargeting-to-non-guaranteed-deals=true When this is false, bid requests that include a deal ID for a private auction or preferred deal are always sent to your bidder. When true, all active pretargeting configs will be applied to private auctions and preferred deals. Programmatic Guaranteed deals (when enabled) are always sent to your bidder. cookie-matching-nid=voluptua. The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=at The base URL used in cookie match requests. id=93 Account id. kind=sed Resource type. maximum-active-creatives=99 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=42 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=49 The number of creatives that this account inserted or bid with in the last 30 days.","title":"Required Request Value"},{"location":"accounts_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p confirm-unsafe-account-change=boolean Confirmation for erasing bidder and cookie matching urls.","title":"Optional Method Properties"},{"location":"accounts_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"accounts_update/","text":"Updates an existing account. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts update ... Required Scalar Argument <id> (integer) The account id Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: apply-pretargeting-to-non-guaranteed-deals: boolean cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . apply-pretargeting-to-non-guaranteed-deals=true When this is false, bid requests that include a deal ID for a private auction or preferred deal are always sent to your bidder. When true, all active pretargeting configs will be applied to private auctions and preferred deals. Programmatic Guaranteed deals (when enabled) are always sent to your bidder. cookie-matching-nid=gubergren The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=lorem The base URL used in cookie match requests. id=89 Account id. kind=eos Resource type. maximum-active-creatives=97 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=84 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=46 The number of creatives that this account inserted or bid with in the last 30 days. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p confirm-unsafe-account-change=boolean Confirmation for erasing bidder and cookie matching urls. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"accounts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> accounts update ...","title":"Scopes"},{"location":"accounts_update/#required-scalar-argument","text":"<id> (integer) The account id","title":"Required Scalar Argument"},{"location":"accounts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: apply-pretargeting-to-non-guaranteed-deals: boolean cookie-matching-nid: string cookie-matching-url: string id: integer kind: string maximum-active-creatives: integer maximum-total-qps: integer number-active-creatives: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . apply-pretargeting-to-non-guaranteed-deals=true When this is false, bid requests that include a deal ID for a private auction or preferred deal are always sent to your bidder. When true, all active pretargeting configs will be applied to private auctions and preferred deals. Programmatic Guaranteed deals (when enabled) are always sent to your bidder. cookie-matching-nid=gubergren The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this. cookie-matching-url=lorem The base URL used in cookie match requests. id=89 Account id. kind=eos Resource type. maximum-active-creatives=97 The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this. maximum-total-qps=84 The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this. number-active-creatives=46 The number of creatives that this account inserted or bid with in the last 30 days.","title":"Required Request Value"},{"location":"accounts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p confirm-unsafe-account-change=boolean Confirmation for erasing bidder and cookie matching urls.","title":"Optional Method Properties"},{"location":"accounts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"billing-info_get/","text":"Returns the billing information for one account specified by account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> billing-info get ... Required Scalar Argument <account-id> (integer) The account id. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"billing-info_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> billing-info get ...","title":"Scopes"},{"location":"billing-info_get/#required-scalar-argument","text":"<account-id> (integer) The account id.","title":"Required Scalar Argument"},{"location":"billing-info_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"billing-info_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"billing-info_list/","text":"Retrieves a list of billing information for all accounts of the authenticated user. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> billing-info list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"billing-info_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> billing-info list ...","title":"Scopes"},{"location":"billing-info_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"billing-info_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_get/","text":"Returns the budget information for the adgroup specified by the accountId and billingId. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget get ... Required Scalar Arguments <account-id> (string) The account id to get the budget information for. <billing-id> (string) The billing id to get the budget information for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"budget_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget get ...","title":"Scopes"},{"location":"budget_get/#required-scalar-arguments","text":"<account-id> (string) The account id to get the budget information for. <billing-id> (string) The billing id to get the budget information for.","title":"Required Scalar Arguments"},{"location":"budget_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_patch/","text":"Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget patch ... Required Scalar Arguments <account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=invidunt The id of the account. This is required for get and update requests. billing-id=amet The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=duo The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=sed The unique id that describes this item. kind=ut The kind of the resource, i.e. \"adexchangebuyer#budget\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"budget_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget patch ...","title":"Scopes"},{"location":"budget_patch/#required-scalar-arguments","text":"<account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated.","title":"Required Scalar Arguments"},{"location":"budget_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=invidunt The id of the account. This is required for get and update requests. billing-id=amet The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=duo The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=sed The unique id that describes this item. kind=ut The kind of the resource, i.e. \"adexchangebuyer#budget\".","title":"Required Request Value"},{"location":"budget_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"budget_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"budget_update/","text":"Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget update ... Required Scalar Arguments <account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=gubergren The id of the account. This is required for get and update requests. billing-id=rebum. The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=est The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=ipsum The unique id that describes this item. kind=est The kind of the resource, i.e. \"adexchangebuyer#budget\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"budget_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> budget update ...","title":"Scopes"},{"location":"budget_update/#required-scalar-arguments","text":"<account-id> (string) The account id associated with the budget being updated. <billing-id> (string) The billing id associated with the budget being updated.","title":"Required Scalar Arguments"},{"location":"budget_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Budget: account-id: string billing-id: string budget-amount: string currency-code: string id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=gubergren The id of the account. This is required for get and update requests. billing-id=rebum. The billing id to determine which adgroup to provide budget information for. This is required for get and update requests. budget-amount=est The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests. currency-code=ipsum The currency code for the buyer. This cannot be altered here. id=ipsum The unique id that describes this item. kind=est The kind of the resource, i.e. \"adexchangebuyer#budget\".","title":"Required Request Value"},{"location":"budget_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"budget_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"budget_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_add-deal/","text":"Add a deal id association for the creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives add-deal ... Required Scalar Arguments <account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. <deal-id> (string) The id of the deal id to associate with this creative. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Add Deal"},{"location":"creatives_add-deal/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives add-deal ...","title":"Scopes"},{"location":"creatives_add-deal/#required-scalar-arguments","text":"<account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. <deal-id> (string) The id of the deal id to associate with this creative.","title":"Required Scalar Arguments"},{"location":"creatives_add-deal/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_get/","text":"Gets the status for a single creative. A creative will be available 30-40 minutes after submission. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives get ... Required Scalar Arguments <account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"creatives_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives get ...","title":"Scopes"},{"location":"creatives_get/#required-scalar-arguments","text":"<account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative.","title":"Required Scalar Arguments"},{"location":"creatives_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_insert/","text":"Submit a new creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: html-snippet: string account-id: integer ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-id: [string] advertiser-name: string agency-id: string api-upload-timestamp: string attribute: [integer] buyer-creative-id: string click-through-url: [string] creative-status-identity-type: string deals-status: string detected-domains: [string] filtering-reasons: date: string height: integer impression-tracking-url: [string] kind: string languages: [string] native-ad: advertiser: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer impression-tracking-url: [string] logo: height: integer url: string width: integer price: string star-rating: number video-url: string open-auction-status: string product-categories: [integer] restricted-categories: [integer] sensitive-categories: [integer] vendor-type: [integer] version: integer video-url: string video-vast-xml: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . html-snippet=gubergren The HTML snippet that displays the ad when inserted in the web page. If set, videoURL, videoVastXML, and nativeAd should not be set. account-id=84 Account id. ad-choices-destination-url=dolor The link to the Ad Preferences page. This is only supported for native ads. ad-technology-providers detected-provider-ids=lorem The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the Authorized Buyers Real-Time Bidding protocol or the BidRequest.user.ext.consented_providers_settings.consented_providers field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. Each invocation of this argument appends the given value to the array. has-unidentified-provider=false Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. .. advertiser-id=sed Detected advertiser id, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. advertiser-name=duo The name of the company being advertised in the creative. A list of advertisers is provided in the advertisers.txt file. agency-id=sed The agency id for this creative. api-upload-timestamp=no The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp). attribute=86 List of buyer selectable attributes for the ads that may be shown from this snippet. Each attribute is represented by an integer as defined in buyer-declarable-creative-attributes.txt. Each invocation of this argument appends the given value to the array. buyer-creative-id=kasd A buyer-specific id identifying the creative in this ad. click-through-url=et The set of destination urls for the snippet. Each invocation of this argument appends the given value to the array. creative-status-identity-type=sed Creative status identity type that the creative item applies to. Ad Exchange real-time bidding is migrating to the sizeless creative verification. Originally, Ad Exchange assigned creative verification status to a unique combination of a buyer creative ID and creative dimensions. Post-migration, a single verification status will be assigned at the buyer creative ID level. This field allows to distinguish whether a given creative status applies to a unique combination of a buyer creative ID and creative dimensions, or to a buyer creative ID as a whole. deals-status=et Top-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly. detected-domains=et Detected domains for this creative. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. filtering-reasons date=vero The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST. .. height=70 Ad height. impression-tracking-url=sed The set of urls to be called to record an impression. Each invocation of this argument appends the given value to the array. kind=duo Resource type. languages=dolore Detected languages for this creative. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. native-ad advertiser=et No description provided. app-icon height=73 No description provided. url=amet. No description provided. width=5 No description provided. .. body=diam A long description of the ad. call-to-action=dolor A label for the button that the user is supposed to click. click-link-url=et The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=et The URL to use for click tracking. headline=sadipscing A short title for the ad. image height=86 No description provided. url=dolor No description provided. width=81 No description provided. .. impression-tracking-url=vero The URLs are called when the impression is rendered. Each invocation of this argument appends the given value to the array. logo height=25 No description provided. url=invidunt No description provided. width=36 No description provided. .. price=vero The price of the promoted app including the currency info. star-rating=0.4523282032393763 The app rating in the app store. Must be in the range [0-5]. video-url=diam The URL of the XML VAST for a native ad. Note this is a separate field from resource.video_url. .. open-auction-status=no Top-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly. product-categories=1 Detected product categories, if any. Each category is represented by an integer as defined in ad-product-categories.txt. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. restricted-categories=78 All restricted categories for the ads that may be shown from this snippet. Each category is represented by an integer as defined in the ad-restricted-categories.txt. Each invocation of this argument appends the given value to the array. sensitive-categories=42 Detected sensitive categories, if any. Each category is represented by an integer as defined in ad-sensitive-categories.txt. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. vendor-type=55 List of vendor types for the ads that may be shown from this snippet. Each vendor type is represented by an integer as defined in vendors.txt. Each invocation of this argument appends the given value to the array. version=73 The version for this creative. Read-only. This field should not be set in requests. video-url=et The URL to fetch a video ad. If set, HTMLSnippet, videoVastXML, and nativeAd should not be set. Note, this is different from resource.native_ad.video_url above. video-vast-xml=erat The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. If set, HTMLSnippet, videoURL, and nativeAd and should not be set. width=5 Ad width. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"creatives_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives insert ...","title":"Scopes"},{"location":"creatives_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: html-snippet: string account-id: integer ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-id: [string] advertiser-name: string agency-id: string api-upload-timestamp: string attribute: [integer] buyer-creative-id: string click-through-url: [string] creative-status-identity-type: string deals-status: string detected-domains: [string] filtering-reasons: date: string height: integer impression-tracking-url: [string] kind: string languages: [string] native-ad: advertiser: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer impression-tracking-url: [string] logo: height: integer url: string width: integer price: string star-rating: number video-url: string open-auction-status: string product-categories: [integer] restricted-categories: [integer] sensitive-categories: [integer] vendor-type: [integer] version: integer video-url: string video-vast-xml: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . html-snippet=gubergren The HTML snippet that displays the ad when inserted in the web page. If set, videoURL, videoVastXML, and nativeAd should not be set. account-id=84 Account id. ad-choices-destination-url=dolor The link to the Ad Preferences page. This is only supported for native ads. ad-technology-providers detected-provider-ids=lorem The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the Authorized Buyers Real-Time Bidding protocol or the BidRequest.user.ext.consented_providers_settings.consented_providers field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. Each invocation of this argument appends the given value to the array. has-unidentified-provider=false Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the \"Third-party Ad Technology Vendors\" section of Authorized Buyers Program Guidelines. .. advertiser-id=sed Detected advertiser id, if any. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. advertiser-name=duo The name of the company being advertised in the creative. A list of advertisers is provided in the advertisers.txt file. agency-id=sed The agency id for this creative. api-upload-timestamp=no The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp). attribute=86 List of buyer selectable attributes for the ads that may be shown from this snippet. Each attribute is represented by an integer as defined in buyer-declarable-creative-attributes.txt. Each invocation of this argument appends the given value to the array. buyer-creative-id=kasd A buyer-specific id identifying the creative in this ad. click-through-url=et The set of destination urls for the snippet. Each invocation of this argument appends the given value to the array. creative-status-identity-type=sed Creative status identity type that the creative item applies to. Ad Exchange real-time bidding is migrating to the sizeless creative verification. Originally, Ad Exchange assigned creative verification status to a unique combination of a buyer creative ID and creative dimensions. Post-migration, a single verification status will be assigned at the buyer creative ID level. This field allows to distinguish whether a given creative status applies to a unique combination of a buyer creative ID and creative dimensions, or to a buyer creative ID as a whole. deals-status=et Top-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly. detected-domains=et Detected domains for this creative. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. filtering-reasons date=vero The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST. .. height=70 Ad height. impression-tracking-url=sed The set of urls to be called to record an impression. Each invocation of this argument appends the given value to the array. kind=duo Resource type. languages=dolore Detected languages for this creative. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. native-ad advertiser=et No description provided. app-icon height=73 No description provided. url=amet. No description provided. width=5 No description provided. .. body=diam A long description of the ad. call-to-action=dolor A label for the button that the user is supposed to click. click-link-url=et The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=et The URL to use for click tracking. headline=sadipscing A short title for the ad. image height=86 No description provided. url=dolor No description provided. width=81 No description provided. .. impression-tracking-url=vero The URLs are called when the impression is rendered. Each invocation of this argument appends the given value to the array. logo height=25 No description provided. url=invidunt No description provided. width=36 No description provided. .. price=vero The price of the promoted app including the currency info. star-rating=0.4523282032393763 The app rating in the app store. Must be in the range [0-5]. video-url=diam The URL of the XML VAST for a native ad. Note this is a separate field from resource.video_url. .. open-auction-status=no Top-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly. product-categories=1 Detected product categories, if any. Each category is represented by an integer as defined in ad-product-categories.txt. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. restricted-categories=78 All restricted categories for the ads that may be shown from this snippet. Each category is represented by an integer as defined in the ad-restricted-categories.txt. Each invocation of this argument appends the given value to the array. sensitive-categories=42 Detected sensitive categories, if any. Each category is represented by an integer as defined in ad-sensitive-categories.txt. Read-only. This field should not be set in requests. Each invocation of this argument appends the given value to the array. vendor-type=55 List of vendor types for the ads that may be shown from this snippet. Each vendor type is represented by an integer as defined in vendors.txt. Each invocation of this argument appends the given value to the array. version=73 The version for this creative. Read-only. This field should not be set in requests. video-url=et The URL to fetch a video ad. If set, HTMLSnippet, videoVastXML, and nativeAd should not be set. Note, this is different from resource.native_ad.video_url above. video-vast-xml=erat The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. If set, HTMLSnippet, videoURL, and nativeAd and should not be set. width=5 Ad width.","title":"Required Request Value"},{"location":"creatives_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"creatives_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_list-deals/","text":"Lists the external deal ids associated with the creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives list-deals ... Required Scalar Arguments <account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List Deals"},{"location":"creatives_list-deals/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives list-deals ...","title":"Scopes"},{"location":"creatives_list-deals/#required-scalar-arguments","text":"<account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative.","title":"Required Scalar Arguments"},{"location":"creatives_list-deals/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_list-deals/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_list/","text":"Retrieves a list of the authenticated user's active creatives. A creative will be available 30-40 minutes after submission. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p account-id=integer When specified, only creatives for the given account ids are returned. -p buyer-creative-id=string When specified, only creatives for the given buyer creative ids are returned. -p deals-status-filter=string When specified, only creatives having the given deals status are returned. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p open-auction-status-filter=string When specified, only creatives having the given open auction status are returned. -p page-token=string A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"creatives_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives list ...","title":"Scopes"},{"location":"creatives_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"creatives_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p account-id=integer When specified, only creatives for the given account ids are returned. -p buyer-creative-id=string When specified, only creatives for the given buyer creative ids are returned. -p deals-status-filter=string When specified, only creatives having the given deals status are returned. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p open-auction-status-filter=string When specified, only creatives having the given open auction status are returned. -p page-token=string A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional.","title":"Optional Method Properties"},{"location":"creatives_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"creatives_remove-deal/","text":"Remove a deal id associated with the creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives remove-deal ... Required Scalar Arguments <account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. <deal-id> (string) The id of the deal id to disassociate with this creative. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Remove Deal"},{"location":"creatives_remove-deal/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> creatives remove-deal ...","title":"Scopes"},{"location":"creatives_remove-deal/#required-scalar-arguments","text":"<account-id> (integer) The id for the account that will serve this creative. <buyer-creative-id> (string) The buyer-specific id for this creative. <deal-id> (string) The id of the deal id to disassociate with this creative.","title":"Required Scalar Arguments"},{"location":"creatives_remove-deal/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacedeals_delete/","text":"Delete the specified deals from the proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals delete ... Required Scalar Argument <proposal-id> (string) The proposalId to delete deals from. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeleteOrderDealsRequest: deal-ids: [string] proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deal-ids=amet. List of deals to delete for a given proposal Each invocation of this argument appends the given value to the array. proposal-revision-number=sed The last known proposal revision number. update-action=takimata Indicates an optional action to take on the proposal About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"marketplacedeals_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals delete ...","title":"Scopes"},{"location":"marketplacedeals_delete/#required-scalar-argument","text":"<proposal-id> (string) The proposalId to delete deals from.","title":"Required Scalar Argument"},{"location":"marketplacedeals_delete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeleteOrderDealsRequest: deal-ids: [string] proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deal-ids=amet. List of deals to delete for a given proposal Each invocation of this argument appends the given value to the array. proposal-revision-number=sed The last known proposal revision number. update-action=takimata Indicates an optional action to take on the proposal","title":"Required Request Value"},{"location":"marketplacedeals_delete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"marketplacedeals_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacedeals_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacedeals_insert/","text":"Add new deals for the specified proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals insert ... Required Scalar Argument <proposal-id> (string) proposalId for which deals need to be added. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddOrderDealsRequest: proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision-number=dolores The last known proposal revision number. update-action=gubergren Indicates an optional action to take on the proposal About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"marketplacedeals_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals insert ...","title":"Scopes"},{"location":"marketplacedeals_insert/#required-scalar-argument","text":"<proposal-id> (string) proposalId for which deals need to be added.","title":"Required Scalar Argument"},{"location":"marketplacedeals_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddOrderDealsRequest: proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision-number=dolores The last known proposal revision number. update-action=gubergren Indicates an optional action to take on the proposal","title":"Required Request Value"},{"location":"marketplacedeals_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"marketplacedeals_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacedeals_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacedeals_list/","text":"List all the deals for a given proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals list ... Required Scalar Argument <proposal-id> (string) The proposalId to get deals for. To search across all proposals specify order_id = '-' as part of the URL. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific deals. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"marketplacedeals_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals list ...","title":"Scopes"},{"location":"marketplacedeals_list/#required-scalar-argument","text":"<proposal-id> (string) The proposalId to get deals for. To search across all proposals specify order_id = '-' as part of the URL.","title":"Required Scalar Argument"},{"location":"marketplacedeals_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacedeals_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific deals.","title":"Optional Method Properties"},{"location":"marketplacedeals_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacedeals_update/","text":"Replaces all the deals in the proposal with the passed in deals Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals update ... Required Scalar Argument <proposal-id> (string) The proposalId to edit deals on. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: EditAllOrderDealsRequest: proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .proposal.billed-buyer account-id=et Adx account id of the buyer. ..buyer account-id=accusam Adx account id of the buyer. ..buyer-private-data reference-id=voluptua. No description provided. reference-payload=dolore No description provided. .. dbm-advertiser-ids=dolore IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=lorem What exchange will provide this inventory (readonly, except on create). is-renegotiating=true True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=sit Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=et The role of the last user that either updated the proposal or left a comment. (readonly) name=tempor The name for the proposal (updatable) negotiation-id=aliquyam Optional negotiation id if this proposal is a preferred deal proposal. originator-role=ipsum Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=et Optional private auction id if this proposal is a private auction proposal. proposal-id=sanctus The unique id of the proposal. (readonly). proposal-state=lorem The current state of the proposal. (readonly) revision-number=est The revision number for the proposal (readonly). revision-time-ms=sed The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=diam The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=dolores Optional sub-account id for the seller. ... proposal-revision-number=dolores The last known revision number for the proposal. update-action=et Indicates an optional action to take on the proposal About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"marketplacedeals_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacedeals update ...","title":"Scopes"},{"location":"marketplacedeals_update/#required-scalar-argument","text":"<proposal-id> (string) The proposalId to edit deals on.","title":"Required Scalar Argument"},{"location":"marketplacedeals_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: EditAllOrderDealsRequest: proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .proposal.billed-buyer account-id=et Adx account id of the buyer. ..buyer account-id=accusam Adx account id of the buyer. ..buyer-private-data reference-id=voluptua. No description provided. reference-payload=dolore No description provided. .. dbm-advertiser-ids=dolore IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=lorem What exchange will provide this inventory (readonly, except on create). is-renegotiating=true True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=sit Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=et The role of the last user that either updated the proposal or left a comment. (readonly) name=tempor The name for the proposal (updatable) negotiation-id=aliquyam Optional negotiation id if this proposal is a preferred deal proposal. originator-role=ipsum Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=et Optional private auction id if this proposal is a private auction proposal. proposal-id=sanctus The unique id of the proposal. (readonly). proposal-state=lorem The current state of the proposal. (readonly) revision-number=est The revision number for the proposal (readonly). revision-time-ms=sed The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=diam The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=dolores Optional sub-account id for the seller. ... proposal-revision-number=dolores The last known revision number for the proposal. update-action=et Indicates an optional action to take on the proposal","title":"Required Request Value"},{"location":"marketplacedeals_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"marketplacedeals_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacedeals_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacenotes_insert/","text":"Add notes to the proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacenotes insert ... Required Scalar Argument <proposal-id> (string) The proposalId to add notes for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddOrderNotesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"marketplacenotes_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacenotes insert ...","title":"Scopes"},{"location":"marketplacenotes_insert/#required-scalar-argument","text":"<proposal-id> (string) The proposalId to add notes for.","title":"Required Scalar Argument"},{"location":"marketplacenotes_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddOrderNotesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"marketplacenotes_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"marketplacenotes_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacenotes_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplacenotes_list/","text":"Get all the notes associated with a proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacenotes list ... Required Scalar Argument <proposal-id> (string) The proposalId to get notes for. To search across all proposals specify order_id = '-' as part of the URL. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific notes. To search the text contents of notes, please use syntax like \"WHERE note.note = \"foo\" or \"WHERE note.note LIKE \"%bar%\" Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"marketplacenotes_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplacenotes list ...","title":"Scopes"},{"location":"marketplacenotes_list/#required-scalar-argument","text":"<proposal-id> (string) The proposalId to get notes for. To search across all proposals specify order_id = '-' as part of the URL.","title":"Required Scalar Argument"},{"location":"marketplacenotes_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"marketplacenotes_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific notes. To search the text contents of notes, please use syntax like \"WHERE note.note = \"foo\" or \"WHERE note.note LIKE \"%bar%\"","title":"Optional Method Properties"},{"location":"marketplacenotes_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"marketplaceprivateauction_updateproposal/","text":"Update a given private auction proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplaceprivateauction updateproposal ... Required Scalar Argument <private-auction-id> (string) The private auction id to be updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpdatePrivateAuctionProposalRequest: external-deal-id: string note: creator-role: string deal-id: string kind: string note: string note-id: string proposal-id: string proposal-revision-number: string timestamp-ms: string proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-id=sed The externalDealId of the deal to be updated. note creator-role=no The role of the person (buyer/seller) creating the note. (readonly) deal-id=et Notes can optionally be associated with a deal. (readonly, except on create) kind=elitr Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#marketplaceNote\". note=sed The actual note to attach. (readonly, except on create) note-id=no The unique id for the note. (readonly) proposal-id=nonumy The proposalId that a note is attached to. (readonly) proposal-revision-number=at If the note is associated with a proposal revision number, then store that here. (readonly, except on create) timestamp-ms=sadipscing The timestamp (ms since epoch) that this note was created. (readonly) .. proposal-revision-number=aliquyam The current revision number of the proposal to be updated. update-action=dolores The proposed action on the private auction proposal. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Updateproposal"},{"location":"marketplaceprivateauction_updateproposal/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> marketplaceprivateauction updateproposal ...","title":"Scopes"},{"location":"marketplaceprivateauction_updateproposal/#required-scalar-argument","text":"<private-auction-id> (string) The private auction id to be updated.","title":"Required Scalar Argument"},{"location":"marketplaceprivateauction_updateproposal/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpdatePrivateAuctionProposalRequest: external-deal-id: string note: creator-role: string deal-id: string kind: string note: string note-id: string proposal-id: string proposal-revision-number: string timestamp-ms: string proposal-revision-number: string update-action: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-id=sed The externalDealId of the deal to be updated. note creator-role=no The role of the person (buyer/seller) creating the note. (readonly) deal-id=et Notes can optionally be associated with a deal. (readonly, except on create) kind=elitr Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#marketplaceNote\". note=sed The actual note to attach. (readonly, except on create) note-id=no The unique id for the note. (readonly) proposal-id=nonumy The proposalId that a note is attached to. (readonly) proposal-revision-number=at If the note is associated with a proposal revision number, then store that here. (readonly, except on create) timestamp-ms=sadipscing The timestamp (ms since epoch) that this note was created. (readonly) .. proposal-revision-number=aliquyam The current revision number of the proposal to be updated. update-action=dolores The proposed action on the private auction proposal.","title":"Required Request Value"},{"location":"marketplaceprivateauction_updateproposal/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"marketplaceprivateauction_updateproposal/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"performance-report_list/","text":"Retrieves the authenticated user's list of performance metrics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> performance-report list ... Required Scalar Arguments <account-id> (string) The account id to get the reports. <end-date-time> (string) The end time of the report in ISO 8601 timestamp format using UTC. <start-date-time> (string) The start time of the report in ISO 8601 timestamp format using UTC. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"performance-report_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> performance-report list ...","title":"Scopes"},{"location":"performance-report_list/#required-scalar-arguments","text":"<account-id> (string) The account id to get the reports. <end-date-time> (string) The end time of the report in ISO 8601 timestamp format using UTC. <start-date-time> (string) The start time of the report in ISO 8601 timestamp format using UTC.","title":"Required Scalar Arguments"},{"location":"performance-report_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"performance-report_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. If not set, the default is 100. Optional. -p page-token=string A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response. Optional.","title":"Optional Method Properties"},{"location":"performance-report_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_delete/","text":"Deletes an existing pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config delete ... Required Scalar Arguments <account-id> (string) The account id to delete the pretargeting config for. <config-id> (string) The specific id of the configuration to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"pretargeting-config_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config delete ...","title":"Scopes"},{"location":"pretargeting-config_delete/#required-scalar-arguments","text":"<account-id> (string) The account id to delete the pretargeting config for. <config-id> (string) The specific id of the configuration to delete.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_get/","text":"Gets a specific pretargeting configuration Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config get ... Required Scalar Arguments <account-id> (string) The account id to get the pretargeting config for. <config-id> (string) The specific id of the configuration to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"pretargeting-config_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config get ...","title":"Scopes"},{"location":"pretargeting-config_get/#required-scalar-arguments","text":"<account-id> (string) The account id to get the pretargeting config for. <config-id> (string) The specific id of the configuration to retrieve.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_insert/","text":"Inserts a new pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config insert ... Required Scalar Argument <account-id> (string) The account id to insert the pretargeting config for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=sadipscing The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=erat The config id; generated automatically. Leave this field blank for insert requests. config-name=aliquyam The name of the config. Must be unique. Required for all requests. creative-type=amet List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=est Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=et Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=sea Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=consetetur Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=consetetur Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=est The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=aliquyam Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=elitr The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=81 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=diam Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=est Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=sit Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=sed Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=eos Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=lorem Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=ea Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=stet Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=dolores Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"pretargeting-config_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config insert ...","title":"Scopes"},{"location":"pretargeting-config_insert/#required-scalar-argument","text":"<account-id> (string) The account id to insert the pretargeting config for.","title":"Required Scalar Argument"},{"location":"pretargeting-config_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=sadipscing The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=erat The config id; generated automatically. Leave this field blank for insert requests. config-name=aliquyam The name of the config. Must be unique. Required for all requests. creative-type=amet List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=est Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=et Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=sea Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=consetetur Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=consetetur Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=est The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=aliquyam Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=elitr The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=81 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=diam Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=est Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=sit Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=sed Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=eos Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=lorem Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=ea Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=stet Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=dolores Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_list/","text":"Retrieves a list of the authenticated user's pretargeting configurations. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config list ... Required Scalar Argument <account-id> (string) The account id to get the pretargeting configs for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"pretargeting-config_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config list ...","title":"Scopes"},{"location":"pretargeting-config_list/#required-scalar-argument","text":"<account-id> (string) The account id to get the pretargeting configs for.","title":"Required Scalar Argument"},{"location":"pretargeting-config_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_patch/","text":"Updates an existing pretargeting config. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config patch ... Required Scalar Arguments <account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=eos The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=et The config id; generated automatically. Leave this field blank for insert requests. config-name=sea The name of the config. Must be unique. Required for all requests. creative-type=et List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=at Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=dolore Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=eirmod Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=lorem Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=accusam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=erat The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=dolores Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=erat The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=28 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=sea Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=takimata Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=lorem Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=et Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=at Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=dolor Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=et Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=sit Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=erat Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"pretargeting-config_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config patch ...","title":"Scopes"},{"location":"pretargeting-config_patch/#required-scalar-arguments","text":"<account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=eos The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=et The config id; generated automatically. Leave this field blank for insert requests. config-name=sea The name of the config. Must be unique. Required for all requests. creative-type=et List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=at Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=dolore Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=eirmod Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=lorem Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=accusam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=true Whether this config is active. Required for all requests. kind=erat The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=dolores Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=erat The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=28 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=sea Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=takimata Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=lorem Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=et Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=at Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=dolor Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=et Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=sit Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=erat Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pretargeting-config_update/","text":"Updates an existing pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config update ... Required Scalar Arguments <account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=sea The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=nonumy The config id; generated automatically. Leave this field blank for insert requests. config-name=et The name of the config. Must be unique. Required for all requests. creative-type=gubergren List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=justo Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=sea Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=consetetur Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=sit Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=aliquyam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=false Whether this config is active. Required for all requests. kind=dolores The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=consetetur Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=gubergren The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=97 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=aliquyam Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=no Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=amet. Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=ipsum Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=lorem Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=accusam Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=gubergren Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=sadipscing Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=at Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"pretargeting-config_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pretargeting-config update ...","title":"Scopes"},{"location":"pretargeting-config_update/#required-scalar-arguments","text":"<account-id> (string) The account id to update the pretargeting config for. <config-id> (string) The specific id of the configuration to update.","title":"Required Scalar Arguments"},{"location":"pretargeting-config_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: billing-id: string config-id: string config-name: string creative-type: [string] excluded-content-labels: [string] excluded-geo-criteria-ids: [string] excluded-user-lists: [string] excluded-verticals: [string] geo-criteria-ids: [string] is-active: boolean kind: string languages: [string] maximum-qps: string minimum-viewability-decile: integer mobile-carriers: [string] mobile-devices: [string] mobile-operating-system-versions: [string] platforms: [string] supported-creative-attributes: [string] user-identifier-data-required: [string] user-lists: [string] vendor-types: [string] verticals: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-id=sea The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically. config-id=nonumy The config id; generated automatically. Leave this field blank for insert requests. config-name=et The name of the config. Must be unique. Required for all requests. creative-type=gubergren List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO. Each invocation of this argument appends the given value to the array. excluded-content-labels=justo Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. excluded-geo-criteria-ids=sea Requests containing any of these geo criteria ids will not match. Each invocation of this argument appends the given value to the array. excluded-user-lists=consetetur Requests containing any of these users list ids will not match. Each invocation of this argument appends the given value to the array. excluded-verticals=sit Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section. Each invocation of this argument appends the given value to the array. geo-criteria-ids=aliquyam Requests containing any of these geo criteria ids will match. Each invocation of this argument appends the given value to the array. is-active=false Whether this config is active. Required for all requests. kind=dolores The kind of the resource, i.e. \"adexchangebuyer#pretargetingConfig\". languages=consetetur Request containing any of these language codes will match. Each invocation of this argument appends the given value to the array. maximum-qps=gubergren The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed). minimum-viewability-decile=97 Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored. mobile-carriers=aliquyam Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-devices=no Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. mobile-operating-system-versions=amet. Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section. Each invocation of this argument appends the given value to the array. platforms=ipsum Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET. Each invocation of this argument appends the given value to the array. supported-creative-attributes=lorem Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. user-identifier-data-required=accusam Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA. Each invocation of this argument appends the given value to the array. user-lists=gubergren Requests containing any of these user list ids will match. Each invocation of this argument appends the given value to the array. vendor-types=sadipscing Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section. Each invocation of this argument appends the given value to the array. verticals=at Requests containing any of these vertical ids will match. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"pretargeting-config_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pretargeting-config_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pretargeting-config_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"products_get/","text":"Gets the requested product by id. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> products get ... Required Scalar Argument <product-id> (string) The id for the product to get the head revision for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"products_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> products get ...","title":"Scopes"},{"location":"products_get/#required-scalar-argument","text":"<product-id> (string) The id for the product to get the head revision for.","title":"Required Scalar Argument"},{"location":"products_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"products_search/","text":"Gets the requested product. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> products search ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string The pql query used to query for products. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Search"},{"location":"products_search/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> products search ...","title":"Scopes"},{"location":"products_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_search/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string The pql query used to query for products.","title":"Optional Method Properties"},{"location":"products_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_get/","text":"Get a proposal given its id Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals get ... Required Scalar Argument <proposal-id> (string) Id of the proposal to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"proposals_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals get ...","title":"Scopes"},{"location":"proposals_get/#required-scalar-argument","text":"<proposal-id> (string) Id of the proposal to retrieve.","title":"Required Scalar Argument"},{"location":"proposals_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"proposals_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_insert/","text":"Create the given list of proposals Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateOrdersRequest: web-property-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . web-property-code=sit Web property id of the seller creating these orders About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"proposals_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals insert ...","title":"Scopes"},{"location":"proposals_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateOrdersRequest: web-property-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . web-property-code=sit Web property id of the seller creating these orders","title":"Required Request Value"},{"location":"proposals_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"proposals_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"proposals_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_patch/","text":"Update the given proposal. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals patch ... Required Scalar Arguments <proposal-id> (string) The proposal id to update. <revision-number> (string) The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision. <update-action> (string) The proposed action to take on the proposal. This field is required and it must be set when updating a proposal. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=duo Adx account id of the buyer. ..buyer account-id=sit Adx account id of the buyer. ..buyer-private-data reference-id=magna No description provided. reference-payload=et No description provided. .. dbm-advertiser-ids=rebum. IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=true When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=no What exchange will provide this inventory (readonly, except on create). is-renegotiating=false True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=kasd Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=lorem The role of the last user that either updated the proposal or left a comment. (readonly) name=sanctus The name for the proposal (updatable) negotiation-id=nonumy Optional negotiation id if this proposal is a preferred deal proposal. originator-role=rebum. Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=tempor Optional private auction id if this proposal is a private auction proposal. proposal-id=dolore The unique id of the proposal. (readonly). proposal-state=eos The current state of the proposal. (readonly) revision-number=amet. The revision number for the proposal (readonly). revision-time-ms=dolore The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=amet The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=ut Optional sub-account id for the seller. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"proposals_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals patch ...","title":"Scopes"},{"location":"proposals_patch/#required-scalar-arguments","text":"<proposal-id> (string) The proposal id to update. <revision-number> (string) The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision. <update-action> (string) The proposed action to take on the proposal. This field is required and it must be set when updating a proposal.","title":"Required Scalar Arguments"},{"location":"proposals_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=duo Adx account id of the buyer. ..buyer account-id=sit Adx account id of the buyer. ..buyer-private-data reference-id=magna No description provided. reference-payload=et No description provided. .. dbm-advertiser-ids=rebum. IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=true When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=no What exchange will provide this inventory (readonly, except on create). is-renegotiating=false True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=kasd Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=lorem The role of the last user that either updated the proposal or left a comment. (readonly) name=sanctus The name for the proposal (updatable) negotiation-id=nonumy Optional negotiation id if this proposal is a preferred deal proposal. originator-role=rebum. Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=tempor Optional private auction id if this proposal is a private auction proposal. proposal-id=dolore The unique id of the proposal. (readonly). proposal-state=eos The current state of the proposal. (readonly) revision-number=amet. The revision number for the proposal (readonly). revision-time-ms=dolore The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=amet The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=ut Optional sub-account id for the seller.","title":"Required Request Value"},{"location":"proposals_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"proposals_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"proposals_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_search/","text":"Search for proposals using pql query Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals search ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific proposals. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Search"},{"location":"proposals_search/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals search ...","title":"Scopes"},{"location":"proposals_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"proposals_search/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pql-query=string Query string to retrieve specific proposals.","title":"Optional Method Properties"},{"location":"proposals_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_setupcomplete/","text":"Update the given proposal to indicate that setup has been completed. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals setupcomplete ... Required Scalar Argument <proposal-id> (string) The proposal id for which the setup is complete Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Setupcomplete"},{"location":"proposals_setupcomplete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals setupcomplete ...","title":"Scopes"},{"location":"proposals_setupcomplete/#required-scalar-argument","text":"<proposal-id> (string) The proposal id for which the setup is complete","title":"Required Scalar Argument"},{"location":"proposals_setupcomplete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"proposals_update/","text":"Update the given proposal Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals update ... Required Scalar Arguments <proposal-id> (string) The proposal id to update. <revision-number> (string) The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision. <update-action> (string) The proposed action to take on the proposal. This field is required and it must be set when updating a proposal. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=at Adx account id of the buyer. ..buyer account-id=sit Adx account id of the buyer. ..buyer-private-data reference-id=vero No description provided. reference-payload=duo No description provided. .. dbm-advertiser-ids=sadipscing IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=kasd What exchange will provide this inventory (readonly, except on create). is-renegotiating=false True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=sea Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=et The role of the last user that either updated the proposal or left a comment. (readonly) name=lorem The name for the proposal (updatable) negotiation-id=magna Optional negotiation id if this proposal is a preferred deal proposal. originator-role=takimata Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=rebum. Optional private auction id if this proposal is a private auction proposal. proposal-id=at The unique id of the proposal. (readonly). proposal-state=invidunt The current state of the proposal. (readonly) revision-number=clita The revision number for the proposal (readonly). revision-time-ms=stet The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=aliquyam The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=ut Optional sub-account id for the seller. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"proposals_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> proposals update ...","title":"Scopes"},{"location":"proposals_update/#required-scalar-arguments","text":"<proposal-id> (string) The proposal id to update. <revision-number> (string) The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision. <update-action> (string) The proposed action to take on the proposal. This field is required and it must be set when updating a proposal.","title":"Required Scalar Arguments"},{"location":"proposals_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string reference-payload: string dbm-advertiser-ids: [string] has-buyer-signed-off: boolean has-seller-signed-off: boolean inventory-source: string is-renegotiating: boolean is-setup-complete: boolean kind: string last-updater-or-commentor-role: string name: string negotiation-id: string originator-role: string private-auction-id: string proposal-id: string proposal-state: string revision-number: string revision-time-ms: string seller: account-id: string sub-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=at Adx account id of the buyer. ..buyer account-id=sit Adx account id of the buyer. ..buyer-private-data reference-id=vero No description provided. reference-payload=duo No description provided. .. dbm-advertiser-ids=sadipscing IDs of DBM advertisers permission to this proposal. Each invocation of this argument appends the given value to the array. has-buyer-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly) has-seller-signed-off=false When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly) inventory-source=kasd What exchange will provide this inventory (readonly, except on create). is-renegotiating=false True if the proposal is being renegotiated (readonly). is-setup-complete=true True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag. kind=sea Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\". last-updater-or-commentor-role=et The role of the last user that either updated the proposal or left a comment. (readonly) name=lorem The name for the proposal (updatable) negotiation-id=magna Optional negotiation id if this proposal is a preferred deal proposal. originator-role=takimata Indicates whether the buyer/seller created the proposal.(readonly) private-auction-id=rebum. Optional private auction id if this proposal is a private auction proposal. proposal-id=at The unique id of the proposal. (readonly). proposal-state=invidunt The current state of the proposal. (readonly) revision-number=clita The revision number for the proposal (readonly). revision-time-ms=stet The time (ms since epoch) when the proposal was last revised (readonly). seller account-id=aliquyam The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product. sub-account-id=ut Optional sub-account id for the seller.","title":"Required Request Value"},{"location":"proposals_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"proposals_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"proposals_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"pubprofiles_list/","text":"Gets the requested publisher profile(s) by publisher accountId. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pubprofiles list ... Required Scalar Argument <account-id> (integer) The accountId of the publisher to get profiles for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"pubprofiles_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer1d4 --scope <scope> pubprofiles list ...","title":"Scopes"},{"location":"pubprofiles_list/#required-scalar-argument","text":"<account-id> (integer) The accountId of the publisher to get profiles for.","title":"Required Scalar Argument"},{"location":"pubprofiles_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pubprofiles_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}