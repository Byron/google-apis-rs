initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["BindDeviceToGatewayRequest","Request for `BindDeviceToGateway`."],["BindDeviceToGatewayResponse","Response for `BindDeviceToGateway`."],["Binding","Associates `members` with a `role`."],["CloudIot","Central instance to access all CloudIot related resource activities"],["Device","The device resource."],["DeviceConfig","The device configuration. Eventually delivered to devices."],["DeviceCredential","A server-stored device credential used for authentication."],["DeviceRegistry","A container for a group of devices."],["DeviceState","The device state, as reported by the device."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["EventNotificationConfig","The configuration for forwarding telemetry events."],["Expr","Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."],["GatewayConfig","Gateway-related configuration and state."],["GetIamPolicyRequest","Request message for `GetIamPolicy` method."],["GetPolicyOptions","Encapsulates settings provided to GetIamPolicy."],["HttpConfig","The configuration of the HTTP bridge for a device registry."],["ListDeviceConfigVersionsResponse","Response for `ListDeviceConfigVersions`."],["ListDeviceRegistriesResponse","Response for `ListDeviceRegistries`."],["ListDeviceStatesResponse","Response for `ListDeviceStates`."],["ListDevicesResponse","Response for `ListDevices`."],["ModifyCloudToDeviceConfigRequest","Request for `ModifyCloudToDeviceConfig`."],["MqttConfig","The configuration of MQTT for a device registry."],["Policy","An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation. JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the IAM documentation."],["ProjectLocationRegistryBindDeviceToGatewayCall","Associates the device with the gateway."],["ProjectLocationRegistryCreateCall","Creates a device registry that contains devices."],["ProjectLocationRegistryDeleteCall","Deletes a device registry configuration."],["ProjectLocationRegistryDeviceConfigVersionListCall","Lists the last few versions of the device configuration in descending order (i.e.: newest first)."],["ProjectLocationRegistryDeviceCreateCall","Creates a device in a device registry."],["ProjectLocationRegistryDeviceDeleteCall","Deletes a device."],["ProjectLocationRegistryDeviceGetCall","Gets details about a device."],["ProjectLocationRegistryDeviceListCall","List devices in a device registry."],["ProjectLocationRegistryDeviceModifyCloudToDeviceConfigCall","Modifies the configuration for the device, which is eventually sent from the Cloud IoT Core servers. Returns the modified configuration version and its metadata."],["ProjectLocationRegistryDevicePatchCall","Updates a device."],["ProjectLocationRegistryDeviceSendCommandToDeviceCall","Sends a command to the specified device. In order for a device to be able to receive commands, it must: 1) be connected to Cloud IoT Core using the MQTT protocol, and 2) be subscribed to the group of MQTT topics specified by /devices/{device-id}/commands/#. This subscription will receive commands at the top-level topic /devices/{device-id}/commands as well as commands for subfolders, like /devices/{device-id}/commands/subfolder. Note that subscribing to specific subfolders is not supported. If the command could not be delivered to the device, this method will return an error; in particular, if the device is not subscribed, this method will return FAILED_PRECONDITION. Otherwise, this method will return OK. If the subscription is QoS 1, at least once delivery will be guaranteed; for QoS 0, no acknowledgment will be expected from the device."],["ProjectLocationRegistryDeviceStateListCall","Lists the last few versions of the device state in descending order (i.e.: newest first)."],["ProjectLocationRegistryGetCall","Gets a device registry configuration."],["ProjectLocationRegistryGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectLocationRegistryGroupDeviceListCall","List devices in a device registry."],["ProjectLocationRegistryGroupGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectLocationRegistryGroupSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectLocationRegistryGroupTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectLocationRegistryListCall","Lists device registries."],["ProjectLocationRegistryPatchCall","Updates a device registry configuration."],["ProjectLocationRegistrySetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectLocationRegistryTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectLocationRegistryUnbindDeviceFromGatewayCall","Deletes the association between the device and the gateway."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `CloudIot` hub."],["PublicKeyCertificate","A public key certificate format and data."],["PublicKeyCredential","A public key format and data."],["RegistryCredential","A server-stored registry credential used to validate device credentials."],["SendCommandToDeviceRequest","Request for `SendCommandToDevice`."],["SendCommandToDeviceResponse","Response for `SendCommandToDevice`."],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["StateNotificationConfig","The configuration for notification of new states received from the device."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."],["UnbindDeviceFromGatewayRequest","Request for `UnbindDeviceFromGateway`."],["UnbindDeviceFromGatewayResponse","Response for `UnbindDeviceFromGateway`."],["X509CertificateDetails","Details of an X.509 certificate. For informational purposes only."]]});