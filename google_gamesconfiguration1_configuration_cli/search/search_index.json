{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The gamesconfiguration1-configuration command-line interface (CLI) allows to use most features of the Google Games Configuration service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Games Configuration API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-gamesconfiguration1_configuration-cli Find the source code on github . Usage This documentation was generated from the Games Configuration API at revision 20240228 . The CLI is at version 5.0.4 . gamesconfiguration1-configuration [options] achievement-configurations delete <achievement-id> [-p <v>]... get <achievement-id> [-p <v>]... [-o <out>] insert <application-id> (-r <kv>)... [-p <v>]... [-o <out>] list <application-id> [-p <v>]... [-o <out>] update <achievement-id> (-r <kv>)... [-p <v>]... [-o <out>] leaderboard-configurations delete <leaderboard-id> [-p <v>]... get <leaderboard-id> [-p <v>]... [-o <out>] insert <application-id> (-r <kv>)... [-p <v>]... [-o <out>] list <application-id> [-p <v>]... [-o <out>] update <leaderboard-id> (-r <kv>)... [-p <v>]... [-o <out>] gamesconfiguration1-configuration --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with gamesconfiguration1-configuration- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/gamesconfiguration1-configuration-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/gamesconfiguration1-configuration-secret.json , assuming that the required gamesConfiguration API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. gamesconfiguration1-configuration --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-gamesconfiguration1_configuration-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Games Configuration API at revision 20240228 . The CLI is at version 5.0.4 . gamesconfiguration1-configuration [options] achievement-configurations delete <achievement-id> [-p <v>]... get <achievement-id> [-p <v>]... [-o <out>] insert <application-id> (-r <kv>)... [-p <v>]... [-o <out>] list <application-id> [-p <v>]... [-o <out>] update <achievement-id> (-r <kv>)... [-p <v>]... [-o <out>] leaderboard-configurations delete <leaderboard-id> [-p <v>]... get <leaderboard-id> [-p <v>]... [-o <out>] insert <application-id> (-r <kv>)... [-p <v>]... [-o <out>] list <application-id> [-p <v>]... [-o <out>] update <leaderboard-id> (-r <kv>)... [-p <v>]... [-o <out>] gamesconfiguration1-configuration --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with gamesconfiguration1-configuration- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/gamesconfiguration1-configuration-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/gamesconfiguration1-configuration-secret.json , assuming that the required gamesConfiguration API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. gamesconfiguration1-configuration --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"achievement-configurations_delete/","text":"Delete the achievement configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations delete ... Required Scalar Argument <achievement-id> (string) The ID of the achievement used by this method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"achievement-configurations_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations delete ...","title":"Scopes"},{"location":"achievement-configurations_delete/#required-scalar-argument","text":"<achievement-id> (string) The ID of the achievement used by this method.","title":"Required Scalar Argument"},{"location":"achievement-configurations_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"achievement-configurations_get/","text":"Retrieves the metadata of the achievement configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations get ... Required Scalar Argument <achievement-id> (string) The ID of the achievement used by this method. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"achievement-configurations_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations get ...","title":"Scopes"},{"location":"achievement-configurations_get/#required-scalar-argument","text":"<achievement-id> (string) The ID of the achievement used by this method.","title":"Required Scalar Argument"},{"location":"achievement-configurations_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"achievement-configurations_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"achievement-configurations_insert/","text":"Insert a new achievement configuration in this application. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations insert ... Required Scalar Argument <application-id> (string) The application ID from the Google Play developer console. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AchievementConfiguration: achievement-type: string draft: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer id: string initial-state: string kind: string published: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer steps-to-unlock: integer token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . achievement-type=et The type of the achievement. draft.description kind=magna Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=no The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=74 Point value for the achievement. sort-rank=93 The sort rank of this achievement. Writes to this field are ignored. .. id=sed The ID of the achievement. initial-state=amet. The initial state of the achievement. kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfiguration . published.description kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=duo The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=gubergren Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=50 Point value for the achievement. sort-rank=89 The sort rank of this achievement. Writes to this field are ignored. .. steps-to-unlock=26 Steps to unlock. Only applicable to incremental achievements. token=dolor The token for this resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"achievement-configurations_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations insert ...","title":"Scopes"},{"location":"achievement-configurations_insert/#required-scalar-argument","text":"<application-id> (string) The application ID from the Google Play developer console.","title":"Required Scalar Argument"},{"location":"achievement-configurations_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AchievementConfiguration: achievement-type: string draft: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer id: string initial-state: string kind: string published: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer steps-to-unlock: integer token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . achievement-type=et The type of the achievement. draft.description kind=magna Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=no The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=74 Point value for the achievement. sort-rank=93 The sort rank of this achievement. Writes to this field are ignored. .. id=sed The ID of the achievement. initial-state=amet. The initial state of the achievement. kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfiguration . published.description kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=duo The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=gubergren Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=50 Point value for the achievement. sort-rank=89 The sort rank of this achievement. Writes to this field are ignored. .. steps-to-unlock=26 Steps to unlock. Only applicable to incremental achievements. token=dolor The token for this resource.","title":"Required Request Value"},{"location":"achievement-configurations_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"achievement-configurations_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"achievement-configurations_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"achievement-configurations_list/","text":"Returns a list of the achievement configurations in this application. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations list ... Required Scalar Argument <application-id> (string) The application ID from the Google Play developer console. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified maxResults . -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"achievement-configurations_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations list ...","title":"Scopes"},{"location":"achievement-configurations_list/#required-scalar-argument","text":"<application-id> (string) The application ID from the Google Play developer console.","title":"Required Scalar Argument"},{"location":"achievement-configurations_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"achievement-configurations_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified maxResults . -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"achievement-configurations_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"achievement-configurations_update/","text":"Update the metadata of the achievement configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations update ... Required Scalar Argument <achievement-id> (string) The ID of the achievement used by this method. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AchievementConfiguration: achievement-type: string draft: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer id: string initial-state: string kind: string published: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer steps-to-unlock: integer token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . achievement-type=ea The type of the achievement. draft.description kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=invidunt The icon url of this achievement. Writes to this field are ignored. kind=amet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=duo Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=51 Point value for the achievement. sort-rank=8 The sort rank of this achievement. Writes to this field are ignored. .. id=ut The ID of the achievement. initial-state=gubergren The initial state of the achievement. kind=rebum. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfiguration . published.description kind=est Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=ipsum The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=est Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=39 Point value for the achievement. sort-rank=84 The sort rank of this achievement. Writes to this field are ignored. .. steps-to-unlock=2 Steps to unlock. Only applicable to incremental achievements. token=lorem The token for this resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"achievement-configurations_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> achievement-configurations update ...","title":"Scopes"},{"location":"achievement-configurations_update/#required-scalar-argument","text":"<achievement-id> (string) The ID of the achievement used by this method.","title":"Required Scalar Argument"},{"location":"achievement-configurations_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AchievementConfiguration: achievement-type: string draft: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer id: string initial-state: string kind: string published: description: kind: string icon-url: string kind: string name: kind: string point-value: integer sort-rank: integer steps-to-unlock: integer token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . achievement-type=ea The type of the achievement. draft.description kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=invidunt The icon url of this achievement. Writes to this field are ignored. kind=amet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=duo Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=51 Point value for the achievement. sort-rank=8 The sort rank of this achievement. Writes to this field are ignored. .. id=ut The ID of the achievement. initial-state=gubergren The initial state of the achievement. kind=rebum. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfiguration . published.description kind=est Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. icon-url=ipsum The icon url of this achievement. Writes to this field are ignored. kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#achievementConfigurationDetail . name kind=est Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .. point-value=39 Point value for the achievement. sort-rank=84 The sort rank of this achievement. Writes to this field are ignored. .. steps-to-unlock=2 Steps to unlock. Only applicable to incremental achievements. token=lorem The token for this resource.","title":"Required Request Value"},{"location":"achievement-configurations_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"achievement-configurations_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"achievement-configurations_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leaderboard-configurations_delete/","text":"Delete the leaderboard configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations delete ... Required Scalar Argument <leaderboard-id> (string) The ID of the leaderboard. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"leaderboard-configurations_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations delete ...","title":"Scopes"},{"location":"leaderboard-configurations_delete/#required-scalar-argument","text":"<leaderboard-id> (string) The ID of the leaderboard.","title":"Required Scalar Argument"},{"location":"leaderboard-configurations_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leaderboard-configurations_get/","text":"Retrieves the metadata of the leaderboard configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations get ... Required Scalar Argument <leaderboard-id> (string) The ID of the leaderboard. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"leaderboard-configurations_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations get ...","title":"Scopes"},{"location":"leaderboard-configurations_get/#required-scalar-argument","text":"<leaderboard-id> (string) The ID of the leaderboard.","title":"Required Scalar Argument"},{"location":"leaderboard-configurations_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"leaderboard-configurations_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leaderboard-configurations_insert/","text":"Insert a new leaderboard configuration in this application. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations insert ... Required Scalar Argument <application-id> (string) The application ID from the Google Play developer console. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LeaderboardConfiguration: draft: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer id: string kind: string published: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer score-max: string score-min: string score-order: string token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .draft icon-url=eos The icon url of this leaderboard. Writes to this field are ignored. kind=labore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=duo The curreny code string. Only used for CURRENCY format type. num-decimal-places=21 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=no The formatting for the number. suffix.few kind=stet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=kasd Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=25 The sort rank of this leaderboard. Writes to this field are ignored. .. id=erat The ID of the leaderboard. kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfiguration . published icon-url=duo The icon url of this leaderboard. Writes to this field are ignored. kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=voluptua. The curreny code string. Only used for CURRENCY format type. num-decimal-places=99 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=consetetur The formatting for the number. suffix.few kind=diam Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=dolor Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=sadipscing Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=stet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=2 The sort rank of this leaderboard. Writes to this field are ignored. .. score-max=duo Maximum score that can be posted to this leaderboard. score-min=vero Minimum score that can be posted to this leaderboard. score-order=vero No description provided. token=invidunt The token for this resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"leaderboard-configurations_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations insert ...","title":"Scopes"},{"location":"leaderboard-configurations_insert/#required-scalar-argument","text":"<application-id> (string) The application ID from the Google Play developer console.","title":"Required Scalar Argument"},{"location":"leaderboard-configurations_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LeaderboardConfiguration: draft: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer id: string kind: string published: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer score-max: string score-min: string score-order: string token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .draft icon-url=eos The icon url of this leaderboard. Writes to this field are ignored. kind=labore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=duo The curreny code string. Only used for CURRENCY format type. num-decimal-places=21 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=no The formatting for the number. suffix.few kind=stet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=kasd Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=25 The sort rank of this leaderboard. Writes to this field are ignored. .. id=erat The ID of the leaderboard. kind=sed Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfiguration . published icon-url=duo The icon url of this leaderboard. Writes to this field are ignored. kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=voluptua. The curreny code string. Only used for CURRENCY format type. num-decimal-places=99 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=consetetur The formatting for the number. suffix.few kind=diam Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=dolor Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=sadipscing Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=stet Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=2 The sort rank of this leaderboard. Writes to this field are ignored. .. score-max=duo Maximum score that can be posted to this leaderboard. score-min=vero Minimum score that can be posted to this leaderboard. score-order=vero No description provided. token=invidunt The token for this resource.","title":"Required Request Value"},{"location":"leaderboard-configurations_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"leaderboard-configurations_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"leaderboard-configurations_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leaderboard-configurations_list/","text":"Returns a list of the leaderboard configurations in this application. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations list ... Required Scalar Argument <application-id> (string) The application ID from the Google Play developer console. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified maxResults . -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"leaderboard-configurations_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations list ...","title":"Scopes"},{"location":"leaderboard-configurations_list/#required-scalar-argument","text":"<application-id> (string) The application ID from the Google Play developer console.","title":"Required Scalar Argument"},{"location":"leaderboard-configurations_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"leaderboard-configurations_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified maxResults . -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"leaderboard-configurations_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leaderboard-configurations_update/","text":"Update the metadata of the leaderboard configuration with the given ID. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations update ... Required Scalar Argument <leaderboard-id> (string) The ID of the leaderboard. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LeaderboardConfiguration: draft: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer id: string kind: string published: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer score-max: string score-min: string score-order: string token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .draft icon-url=stet The icon url of this leaderboard. Writes to this field are ignored. kind=vero Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=elitr Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=lorem The curreny code string. Only used for CURRENCY format type. num-decimal-places=72 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=no The formatting for the number. suffix.few kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=accusam Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=consetetur Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=70 The sort rank of this leaderboard. Writes to this field are ignored. .. id=consetetur The ID of the leaderboard. kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfiguration . published icon-url=sed The icon url of this leaderboard. Writes to this field are ignored. kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=dolores Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=gubergren The curreny code string. Only used for CURRENCY format type. num-decimal-places=27 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=accusam The formatting for the number. suffix.few kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=84 The sort rank of this leaderboard. Writes to this field are ignored. .. score-max=sadipscing Maximum score that can be posted to this leaderboard. score-min=lorem Minimum score that can be posted to this leaderboard. score-order=invidunt No description provided. token=no The token for this resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"leaderboard-configurations_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: gamesconfiguration1-configuration --scope <scope> leaderboard-configurations update ...","title":"Scopes"},{"location":"leaderboard-configurations_update/#required-scalar-argument","text":"<leaderboard-id> (string) The ID of the leaderboard.","title":"Required Scalar Argument"},{"location":"leaderboard-configurations_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LeaderboardConfiguration: draft: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer id: string kind: string published: icon-url: string kind: string name: kind: string score-format: currency-code: string num-decimal-places: integer number-format-type: string suffix: few: kind: string many: kind: string one: kind: string other: kind: string two: kind: string zero: kind: string sort-rank: integer score-max: string score-min: string score-order: string token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .draft icon-url=stet The icon url of this leaderboard. Writes to this field are ignored. kind=vero Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=elitr Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=lorem The curreny code string. Only used for CURRENCY format type. num-decimal-places=72 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=no The formatting for the number. suffix.few kind=ipsum Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=accusam Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=consetetur Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=et Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=70 The sort rank of this leaderboard. Writes to this field are ignored. .. id=consetetur The ID of the leaderboard. kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfiguration . published icon-url=sed The icon url of this leaderboard. Writes to this field are ignored. kind=takimata Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#leaderboardConfigurationDetail . name kind=dolores Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..score-format currency-code=gubergren The curreny code string. Only used for CURRENCY format type. num-decimal-places=27 The number of decimal places for number. Only used for NUMERIC format type. number-format-type=accusam The formatting for the number. suffix.few kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..many kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..one kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..other kind=dolore Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..two kind=voluptua. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . ..zero kind=amet. Uniquely identifies the type of this resource. Value is always the fixed string gamesConfiguration#localizedStringBundle . .... sort-rank=84 The sort rank of this leaderboard. Writes to this field are ignored. .. score-max=sadipscing Maximum score that can be posted to this leaderboard. score-min=lorem Minimum score that can be posted to this leaderboard. score-order=invidunt No description provided. token=no The token for this resource.","title":"Required Request Value"},{"location":"leaderboard-configurations_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"leaderboard-configurations_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"leaderboard-configurations_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}