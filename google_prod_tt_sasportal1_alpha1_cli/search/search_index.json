{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The prod-tt-sasportal1-alpha1 command-line interface (CLI) allows to use most features of the Google SAS Portal Testing service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the SAS Portal Testing API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-prod_tt_sasportal1_alpha1-cli Find the source code on github . Usage This documentation was generated from the SAS Portal Testing API at revision 20240226 . The CLI is at version 5.0.4 . prod-tt-sasportal1-alpha1 [options] customers deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-delete <name> [-p <v>]... [-o <out>] deployments-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-list <parent> [-p <v>]... [-o <out>] deployments-get <name> [-p <v>]... [-o <out>] deployments-list <parent> [-p <v>]... [-o <out>] deployments-move <name> (-r <kv>)... [-p <v>]... [-o <out>] deployments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-list <parent> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-gcp-project-deployments [-p <v>]... [-o <out>] list-legacy-organizations [-p <v>]... [-o <out>] migrate-organization (-r <kv>)... [-p <v>]... [-o <out>] nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-delete <name> [-p <v>]... [-o <out>] nodes-deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-deployments-list <parent> [-p <v>]... [-o <out>] nodes-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-list <parent> [-p <v>]... [-o <out>] nodes-get <name> [-p <v>]... [-o <out>] nodes-list <parent> [-p <v>]... [-o <out>] nodes-move <name> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-list <parent> [-p <v>]... [-o <out>] nodes-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] patch <name> (-r <kv>)... [-p <v>]... [-o <out>] provision-deployment (-r <kv>)... [-p <v>]... [-o <out>] setup-sas-analytics (-r <kv>)... [-p <v>]... [-o <out>] deployments devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] installer generate-secret (-r <kv>)... [-p <v>]... [-o <out>] validate (-r <kv>)... [-p <v>]... [-o <out>] nodes deployments-delete <name> [-p <v>]... [-o <out>] deployments-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-list <parent> [-p <v>]... [-o <out>] deployments-get <name> [-p <v>]... [-o <out>] deployments-list <parent> [-p <v>]... [-o <out>] deployments-move <name> (-r <kv>)... [-p <v>]... [-o <out>] deployments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-list <parent> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-delete <name> [-p <v>]... [-o <out>] nodes-deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-deployments-list <parent> [-p <v>]... [-o <out>] nodes-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-list <parent> [-p <v>]... [-o <out>] nodes-get <name> [-p <v>]... [-o <out>] nodes-list <parent> [-p <v>]... [-o <out>] nodes-move <name> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-list <parent> [-p <v>]... [-o <out>] nodes-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] policies get (-r <kv>)... [-p <v>]... [-o <out>] set (-r <kv>)... [-p <v>]... [-o <out>] test (-r <kv>)... [-p <v>]... [-o <out>] prod-tt-sasportal1-alpha1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with prod-tt-sasportal1-alpha1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/prod-tt-sasportal1-alpha1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/prod-tt-sasportal1-alpha1-secret.json , assuming that the required prod_tt_sasportal API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. prod-tt-sasportal1-alpha1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-prod_tt_sasportal1_alpha1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the SAS Portal Testing API at revision 20240226 . The CLI is at version 5.0.4 . prod-tt-sasportal1-alpha1 [options] customers deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-delete <name> [-p <v>]... [-o <out>] deployments-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-list <parent> [-p <v>]... [-o <out>] deployments-get <name> [-p <v>]... [-o <out>] deployments-list <parent> [-p <v>]... [-o <out>] deployments-move <name> (-r <kv>)... [-p <v>]... [-o <out>] deployments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-list <parent> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-gcp-project-deployments [-p <v>]... [-o <out>] list-legacy-organizations [-p <v>]... [-o <out>] migrate-organization (-r <kv>)... [-p <v>]... [-o <out>] nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-delete <name> [-p <v>]... [-o <out>] nodes-deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-deployments-list <parent> [-p <v>]... [-o <out>] nodes-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-list <parent> [-p <v>]... [-o <out>] nodes-get <name> [-p <v>]... [-o <out>] nodes-list <parent> [-p <v>]... [-o <out>] nodes-move <name> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-list <parent> [-p <v>]... [-o <out>] nodes-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] patch <name> (-r <kv>)... [-p <v>]... [-o <out>] provision-deployment (-r <kv>)... [-p <v>]... [-o <out>] setup-sas-analytics (-r <kv>)... [-p <v>]... [-o <out>] deployments devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] installer generate-secret (-r <kv>)... [-p <v>]... [-o <out>] validate (-r <kv>)... [-p <v>]... [-o <out>] nodes deployments-delete <name> [-p <v>]... [-o <out>] deployments-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] deployments-devices-list <parent> [-p <v>]... [-o <out>] deployments-get <name> [-p <v>]... [-o <out>] deployments-list <parent> [-p <v>]... [-o <out>] deployments-move <name> (-r <kv>)... [-p <v>]... [-o <out>] deployments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] devices-delete <name> [-p <v>]... [-o <out>] devices-get <name> [-p <v>]... [-o <out>] devices-list <parent> [-p <v>]... [-o <out>] devices-move <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-sign-device <name> (-r <kv>)... [-p <v>]... [-o <out>] devices-update-signed <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-delete <name> [-p <v>]... [-o <out>] nodes-deployments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-deployments-list <parent> [-p <v>]... [-o <out>] nodes-devices-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-create-signed <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-devices-list <parent> [-p <v>]... [-o <out>] nodes-get <name> [-p <v>]... [-o <out>] nodes-list <parent> [-p <v>]... [-o <out>] nodes-move <name> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] nodes-nodes-list <parent> [-p <v>]... [-o <out>] nodes-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] policies get (-r <kv>)... [-p <v>]... [-o <out>] set (-r <kv>)... [-p <v>]... [-o <out>] test (-r <kv>)... [-p <v>]... [-o <out>] prod-tt-sasportal1-alpha1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with prod-tt-sasportal1-alpha1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/prod-tt-sasportal1-alpha1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/prod-tt-sasportal1-alpha1-secret.json , assuming that the required prod_tt_sasportal API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. prod-tt-sasportal1-alpha1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"customers_deployments-create/","text":"Creates a new deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the deployment is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The deployment's display name. frns=magna Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=no Output only. Resource name. sas-user-ids=ipsum User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Create"},{"location":"customers_deployments-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-create ...","title":"Scopes"},{"location":"customers_deployments-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the deployment is to be created.","title":"Required Scalar Argument"},{"location":"customers_deployments-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The deployment's display name. frns=magna Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=no Output only. Resource name. sas-user-ids=ipsum User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_deployments-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_deployments-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-delete/","text":"Deletes a deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-delete ... Required Scalar Argument <name> (string) Required. The name of the deployment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Delete"},{"location":"customers_deployments-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-delete ...","title":"Scopes"},{"location":"customers_deployments-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment.","title":"Required Scalar Argument"},{"location":"customers_deployments-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=erat Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=consetetur Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices Create Signed"},{"location":"customers_deployments-devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-create-signed ...","title":"Scopes"},{"location":"customers_deployments-devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_deployments-devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=erat Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=consetetur Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"customers_deployments-devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_deployments-devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=voluptua. Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=at Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sanctus The call sign of the device operator. category=sed FCC category of the device. installation-params antenna-azimuth=99 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=42 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=49 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=81 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=ipsum If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=50 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.9922470725858205 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eos Specifies how the height is measured. horizontal-accuracy=0.7615363125225725 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.1092883976212714 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8204376297831348 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.39873905405496446 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=ut Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=gubergren The firmware version of the device. hardware-version=rebum. The hardware version of the device. name=est The name of the device model. software-version=ipsum The software version of the device. vendor=ipsum The name of the device vendor. .. state=est State of the configuration. update-time=gubergren Output only. The last time the device configuration was edited. user-id=ea The identifier of a device user. ..device-metadata antenna-model=dolor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=lorem Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=eos Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=duo CPI who signed the validation. latitude=0.9575633866430626 Device latitude that's associated with the validation. longitude=0.7957202632117738 Device longitude that's associated with the validation. state=no State of the NRQZ validation info. ... display-name=stet Device display name. fcc-id=kasd The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=et Output only. The resource path name. preloaded-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=et The call sign of the device operator. category=vero FCC category of the device. installation-params antenna-azimuth=70 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=8 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=81 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=67 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=et If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=9 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.40747000249106957 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=et Specifies how the height is measured. horizontal-accuracy=0.901889097837698 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6755988748158552 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.6349978834153693 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.1970220513983837 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=vero Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=elitr The firmware version of the device. hardware-version=lorem The hardware version of the device. name=diam The name of the device model. software-version=no The software version of the device. vendor=ipsum The name of the device vendor. .. state=accusam State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. .. serial-number=voluptua. A serial number assigned to the device by the device manufacturer. state=et Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices Create"},{"location":"customers_deployments-devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-create ...","title":"Scopes"},{"location":"customers_deployments-devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_deployments-devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=voluptua. Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=at Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sanctus The call sign of the device operator. category=sed FCC category of the device. installation-params antenna-azimuth=99 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=42 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=49 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=81 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=ipsum If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=50 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.9922470725858205 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eos Specifies how the height is measured. horizontal-accuracy=0.7615363125225725 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.1092883976212714 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8204376297831348 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.39873905405496446 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=ut Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=gubergren The firmware version of the device. hardware-version=rebum. The hardware version of the device. name=est The name of the device model. software-version=ipsum The software version of the device. vendor=ipsum The name of the device vendor. .. state=est State of the configuration. update-time=gubergren Output only. The last time the device configuration was edited. user-id=ea The identifier of a device user. ..device-metadata antenna-model=dolor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=lorem Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=eos Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=duo CPI who signed the validation. latitude=0.9575633866430626 Device latitude that's associated with the validation. longitude=0.7957202632117738 Device longitude that's associated with the validation. state=no State of the NRQZ validation info. ... display-name=stet Device display name. fcc-id=kasd The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=et Output only. The resource path name. preloaded-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=et The call sign of the device operator. category=vero FCC category of the device. installation-params antenna-azimuth=70 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=8 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=81 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=67 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=et If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=9 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.40747000249106957 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=et Specifies how the height is measured. horizontal-accuracy=0.901889097837698 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6755988748158552 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.6349978834153693 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.1970220513983837 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=vero Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=elitr The firmware version of the device. hardware-version=lorem The hardware version of the device. name=diam The name of the device model. software-version=no The software version of the device. vendor=ipsum The name of the device vendor. .. state=accusam State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. .. serial-number=voluptua. A serial number assigned to the device by the device manufacturer. state=et Output only. Device state.","title":"Required Request Value"},{"location":"customers_deployments-devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_deployments-devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices List"},{"location":"customers_deployments-devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-devices-list ...","title":"Scopes"},{"location":"customers_deployments-devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_deployments-devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_deployments-devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-get/","text":"Returns a requested deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-get ... Required Scalar Argument <name> (string) Required. The name of the deployment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Get"},{"location":"customers_deployments-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-get ...","title":"Scopes"},{"location":"customers_deployments-get/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment.","title":"Required Scalar Argument"},{"location":"customers_deployments-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-list/","text":"Lists deployments. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments List"},{"location":"customers_deployments-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-list ...","title":"Scopes"},{"location":"customers_deployments-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.","title":"Required Scalar Argument"},{"location":"customers_deployments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_deployments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-move/","text":"Moves a deployment under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-move ... Required Scalar Argument <name> (string) Required. The name of the deployment to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeploymentRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=amet. Required. The name of the new parent resource node or customer to reparent the deployment under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Move"},{"location":"customers_deployments-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-move ...","title":"Scopes"},{"location":"customers_deployments-move/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment to move.","title":"Required Scalar Argument"},{"location":"customers_deployments-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeploymentRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=amet. Required. The name of the new parent resource node or customer to reparent the deployment under.","title":"Required Request Value"},{"location":"customers_deployments-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_deployments-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_deployments-patch/","text":"Updates an existing deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-patch ... Required Scalar Argument <name> (string) Output only. Resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sed The deployment's display name. frns=takimata Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=dolores Output only. Resource name. sas-user-ids=gubergren User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Patch"},{"location":"customers_deployments-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers deployments-patch ...","title":"Scopes"},{"location":"customers_deployments-patch/#required-scalar-argument","text":"<name> (string) Output only. Resource name.","title":"Required Scalar Argument"},{"location":"customers_deployments-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sed The deployment's display name. frns=takimata Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=dolores Output only. Resource name. sas-user-ids=gubergren User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_deployments-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_deployments-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_deployments-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"customers_deployments-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=sit Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=erat Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Create Signed"},{"location":"customers_devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-create-signed ...","title":"Scopes"},{"location":"customers_devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=sit Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=erat Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"customers_devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=et Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=accusam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=voluptua. The call sign of the device operator. category=dolore FCC category of the device. installation-params antenna-azimuth=67 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=67 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=23 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=99 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=ea If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=95 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.4946595631810975 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=est Specifies how the height is measured. horizontal-accuracy=0.583760056310784 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.8049890363387713 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4875873367661776 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.7521809909805838 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=est Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=diam The hardware version of the device. name=dolores The name of the device model. software-version=dolores The software version of the device. vendor=et The name of the device vendor. .. state=sed State of the configuration. update-time=no Output only. The last time the device configuration was edited. user-id=et The identifier of a device user. ..device-metadata antenna-model=elitr If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=sed Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=no Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=sadipscing CPI who signed the validation. latitude=0.9526665772529762 Device latitude that's associated with the validation. longitude=0.8335259873647095 Device longitude that's associated with the validation. state=sadipscing State of the NRQZ validation info. ... display-name=erat Device display name. fcc-id=aliquyam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=amet Output only. The resource path name. preloaded-config.air-interface radio-technology=est Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sea The call sign of the device operator. category=consetetur FCC category of the device. installation-params antenna-azimuth=55 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=36 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=94 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=19 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=elitr If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=44 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.38044318607754446 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eos Specifies how the height is measured. horizontal-accuracy=0.3524215642896459 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7173775897454667 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.19152174246409814 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.48406645202544263 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=erat Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolores The firmware version of the device. hardware-version=erat The hardware version of the device. name=accusam The name of the device model. software-version=sea The software version of the device. vendor=takimata The name of the device vendor. .. state=lorem State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=at The identifier of a device user. .. serial-number=dolor A serial number assigned to the device by the device manufacturer. state=et Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Create"},{"location":"customers_devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-create ...","title":"Scopes"},{"location":"customers_devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=et Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=accusam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=voluptua. The call sign of the device operator. category=dolore FCC category of the device. installation-params antenna-azimuth=67 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=67 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=23 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=99 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=ea If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=95 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.4946595631810975 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=est Specifies how the height is measured. horizontal-accuracy=0.583760056310784 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.8049890363387713 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4875873367661776 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.7521809909805838 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=est Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=diam The hardware version of the device. name=dolores The name of the device model. software-version=dolores The software version of the device. vendor=et The name of the device vendor. .. state=sed State of the configuration. update-time=no Output only. The last time the device configuration was edited. user-id=et The identifier of a device user. ..device-metadata antenna-model=elitr If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=sed Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=no Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=sadipscing CPI who signed the validation. latitude=0.9526665772529762 Device latitude that's associated with the validation. longitude=0.8335259873647095 Device longitude that's associated with the validation. state=sadipscing State of the NRQZ validation info. ... display-name=erat Device display name. fcc-id=aliquyam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=amet Output only. The resource path name. preloaded-config.air-interface radio-technology=est Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sea The call sign of the device operator. category=consetetur FCC category of the device. installation-params antenna-azimuth=55 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=36 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=94 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=19 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=elitr If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=44 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.38044318607754446 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eos Specifies how the height is measured. horizontal-accuracy=0.3524215642896459 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7173775897454667 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.19152174246409814 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.48406645202544263 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=erat Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolores The firmware version of the device. hardware-version=erat The hardware version of the device. name=accusam The name of the device model. software-version=sea The software version of the device. vendor=takimata The name of the device vendor. .. state=lorem State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=at The identifier of a device user. .. serial-number=dolor A serial number assigned to the device by the device manufacturer. state=et Output only. Device state.","title":"Required Request Value"},{"location":"customers_devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-delete/","text":"Deletes a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-delete ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Delete"},{"location":"customers_devices-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-delete ...","title":"Scopes"},{"location":"customers_devices-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"customers_devices-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-get/","text":"Gets details about a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-get ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Get"},{"location":"customers_devices-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-get ...","title":"Scopes"},{"location":"customers_devices-get/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"customers_devices-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices List"},{"location":"customers_devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-list ...","title":"Scopes"},{"location":"customers_devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-move/","text":"Moves a device under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-move ... Required Scalar Argument <name> (string) Required. The name of the device to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=sea Required. The name of the new parent resource node or customer to reparent the device under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Move"},{"location":"customers_devices-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-move ...","title":"Scopes"},{"location":"customers_devices-move/#required-scalar-argument","text":"<name> (string) Required. The name of the device to move.","title":"Required Scalar Argument"},{"location":"customers_devices-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=sea Required. The name of the new parent resource node or customer to reparent the device under.","title":"Required Request Value"},{"location":"customers_devices-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-patch/","text":"Updates a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-patch ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=nonumy Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=gubergren The call sign of the device operator. category=justo FCC category of the device. installation-params antenna-azimuth=41 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=5 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=3 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=69 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=eos If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=82 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.43748262753292944 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=dolor Specifies how the height is measured. horizontal-accuracy=0.9429759678190598 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7808014184415061 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8739964616201387 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.22509478715997322 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sadipscing Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=at The firmware version of the device. hardware-version=sit The hardware version of the device. name=duo The name of the device model. software-version=sit The software version of the device. vendor=magna The name of the device vendor. .. state=et State of the configuration. update-time=rebum. Output only. The last time the device configuration was edited. user-id=dolor The identifier of a device user. ..device-metadata antenna-model=lorem If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=justo Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=amet. Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=kasd CPI who signed the validation. latitude=0.002878012824790832 Device latitude that's associated with the validation. longitude=0.08578625948176588 Device longitude that's associated with the validation. state=rebum. State of the NRQZ validation info. ... display-name=tempor Device display name. fcc-id=dolore The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=eos Output only. The resource path name. preloaded-config.air-interface radio-technology=amet. Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=dolore Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=amet The call sign of the device operator. category=ut FCC category of the device. installation-params antenna-azimuth=74 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=48 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=25 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=81 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sadipscing If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=85 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.24302571491372083 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sadipscing Specifies how the height is measured. horizontal-accuracy=0.49164260022944106 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.35565520476526236 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3283916781018025 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.2767666248974914 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=clita Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=stet The firmware version of the device. hardware-version=aliquyam The hardware version of the device. name=ut The name of the device model. software-version=sit The software version of the device. vendor=vero The name of the device vendor. .. state=rebum. State of the configuration. update-time=dolores Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. .. serial-number=dolores A serial number assigned to the device by the device manufacturer. state=sed Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Patch"},{"location":"customers_devices-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-patch ...","title":"Scopes"},{"location":"customers_devices-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"customers_devices-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=nonumy Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=gubergren The call sign of the device operator. category=justo FCC category of the device. installation-params antenna-azimuth=41 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=5 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=3 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=69 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=eos If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=82 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.43748262753292944 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=dolor Specifies how the height is measured. horizontal-accuracy=0.9429759678190598 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7808014184415061 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8739964616201387 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.22509478715997322 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sadipscing Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=at The firmware version of the device. hardware-version=sit The hardware version of the device. name=duo The name of the device model. software-version=sit The software version of the device. vendor=magna The name of the device vendor. .. state=et State of the configuration. update-time=rebum. Output only. The last time the device configuration was edited. user-id=dolor The identifier of a device user. ..device-metadata antenna-model=lorem If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=justo Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=amet. Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=kasd CPI who signed the validation. latitude=0.002878012824790832 Device latitude that's associated with the validation. longitude=0.08578625948176588 Device longitude that's associated with the validation. state=rebum. State of the NRQZ validation info. ... display-name=tempor Device display name. fcc-id=dolore The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=eos Output only. The resource path name. preloaded-config.air-interface radio-technology=amet. Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=dolore Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=amet The call sign of the device operator. category=ut FCC category of the device. installation-params antenna-azimuth=74 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=48 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=25 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=81 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sadipscing If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=85 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.24302571491372083 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sadipscing Specifies how the height is measured. horizontal-accuracy=0.49164260022944106 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.35565520476526236 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3283916781018025 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.2767666248974914 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=clita Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=stet The firmware version of the device. hardware-version=aliquyam The hardware version of the device. name=ut The name of the device model. software-version=sit The software version of the device. vendor=vero The name of the device vendor. .. state=rebum. State of the configuration. update-time=dolores Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. .. serial-number=dolores A serial number assigned to the device by the device manufacturer. state=sed Output only. Device state.","title":"Required Request Value"},{"location":"customers_devices-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"customers_devices-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-sign-device/","text":"Signs a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-sign-device ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=invidunt Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=clita Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=dolor The call sign of the device operator. category=aliquyam FCC category of the device. installation-params antenna-azimuth=18 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=59 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=10 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=83 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sanctus If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=58 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.735189875377097 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=dolor Specifies how the height is measured. horizontal-accuracy=0.1752718373442117 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.16232487735933354 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7518221752555869 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6477849337630458 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=diam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sea The firmware version of the device. hardware-version=ipsum The hardware version of the device. name=stet The name of the device model. software-version=gubergren The software version of the device. vendor=ipsum The name of the device vendor. .. state=no State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=kasd The identifier of a device user. ..device-metadata antenna-model=amet If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=lorem Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=justo Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=nonumy CPI who signed the validation. latitude=0.7177521662067148 Device latitude that's associated with the validation. longitude=0.9075939379577609 Device longitude that's associated with the validation. state=justo State of the NRQZ validation info. ... display-name=ea Device display name. fcc-id=at The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=erat Output only. The resource path name. preloaded-config.air-interface radio-technology=clita Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=vero Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=invidunt The call sign of the device operator. category=nonumy FCC category of the device. installation-params antenna-azimuth=20 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=70 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=82 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=51 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=voluptua. If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=7 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.43062858452964214 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=clita Specifies how the height is measured. horizontal-accuracy=0.7880976529099087 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.8515000086396851 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4616683384260818 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.7445623591108219 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=diam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=et The hardware version of the device. name=ea The name of the device model. software-version=dolore The software version of the device. vendor=ipsum The name of the device vendor. .. state=ea State of the configuration. update-time=at Output only. The last time the device configuration was edited. user-id=sit The identifier of a device user. .. serial-number=sit A serial number assigned to the device by the device manufacturer. state=lorem Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Sign Device"},{"location":"customers_devices-sign-device/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-sign-device ...","title":"Scopes"},{"location":"customers_devices-sign-device/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"customers_devices-sign-device/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=invidunt Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=clita Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=dolor The call sign of the device operator. category=aliquyam FCC category of the device. installation-params antenna-azimuth=18 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=59 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=10 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=83 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sanctus If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=58 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.735189875377097 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=dolor Specifies how the height is measured. horizontal-accuracy=0.1752718373442117 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.16232487735933354 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7518221752555869 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6477849337630458 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=diam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sea The firmware version of the device. hardware-version=ipsum The hardware version of the device. name=stet The name of the device model. software-version=gubergren The software version of the device. vendor=ipsum The name of the device vendor. .. state=no State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=kasd The identifier of a device user. ..device-metadata antenna-model=amet If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=lorem Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=justo Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=sed Validation case ID. cpi-id=nonumy CPI who signed the validation. latitude=0.7177521662067148 Device latitude that's associated with the validation. longitude=0.9075939379577609 Device longitude that's associated with the validation. state=justo State of the NRQZ validation info. ... display-name=ea Device display name. fcc-id=at The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=erat Output only. The resource path name. preloaded-config.air-interface radio-technology=clita Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=vero Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=invidunt The call sign of the device operator. category=nonumy FCC category of the device. installation-params antenna-azimuth=20 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=70 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=82 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=51 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=voluptua. If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=7 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.43062858452964214 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=clita Specifies how the height is measured. horizontal-accuracy=0.7880976529099087 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.8515000086396851 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4616683384260818 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.7445623591108219 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=diam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=et The hardware version of the device. name=ea The name of the device model. software-version=dolore The software version of the device. vendor=ipsum The name of the device vendor. .. state=ea State of the configuration. update-time=at Output only. The last time the device configuration was edited. user-id=sit The identifier of a device user. .. serial-number=sit A serial number assigned to the device by the device manufacturer. state=lorem Output only. Device state.","title":"Required Request Value"},{"location":"customers_devices-sign-device/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-sign-device/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-sign-device/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_devices-update-signed/","text":"Updates a signed device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-update-signed ... Required Scalar Argument <name> (string) Required. The name of the device to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=stet Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=duo Required. Unique installer ID (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Update Signed"},{"location":"customers_devices-update-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers devices-update-signed ...","title":"Scopes"},{"location":"customers_devices-update-signed/#required-scalar-argument","text":"<name> (string) Required. The name of the device to update.","title":"Required Scalar Argument"},{"location":"customers_devices-update-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=stet Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=duo Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"customers_devices-update-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_devices-update-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_devices-update-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_get/","text":"Returns a requested customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers get ... Required Scalar Argument <name> (string) Required. The name of the customer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"customers_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers get ...","title":"Scopes"},{"location":"customers_get/#required-scalar-argument","text":"<name> (string) Required. The name of the customer.","title":"Required Scalar Argument"},{"location":"customers_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_list-gcp-project-deployments/","text":"Returns a list of SAS deployments associated with current GCP project. Includes whether SAS analytics has been enabled or not. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list-gcp-project-deployments ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List Gcp Project Deployments"},{"location":"customers_list-gcp-project-deployments/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list-gcp-project-deployments ...","title":"Scopes"},{"location":"customers_list-gcp-project-deployments/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_list-gcp-project-deployments/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_list-legacy-organizations/","text":"Returns a list of legacy organizations. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list-legacy-organizations ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List Legacy Organizations"},{"location":"customers_list-legacy-organizations/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list-legacy-organizations ...","title":"Scopes"},{"location":"customers_list-legacy-organizations/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_list-legacy-organizations/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_list/","text":"Returns a list of requested customers. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of customers to return in the response. -p page-token=string A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"customers_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers list ...","title":"Scopes"},{"location":"customers_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of customers to return in the response. -p page-token=string A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_migrate-organization/","text":"Migrates a SAS organization to the cloud. This will create GCP projects for each deployment and associate them. The SAS Organization is linked to the gcp project that called the command. go/sas-legacy-customer-migration Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers migrate-organization ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMigrateOrganizationRequest: organization-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . organization-id=elitr Required. Id of the SAS organization to be migrated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Migrate Organization"},{"location":"customers_migrate-organization/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers migrate-organization ...","title":"Scopes"},{"location":"customers_migrate-organization/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMigrateOrganizationRequest: organization-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . organization-id=elitr Required. Id of the SAS organization to be migrated.","title":"Required Request Value"},{"location":"customers_migrate-organization/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_migrate-organization/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_migrate-organization/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-create/","text":"Creates a new node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the node is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=aliquyam The node's display name. name=erat Output only. Resource name. sas-user-ids=ut User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Create"},{"location":"customers_nodes-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-create ...","title":"Scopes"},{"location":"customers_nodes-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the node is to be created.","title":"Required Scalar Argument"},{"location":"customers_nodes-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=aliquyam The node's display name. name=erat Output only. Resource name. sas-user-ids=ut User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_nodes-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-delete/","text":"Deletes a node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-delete ... Required Scalar Argument <name> (string) Required. The name of the node. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Delete"},{"location":"customers_nodes-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-delete ...","title":"Scopes"},{"location":"customers_nodes-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the node.","title":"Required Scalar Argument"},{"location":"customers_nodes-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-deployments-create/","text":"Creates a new deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-deployments-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the deployment is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The deployment's display name. frns=lorem Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=rebum. Output only. Resource name. sas-user-ids=et User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Deployments Create"},{"location":"customers_nodes-deployments-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-deployments-create ...","title":"Scopes"},{"location":"customers_nodes-deployments-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the deployment is to be created.","title":"Required Scalar Argument"},{"location":"customers_nodes-deployments-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The deployment's display name. frns=lorem Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=rebum. Output only. Resource name. sas-user-ids=et User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_nodes-deployments-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-deployments-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-deployments-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-deployments-list/","text":"Lists deployments. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-deployments-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Deployments List"},{"location":"customers_nodes-deployments-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-deployments-list ...","title":"Scopes"},{"location":"customers_nodes-deployments-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.","title":"Required Scalar Argument"},{"location":"customers_nodes-deployments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-deployments-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_nodes-deployments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=gubergren Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=elitr Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices Create Signed"},{"location":"customers_nodes-devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-create-signed ...","title":"Scopes"},{"location":"customers_nodes-devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_nodes-devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=gubergren Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=elitr Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"customers_nodes-devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=stet Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=aliquyam The call sign of the device operator. category=kasd FCC category of the device. installation-params antenna-azimuth=0 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=53 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=38 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=62 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=dolor If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=98 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6642185324610259 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=ipsum Specifies how the height is measured. horizontal-accuracy=0.7560863763305231 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.08920170932611438 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7917185653269195 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.8201834988730824 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=consetetur Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=et The firmware version of the device. hardware-version=sit The hardware version of the device. name=lorem The name of the device model. software-version=nonumy The software version of the device. vendor=diam The name of the device vendor. .. state=ipsum State of the configuration. update-time=invidunt Output only. The last time the device configuration was edited. user-id=stet The identifier of a device user. ..device-metadata antenna-model=voluptua. If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=at Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=diam Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=true Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=eirmod CPI who signed the validation. latitude=0.966361549129164 Device latitude that's associated with the validation. longitude=0.6396928915604001 Device longitude that's associated with the validation. state=erat State of the NRQZ validation info. ... display-name=sit Device display name. fcc-id=accusam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=et Output only. The resource path name. preloaded-config.air-interface radio-technology=nonumy Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=accusam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ut The call sign of the device operator. category=voluptua. FCC category of the device. installation-params antenna-azimuth=55 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=2 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=54 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=66 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=aliquyam If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=13 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.713862500521518 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=duo Specifies how the height is measured. horizontal-accuracy=0.32140179933248514 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9967765115914052 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8773482329441525 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.36678791662527754 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sit Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=amet. The firmware version of the device. hardware-version=ipsum The hardware version of the device. name=at The name of the device model. software-version=vero The software version of the device. vendor=takimata The name of the device vendor. .. state=gubergren State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. .. serial-number=magna A serial number assigned to the device by the device manufacturer. state=sit Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices Create"},{"location":"customers_nodes-devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-create ...","title":"Scopes"},{"location":"customers_nodes-devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_nodes-devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=stet Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=aliquyam The call sign of the device operator. category=kasd FCC category of the device. installation-params antenna-azimuth=0 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=53 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=38 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=62 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=dolor If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=98 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6642185324610259 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=ipsum Specifies how the height is measured. horizontal-accuracy=0.7560863763305231 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.08920170932611438 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7917185653269195 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.8201834988730824 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=consetetur Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=et The firmware version of the device. hardware-version=sit The hardware version of the device. name=lorem The name of the device model. software-version=nonumy The software version of the device. vendor=diam The name of the device vendor. .. state=ipsum State of the configuration. update-time=invidunt Output only. The last time the device configuration was edited. user-id=stet The identifier of a device user. ..device-metadata antenna-model=voluptua. If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=at Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=diam Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=true Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=eirmod CPI who signed the validation. latitude=0.966361549129164 Device latitude that's associated with the validation. longitude=0.6396928915604001 Device longitude that's associated with the validation. state=erat State of the NRQZ validation info. ... display-name=sit Device display name. fcc-id=accusam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=et Output only. The resource path name. preloaded-config.air-interface radio-technology=nonumy Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=accusam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ut The call sign of the device operator. category=voluptua. FCC category of the device. installation-params antenna-azimuth=55 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=2 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=54 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=66 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=aliquyam If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=13 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.713862500521518 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=duo Specifies how the height is measured. horizontal-accuracy=0.32140179933248514 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9967765115914052 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8773482329441525 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.36678791662527754 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sit Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=amet. The firmware version of the device. hardware-version=ipsum The hardware version of the device. name=at The name of the device model. software-version=vero The software version of the device. vendor=takimata The name of the device vendor. .. state=gubergren State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. .. serial-number=magna A serial number assigned to the device by the device manufacturer. state=sit Output only. Device state.","title":"Required Request Value"},{"location":"customers_nodes-devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices List"},{"location":"customers_nodes-devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-devices-list ...","title":"Scopes"},{"location":"customers_nodes-devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"customers_nodes-devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_nodes-devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-get/","text":"Returns a requested node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-get ... Required Scalar Argument <name> (string) Required. The name of the node. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Get"},{"location":"customers_nodes-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-get ...","title":"Scopes"},{"location":"customers_nodes-get/#required-scalar-argument","text":"<name> (string) Required. The name of the node.","title":"Required Scalar Argument"},{"location":"customers_nodes-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-list/","text":"Lists nodes. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\". Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes List"},{"location":"customers_nodes-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-list ...","title":"Scopes"},{"location":"customers_nodes-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\".","title":"Required Scalar Argument"},{"location":"customers_nodes-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_nodes-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-move/","text":"Moves a node under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-move ... Required Scalar Argument <name> (string) Required. The name of the node to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveNodeRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=ipsum Required. The name of the new parent resource node or customer to reparent the node under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Move"},{"location":"customers_nodes-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-move ...","title":"Scopes"},{"location":"customers_nodes-move/#required-scalar-argument","text":"<name> (string) Required. The name of the node to move.","title":"Required Scalar Argument"},{"location":"customers_nodes-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveNodeRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=ipsum Required. The name of the new parent resource node or customer to reparent the node under.","title":"Required Request Value"},{"location":"customers_nodes-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-nodes-create/","text":"Creates a new node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-nodes-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the node is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=kasd The node's display name. name=dolore Output only. Resource name. sas-user-ids=lorem User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Nodes Create"},{"location":"customers_nodes-nodes-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-nodes-create ...","title":"Scopes"},{"location":"customers_nodes-nodes-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the node is to be created.","title":"Required Scalar Argument"},{"location":"customers_nodes-nodes-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=kasd The node's display name. name=dolore Output only. Resource name. sas-user-ids=lorem User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_nodes-nodes-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-nodes-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-nodes-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-nodes-list/","text":"Lists nodes. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-nodes-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\". Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Nodes List"},{"location":"customers_nodes-nodes-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-nodes-list ...","title":"Scopes"},{"location":"customers_nodes-nodes-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\".","title":"Required Scalar Argument"},{"location":"customers_nodes-nodes-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-nodes-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"customers_nodes-nodes-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_nodes-patch/","text":"Updates an existing node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-patch ... Required Scalar Argument <name> (string) Output only. Resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=amet The node's display name. name=ipsum Output only. Resource name. sas-user-ids=lorem User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Patch"},{"location":"customers_nodes-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers nodes-patch ...","title":"Scopes"},{"location":"customers_nodes-patch/#required-scalar-argument","text":"<name> (string) Output only. Resource name.","title":"Required Scalar Argument"},{"location":"customers_nodes-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=amet The node's display name. name=ipsum Output only. Resource name. sas-user-ids=lorem User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_nodes-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_nodes-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_nodes-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"customers_nodes-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_patch/","text":"Updates an existing customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers patch ... Required Scalar Argument <name> (string) Output only. Resource name of the customer. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCustomer: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=dolores Required. Name of the organization that the customer entity represents. name=consetetur Output only. Resource name of the customer. sas-user-ids=stet User IDs used by the devices belonging to this customer. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"customers_patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers patch ...","title":"Scopes"},{"location":"customers_patch/#required-scalar-argument","text":"<name> (string) Output only. Resource name of the customer.","title":"Required Scalar Argument"},{"location":"customers_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCustomer: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=dolores Required. Name of the organization that the customer entity represents. name=consetetur Output only. Resource name of the customer. sas-user-ids=stet User IDs used by the devices belonging to this customer. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"customers_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"customers_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_provision-deployment/","text":"Creates a new SAS deployment through the GCP workflow. Creates a SAS organization if an organization match is not found. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers provision-deployment ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalProvisionDeploymentRequest: new-deployment-display-name: string new-organization-display-name: string organization-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . new-deployment-display-name=accusam Optional. If this field is set, and a new SAS Portal Deployment needs to be created, its display name will be set to the value of this field. new-organization-display-name=consetetur Optional. If this field is set, and a new SAS Portal Organization needs to be created, its display name will be set to the value of this field. organization-id=takimata Optional. If this field is set then a new deployment will be created under the organization specified by this id. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Provision Deployment"},{"location":"customers_provision-deployment/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers provision-deployment ...","title":"Scopes"},{"location":"customers_provision-deployment/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalProvisionDeploymentRequest: new-deployment-display-name: string new-organization-display-name: string organization-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . new-deployment-display-name=accusam Optional. If this field is set, and a new SAS Portal Deployment needs to be created, its display name will be set to the value of this field. new-organization-display-name=consetetur Optional. If this field is set, and a new SAS Portal Organization needs to be created, its display name will be set to the value of this field. organization-id=takimata Optional. If this field is set then a new deployment will be created under the organization specified by this id.","title":"Required Request Value"},{"location":"customers_provision-deployment/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_provision-deployment/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_provision-deployment/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"customers_setup-sas-analytics/","text":"Setups the a GCP Project to receive SAS Analytics messages via GCP Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and BigQuery tables are created automatically as part of this service. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers setup-sas-analytics ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSetupSasAnalyticsRequest: user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . user-id=sed Optional. User id to setup analytics for, if not provided the user id associated with the project is used. optional About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Setup Sas Analytics"},{"location":"customers_setup-sas-analytics/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> customers setup-sas-analytics ...","title":"Scopes"},{"location":"customers_setup-sas-analytics/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSetupSasAnalyticsRequest: user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . user-id=sed Optional. User id to setup analytics for, if not provided the user id associated with the project is used. optional","title":"Required Request Value"},{"location":"customers_setup-sas-analytics/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_setup-sas-analytics/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_setup-sas-analytics/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-delete/","text":"Deletes a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-delete ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Delete"},{"location":"deployments_devices-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-delete ...","title":"Scopes"},{"location":"deployments_devices-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"deployments_devices-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-get/","text":"Gets details about a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-get ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Get"},{"location":"deployments_devices-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-get ...","title":"Scopes"},{"location":"deployments_devices-get/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"deployments_devices-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-move/","text":"Moves a device under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-move ... Required Scalar Argument <name> (string) Required. The name of the device to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=nonumy Required. The name of the new parent resource node or customer to reparent the device under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Move"},{"location":"deployments_devices-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-move ...","title":"Scopes"},{"location":"deployments_devices-move/#required-scalar-argument","text":"<name> (string) Required. The name of the device to move.","title":"Required Scalar Argument"},{"location":"deployments_devices-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=nonumy Required. The name of the new parent resource node or customer to reparent the device under.","title":"Required Request Value"},{"location":"deployments_devices-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_devices-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-patch/","text":"Updates a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-patch ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sea Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=eos Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=dolore The call sign of the device operator. category=accusam FCC category of the device. installation-params antenna-azimuth=57 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=71 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=65 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=27 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=eirmod If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=74 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6735332970099256 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sit Specifies how the height is measured. horizontal-accuracy=0.36317502517618216 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.032302991633901934 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.14615157326830652 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.22806568296421847 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=erat Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=vero The hardware version of the device. name=ea The name of the device model. software-version=et The software version of the device. vendor=amet. The name of the device vendor. .. state=eirmod State of the configuration. update-time=sanctus Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. ..device-metadata antenna-model=dolor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=et Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=eos Validation case ID. cpi-id=nonumy CPI who signed the validation. latitude=0.26872582587862837 Device latitude that's associated with the validation. longitude=0.5409905970250275 Device longitude that's associated with the validation. state=nonumy State of the NRQZ validation info. ... display-name=stet Device display name. fcc-id=rebum. The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=eirmod Output only. The resource path name. preloaded-config.air-interface radio-technology=dolores Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=aliquyam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sanctus The call sign of the device operator. category=invidunt FCC category of the device. installation-params antenna-azimuth=97 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=26 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=18 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=90 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=gubergren If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=19 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.043721800004570266 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=lorem Specifies how the height is measured. horizontal-accuracy=0.05560626266345936 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.12365623794436087 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.19923467678347817 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.0629499683582263 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=voluptua. The hardware version of the device. name=sit The name of the device model. software-version=sanctus The software version of the device. vendor=ipsum The name of the device vendor. .. state=eirmod State of the configuration. update-time=vero Output only. The last time the device configuration was edited. user-id=voluptua. The identifier of a device user. .. serial-number=sea A serial number assigned to the device by the device manufacturer. state=ipsum Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Patch"},{"location":"deployments_devices-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-patch ...","title":"Scopes"},{"location":"deployments_devices-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"deployments_devices-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sea Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=eos Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=dolore The call sign of the device operator. category=accusam FCC category of the device. installation-params antenna-azimuth=57 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=71 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=65 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=27 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=eirmod If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=74 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6735332970099256 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sit Specifies how the height is measured. horizontal-accuracy=0.36317502517618216 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.032302991633901934 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.14615157326830652 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.22806568296421847 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=erat Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=vero The hardware version of the device. name=ea The name of the device model. software-version=et The software version of the device. vendor=amet. The name of the device vendor. .. state=eirmod State of the configuration. update-time=sanctus Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. ..device-metadata antenna-model=dolor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=et Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=eos Validation case ID. cpi-id=nonumy CPI who signed the validation. latitude=0.26872582587862837 Device latitude that's associated with the validation. longitude=0.5409905970250275 Device longitude that's associated with the validation. state=nonumy State of the NRQZ validation info. ... display-name=stet Device display name. fcc-id=rebum. The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=eirmod Output only. The resource path name. preloaded-config.air-interface radio-technology=dolores Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=aliquyam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sanctus The call sign of the device operator. category=invidunt FCC category of the device. installation-params antenna-azimuth=97 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=26 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=18 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=90 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=gubergren If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=19 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.043721800004570266 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=lorem Specifies how the height is measured. horizontal-accuracy=0.05560626266345936 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.12365623794436087 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.19923467678347817 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.0629499683582263 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=voluptua. The hardware version of the device. name=sit The name of the device model. software-version=sanctus The software version of the device. vendor=ipsum The name of the device vendor. .. state=eirmod State of the configuration. update-time=vero Output only. The last time the device configuration was edited. user-id=voluptua. The identifier of a device user. .. serial-number=sea A serial number assigned to the device by the device manufacturer. state=ipsum Output only. Device state.","title":"Required Request Value"},{"location":"deployments_devices-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_devices-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"deployments_devices-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-sign-device/","text":"Signs a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-sign-device ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=sea Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=gubergren The call sign of the device operator. category=dolore FCC category of the device. installation-params antenna-azimuth=84 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=7 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=92 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=31 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=tempor If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=71 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.31693005775183425 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sea Specifies how the height is measured. horizontal-accuracy=0.8755402661178983 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.2545914457773325 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3205985526763834 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6887635818786101 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=magna Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=rebum. The firmware version of the device. hardware-version=amet The hardware version of the device. name=sea The name of the device model. software-version=sadipscing The software version of the device. vendor=dolore The name of the device vendor. .. state=amet State of the configuration. update-time=invidunt Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. ..device-metadata antenna-model=dolores If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=diam Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=sanctus Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=eos Validation case ID. cpi-id=sit CPI who signed the validation. latitude=0.9731527977987767 Device latitude that's associated with the validation. longitude=0.6586187855975748 Device longitude that's associated with the validation. state=sadipscing State of the NRQZ validation info. ... display-name=diam Device display name. fcc-id=at The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=at Output only. The resource path name. preloaded-config.air-interface radio-technology=kasd Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=magna Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=amet. The call sign of the device operator. category=est FCC category of the device. installation-params antenna-azimuth=39 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=26 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=67 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=62 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=stet If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=72 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.4529093130825098 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sea Specifies how the height is measured. horizontal-accuracy=0.5920148501374948 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.3785668071072317 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3881347043702905 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.07624454991197471 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolores The firmware version of the device. hardware-version=dolores The hardware version of the device. name=diam The name of the device model. software-version=ea The software version of the device. vendor=sea The name of the device vendor. .. state=dolore State of the configuration. update-time=dolores Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. .. serial-number=tempor A serial number assigned to the device by the device manufacturer. state=et Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Sign Device"},{"location":"deployments_devices-sign-device/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-sign-device ...","title":"Scopes"},{"location":"deployments_devices-sign-device/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"deployments_devices-sign-device/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=sea Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=et Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=gubergren The call sign of the device operator. category=dolore FCC category of the device. installation-params antenna-azimuth=84 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=7 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=92 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=31 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=tempor If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=71 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.31693005775183425 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sea Specifies how the height is measured. horizontal-accuracy=0.8755402661178983 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.2545914457773325 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3205985526763834 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6887635818786101 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=magna Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=rebum. The firmware version of the device. hardware-version=amet The hardware version of the device. name=sea The name of the device model. software-version=sadipscing The software version of the device. vendor=dolore The name of the device vendor. .. state=amet State of the configuration. update-time=invidunt Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. ..device-metadata antenna-model=dolores If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=diam Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=sanctus Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=eos Validation case ID. cpi-id=sit CPI who signed the validation. latitude=0.9731527977987767 Device latitude that's associated with the validation. longitude=0.6586187855975748 Device longitude that's associated with the validation. state=sadipscing State of the NRQZ validation info. ... display-name=diam Device display name. fcc-id=at The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=at Output only. The resource path name. preloaded-config.air-interface radio-technology=kasd Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=magna Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=amet. The call sign of the device operator. category=est FCC category of the device. installation-params antenna-azimuth=39 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=26 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=67 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=62 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=stet If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=72 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.4529093130825098 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sea Specifies how the height is measured. horizontal-accuracy=0.5920148501374948 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.3785668071072317 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.3881347043702905 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.07624454991197471 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolores The firmware version of the device. hardware-version=dolores The hardware version of the device. name=diam The name of the device model. software-version=ea The software version of the device. vendor=sea The name of the device vendor. .. state=dolore State of the configuration. update-time=dolores Output only. The last time the device configuration was edited. user-id=invidunt The identifier of a device user. .. serial-number=tempor A serial number assigned to the device by the device manufacturer. state=et Output only. Device state.","title":"Required Request Value"},{"location":"deployments_devices-sign-device/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_devices-sign-device/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-sign-device/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_devices-update-signed/","text":"Updates a signed device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-update-signed ... Required Scalar Argument <name> (string) Required. The name of the device to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=voluptua. Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=et Required. Unique installer ID (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Update Signed"},{"location":"deployments_devices-update-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments devices-update-signed ...","title":"Scopes"},{"location":"deployments_devices-update-signed/#required-scalar-argument","text":"<name> (string) Required. The name of the device to update.","title":"Required Scalar Argument"},{"location":"deployments_devices-update-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=voluptua. Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=et Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"deployments_devices-update-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"deployments_devices-update-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_devices-update-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"deployments_get/","text":"Returns a requested deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments get ... Required Scalar Argument <name> (string) Required. The name of the deployment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"deployments_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> deployments get ...","title":"Scopes"},{"location":"deployments_get/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment.","title":"Required Scalar Argument"},{"location":"deployments_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"deployments_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"installer_generate-secret/","text":"Generates a secret to be used with the ValidateInstaller. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> installer generate-secret ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalGenerateSecretRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Generate Secret"},{"location":"installer_generate-secret/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> installer generate-secret ...","title":"Scopes"},{"location":"installer_generate-secret/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalGenerateSecretRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"installer_generate-secret/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"installer_generate-secret/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"installer_generate-secret/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"installer_validate/","text":"Validates the identity of a Certified Professional Installer (CPI). Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> installer validate ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalValidateInstallerRequest: encoded-secret: string installer-id: string secret: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-secret=est Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret. installer-id=stet Required. Unique installer id (CPI ID) from the Certified Professional Installers database. secret=dolor Required. Secret returned by the GenerateSecret. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Validate"},{"location":"installer_validate/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> installer validate ...","title":"Scopes"},{"location":"installer_validate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalValidateInstallerRequest: encoded-secret: string installer-id: string secret: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-secret=est Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret. installer-id=stet Required. Unique installer id (CPI ID) from the Certified Professional Installers database. secret=dolor Required. Secret returned by the GenerateSecret.","title":"Required Request Value"},{"location":"installer_validate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"installer_validate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"installer_validate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-delete/","text":"Deletes a deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-delete ... Required Scalar Argument <name> (string) Required. The name of the deployment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Delete"},{"location":"nodes_deployments-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-delete ...","title":"Scopes"},{"location":"nodes_deployments-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment.","title":"Required Scalar Argument"},{"location":"nodes_deployments-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=ipsum Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=eos Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices Create Signed"},{"location":"nodes_deployments-devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-create-signed ...","title":"Scopes"},{"location":"nodes_deployments-devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_deployments-devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=ipsum Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=eos Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"nodes_deployments-devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_deployments-devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=et Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=labore Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=labore The call sign of the device operator. category=et FCC category of the device. installation-params antenna-azimuth=19 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=64 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=49 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=89 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=est If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=70 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.017503997504871527 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=kasd Specifies how the height is measured. horizontal-accuracy=0.09325417418104898 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6237467640152612 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4577859622777416 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.030543886887613114 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=voluptua. Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=justo The firmware version of the device. hardware-version=amet. The hardware version of the device. name=aliquyam The name of the device model. software-version=et The software version of the device. vendor=gubergren The name of the device vendor. .. state=sed State of the configuration. update-time=no Output only. The last time the device configuration was edited. user-id=sit The identifier of a device user. ..device-metadata antenna-model=est If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=elitr Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=et CPI who signed the validation. latitude=0.61536082645218 Device latitude that's associated with the validation. longitude=0.5723850406345521 Device longitude that's associated with the validation. state=no State of the NRQZ validation info. ... display-name=amet. Device display name. fcc-id=aliquyam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=accusam Output only. The resource path name. preloaded-config.air-interface radio-technology=sanctus Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=duo Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=kasd The call sign of the device operator. category=eos FCC category of the device. installation-params antenna-azimuth=90 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=38 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=43 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=39 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=accusam If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=97 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.33849663819647435 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=diam Specifies how the height is measured. horizontal-accuracy=0.031693239006927554 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9103376351312359 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.43714826124418926 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.39930264822622474 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=dolor Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=duo The firmware version of the device. hardware-version=diam The hardware version of the device. name=et The name of the device model. software-version=lorem The software version of the device. vendor=no The name of the device vendor. .. state=sea State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=voluptua. The identifier of a device user. .. serial-number=ipsum A serial number assigned to the device by the device manufacturer. state=ea Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices Create"},{"location":"nodes_deployments-devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-create ...","title":"Scopes"},{"location":"nodes_deployments-devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_deployments-devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=et Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=labore Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=labore The call sign of the device operator. category=et FCC category of the device. installation-params antenna-azimuth=19 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=64 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=49 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=89 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=est If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=70 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.017503997504871527 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=kasd Specifies how the height is measured. horizontal-accuracy=0.09325417418104898 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6237467640152612 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.4577859622777416 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.030543886887613114 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=voluptua. Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=justo The firmware version of the device. hardware-version=amet. The hardware version of the device. name=aliquyam The name of the device model. software-version=et The software version of the device. vendor=gubergren The name of the device vendor. .. state=sed State of the configuration. update-time=no Output only. The last time the device configuration was edited. user-id=sit The identifier of a device user. ..device-metadata antenna-model=est If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=elitr Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=at Validation case ID. cpi-id=et CPI who signed the validation. latitude=0.61536082645218 Device latitude that's associated with the validation. longitude=0.5723850406345521 Device longitude that's associated with the validation. state=no State of the NRQZ validation info. ... display-name=amet. Device display name. fcc-id=aliquyam The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=accusam Output only. The resource path name. preloaded-config.air-interface radio-technology=sanctus Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=duo Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=kasd The call sign of the device operator. category=eos FCC category of the device. installation-params antenna-azimuth=90 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=38 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=43 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=39 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=accusam If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=97 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.33849663819647435 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=diam Specifies how the height is measured. horizontal-accuracy=0.031693239006927554 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9103376351312359 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.43714826124418926 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.39930264822622474 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=dolor Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=duo The firmware version of the device. hardware-version=diam The hardware version of the device. name=et The name of the device model. software-version=lorem The software version of the device. vendor=no The name of the device vendor. .. state=sea State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=voluptua. The identifier of a device user. .. serial-number=ipsum A serial number assigned to the device by the device manufacturer. state=ea Output only. Device state.","title":"Required Request Value"},{"location":"nodes_deployments-devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_deployments-devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Devices List"},{"location":"nodes_deployments-devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-devices-list ...","title":"Scopes"},{"location":"nodes_deployments-devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_deployments-devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_deployments-devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-get/","text":"Returns a requested deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-get ... Required Scalar Argument <name> (string) Required. The name of the deployment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Get"},{"location":"nodes_deployments-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-get ...","title":"Scopes"},{"location":"nodes_deployments-get/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment.","title":"Required Scalar Argument"},{"location":"nodes_deployments-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-list/","text":"Lists deployments. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments List"},{"location":"nodes_deployments-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-list ...","title":"Scopes"},{"location":"nodes_deployments-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.","title":"Required Scalar Argument"},{"location":"nodes_deployments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_deployments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-move/","text":"Moves a deployment under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-move ... Required Scalar Argument <name> (string) Required. The name of the deployment to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeploymentRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=vero Required. The name of the new parent resource node or customer to reparent the deployment under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Move"},{"location":"nodes_deployments-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-move ...","title":"Scopes"},{"location":"nodes_deployments-move/#required-scalar-argument","text":"<name> (string) Required. The name of the deployment to move.","title":"Required Scalar Argument"},{"location":"nodes_deployments-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeploymentRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=vero Required. The name of the new parent resource node or customer to reparent the deployment under.","title":"Required Request Value"},{"location":"nodes_deployments-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_deployments-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_deployments-patch/","text":"Updates an existing deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-patch ... Required Scalar Argument <name> (string) Output only. Resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sanctus The deployment's display name. frns=dolores Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=elitr Output only. Resource name. sas-user-ids=diam User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deployments Patch"},{"location":"nodes_deployments-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes deployments-patch ...","title":"Scopes"},{"location":"nodes_deployments-patch/#required-scalar-argument","text":"<name> (string) Output only. Resource name.","title":"Required Scalar Argument"},{"location":"nodes_deployments-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sanctus The deployment's display name. frns=dolores Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=elitr Output only. Resource name. sas-user-ids=diam User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"nodes_deployments-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_deployments-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_deployments-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"nodes_deployments-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=accusam Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=takimata Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Create Signed"},{"location":"nodes_devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-create-signed ...","title":"Scopes"},{"location":"nodes_devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=accusam Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=takimata Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"nodes_devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=lorem Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=magna The call sign of the device operator. category=duo FCC category of the device. installation-params antenna-azimuth=33 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=40 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=56 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=3 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=duo If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=72 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.22254138086003328 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eirmod Specifies how the height is measured. horizontal-accuracy=0.3933268421172649 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.049386894448035235 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.013416310990004843 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.2324198969132868 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=at Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=stet The hardware version of the device. name=sadipscing The name of the device model. software-version=voluptua. The software version of the device. vendor=et The name of the device vendor. .. state=clita State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=rebum. The identifier of a device user. ..device-metadata antenna-model=sanctus If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=no Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=stet Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=true Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=ipsum Validation case ID. cpi-id=eos CPI who signed the validation. latitude=0.5533957822624528 Device latitude that's associated with the validation. longitude=0.03573725250461324 Device longitude that's associated with the validation. state=justo State of the NRQZ validation info. ... display-name=justo Device display name. fcc-id=eirmod The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=duo Output only. The resource path name. preloaded-config.air-interface radio-technology=sanctus Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=aliquyam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=voluptua. The call sign of the device operator. category=eirmod FCC category of the device. installation-params antenna-azimuth=93 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=35 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=38 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=73 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=erat If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=68 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.8597596385186 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=lorem Specifies how the height is measured. horizontal-accuracy=0.5401587669969106 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.43478992604829414 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.14528423055981043 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6816690721306752 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sanctus Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=invidunt The firmware version of the device. hardware-version=sit The hardware version of the device. name=sed The name of the device model. software-version=duo The software version of the device. vendor=et The name of the device vendor. .. state=dolor State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. .. serial-number=justo A serial number assigned to the device by the device manufacturer. state=sadipscing Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Create"},{"location":"nodes_devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-create ...","title":"Scopes"},{"location":"nodes_devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=sed Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=lorem Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=magna The call sign of the device operator. category=duo FCC category of the device. installation-params antenna-azimuth=33 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=40 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=56 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=3 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=duo If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=72 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.22254138086003328 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=eirmod Specifies how the height is measured. horizontal-accuracy=0.3933268421172649 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.049386894448035235 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.013416310990004843 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.2324198969132868 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=at Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sed The firmware version of the device. hardware-version=stet The hardware version of the device. name=sadipscing The name of the device model. software-version=voluptua. The software version of the device. vendor=et The name of the device vendor. .. state=clita State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=rebum. The identifier of a device user. ..device-metadata antenna-model=sanctus If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=no Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=stet Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=true Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=ipsum Validation case ID. cpi-id=eos CPI who signed the validation. latitude=0.5533957822624528 Device latitude that's associated with the validation. longitude=0.03573725250461324 Device longitude that's associated with the validation. state=justo State of the NRQZ validation info. ... display-name=justo Device display name. fcc-id=eirmod The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=duo Output only. The resource path name. preloaded-config.air-interface radio-technology=sanctus Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=aliquyam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=voluptua. The call sign of the device operator. category=eirmod FCC category of the device. installation-params antenna-azimuth=93 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=35 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=38 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=73 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=erat If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=68 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.8597596385186 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=lorem Specifies how the height is measured. horizontal-accuracy=0.5401587669969106 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.43478992604829414 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.14528423055981043 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6816690721306752 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=sanctus Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=invidunt The firmware version of the device. hardware-version=sit The hardware version of the device. name=sed The name of the device model. software-version=duo The software version of the device. vendor=et The name of the device vendor. .. state=dolor State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. .. serial-number=justo A serial number assigned to the device by the device manufacturer. state=sadipscing Output only. Device state.","title":"Required Request Value"},{"location":"nodes_devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-delete/","text":"Deletes a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-delete ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Delete"},{"location":"nodes_devices-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-delete ...","title":"Scopes"},{"location":"nodes_devices-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"nodes_devices-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-get/","text":"Gets details about a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-get ... Required Scalar Argument <name> (string) Required. The name of the device. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Get"},{"location":"nodes_devices-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-get ...","title":"Scopes"},{"location":"nodes_devices-get/#required-scalar-argument","text":"<name> (string) Required. The name of the device.","title":"Required Scalar Argument"},{"location":"nodes_devices-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices List"},{"location":"nodes_devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-list ...","title":"Scopes"},{"location":"nodes_devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-move/","text":"Moves a device under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-move ... Required Scalar Argument <name> (string) Required. The name of the device to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=invidunt Required. The name of the new parent resource node or customer to reparent the device under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Move"},{"location":"nodes_devices-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-move ...","title":"Scopes"},{"location":"nodes_devices-move/#required-scalar-argument","text":"<name> (string) Required. The name of the device to move.","title":"Required Scalar Argument"},{"location":"nodes_devices-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveDeviceRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=invidunt Required. The name of the new parent resource node or customer to reparent the device under.","title":"Required Request Value"},{"location":"nodes_devices-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-patch/","text":"Updates a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-patch ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=invidunt Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=gubergren Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sed The call sign of the device operator. category=justo FCC category of the device. installation-params antenna-azimuth=4 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=71 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=14 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=27 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=kasd If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=24 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.5057138933775157 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=consetetur Specifies how the height is measured. horizontal-accuracy=0.5837874610110562 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6814913526065197 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8302148869221644 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.0953483199449986 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=dolor Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=clita The hardware version of the device. name=et The name of the device model. software-version=diam The software version of the device. vendor=sanctus The name of the device vendor. .. state=ipsum State of the configuration. update-time=lorem Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. ..device-metadata antenna-model=tempor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=et Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=vero Validation case ID. cpi-id=sed CPI who signed the validation. latitude=0.9765257650366551 Device latitude that's associated with the validation. longitude=0.32506144666879233 Device longitude that's associated with the validation. state=ut State of the NRQZ validation info. ... display-name=et Device display name. fcc-id=sanctus The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=magna Output only. The resource path name. preloaded-config.air-interface radio-technology=magna Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=ea Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=no The call sign of the device operator. category=aliquyam FCC category of the device. installation-params antenna-azimuth=58 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=32 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=13 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=56 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=stet If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=5 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.03220966420378979 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=vero Specifies how the height is measured. horizontal-accuracy=0.9950912874708706 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7365914082283336 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.08481056152721 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6692273626194334 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=aliquyam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sanctus The firmware version of the device. hardware-version=sed The hardware version of the device. name=tempor The name of the device model. software-version=dolore The software version of the device. vendor=dolore The name of the device vendor. .. state=ipsum State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=justo The identifier of a device user. .. serial-number=ea A serial number assigned to the device by the device manufacturer. state=ipsum Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Patch"},{"location":"nodes_devices-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-patch ...","title":"Scopes"},{"location":"nodes_devices-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"nodes_devices-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=invidunt Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=gubergren Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=sed The call sign of the device operator. category=justo FCC category of the device. installation-params antenna-azimuth=4 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=71 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=14 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=27 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=kasd If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=24 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.5057138933775157 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=consetetur Specifies how the height is measured. horizontal-accuracy=0.5837874610110562 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6814913526065197 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8302148869221644 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.0953483199449986 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=dolor Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolore The firmware version of the device. hardware-version=clita The hardware version of the device. name=et The name of the device model. software-version=diam The software version of the device. vendor=sanctus The name of the device vendor. .. state=ipsum State of the configuration. update-time=lorem Output only. The last time the device configuration was edited. user-id=sed The identifier of a device user. ..device-metadata antenna-model=tempor If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=et Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=et Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=vero Validation case ID. cpi-id=sed CPI who signed the validation. latitude=0.9765257650366551 Device latitude that's associated with the validation. longitude=0.32506144666879233 Device longitude that's associated with the validation. state=ut State of the NRQZ validation info. ... display-name=et Device display name. fcc-id=sanctus The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=magna Output only. The resource path name. preloaded-config.air-interface radio-technology=magna Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=ea Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=no The call sign of the device operator. category=aliquyam FCC category of the device. installation-params antenna-azimuth=58 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=32 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=13 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=56 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=stet If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=5 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.03220966420378979 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=vero Specifies how the height is measured. horizontal-accuracy=0.9950912874708706 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.7365914082283336 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.08481056152721 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.6692273626194334 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=aliquyam Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=sanctus The firmware version of the device. hardware-version=sed The hardware version of the device. name=tempor The name of the device model. software-version=dolore The software version of the device. vendor=dolore The name of the device vendor. .. state=ipsum State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=justo The identifier of a device user. .. serial-number=ea A serial number assigned to the device by the device manufacturer. state=ipsum Output only. Device state.","title":"Required Request Value"},{"location":"nodes_devices-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"nodes_devices-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-sign-device/","text":"Signs a device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-sign-device ... Required Scalar Argument <name> (string) Output only. The resource path name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=diam Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=sed Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=justo The call sign of the device operator. category=ea FCC category of the device. installation-params antenna-azimuth=66 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=52 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=32 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=54 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sit If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=88 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.8937717541520276 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=rebum. Specifies how the height is measured. horizontal-accuracy=0.4983217739131458 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9056819670691113 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.6886908812781574 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.11734193280990857 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=voluptua. Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=no The firmware version of the device. hardware-version=ut The hardware version of the device. name=dolore The name of the device model. software-version=takimata The software version of the device. vendor=invidunt The name of the device vendor. .. state=sed State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. ..device-metadata antenna-model=lorem If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=rebum. Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=sadipscing Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=labore Validation case ID. cpi-id=stet CPI who signed the validation. latitude=0.3675082161056572 Device latitude that's associated with the validation. longitude=0.052824889419785026 Device longitude that's associated with the validation. state=at State of the NRQZ validation info. ... display-name=accusam Device display name. fcc-id=no The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=tempor Output only. The resource path name. preloaded-config.air-interface radio-technology=ipsum Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=diam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ea The call sign of the device operator. category=erat FCC category of the device. installation-params antenna-azimuth=78 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=18 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=96 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=39 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=kasd If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=34 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.3788573126914494 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sed Specifies how the height is measured. horizontal-accuracy=0.719154456145043 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.24183917305407654 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8580613383828275 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.5350770101541498 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=ipsum Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolor The firmware version of the device. hardware-version=elitr The hardware version of the device. name=et The name of the device model. software-version=amet. The software version of the device. vendor=duo The name of the device vendor. .. state=dolore State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=justo The identifier of a device user. .. serial-number=eirmod A serial number assigned to the device by the device manufacturer. state=at Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Sign Device"},{"location":"nodes_devices-sign-device/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-sign-device ...","title":"Scopes"},{"location":"nodes_devices-sign-device/#required-scalar-argument","text":"<name> (string) Output only. The resource path name.","title":"Required Scalar Argument"},{"location":"nodes_devices-sign-device/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSignDeviceRequest: device: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device.active-config.air-interface radio-technology=diam Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=sed Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=justo The call sign of the device operator. category=ea FCC category of the device. installation-params antenna-azimuth=66 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=52 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=32 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=54 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=sit If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=true If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=88 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.8937717541520276 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=rebum. Specifies how the height is measured. horizontal-accuracy=0.4983217739131458 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.9056819670691113 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.6886908812781574 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.11734193280990857 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=voluptua. Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=no The firmware version of the device. hardware-version=ut The hardware version of the device. name=dolore The name of the device model. software-version=takimata The software version of the device. vendor=invidunt The name of the device vendor. .. state=sed State of the configuration. update-time=et Output only. The last time the device configuration was edited. user-id=consetetur The identifier of a device user. ..device-metadata antenna-model=lorem If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=rebum. Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=sadipscing Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=labore Validation case ID. cpi-id=stet CPI who signed the validation. latitude=0.3675082161056572 Device latitude that's associated with the validation. longitude=0.052824889419785026 Device longitude that's associated with the validation. state=at State of the NRQZ validation info. ... display-name=accusam Device display name. fcc-id=no The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=tempor Output only. The resource path name. preloaded-config.air-interface radio-technology=ipsum Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=diam Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ea The call sign of the device operator. category=erat FCC category of the device. installation-params antenna-azimuth=78 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=18 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=96 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=39 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=kasd If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=34 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.3788573126914494 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sed Specifies how the height is measured. horizontal-accuracy=0.719154456145043 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.24183917305407654 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.8580613383828275 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.5350770101541498 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=ipsum Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolor The firmware version of the device. hardware-version=elitr The hardware version of the device. name=et The name of the device model. software-version=amet. The software version of the device. vendor=duo The name of the device vendor. .. state=dolore State of the configuration. update-time=takimata Output only. The last time the device configuration was edited. user-id=justo The identifier of a device user. .. serial-number=eirmod A serial number assigned to the device by the device manufacturer. state=at Output only. Device state.","title":"Required Request Value"},{"location":"nodes_devices-sign-device/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-sign-device/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-sign-device/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_devices-update-signed/","text":"Updates a signed device. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-update-signed ... Required Scalar Argument <name> (string) Required. The name of the device to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=dolor Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=et Required. Unique installer ID (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Devices Update Signed"},{"location":"nodes_devices-update-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes devices-update-signed ...","title":"Scopes"},{"location":"nodes_devices-update-signed/#required-scalar-argument","text":"<name> (string) Required. The name of the device to update.","title":"Required Scalar Argument"},{"location":"nodes_devices-update-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalUpdateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=dolor Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=et Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"nodes_devices-update-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_devices-update-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_devices-update-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_get/","text":"Returns a requested node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes get ... Required Scalar Argument <name> (string) Required. The name of the node. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"nodes_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes get ...","title":"Scopes"},{"location":"nodes_get/#required-scalar-argument","text":"<name> (string) Required. The name of the node.","title":"Required Scalar Argument"},{"location":"nodes_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-create/","text":"Creates a new node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the node is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The node's display name. name=lorem Output only. Resource name. sas-user-ids=et User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Create"},{"location":"nodes_nodes-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-create ...","title":"Scopes"},{"location":"nodes_nodes-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the node is to be created.","title":"Required Scalar Argument"},{"location":"nodes_nodes-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The node's display name. name=lorem Output only. Resource name. sas-user-ids=et User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"nodes_nodes-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-delete/","text":"Deletes a node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-delete ... Required Scalar Argument <name> (string) Required. The name of the node. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Delete"},{"location":"nodes_nodes-delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-delete ...","title":"Scopes"},{"location":"nodes_nodes-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the node.","title":"Required Scalar Argument"},{"location":"nodes_nodes-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-deployments-create/","text":"Creates a new deployment. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-deployments-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the deployment is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=lorem The deployment's display name. frns=dolores Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=eos Output only. Resource name. sas-user-ids=magna User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Deployments Create"},{"location":"nodes_nodes-deployments-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-deployments-create ...","title":"Scopes"},{"location":"nodes_nodes-deployments-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the deployment is to be created.","title":"Required Scalar Argument"},{"location":"nodes_nodes-deployments-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDeployment: display-name: string frns: [string] name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=lorem The deployment's display name. frns=dolores Output only. The FCC Registration Numbers (FRNs) copied from its direct parent. Each invocation of this argument appends the given value to the array. name=eos Output only. Resource name. sas-user-ids=magna User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"nodes_nodes-deployments-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-deployments-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-deployments-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-deployments-list/","text":"Lists deployments. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-deployments-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Deployments List"},{"location":"nodes_nodes-deployments-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-deployments-list ...","title":"Scopes"},{"location":"nodes_nodes-deployments-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.","title":"Required Scalar Argument"},{"location":"nodes_nodes-deployments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-deployments-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered. -p page-size=integer The maximum number of deployments to return in the response. -p page-token=string A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_nodes-deployments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-devices-create-signed/","text":"Creates a signed device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-create-signed ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=sed Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=invidunt Required. Unique installer id (CPI ID) from the Certified Professional Installers database. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices Create Signed"},{"location":"nodes_nodes-devices-create-signed/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-create-signed ...","title":"Scopes"},{"location":"nodes_nodes-devices-create-signed/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_nodes-devices-create-signed/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalCreateSignedDeviceRequest: encoded-device: string installer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . encoded-device=sed Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set. installer-id=invidunt Required. Unique installer id (CPI ID) from the Certified Professional Installers database.","title":"Required Request Value"},{"location":"nodes_nodes-devices-create-signed/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-devices-create-signed/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-devices-create-signed/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-devices-create/","text":"Creates a device under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-create ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=stet Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=kasd Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=stet The call sign of the device operator. category=sed FCC category of the device. installation-params antenna-azimuth=61 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=84 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=51 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=84 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=amet. If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=32 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6321839488731797 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=stet Specifies how the height is measured. horizontal-accuracy=0.32722640056533014 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.517630847691609 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7703720340171833 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.887049684878022 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=justo Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=aliquyam The firmware version of the device. hardware-version=eirmod The hardware version of the device. name=duo The name of the device model. software-version=labore The software version of the device. vendor=eos The name of the device vendor. .. state=invidunt State of the configuration. update-time=at Output only. The last time the device configuration was edited. user-id=sea The identifier of a device user. ..device-metadata antenna-model=sed If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=dolor Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=dolor Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=et Validation case ID. cpi-id=et CPI who signed the validation. latitude=0.24568865463691203 Device latitude that's associated with the validation. longitude=0.9399228287845194 Device longitude that's associated with the validation. state=magna State of the NRQZ validation info. ... display-name=est Device display name. fcc-id=voluptua. The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=voluptua. Output only. The resource path name. preloaded-config.air-interface radio-technology=tempor Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=takimata Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ut The call sign of the device operator. category=no FCC category of the device. installation-params antenna-azimuth=39 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=14 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=73 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=36 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=lorem If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=58 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.2751449010017205 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sit Specifies how the height is measured. horizontal-accuracy=0.31738976241384087 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6742454262168728 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.743127749321243 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.47364044413894646 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolor The firmware version of the device. hardware-version=elitr The hardware version of the device. name=sanctus The name of the device model. software-version=dolor The software version of the device. vendor=sea The name of the device vendor. .. state=sanctus State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=est The identifier of a device user. .. serial-number=nonumy A serial number assigned to the device by the device manufacturer. state=duo Output only. Device state. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices Create"},{"location":"nodes_nodes-devices-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-create ...","title":"Scopes"},{"location":"nodes_nodes-devices-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_nodes-devices-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalDevice: active-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string device-metadata: antenna-model: string common-channel-group: string interference-coordination-group: string nrqz-validated: boolean nrqz-validation: case-id: string cpi-id: string latitude: number longitude: number state: string display-name: string fcc-id: string name: string preloaded-config: air-interface: radio-technology: string supported-spec: string call-sign: string category: string installation-params: antenna-azimuth: integer antenna-beamwidth: integer antenna-downtilt: integer antenna-gain: integer antenna-model: string cpe-cbsd-indication: boolean eirp-capability: integer height: number height-type: string horizontal-accuracy: number indoor-deployment: boolean latitude: number longitude: number vertical-accuracy: number is-signed: boolean measurement-capabilities: [string] model: firmware-version: string hardware-version: string name: string software-version: string vendor: string state: string update-time: string user-id: string serial-number: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .active-config.air-interface radio-technology=stet Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=kasd Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=stet The call sign of the device operator. category=sed FCC category of the device. installation-params antenna-azimuth=61 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=84 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=51 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=84 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=amet. If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=32 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.6321839488731797 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=stet Specifies how the height is measured. horizontal-accuracy=0.32722640056533014 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=false Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.517630847691609 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.7703720340171833 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.887049684878022 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=false Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=justo Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=aliquyam The firmware version of the device. hardware-version=eirmod The hardware version of the device. name=duo The name of the device model. software-version=labore The software version of the device. vendor=eos The name of the device vendor. .. state=invidunt State of the configuration. update-time=at Output only. The last time the device configuration was edited. user-id=sea The identifier of a device user. ..device-metadata antenna-model=sed If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId common-channel-group=dolor Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see CBRSA-TS-2001 V3.0.0 . interference-coordination-group=dolor Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see CBRSA-TS-2001 V3.0.0 . nrqz-validated=false Output only. Set to true if a CPI has validated that they have coordinated with the National Quiet Zone office. nrqz-validation case-id=et Validation case ID. cpi-id=et CPI who signed the validation. latitude=0.24568865463691203 Device latitude that's associated with the validation. longitude=0.9399228287845194 Device longitude that's associated with the validation. state=magna State of the NRQZ validation info. ... display-name=est Device display name. fcc-id=voluptua. The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format. Accept underscores and periods because some test-SAS customers use them. name=voluptua. Output only. The resource path name. preloaded-config.air-interface radio-technology=tempor Conditional. This field specifies the radio access technology that is used for the CBSD. supported-spec=takimata Optional. This field is related to the radioTechnology and provides the air interface specification that the CBSD is compliant with at the time of registration. .. call-sign=ut The call sign of the device operator. category=no FCC category of the device. installation-params antenna-azimuth=39 Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices. antenna-beamwidth=14 3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices. antenna-downtilt=73 Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices. antenna-gain=36 Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive. antenna-model=lorem If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets. cpe-cbsd-indication=false If present, this parameter specifies whether the CBSD is a CPE-CBSD or not. eirp-capability=58 This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category. height=0.2751449010017205 Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum. height-type=sit Specifies how the height is measured. horizontal-accuracy=0.31738976241384087 A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters. indoor-deployment=true Whether the device antenna is indoor or not. true : indoor. false : outdoor. latitude=0.6742454262168728 Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator. longitude=0.743127749321243 Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian. vertical-accuracy=0.47364044413894646 A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters. .. is-signed=true Output only. Whether the configuration has been signed by a CPI. measurement-capabilities=et Measurement reporting capabilities of the device. Each invocation of this argument appends the given value to the array. model firmware-version=dolor The firmware version of the device. hardware-version=elitr The hardware version of the device. name=sanctus The name of the device model. software-version=dolor The software version of the device. vendor=sea The name of the device vendor. .. state=sanctus State of the configuration. update-time=sit Output only. The last time the device configuration was edited. user-id=est The identifier of a device user. .. serial-number=nonumy A serial number assigned to the device by the device manufacturer. state=duo Output only. Device state.","title":"Required Request Value"},{"location":"nodes_nodes-devices-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-devices-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-devices-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-devices-list/","text":"Lists devices under a node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-list ... Required Scalar Argument <parent> (string) Required. The name of the parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Devices List"},{"location":"nodes_nodes-devices-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-devices-list ...","title":"Scopes"},{"location":"nodes_nodes-devices-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent resource.","title":"Required Scalar Argument"},{"location":"nodes_nodes-devices-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-devices-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive. -p page-size=integer The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]. -p page-token=string A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_nodes-devices-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-get/","text":"Returns a requested node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-get ... Required Scalar Argument <name> (string) Required. The name of the node. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Get"},{"location":"nodes_nodes-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-get ...","title":"Scopes"},{"location":"nodes_nodes-get/#required-scalar-argument","text":"<name> (string) Required. The name of the node.","title":"Required Scalar Argument"},{"location":"nodes_nodes-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-list/","text":"Lists nodes. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\". Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes List"},{"location":"nodes_nodes-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-list ...","title":"Scopes"},{"location":"nodes_nodes-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\".","title":"Required Scalar Argument"},{"location":"nodes_nodes-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_nodes-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-move/","text":"Moves a node under another node or customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-move ... Required Scalar Argument <name> (string) Required. The name of the node to move. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveNodeRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=takimata Required. The name of the new parent resource node or customer to reparent the node under. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Move"},{"location":"nodes_nodes-move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-move ...","title":"Scopes"},{"location":"nodes_nodes-move/#required-scalar-argument","text":"<name> (string) Required. The name of the node to move.","title":"Required Scalar Argument"},{"location":"nodes_nodes-move/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalMoveNodeRequest: destination: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . destination=takimata Required. The name of the new parent resource node or customer to reparent the node under.","title":"Required Request Value"},{"location":"nodes_nodes-move/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-nodes-create/","text":"Creates a new node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-nodes-create ... Required Scalar Argument <parent> (string) Required. The parent resource name where the node is to be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The node's display name. name=tempor Output only. Resource name. sas-user-ids=nonumy User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Nodes Create"},{"location":"nodes_nodes-nodes-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-nodes-create ...","title":"Scopes"},{"location":"nodes_nodes-nodes-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name where the node is to be created.","title":"Required Scalar Argument"},{"location":"nodes_nodes-nodes-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=et The node's display name. name=tempor Output only. Resource name. sas-user-ids=nonumy User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"nodes_nodes-nodes-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-nodes-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-nodes-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-nodes-list/","text":"Lists nodes. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-nodes-list ... Required Scalar Argument <parent> (string) Required. The parent resource name, for example, \"nodes/1\". Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Nodes List"},{"location":"nodes_nodes-nodes-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-nodes-list ...","title":"Scopes"},{"location":"nodes_nodes-nodes-list/#required-scalar-argument","text":"<parent> (string) Required. The parent resource name, for example, \"nodes/1\".","title":"Required Scalar Argument"},{"location":"nodes_nodes-nodes-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-nodes-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered. -p page-size=integer The maximum number of nodes to return in the response. -p page-token=string A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.","title":"Optional Method Properties"},{"location":"nodes_nodes-nodes-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"nodes_nodes-patch/","text":"Updates an existing node. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-patch ... Required Scalar Argument <name> (string) Output only. Resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sanctus The node's display name. name=labore Output only. Resource name. sas-user-ids=est User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Nodes Patch"},{"location":"nodes_nodes-patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> nodes nodes-patch ...","title":"Scopes"},{"location":"nodes_nodes-patch/#required-scalar-argument","text":"<name> (string) Output only. Resource name.","title":"Required Scalar Argument"},{"location":"nodes_nodes-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalNode: display-name: string name: string sas-user-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=sanctus The node's display name. name=labore Output only. Resource name. sas-user-ids=est User ids used by the devices belonging to this node. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"nodes_nodes-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"nodes_nodes-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"nodes_nodes-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Fields to be updated.","title":"Optional Method Properties"},{"location":"nodes_nodes-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"policies_get/","text":"Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies get ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalGetPolicyRequest: resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . resource=sadipscing Required. The resource for which the policy is being requested. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"policies_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies get ...","title":"Scopes"},{"location":"policies_get/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalGetPolicyRequest: resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . resource=sadipscing Required. The resource for which the policy is being requested.","title":"Required Request Value"},{"location":"policies_get/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"policies_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"policies_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"policies_set/","text":"Sets the access control policy on the specified resource. Replaces any existing policy. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies set ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSetPolicyRequest: disable-notification: boolean policy: etag: string resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . disable-notification=false Optional. Set the field as true to disable the onboarding notification. policy etag=elitr The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly. .. resource=sit Required. The resource for which the policy is being specified. This policy replaces any existing policy. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set"},{"location":"policies_set/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies set ...","title":"Scopes"},{"location":"policies_set/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalSetPolicyRequest: disable-notification: boolean policy: etag: string resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . disable-notification=false Optional. Set the field as true to disable the onboarding notification. policy etag=elitr The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly. .. resource=sit Required. The resource for which the policy is being specified. This policy replaces any existing policy.","title":"Required Request Value"},{"location":"policies_set/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"policies_set/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"policies_set/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"policies_test/","text":"Returns permissions that a caller has on the specified resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies test ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalTestPermissionsRequest: permissions: [string] resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=invidunt The set of permissions to check for the resource . Each invocation of this argument appends the given value to the array. resource=dolore Required. The resource for which the permissions are being requested. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Test"},{"location":"policies_test/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sasportal If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: prod-tt-sasportal1-alpha1 --scope <scope> policies test ...","title":"Scopes"},{"location":"policies_test/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SasPortalTestPermissionsRequest: permissions: [string] resource: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=invidunt The set of permissions to check for the resource . Each invocation of this argument appends the given value to the array. resource=dolore Required. The resource for which the permissions are being requested.","title":"Required Request Value"},{"location":"policies_test/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"policies_test/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"policies_test/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}