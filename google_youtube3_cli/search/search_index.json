{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The youtube3 command-line interface (CLI) allows to use most features of the Google YouTube service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the YouTube API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-youtube3-cli Find the source code on github . Usage This documentation was generated from the YouTube API at revision 20240303 . The CLI is at version 5.0.4 . youtube3 [options] abuse-reports insert (-r <kv>)... [-p <v>]... [-o <out>] activities list <part>... [-p <v>]... [-o <out>] captions delete <id> [-p <v>]... download <id> [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list <part>... <video-id> [-p <v>]... [-o <out>] update (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] channel-banners insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] channel-sections delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] channels list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] comment-threads insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] comments delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] mark-as-spam <id>... [-p <v>]... set-moderation-status <id>... <moderation-status> [-p <v>]... update (-r <kv>)... [-p <v>]... [-o <out>] i18n-languages list <part>... [-p <v>]... [-o <out>] i18n-regions list <part>... [-p <v>]... [-o <out>] live-broadcasts bind <id> <part>... [-p <v>]... [-o <out>] delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] insert-cuepoint (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] transition <broadcast-status> <id> <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] live-chat-bans delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] live-chat-messages delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <live-chat-id> <part>... [-p <v>]... [-o <out>] live-chat-moderators delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <live-chat-id> <part>... [-p <v>]... [-o <out>] live-streams delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] members list <part>... [-p <v>]... [-o <out>] memberships-levels list <part>... [-p <v>]... [-o <out>] playlist-images delete [-p <v>]... insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] playlist-items delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] playlists delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] search list <part>... [-p <v>]... [-o <out>] subscriptions delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] super-chat-events list <part>... [-p <v>]... [-o <out>] tests insert (-r <kv>)... [-p <v>]... [-o <out>] third-party-links delete <linking-token> <type> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] thumbnails set <video-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] video-abuse-report-reasons list <part>... [-p <v>]... [-o <out>] video-categories list <part>... [-p <v>]... [-o <out>] videos delete <id> [-p <v>]... get-rating <id>... [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] rate <id> <rating> [-p <v>]... report-abuse (-r <kv>)... [-p <v>]... update (-r <kv>)... [-p <v>]... [-o <out>] watermarks set <channel-id> (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... unset <channel-id> [-p <v>]... youtube v3-update-comment-threads (-r <kv>)... [-p <v>]... [-o <out>] youtube3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with youtube3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/youtube3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/youtube3-secret.json , assuming that the required youtube API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. youtube3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-youtube3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the YouTube API at revision 20240303 . The CLI is at version 5.0.4 . youtube3 [options] abuse-reports insert (-r <kv>)... [-p <v>]... [-o <out>] activities list <part>... [-p <v>]... [-o <out>] captions delete <id> [-p <v>]... download <id> [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list <part>... <video-id> [-p <v>]... [-o <out>] update (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] channel-banners insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] channel-sections delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] channels list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] comment-threads insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] comments delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] mark-as-spam <id>... [-p <v>]... set-moderation-status <id>... <moderation-status> [-p <v>]... update (-r <kv>)... [-p <v>]... [-o <out>] i18n-languages list <part>... [-p <v>]... [-o <out>] i18n-regions list <part>... [-p <v>]... [-o <out>] live-broadcasts bind <id> <part>... [-p <v>]... [-o <out>] delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] insert-cuepoint (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] transition <broadcast-status> <id> <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] live-chat-bans delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] live-chat-messages delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <live-chat-id> <part>... [-p <v>]... [-o <out>] live-chat-moderators delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <live-chat-id> <part>... [-p <v>]... [-o <out>] live-streams delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] members list <part>... [-p <v>]... [-o <out>] memberships-levels list <part>... [-p <v>]... [-o <out>] playlist-images delete [-p <v>]... insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] playlist-items delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] playlists delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] search list <part>... [-p <v>]... [-o <out>] subscriptions delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] super-chat-events list <part>... [-p <v>]... [-o <out>] tests insert (-r <kv>)... [-p <v>]... [-o <out>] third-party-links delete <linking-token> <type> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] thumbnails set <video-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] video-abuse-report-reasons list <part>... [-p <v>]... [-o <out>] video-categories list <part>... [-p <v>]... [-o <out>] videos delete <id> [-p <v>]... get-rating <id>... [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list <part>... [-p <v>]... [-o <out>] rate <id> <rating> [-p <v>]... report-abuse (-r <kv>)... [-p <v>]... update (-r <kv>)... [-p <v>]... [-o <out>] watermarks set <channel-id> (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... unset <channel-id> [-p <v>]... youtube v3-update-comment-threads (-r <kv>)... [-p <v>]... [-o <out>] youtube3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with youtube3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/youtube3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/youtube3-secret.json , assuming that the required youtube API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. youtube3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"abuse-reports_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> abuse-reports insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AbuseReport: description: string subject: id: string type-id: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=et No description provided. subject id=magna No description provided. type-id=no No description provided. url=ipsum No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"abuse-reports_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> abuse-reports insert ...","title":"Scopes"},{"location":"abuse-reports_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AbuseReport: description: string subject: id: string type-id: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=et No description provided. subject id=magna No description provided. type-id=no No description provided. url=ipsum No description provided.","title":"Required Request Value"},{"location":"abuse-reports_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"abuse-reports_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"abuse-reports_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"activities_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> activities list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string No description provided. -p home=boolean No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p published-after=string No description provided. -p published-before=string No description provided. -p region-code=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"activities_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> activities list ...","title":"Scopes"},{"location":"activities_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"activities_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"activities_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string No description provided. -p home=boolean No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p published-after=string No description provided. -p published-before=string No description provided. -p region-code=string No description provided.","title":"Optional Method Properties"},{"location":"activities_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"captions_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"captions_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions delete ...","title":"Scopes"},{"location":"captions_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"captions_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"captions_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"captions_download/","text":"Downloads a caption track. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions download ... Required Scalar Argument <id> (string) The ID of the caption track to download, required for One Platform. Optional Output Flags The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p tfmt=string Convert the captions into this format. Supported options are sbv, srt, and vtt. -p tlang=string tlang is the language code; machine translate the captions into this language. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Download"},{"location":"captions_download/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions download ...","title":"Scopes"},{"location":"captions_download/#required-scalar-argument","text":"<id> (string) The ID of the caption track to download, required for One Platform.","title":"Required Scalar Argument"},{"location":"captions_download/#optional-output-flags","text":"The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"captions_download/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p tfmt=string Convert the captions into this format. Supported options are sbv, srt, and vtt. -p tlang=string tlang is the language code; machine translate the captions into this language.","title":"Optional Method Properties"},{"location":"captions_download/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"captions_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Caption: etag: string id: string kind: string snippet: audio-track-type: string failure-reason: string is-auto-synced: boolean is-cc: boolean is-draft: boolean is-easy-reader: boolean is-large: boolean language: string last-updated: string name: string status: string track-kind: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=voluptua. Etag of this resource. id=at The ID that YouTube uses to uniquely identify the caption track. kind=sanctus Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\". snippet audio-track-type=sed The type of audio track associated with the caption track. failure-reason=amet. The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed. is-auto-synced=true Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions. is-cc=true Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false. is-draft=true Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update is-easy-reader=true Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false. is-large=true Indicates whether the caption track uses large text for the vision-impaired. The default value is false. language=gubergren The language of the caption track. The property value is a BCP-47 language tag. last-updated=eos The date and time when the caption track was last updated. name=dolor The name of the caption track. The name is intended to be visible to the user as an option during playback. status=ea The caption track's status. track-kind=ipsum The caption track's type. video-id=invidunt The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p sync=boolean Extra parameter to allow automatically syncing the uploaded caption/transcript with the audio. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"captions_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions insert ...","title":"Scopes"},{"location":"captions_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Caption: etag: string id: string kind: string snippet: audio-track-type: string failure-reason: string is-auto-synced: boolean is-cc: boolean is-draft: boolean is-easy-reader: boolean is-large: boolean language: string last-updated: string name: string status: string track-kind: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=voluptua. Etag of this resource. id=at The ID that YouTube uses to uniquely identify the caption track. kind=sanctus Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\". snippet audio-track-type=sed The type of audio track associated with the caption track. failure-reason=amet. The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed. is-auto-synced=true Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions. is-cc=true Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false. is-draft=true Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update is-easy-reader=true Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false. is-large=true Indicates whether the caption track uses large text for the vision-impaired. The default value is false. language=gubergren The language of the caption track. The property value is a BCP-47 language tag. last-updated=eos The date and time when the caption track was last updated. name=dolor The name of the caption track. The name is intended to be visible to the user as an option during playback. status=ea The caption track's status. track-kind=ipsum The caption track's type. video-id=invidunt The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert","title":"Required Request Value"},{"location":"captions_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"captions_insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"captions_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"captions_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is be on behalf of -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p sync=boolean Extra parameter to allow automatically syncing the uploaded caption/transcript with the audio.","title":"Optional Method Properties"},{"location":"captions_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"captions_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions list ... Required Scalar Arguments <part>... (string) The part parameter specifies a comma-separated list of one or more caption resource parts that the API response will include. The part names that you can include in the parameter value are id and snippet. This property can be specified one or more times <video-id> (string) Returns the captions for the specified video. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Returns the captions with the given IDs for Stubby or Apiary. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is on behalf of. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"captions_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions list ...","title":"Scopes"},{"location":"captions_list/#required-scalar-arguments","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more caption resource parts that the API response will include. The part names that you can include in the parameter value are id and snippet. This property can be specified one or more times <video-id> (string) Returns the captions for the specified video.","title":"Required Scalar Arguments"},{"location":"captions_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"captions_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Returns the captions with the given IDs for Stubby or Apiary. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is on behalf of. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"captions_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"captions_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Caption: etag: string id: string kind: string snippet: audio-track-type: string failure-reason: string is-auto-synced: boolean is-cc: boolean is-draft: boolean is-easy-reader: boolean is-large: boolean language: string last-updated: string name: string status: string track-kind: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=amet Etag of this resource. id=duo The ID that YouTube uses to uniquely identify the caption track. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\". snippet audio-track-type=sed The type of audio track associated with the caption track. failure-reason=ut The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed. is-auto-synced=true Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions. is-cc=true Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false. is-draft=true Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update is-easy-reader=true Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false. is-large=false Indicates whether the caption track uses large text for the vision-impaired. The default value is false. language=lorem The language of the caption track. The property value is a BCP-47 language tag. last-updated=eos The date and time when the caption track was last updated. name=labore The name of the caption track. The name is intended to be visible to the user as an option during playback. status=sed The caption track's status. track-kind=duo The caption track's type. video-id=sed The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is on behalf of. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p sync=boolean Extra parameter to allow automatically syncing the uploaded caption/transcript with the audio. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"captions_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> captions update ...","title":"Scopes"},{"location":"captions_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Caption: etag: string id: string kind: string snippet: audio-track-type: string failure-reason: string is-auto-synced: boolean is-cc: boolean is-draft: boolean is-easy-reader: boolean is-large: boolean language: string last-updated: string name: string status: string track-kind: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=amet Etag of this resource. id=duo The ID that YouTube uses to uniquely identify the caption track. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\". snippet audio-track-type=sed The type of audio track associated with the caption track. failure-reason=ut The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed. is-auto-synced=true Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions. is-cc=true Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false. is-draft=true Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update is-easy-reader=true Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false. is-large=false Indicates whether the caption track uses large text for the vision-impaired. The default value is false. language=lorem The language of the caption track. The property value is a BCP-47 language tag. last-updated=eos The date and time when the caption track was last updated. name=labore The name of the caption track. The name is intended to be visible to the user as an option during playback. status=sed The caption track's status. track-kind=duo The caption track's type. video-id=sed The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert","title":"Required Request Value"},{"location":"captions_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"captions_update/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"captions_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"captions_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of=string ID of the Google+ Page for the channel that the request is on behalf of. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p sync=boolean Extra parameter to allow automatically syncing the uploaded caption/transcript with the audio.","title":"Optional Method Properties"},{"location":"captions_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channel-banners_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-banners insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelBannerResource: etag: string kind: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=no No description provided. kind=stet Identifies what kind of resource this is. Value: the fixed string \"youtube#channelBannerResource\". url=kasd The URL of this banner image. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Unused, channel_id is currently derived from the security context of the requestor. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"channel-banners_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-banners insert ...","title":"Scopes"},{"location":"channel-banners_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelBannerResource: etag: string kind: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=no No description provided. kind=stet Identifies what kind of resource this is. Value: the fixed string \"youtube#channelBannerResource\". url=kasd The URL of this banner image.","title":"Required Request Value"},{"location":"channel-banners_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"channel-banners_insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"channel-banners_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channel-banners_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Unused, channel_id is currently derived from the security context of the requestor. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"channel-banners_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channel-sections_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"channel-sections_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections delete ...","title":"Scopes"},{"location":"channel-sections_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"channel-sections_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"channel-sections_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channel-sections_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelSection: content-details: channels: [string] playlists: [string] etag: string id: string kind: string snippet: channel-id: string default-language: string localized: title: string position: integer style: string title: string type: string targeting: countries: [string] languages: [string] regions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details channels=et The channel ids for type multiple_channels. Each invocation of this argument appends the given value to the array. playlists=sed The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed. Each invocation of this argument appends the given value to the array. .. etag=et Etag of this resource. id=et The ID that YouTube uses to uniquely identify the channel section. kind=vero Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\". snippet channel-id=erat The ID that YouTube uses to uniquely identify the channel that published the channel section. default-language=sed The language of the channel section's default title and description. localized title=duo The localized strings for channel section's title. .. position=67 The position of the channel section in the channel. style=et The style of the channel section. title=voluptua. The channel section's title for multiple_playlists and multiple_channels. type=amet. The type of the channel section. ..targeting countries=consetetur The country the channel section is targeting. Each invocation of this argument appends the given value to the array. languages=diam The language the channel section is targeting. Each invocation of this argument appends the given value to the array. regions=dolor The region the channel section is targeting. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"channel-sections_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections insert ...","title":"Scopes"},{"location":"channel-sections_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelSection: content-details: channels: [string] playlists: [string] etag: string id: string kind: string snippet: channel-id: string default-language: string localized: title: string position: integer style: string title: string type: string targeting: countries: [string] languages: [string] regions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details channels=et The channel ids for type multiple_channels. Each invocation of this argument appends the given value to the array. playlists=sed The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed. Each invocation of this argument appends the given value to the array. .. etag=et Etag of this resource. id=et The ID that YouTube uses to uniquely identify the channel section. kind=vero Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\". snippet channel-id=erat The ID that YouTube uses to uniquely identify the channel that published the channel section. default-language=sed The language of the channel section's default title and description. localized title=duo The localized strings for channel section's title. .. position=67 The position of the channel section in the channel. style=et The style of the channel section. title=voluptua. The channel section's title for multiple_playlists and multiple_channels. type=amet. The type of the channel section. ..targeting countries=consetetur The country the channel section is targeting. Each invocation of this argument appends the given value to the array. languages=diam The language the channel section is targeting. Each invocation of this argument appends the given value to the array. regions=dolor The region the channel section is targeting. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"channel-sections_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"channel-sections_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channel-sections_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"channel-sections_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channel-sections_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the channelSection. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the ChannelSections owned by the specified channel ID. -p hl=string Return content in specified language -p id=string Return the ChannelSections with the given IDs for Stubby or Apiary. -p mine=boolean Return the ChannelSections owned by the authenticated user. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"channel-sections_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections list ...","title":"Scopes"},{"location":"channel-sections_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the channelSection. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"channel-sections_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channel-sections_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the ChannelSections owned by the specified channel ID. -p hl=string Return content in specified language -p id=string Return the ChannelSections with the given IDs for Stubby or Apiary. -p mine=boolean Return the ChannelSections owned by the authenticated user. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"channel-sections_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channel-sections_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelSection: content-details: channels: [string] playlists: [string] etag: string id: string kind: string snippet: channel-id: string default-language: string localized: title: string position: integer style: string title: string type: string targeting: countries: [string] languages: [string] regions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details channels=et The channel ids for type multiple_channels. Each invocation of this argument appends the given value to the array. playlists=et The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed. Each invocation of this argument appends the given value to the array. .. etag=sadipscing Etag of this resource. id=stet The ID that YouTube uses to uniquely identify the channel section. kind=dolor Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\". snippet channel-id=duo The ID that YouTube uses to uniquely identify the channel that published the channel section. default-language=vero The language of the channel section's default title and description. localized title=vero The localized strings for channel section's title. .. position=13 The position of the channel section in the channel. style=stet The style of the channel section. title=vero The channel section's title for multiple_playlists and multiple_channels. type=elitr The type of the channel section. ..targeting countries=lorem The country the channel section is targeting. Each invocation of this argument appends the given value to the array. languages=diam The language the channel section is targeting. Each invocation of this argument appends the given value to the array. regions=no The region the channel section is targeting. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"channel-sections_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channel-sections update ...","title":"Scopes"},{"location":"channel-sections_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChannelSection: content-details: channels: [string] playlists: [string] etag: string id: string kind: string snippet: channel-id: string default-language: string localized: title: string position: integer style: string title: string type: string targeting: countries: [string] languages: [string] regions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details channels=et The channel ids for type multiple_channels. Each invocation of this argument appends the given value to the array. playlists=et The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed. Each invocation of this argument appends the given value to the array. .. etag=sadipscing Etag of this resource. id=stet The ID that YouTube uses to uniquely identify the channel section. kind=dolor Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\". snippet channel-id=duo The ID that YouTube uses to uniquely identify the channel that published the channel section. default-language=vero The language of the channel section's default title and description. localized title=vero The localized strings for channel section's title. .. position=13 The position of the channel section in the channel. style=stet The style of the channel section. title=vero The channel section's title for multiple_playlists and multiple_channels. type=elitr The type of the channel section. ..targeting countries=lorem The country the channel section is targeting. Each invocation of this argument appends the given value to the array. languages=diam The language the channel section is targeting. Each invocation of this argument appends the given value to the array. regions=no The region the channel section is targeting. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"channel-sections_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"channel-sections_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channel-sections_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"channel-sections_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channels_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner https://www.googleapis.com/auth/youtubepartner-channel-audit If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> channels list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails , the API response will also contain all of those nested properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p category-id=string Return the channels within the specified guide category ID. -p for-handle=string Return the channel associated with a YouTube handle. -p for-username=string Return the channel associated with a YouTube username. -p hl=string Stands for \"host language\". Specifies the localization language of the metadata to be filled into snippet.localized. The field is filled with the default metadata if there is no localization in the specified language. The parameter value must be a language code included in the list returned by the i18nLanguages.list method (e.g. en_US, es_MX). -p id=string Return the channels with the specified IDs. -p managed-by-me=boolean Return the channels managed by the authenticated user. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Return the ids of channels owned by the authenticated user. -p my-subscribers=boolean Return the channels subscribed to the authenticated user -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"channels_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner https://www.googleapis.com/auth/youtubepartner-channel-audit If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> channels list ...","title":"Scopes"},{"location":"channels_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails , the API response will also contain all of those nested properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"channels_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channels_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p category-id=string Return the channels within the specified guide category ID. -p for-handle=string Return the channel associated with a YouTube handle. -p for-username=string Return the channel associated with a YouTube username. -p hl=string Stands for \"host language\". Specifies the localization language of the metadata to be filled into snippet.localized. The field is filled with the default metadata if there is no localization in the specified language. The parameter value must be a language code included in the list returned by the i18nLanguages.list method (e.g. en_US, es_MX). -p id=string Return the channels with the specified IDs. -p managed-by-me=boolean Return the channels managed by the authenticated user. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Return the ids of channels owned by the authenticated user. -p my-subscribers=boolean Return the channels subscribed to the authenticated user -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"channels_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"channels_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channels update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: audit-details: community-guidelines-good-standing: boolean content-id-claims-good-standing: boolean copyright-strikes-good-standing: boolean branding-settings: channel: country: string default-language: string default-tab: string description: string featured-channels-title: string featured-channels-urls: [string] keywords: string moderate-comments: boolean profile-color: string show-browse-view: boolean show-related-channels: boolean title: string tracking-analytics-account-id: string unsubscribed-trailer: string image: background-image-url: default: string default-language: value: string banner-external-url: string banner-image-url: string banner-mobile-extra-hd-image-url: string banner-mobile-hd-image-url: string banner-mobile-image-url: string banner-mobile-low-image-url: string banner-mobile-medium-hd-image-url: string banner-tablet-extra-hd-image-url: string banner-tablet-hd-image-url: string banner-tablet-image-url: string banner-tablet-low-image-url: string banner-tv-high-image-url: string banner-tv-image-url: string banner-tv-low-image-url: string banner-tv-medium-image-url: string large-branded-banner-image-imap-script: default: string default-language: value: string large-branded-banner-image-url: default: string default-language: value: string small-branded-banner-image-imap-script: default: string default-language: value: string small-branded-banner-image-url: default: string default-language: value: string tracking-image-url: string watch-icon-image-url: string watch: background-color: string featured-playlist-id: string text-color: string content-details: related-playlists: favorites: string likes: string uploads: string watch-history: string watch-later: string content-owner-details: content-owner: string time-linked: string etag: string id: string kind: string snippet: country: string custom-url: string default-language: string description: string localized: description: string title: string published-at: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 hidden-subscriber-count: boolean subscriber-count: int64 video-count: int64 view-count: int64 status: is-linked: boolean long-uploads-status: string made-for-kids: boolean privacy-status: string self-declared-made-for-kids: boolean topic-details: topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audit-details community-guidelines-good-standing=false Whether or not the channel respects the community guidelines. content-id-claims-good-standing=true Whether or not the channel has any unresolved claims. copyright-strikes-good-standing=true Whether or not the channel has any copyright strikes. ..branding-settings.channel country=voluptua. The country of the channel. default-language=et No description provided. default-tab=erat Which content tab users should see when viewing the channel. description=consetetur Specifies the channel description. featured-channels-title=amet. Title for the featured channels tab. featured-channels-urls=sed The list of featured channels. Each invocation of this argument appends the given value to the array. keywords=takimata Lists keywords associated with the channel, comma-separated. moderate-comments=true Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible. profile-color=et A prominent color that can be rendered on this channel page. show-browse-view=false Whether the tab to browse the videos should be displayed. show-related-channels=false Whether related channels should be proposed. title=amet. Specifies the channel title. tracking-analytics-account-id=ea The ID for a Google Analytics account to track and measure traffic to the channels. unsubscribed-trailer=sadipscing The trailer of the channel, for users that are not subscribers. ..image.background-image-url default=lorem No description provided. default-language value=invidunt No description provided. ... banner-external-url=no This is generated when a ChannelBanner.Insert request has succeeded for the given channel. banner-image-url=est Banner image. Desktop size (1060x175). banner-mobile-extra-hd-image-url=at Banner image. Mobile size high resolution (1440x395). banner-mobile-hd-image-url=sed Banner image. Mobile size high resolution (1280x360). banner-mobile-image-url=sit Banner image. Mobile size (640x175). banner-mobile-low-image-url=et Banner image. Mobile size low resolution (320x88). banner-mobile-medium-hd-image-url=tempor Banner image. Mobile size medium/high resolution (960x263). banner-tablet-extra-hd-image-url=aliquyam Banner image. Tablet size extra high resolution (2560x424). banner-tablet-hd-image-url=ipsum Banner image. Tablet size high resolution (2276x377). banner-tablet-image-url=et Banner image. Tablet size (1707x283). banner-tablet-low-image-url=sanctus Banner image. Tablet size low resolution (1138x188). banner-tv-high-image-url=lorem Banner image. TV size high resolution (1920x1080). banner-tv-image-url=est Banner image. TV size extra high resolution (2120x1192). banner-tv-low-image-url=sed Banner image. TV size low resolution (854x480). banner-tv-medium-image-url=diam Banner image. TV size medium resolution (1280x720). large-branded-banner-image-imap-script default=dolores No description provided. default-language value=dolores No description provided. ...large-branded-banner-image-url default=et No description provided. default-language value=sed No description provided. ...small-branded-banner-image-imap-script default=no No description provided. default-language value=et No description provided. ...small-branded-banner-image-url default=elitr No description provided. default-language value=sed No description provided. ... tracking-image-url=no The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages. watch-icon-image-url=nonumy No description provided. ..watch background-color=at The text color for the video watch page's branded area. featured-playlist-id=sadipscing An ID that uniquely identifies a playlist that displays next to the video player. text-color=aliquyam The background color for the video watch page's branded area. ...content-details.related-playlists favorites=dolores The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. likes=sadipscing The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. uploads=erat The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos. watch-history=aliquyam The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. watch-later=amet The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. ...content-owner-details content-owner=est The ID of the content owner linked to the channel. time-linked=et The date and time when the channel was linked to the content owner. .. etag=sea Etag of this resource. id=consetetur The ID that YouTube uses to uniquely identify the channel. kind=consetetur Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\". snippet country=stet The country of the channel. custom-url=est The custom url of the channel. default-language=aliquyam The language of the channel's default title and description. description=elitr The description of the channel. localized description=duo The localized strings for channel's description. title=diam The localized strings for channel's title. .. published-at=est The date and time that the channel was created. thumbnails.default height=48 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=26 (Optional) Width of the thumbnail image. ..high height=45 (Optional) Height of the thumbnail image. url=ea The thumbnail image's URL. width=86 (Optional) Width of the thumbnail image. ..maxres height=82 (Optional) Height of the thumbnail image. url=eos The thumbnail image's URL. width=33 (Optional) Width of the thumbnail image. ..medium height=91 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ..standard height=17 (Optional) Height of the thumbnail image. url=eirmod The thumbnail image's URL. width=50 (Optional) Width of the thumbnail image. ... title=accusam The channel's title. ..statistics comment-count=-47 The number of comments for the channel. hidden-subscriber-count=true Whether or not the number of subscribers is shown for this user. subscriber-count=-81 The number of subscribers that the channel has. video-count=-73 The number of videos uploaded to the channel. view-count=-10 The number of times the channel has been viewed. ..status is-linked=true If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity. long-uploads-status=lorem The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information. made-for-kids=false No description provided. privacy-status=dolor Privacy status of the channel. self-declared-made-for-kids=true No description provided. ..topic-details topic-categories=erat A list of Wikipedia URLs that describe the channel's content. Each invocation of this argument appends the given value to the array. topic-ids=sea A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs to be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"channels_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> channels update ...","title":"Scopes"},{"location":"channels_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: audit-details: community-guidelines-good-standing: boolean content-id-claims-good-standing: boolean copyright-strikes-good-standing: boolean branding-settings: channel: country: string default-language: string default-tab: string description: string featured-channels-title: string featured-channels-urls: [string] keywords: string moderate-comments: boolean profile-color: string show-browse-view: boolean show-related-channels: boolean title: string tracking-analytics-account-id: string unsubscribed-trailer: string image: background-image-url: default: string default-language: value: string banner-external-url: string banner-image-url: string banner-mobile-extra-hd-image-url: string banner-mobile-hd-image-url: string banner-mobile-image-url: string banner-mobile-low-image-url: string banner-mobile-medium-hd-image-url: string banner-tablet-extra-hd-image-url: string banner-tablet-hd-image-url: string banner-tablet-image-url: string banner-tablet-low-image-url: string banner-tv-high-image-url: string banner-tv-image-url: string banner-tv-low-image-url: string banner-tv-medium-image-url: string large-branded-banner-image-imap-script: default: string default-language: value: string large-branded-banner-image-url: default: string default-language: value: string small-branded-banner-image-imap-script: default: string default-language: value: string small-branded-banner-image-url: default: string default-language: value: string tracking-image-url: string watch-icon-image-url: string watch: background-color: string featured-playlist-id: string text-color: string content-details: related-playlists: favorites: string likes: string uploads: string watch-history: string watch-later: string content-owner-details: content-owner: string time-linked: string etag: string id: string kind: string snippet: country: string custom-url: string default-language: string description: string localized: description: string title: string published-at: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 hidden-subscriber-count: boolean subscriber-count: int64 video-count: int64 view-count: int64 status: is-linked: boolean long-uploads-status: string made-for-kids: boolean privacy-status: string self-declared-made-for-kids: boolean topic-details: topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audit-details community-guidelines-good-standing=false Whether or not the channel respects the community guidelines. content-id-claims-good-standing=true Whether or not the channel has any unresolved claims. copyright-strikes-good-standing=true Whether or not the channel has any copyright strikes. ..branding-settings.channel country=voluptua. The country of the channel. default-language=et No description provided. default-tab=erat Which content tab users should see when viewing the channel. description=consetetur Specifies the channel description. featured-channels-title=amet. Title for the featured channels tab. featured-channels-urls=sed The list of featured channels. Each invocation of this argument appends the given value to the array. keywords=takimata Lists keywords associated with the channel, comma-separated. moderate-comments=true Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible. profile-color=et A prominent color that can be rendered on this channel page. show-browse-view=false Whether the tab to browse the videos should be displayed. show-related-channels=false Whether related channels should be proposed. title=amet. Specifies the channel title. tracking-analytics-account-id=ea The ID for a Google Analytics account to track and measure traffic to the channels. unsubscribed-trailer=sadipscing The trailer of the channel, for users that are not subscribers. ..image.background-image-url default=lorem No description provided. default-language value=invidunt No description provided. ... banner-external-url=no This is generated when a ChannelBanner.Insert request has succeeded for the given channel. banner-image-url=est Banner image. Desktop size (1060x175). banner-mobile-extra-hd-image-url=at Banner image. Mobile size high resolution (1440x395). banner-mobile-hd-image-url=sed Banner image. Mobile size high resolution (1280x360). banner-mobile-image-url=sit Banner image. Mobile size (640x175). banner-mobile-low-image-url=et Banner image. Mobile size low resolution (320x88). banner-mobile-medium-hd-image-url=tempor Banner image. Mobile size medium/high resolution (960x263). banner-tablet-extra-hd-image-url=aliquyam Banner image. Tablet size extra high resolution (2560x424). banner-tablet-hd-image-url=ipsum Banner image. Tablet size high resolution (2276x377). banner-tablet-image-url=et Banner image. Tablet size (1707x283). banner-tablet-low-image-url=sanctus Banner image. Tablet size low resolution (1138x188). banner-tv-high-image-url=lorem Banner image. TV size high resolution (1920x1080). banner-tv-image-url=est Banner image. TV size extra high resolution (2120x1192). banner-tv-low-image-url=sed Banner image. TV size low resolution (854x480). banner-tv-medium-image-url=diam Banner image. TV size medium resolution (1280x720). large-branded-banner-image-imap-script default=dolores No description provided. default-language value=dolores No description provided. ...large-branded-banner-image-url default=et No description provided. default-language value=sed No description provided. ...small-branded-banner-image-imap-script default=no No description provided. default-language value=et No description provided. ...small-branded-banner-image-url default=elitr No description provided. default-language value=sed No description provided. ... tracking-image-url=no The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages. watch-icon-image-url=nonumy No description provided. ..watch background-color=at The text color for the video watch page's branded area. featured-playlist-id=sadipscing An ID that uniquely identifies a playlist that displays next to the video player. text-color=aliquyam The background color for the video watch page's branded area. ...content-details.related-playlists favorites=dolores The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. likes=sadipscing The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. uploads=erat The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos. watch-history=aliquyam The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. watch-later=amet The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. ...content-owner-details content-owner=est The ID of the content owner linked to the channel. time-linked=et The date and time when the channel was linked to the content owner. .. etag=sea Etag of this resource. id=consetetur The ID that YouTube uses to uniquely identify the channel. kind=consetetur Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\". snippet country=stet The country of the channel. custom-url=est The custom url of the channel. default-language=aliquyam The language of the channel's default title and description. description=elitr The description of the channel. localized description=duo The localized strings for channel's description. title=diam The localized strings for channel's title. .. published-at=est The date and time that the channel was created. thumbnails.default height=48 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=26 (Optional) Width of the thumbnail image. ..high height=45 (Optional) Height of the thumbnail image. url=ea The thumbnail image's URL. width=86 (Optional) Width of the thumbnail image. ..maxres height=82 (Optional) Height of the thumbnail image. url=eos The thumbnail image's URL. width=33 (Optional) Width of the thumbnail image. ..medium height=91 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ..standard height=17 (Optional) Height of the thumbnail image. url=eirmod The thumbnail image's URL. width=50 (Optional) Width of the thumbnail image. ... title=accusam The channel's title. ..statistics comment-count=-47 The number of comments for the channel. hidden-subscriber-count=true Whether or not the number of subscribers is shown for this user. subscriber-count=-81 The number of subscribers that the channel has. video-count=-73 The number of videos uploaded to the channel. view-count=-10 The number of times the channel has been viewed. ..status is-linked=true If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity. long-uploads-status=lorem The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information. made-for-kids=false No description provided. privacy-status=dolor Privacy status of the channel. self-declared-made-for-kids=true No description provided. ..topic-details topic-categories=erat A list of Wikipedia URLs that describe the channel's content. Each invocation of this argument appends the given value to the array. topic-ids=sea A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"channels_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"channels_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"channels_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs to be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"channels_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comment-threads_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comment-threads insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CommentThread: etag: string id: string kind: string snippet: can-reply: boolean channel-id: string is-public: boolean top-level-comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string total-reply-count: integer video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=nonumy Etag of this resource. id=et The ID that YouTube uses to uniquely identify the comment thread. kind=gubergren Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\". snippet can-reply=true Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field. channel-id=consetetur The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself. is-public=false Whether the thread (and therefore all its comments) is visible to all YouTube users. top-level-comment etag=aliquyam Etag of this resource. id=eos The ID that YouTube uses to uniquely identify the comment. kind=at Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=dolores No description provided. .. author-channel-url=consetetur Link to the author's YouTube channel, if any. author-display-name=gubergren The name of the user who posted the comment. author-profile-image-url=dolor The URL for the avatar of the user who posted the comment. can-rate=true Whether the current viewer can rate this comment. channel-id=amet. The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=51 The total number of likes this comment has received. moderation-status=lorem The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=accusam The unique id of the parent comment, only set for replies. published-at=gubergren The date and time when the comment was originally published. text-display=sadipscing The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=at The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=sit The date and time when the comment was last updated. video-id=duo The ID of the video the comment refers to, if any. viewer-rating=sit The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. ... total-reply-count=18 The total number of replies (not including the top level comment). video-id=et The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"comment-threads_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comment-threads insert ...","title":"Scopes"},{"location":"comment-threads_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CommentThread: etag: string id: string kind: string snippet: can-reply: boolean channel-id: string is-public: boolean top-level-comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string total-reply-count: integer video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=nonumy Etag of this resource. id=et The ID that YouTube uses to uniquely identify the comment thread. kind=gubergren Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\". snippet can-reply=true Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field. channel-id=consetetur The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself. is-public=false Whether the thread (and therefore all its comments) is visible to all YouTube users. top-level-comment etag=aliquyam Etag of this resource. id=eos The ID that YouTube uses to uniquely identify the comment. kind=at Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=dolores No description provided. .. author-channel-url=consetetur Link to the author's YouTube channel, if any. author-display-name=gubergren The name of the user who posted the comment. author-profile-image-url=dolor The URL for the avatar of the user who posted the comment. can-rate=true Whether the current viewer can rate this comment. channel-id=amet. The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=51 The total number of likes this comment has received. moderation-status=lorem The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=accusam The unique id of the parent comment, only set for replies. published-at=gubergren The date and time when the comment was originally published. text-display=sadipscing The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=at The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=sit The date and time when the comment was last updated. video-id=duo The ID of the video the comment refers to, if any. viewer-rating=sit The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. ... total-reply-count=18 The total number of replies (not including the top level comment). video-id=et The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.","title":"Required Request Value"},{"location":"comment-threads_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"comment-threads_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comment-threads_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comment-threads_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comment-threads list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-threads-related-to-channel-id=string Returns the comment threads of all videos of the channel and the channel comments as well. -p channel-id=string Returns the comment threads for all the channel comments (ie does not include comments left on videos). -p id=string Returns the comment threads with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p moderation-status=string Limits the returned comment threads to those with the specified moderation status. Not compatible with the 'id' filter. Valid values: published, heldForReview, likelySpam. -p order=string No description provided. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p search-terms=string Limits the returned comment threads to those matching the specified key words. Not compatible with the 'id' filter. -p text-format=string The requested text format for the returned comments. -p video-id=string Returns the comment threads of the specified video. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"comment-threads_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comment-threads list ...","title":"Scopes"},{"location":"comment-threads_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"comment-threads_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comment-threads_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-threads-related-to-channel-id=string Returns the comment threads of all videos of the channel and the channel comments as well. -p channel-id=string Returns the comment threads for all the channel comments (ie does not include comments left on videos). -p id=string Returns the comment threads with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p moderation-status=string Limits the returned comment threads to those with the specified moderation status. Not compatible with the 'id' filter. Valid values: published, heldForReview, likelySpam. -p order=string No description provided. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p search-terms=string Limits the returned comment threads to those matching the specified key words. Not compatible with the 'id' filter. -p text-format=string The requested text format for the returned comments. -p video-id=string Returns the comment threads of the specified video.","title":"Optional Method Properties"},{"location":"comment-threads_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_delete/","text":"Deletes a resource. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments delete ... Required Scalar Argument <id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"comments_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments delete ...","title":"Scopes"},{"location":"comments_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"comments_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=rebum. Etag of this resource. id=dolor The ID that YouTube uses to uniquely identify the comment. kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=justo No description provided. .. author-channel-url=amet. Link to the author's YouTube channel, if any. author-display-name=no The name of the user who posted the comment. author-profile-image-url=nonumy The URL for the avatar of the user who posted the comment. can-rate=true Whether the current viewer can rate this comment. channel-id=kasd The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=0 The total number of likes this comment has received. moderation-status=sanctus The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=nonumy The unique id of the parent comment, only set for replies. published-at=rebum. The date and time when the comment was originally published. text-display=tempor The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=dolore The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=eos The date and time when the comment was last updated. video-id=amet. The ID of the video the comment refers to, if any. viewer-rating=dolore The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"comments_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments insert ...","title":"Scopes"},{"location":"comments_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=rebum. Etag of this resource. id=dolor The ID that YouTube uses to uniquely identify the comment. kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=justo No description provided. .. author-channel-url=amet. Link to the author's YouTube channel, if any. author-display-name=no The name of the user who posted the comment. author-profile-image-url=nonumy The URL for the avatar of the user who posted the comment. can-rate=true Whether the current viewer can rate this comment. channel-id=kasd The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=0 The total number of likes this comment has received. moderation-status=sanctus The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=nonumy The unique id of the parent comment, only set for replies. published-at=rebum. The date and time when the comment was originally published. text-display=tempor The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=dolore The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=eos The date and time when the comment was last updated. video-id=amet. The ID of the video the comment refers to, if any. viewer-rating=dolore The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.","title":"Required Request Value"},{"location":"comments_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"comments_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more comment resource properties that the API response will include. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Returns the comments with the given IDs for One Platform. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p parent-id=string Returns replies to the specified comment. Note, currently YouTube features only one level of replies (ie replies to top level comments). However replies to replies may be supported in the future. -p text-format=string The requested text format for the returned comments. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"comments_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments list ...","title":"Scopes"},{"location":"comments_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more comment resource properties that the API response will include. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"comments_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Returns the comments with the given IDs for One Platform. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p parent-id=string Returns replies to the specified comment. Note, currently YouTube features only one level of replies (ie replies to top level comments). However replies to replies may be supported in the future. -p text-format=string The requested text format for the returned comments.","title":"Optional Method Properties"},{"location":"comments_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_mark-as-spam/","text":"Expresses the caller's opinion that one or more comments should be flagged as spam. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments mark-as-spam ... Required Scalar Argument <id>... (string) Flags the comments with the given IDs as spam in the caller's opinion. This property can be specified one or more times Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Mark As Spam"},{"location":"comments_mark-as-spam/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments mark-as-spam ...","title":"Scopes"},{"location":"comments_mark-as-spam/#required-scalar-argument","text":"<id>... (string) Flags the comments with the given IDs as spam in the caller's opinion. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"comments_mark-as-spam/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_set-moderation-status/","text":"Sets the moderation status of one or more comments. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments set-moderation-status ... Required Scalar Arguments <id>... (string) Modifies the moderation status of the comments with the given IDs This property can be specified one or more times <moderation-status> (string) Specifies the requested moderation status. Note, comments can be in statuses, which are not available through this call. For example, this call does not allow to mark a comment as 'likely spam'. Valid values: 'heldForReview', 'published' or 'rejected'. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ban-author=boolean If set to true the author of the comment gets added to the ban list. This means all future comments of the author will autmomatically be rejected. Only valid in combination with STATUS_REJECTED. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set Moderation Status"},{"location":"comments_set-moderation-status/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments set-moderation-status ...","title":"Scopes"},{"location":"comments_set-moderation-status/#required-scalar-arguments","text":"<id>... (string) Modifies the moderation status of the comments with the given IDs This property can be specified one or more times <moderation-status> (string) Specifies the requested moderation status. Note, comments can be in statuses, which are not available through this call. For example, this call does not allow to mark a comment as 'likely spam'. Valid values: 'heldForReview', 'published' or 'rejected'.","title":"Required Scalar Arguments"},{"location":"comments_set-moderation-status/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ban-author=boolean If set to true the author of the comment gets added to the ban list. This means all future comments of the author will autmomatically be rejected. Only valid in combination with STATUS_REJECTED.","title":"Optional Method Properties"},{"location":"comments_set-moderation-status/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_update/","text":"Updates an existing resource. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=amet Etag of this resource. id=ut The ID that YouTube uses to uniquely identify the comment. kind=at Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=sit No description provided. .. author-channel-url=vero Link to the author's YouTube channel, if any. author-display-name=duo The name of the user who posted the comment. author-profile-image-url=sadipscing The URL for the avatar of the user who posted the comment. can-rate=false Whether the current viewer can rate this comment. channel-id=rebum. The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=31 The total number of likes this comment has received. moderation-status=kasd The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=sadipscing The unique id of the parent comment, only set for replies. published-at=tempor The date and time when the comment was originally published. text-display=sea The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=et The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=lorem The date and time when the comment was last updated. video-id=magna The ID of the video the comment refers to, if any. viewer-rating=takimata The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"comments_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.force-ssl scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.force-ssl . You can set the scope for this method like this: youtube3 --scope <scope> comments update ...","title":"Scopes"},{"location":"comments_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=amet Etag of this resource. id=ut The ID that YouTube uses to uniquely identify the comment. kind=at Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=sit No description provided. .. author-channel-url=vero Link to the author's YouTube channel, if any. author-display-name=duo The name of the user who posted the comment. author-profile-image-url=sadipscing The URL for the avatar of the user who posted the comment. can-rate=false Whether the current viewer can rate this comment. channel-id=rebum. The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=31 The total number of likes this comment has received. moderation-status=kasd The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=sadipscing The unique id of the parent comment, only set for replies. published-at=tempor The date and time when the comment was originally published. text-display=sea The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=et The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=lorem The date and time when the comment was last updated. video-id=magna The ID of the video the comment refers to, if any. viewer-rating=takimata The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.","title":"Required Request Value"},{"location":"comments_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"comments_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"i18n-languages_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> i18n-languages list ... Required Scalar Argument <part>... (string) The part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"i18n-languages_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> i18n-languages list ...","title":"Scopes"},{"location":"i18n-languages_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"i18n-languages_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"i18n-languages_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided.","title":"Optional Method Properties"},{"location":"i18n-languages_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"i18n-regions_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> i18n-regions list ... Required Scalar Argument <part>... (string) The part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"i18n-regions_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> i18n-regions list ...","title":"Scopes"},{"location":"i18n-regions_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"i18n-regions_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"i18n-regions_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided.","title":"Optional Method Properties"},{"location":"i18n-regions_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_bind/","text":"Bind a broadcast to a stream. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts bind ... Required Scalar Arguments <id> (string) Broadcast to bind to the stream <part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p stream-id=string Stream to bind, if not set unbind the current one. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Bind"},{"location":"live-broadcasts_bind/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts bind ...","title":"Scopes"},{"location":"live-broadcasts_bind/#required-scalar-arguments","text":"<id> (string) Broadcast to bind to the stream <part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status. This property can be specified one or more times","title":"Required Scalar Arguments"},{"location":"live-broadcasts_bind/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_bind/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p stream-id=string Stream to bind, if not set unbind the current one.","title":"Optional Method Properties"},{"location":"live-broadcasts_bind/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_delete/","text":"Delete a given broadcast. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts delete ... Required Scalar Argument <id> (string) Broadcast to delete. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"live-broadcasts_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts delete ...","title":"Scopes"},{"location":"live-broadcasts_delete/#required-scalar-argument","text":"<id> (string) Broadcast to delete.","title":"Required Scalar Argument"},{"location":"live-broadcasts_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-broadcasts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_insert-cuepoint/","text":"Insert cuepoints in a broadcast Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts insert-cuepoint ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Cuepoint: cue-type: string duration-secs: integer etag: string id: string insertion-offset-time-ms: string walltime-ms: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cue-type=voluptua. No description provided. duration-secs=76 The duration of this cuepoint. etag=duo No description provided. id=elitr The identifier for cuepoint resource. insertion-offset-time-ms=consetetur The time when the cuepoint should be inserted by offset to the broadcast actual start time. walltime-ms=et The wall clock time at which the cuepoint should be inserted. Only one of insertion_offset_time_ms and walltime_ms may be set at a time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Broadcast to insert ads to, or equivalently external_video_id for internal use. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p part=string The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert Cuepoint"},{"location":"live-broadcasts_insert-cuepoint/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts insert-cuepoint ...","title":"Scopes"},{"location":"live-broadcasts_insert-cuepoint/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Cuepoint: cue-type: string duration-secs: integer etag: string id: string insertion-offset-time-ms: string walltime-ms: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . cue-type=voluptua. No description provided. duration-secs=76 The duration of this cuepoint. etag=duo No description provided. id=elitr The identifier for cuepoint resource. insertion-offset-time-ms=consetetur The time when the cuepoint should be inserted by offset to the broadcast actual start time. walltime-ms=et The wall clock time at which the cuepoint should be inserted. Only one of insertion_offset_time_ms and walltime_ms may be set at a time.","title":"Required Request Value"},{"location":"live-broadcasts_insert-cuepoint/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-broadcasts_insert-cuepoint/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_insert-cuepoint/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Broadcast to insert ads to, or equivalently external_video_id for internal use. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p part=string The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.","title":"Optional Method Properties"},{"location":"live-broadcasts_insert-cuepoint/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_insert/","text":"Inserts a new stream for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveBroadcast: content-details: bound-stream-id: string bound-stream-last-update-time-ms: string closed-captions-type: string enable-auto-start: boolean enable-auto-stop: boolean enable-closed-captions: boolean enable-content-encryption: boolean enable-dvr: boolean enable-embed: boolean enable-low-latency: boolean latency-preference: string mesh: string monitor-stream: broadcast-stream-delay-ms: integer embed-html: string enable-monitor-stream: boolean projection: string record-from-start: boolean start-with-slate: boolean stereo-layout: string etag: string id: string kind: string monetization-details: cuepoint-schedule: enabled: boolean pause-ads-until: string repeat-interval-secs: integer schedule-strategy: string snippet: actual-end-time: string actual-start-time: string channel-id: string description: string is-default-broadcast: boolean live-chat-id: string published-at: string scheduled-end-time: string scheduled-start-time: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: concurrent-viewers: string status: life-cycle-status: string live-broadcast-priority: string made-for-kids: boolean privacy-status: string recording-status: string self-declared-made-for-kids: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details bound-stream-id=rebum. This value uniquely identifies the live stream bound to the broadcast. bound-stream-last-update-time-ms=at The date and time that the live stream referenced by boundStreamId was last updated. closed-captions-type=invidunt No description provided. enable-auto-start=false This setting indicates whether auto start is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-auto-stop=false This setting indicates whether auto stop is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-closed-captions=true This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST. enable-content-encryption=true This setting indicates whether YouTube should enable content encryption for the broadcast. enable-dvr=false This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true. Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends. enable-embed=false This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video. enable-low-latency=false Indicates whether this broadcast has low latency enabled. latency-preference=diam If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted. mesh=nonumy The mesh for projecting the video if projection is mesh. The mesh value must be a UTF-8 string containing the base-64 encoding of 3D mesh data that follows the Spherical Video V2 RFC specification for an mshp box, excluding the box size and type but including the following four reserved zero bytes for the version and flags. monitor-stream broadcast-stream-delay-ms=83 If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay. embed-html=sanctus HTML code that embeds a player that plays the monitor stream. enable-monitor-stream=true This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints. You need to set this value to true if you intend to have a broadcast delay for your event. Note: This property cannot be updated once the broadcast is in the testing or live state. .. projection=sed The projection format of this broadcast. This defaults to rectangular. record-from-start=false Automatically start recording after the event goes live. The default value for this property is true. Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback. start-with-slate=false This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers. stereo-layout=at The 3D stereo layout of this broadcast. This defaults to mono. .. etag=erat Etag of this resource. id=justo The ID that YouTube assigns to uniquely identify the broadcast. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\". monetization-details.cuepoint-schedule enabled=false This field is semantically required. If it is set false or not set, other fields in this message will be ignored. pause-ads-until=dolores If set, automatic cuepoint insertion is paused until this timestamp (\"No Ad Zone\"). The value is specified in ISO 8601 format. repeat-interval-secs=5 Interval frequency in seconds that api uses to insert cuepoints automatically. schedule-strategy=no The strategy to use when scheduling cuepoints. ...snippet actual-end-time=justo The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. actual-start-time=sadipscing The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. channel-id=diam The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast. description=sea The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource. is-default-broadcast=true Indicates whether this broadcast is the default broadcast. Internal only. live-chat-id=stet The id of the live chat for this broadcast. published-at=gubergren The date and time that the broadcast was added to YouTube's live broadcast schedule. scheduled-end-time=ipsum The date and time that the broadcast is scheduled to end. scheduled-start-time=no The date and time that the broadcast is scheduled to start. thumbnails.default height=3 (Optional) Height of the thumbnail image. url=kasd The thumbnail image's URL. width=54 (Optional) Width of the thumbnail image. ..high height=45 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=13 (Optional) Width of the thumbnail image. ..maxres height=100 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=10 (Optional) Width of the thumbnail image. ..medium height=91 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=38 (Optional) Width of the thumbnail image. ..standard height=80 (Optional) Height of the thumbnail image. url=ea The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ... title=erat The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource. ..statistics concurrent-viewers=clita The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. ..status life-cycle-status=vero The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method. live-broadcast-priority=invidunt Priority of the live broadcast event (internal state). made-for-kids=false Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only. privacy-status=erat The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource. recording-status=erat The broadcast's recording status. self-declared-made-for-kids=true This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"live-broadcasts_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts insert ...","title":"Scopes"},{"location":"live-broadcasts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveBroadcast: content-details: bound-stream-id: string bound-stream-last-update-time-ms: string closed-captions-type: string enable-auto-start: boolean enable-auto-stop: boolean enable-closed-captions: boolean enable-content-encryption: boolean enable-dvr: boolean enable-embed: boolean enable-low-latency: boolean latency-preference: string mesh: string monitor-stream: broadcast-stream-delay-ms: integer embed-html: string enable-monitor-stream: boolean projection: string record-from-start: boolean start-with-slate: boolean stereo-layout: string etag: string id: string kind: string monetization-details: cuepoint-schedule: enabled: boolean pause-ads-until: string repeat-interval-secs: integer schedule-strategy: string snippet: actual-end-time: string actual-start-time: string channel-id: string description: string is-default-broadcast: boolean live-chat-id: string published-at: string scheduled-end-time: string scheduled-start-time: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: concurrent-viewers: string status: life-cycle-status: string live-broadcast-priority: string made-for-kids: boolean privacy-status: string recording-status: string self-declared-made-for-kids: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details bound-stream-id=rebum. This value uniquely identifies the live stream bound to the broadcast. bound-stream-last-update-time-ms=at The date and time that the live stream referenced by boundStreamId was last updated. closed-captions-type=invidunt No description provided. enable-auto-start=false This setting indicates whether auto start is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-auto-stop=false This setting indicates whether auto stop is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-closed-captions=true This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST. enable-content-encryption=true This setting indicates whether YouTube should enable content encryption for the broadcast. enable-dvr=false This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true. Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends. enable-embed=false This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video. enable-low-latency=false Indicates whether this broadcast has low latency enabled. latency-preference=diam If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted. mesh=nonumy The mesh for projecting the video if projection is mesh. The mesh value must be a UTF-8 string containing the base-64 encoding of 3D mesh data that follows the Spherical Video V2 RFC specification for an mshp box, excluding the box size and type but including the following four reserved zero bytes for the version and flags. monitor-stream broadcast-stream-delay-ms=83 If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay. embed-html=sanctus HTML code that embeds a player that plays the monitor stream. enable-monitor-stream=true This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints. You need to set this value to true if you intend to have a broadcast delay for your event. Note: This property cannot be updated once the broadcast is in the testing or live state. .. projection=sed The projection format of this broadcast. This defaults to rectangular. record-from-start=false Automatically start recording after the event goes live. The default value for this property is true. Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback. start-with-slate=false This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers. stereo-layout=at The 3D stereo layout of this broadcast. This defaults to mono. .. etag=erat Etag of this resource. id=justo The ID that YouTube assigns to uniquely identify the broadcast. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\". monetization-details.cuepoint-schedule enabled=false This field is semantically required. If it is set false or not set, other fields in this message will be ignored. pause-ads-until=dolores If set, automatic cuepoint insertion is paused until this timestamp (\"No Ad Zone\"). The value is specified in ISO 8601 format. repeat-interval-secs=5 Interval frequency in seconds that api uses to insert cuepoints automatically. schedule-strategy=no The strategy to use when scheduling cuepoints. ...snippet actual-end-time=justo The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. actual-start-time=sadipscing The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. channel-id=diam The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast. description=sea The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource. is-default-broadcast=true Indicates whether this broadcast is the default broadcast. Internal only. live-chat-id=stet The id of the live chat for this broadcast. published-at=gubergren The date and time that the broadcast was added to YouTube's live broadcast schedule. scheduled-end-time=ipsum The date and time that the broadcast is scheduled to end. scheduled-start-time=no The date and time that the broadcast is scheduled to start. thumbnails.default height=3 (Optional) Height of the thumbnail image. url=kasd The thumbnail image's URL. width=54 (Optional) Width of the thumbnail image. ..high height=45 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=13 (Optional) Width of the thumbnail image. ..maxres height=100 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=10 (Optional) Width of the thumbnail image. ..medium height=91 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=38 (Optional) Width of the thumbnail image. ..standard height=80 (Optional) Height of the thumbnail image. url=ea The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ... title=erat The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource. ..statistics concurrent-viewers=clita The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. ..status life-cycle-status=vero The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method. live-broadcast-priority=invidunt Priority of the live broadcast event (internal state). made-for-kids=false Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only. privacy-status=erat The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource. recording-status=erat The broadcast's recording status. self-declared-made-for-kids=true This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work.","title":"Required Request Value"},{"location":"live-broadcasts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-broadcasts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-broadcasts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_list/","text":"Retrieve the list of broadcasts associated with the given channel. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, status and statistics. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p broadcast-status=string Return broadcasts with a certain status, e.g. active broadcasts. -p broadcast-type=string Return only broadcasts with the selected type. -p id=string Return broadcasts with the given ids from Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"live-broadcasts_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts list ...","title":"Scopes"},{"location":"live-broadcasts_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, status and statistics. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"live-broadcasts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p broadcast-status=string Return broadcasts with a certain status, e.g. active broadcasts. -p broadcast-type=string Return only broadcasts with the selected type. -p id=string Return broadcasts with the given ids from Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"live-broadcasts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_transition/","text":"Transition a broadcast to a given status. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts transition ... Required Scalar Arguments <broadcast-status> (string) The status to which the broadcast is going to transition. <id> (string) Broadcast to transition. <part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Transition"},{"location":"live-broadcasts_transition/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts transition ...","title":"Scopes"},{"location":"live-broadcasts_transition/#required-scalar-arguments","text":"<broadcast-status> (string) The status to which the broadcast is going to transition. <id> (string) Broadcast to transition. <part>... (string) The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status. This property can be specified one or more times","title":"Required Scalar Arguments"},{"location":"live-broadcasts_transition/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_transition/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-broadcasts_transition/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-broadcasts_update/","text":"Updates an existing broadcast for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveBroadcast: content-details: bound-stream-id: string bound-stream-last-update-time-ms: string closed-captions-type: string enable-auto-start: boolean enable-auto-stop: boolean enable-closed-captions: boolean enable-content-encryption: boolean enable-dvr: boolean enable-embed: boolean enable-low-latency: boolean latency-preference: string mesh: string monitor-stream: broadcast-stream-delay-ms: integer embed-html: string enable-monitor-stream: boolean projection: string record-from-start: boolean start-with-slate: boolean stereo-layout: string etag: string id: string kind: string monetization-details: cuepoint-schedule: enabled: boolean pause-ads-until: string repeat-interval-secs: integer schedule-strategy: string snippet: actual-end-time: string actual-start-time: string channel-id: string description: string is-default-broadcast: boolean live-chat-id: string published-at: string scheduled-end-time: string scheduled-start-time: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: concurrent-viewers: string status: life-cycle-status: string live-broadcast-priority: string made-for-kids: boolean privacy-status: string recording-status: string self-declared-made-for-kids: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details bound-stream-id=clita This value uniquely identifies the live stream bound to the broadcast. bound-stream-last-update-time-ms=sit The date and time that the live stream referenced by boundStreamId was last updated. closed-captions-type=takimata No description provided. enable-auto-start=true This setting indicates whether auto start is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-auto-stop=true This setting indicates whether auto stop is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-closed-captions=false This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST. enable-content-encryption=false This setting indicates whether YouTube should enable content encryption for the broadcast. enable-dvr=false This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true. Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends. enable-embed=false This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video. enable-low-latency=false Indicates whether this broadcast has low latency enabled. latency-preference=ipsum If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted. mesh=ea The mesh for projecting the video if projection is mesh. The mesh value must be a UTF-8 string containing the base-64 encoding of 3D mesh data that follows the Spherical Video V2 RFC specification for an mshp box, excluding the box size and type but including the following four reserved zero bytes for the version and flags. monitor-stream broadcast-stream-delay-ms=74 If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay. embed-html=sit HTML code that embeds a player that plays the monitor stream. enable-monitor-stream=false This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints. You need to set this value to true if you intend to have a broadcast delay for your event. Note: This property cannot be updated once the broadcast is in the testing or live state. .. projection=lorem The projection format of this broadcast. This defaults to rectangular. record-from-start=false Automatically start recording after the event goes live. The default value for this property is true. Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback. start-with-slate=false This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers. stereo-layout=aliquyam The 3D stereo layout of this broadcast. This defaults to mono. .. etag=erat Etag of this resource. id=ut The ID that YouTube assigns to uniquely identify the broadcast. kind=et Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\". monetization-details.cuepoint-schedule enabled=true This field is semantically required. If it is set false or not set, other fields in this message will be ignored. pause-ads-until=rebum. If set, automatic cuepoint insertion is paused until this timestamp (\"No Ad Zone\"). The value is specified in ISO 8601 format. repeat-interval-secs=66 Interval frequency in seconds that api uses to insert cuepoints automatically. schedule-strategy=sed The strategy to use when scheduling cuepoints. ...snippet actual-end-time=stet The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. actual-start-time=aliquyam The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. channel-id=kasd The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast. description=lorem The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource. is-default-broadcast=true Indicates whether this broadcast is the default broadcast. Internal only. live-chat-id=kasd The id of the live chat for this broadcast. published-at=tempor The date and time that the broadcast was added to YouTube's live broadcast schedule. scheduled-end-time=dolor The date and time that the broadcast is scheduled to end. scheduled-start-time=amet The date and time that the broadcast is scheduled to start. thumbnails.default height=98 (Optional) Height of the thumbnail image. url=rebum. The thumbnail image's URL. width=41 (Optional) Width of the thumbnail image. ..high height=1 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=77 (Optional) Width of the thumbnail image. ..maxres height=7 (Optional) Height of the thumbnail image. url=eirmod The thumbnail image's URL. width=97 (Optional) Width of the thumbnail image. ..medium height=6 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=47 (Optional) Width of the thumbnail image. ..standard height=55 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=53 (Optional) Width of the thumbnail image. ... title=lorem The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource. ..statistics concurrent-viewers=nonumy The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. ..status life-cycle-status=diam The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method. live-broadcast-priority=ipsum Priority of the live broadcast event (internal state). made-for-kids=true Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only. privacy-status=stet The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource. recording-status=voluptua. The broadcast's recording status. self-declared-made-for-kids=false This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"live-broadcasts_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-broadcasts update ...","title":"Scopes"},{"location":"live-broadcasts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveBroadcast: content-details: bound-stream-id: string bound-stream-last-update-time-ms: string closed-captions-type: string enable-auto-start: boolean enable-auto-stop: boolean enable-closed-captions: boolean enable-content-encryption: boolean enable-dvr: boolean enable-embed: boolean enable-low-latency: boolean latency-preference: string mesh: string monitor-stream: broadcast-stream-delay-ms: integer embed-html: string enable-monitor-stream: boolean projection: string record-from-start: boolean start-with-slate: boolean stereo-layout: string etag: string id: string kind: string monetization-details: cuepoint-schedule: enabled: boolean pause-ads-until: string repeat-interval-secs: integer schedule-strategy: string snippet: actual-end-time: string actual-start-time: string channel-id: string description: string is-default-broadcast: boolean live-chat-id: string published-at: string scheduled-end-time: string scheduled-start-time: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: concurrent-viewers: string status: life-cycle-status: string live-broadcast-priority: string made-for-kids: boolean privacy-status: string recording-status: string self-declared-made-for-kids: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details bound-stream-id=clita This value uniquely identifies the live stream bound to the broadcast. bound-stream-last-update-time-ms=sit The date and time that the live stream referenced by boundStreamId was last updated. closed-captions-type=takimata No description provided. enable-auto-start=true This setting indicates whether auto start is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-auto-stop=true This setting indicates whether auto stop is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events. enable-closed-captions=false This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST. enable-content-encryption=false This setting indicates whether YouTube should enable content encryption for the broadcast. enable-dvr=false This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true. Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends. enable-embed=false This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video. enable-low-latency=false Indicates whether this broadcast has low latency enabled. latency-preference=ipsum If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted. mesh=ea The mesh for projecting the video if projection is mesh. The mesh value must be a UTF-8 string containing the base-64 encoding of 3D mesh data that follows the Spherical Video V2 RFC specification for an mshp box, excluding the box size and type but including the following four reserved zero bytes for the version and flags. monitor-stream broadcast-stream-delay-ms=74 If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay. embed-html=sit HTML code that embeds a player that plays the monitor stream. enable-monitor-stream=false This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints. You need to set this value to true if you intend to have a broadcast delay for your event. Note: This property cannot be updated once the broadcast is in the testing or live state. .. projection=lorem The projection format of this broadcast. This defaults to rectangular. record-from-start=false Automatically start recording after the event goes live. The default value for this property is true. Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback. start-with-slate=false This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers. stereo-layout=aliquyam The 3D stereo layout of this broadcast. This defaults to mono. .. etag=erat Etag of this resource. id=ut The ID that YouTube assigns to uniquely identify the broadcast. kind=et Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\". monetization-details.cuepoint-schedule enabled=true This field is semantically required. If it is set false or not set, other fields in this message will be ignored. pause-ads-until=rebum. If set, automatic cuepoint insertion is paused until this timestamp (\"No Ad Zone\"). The value is specified in ISO 8601 format. repeat-interval-secs=66 Interval frequency in seconds that api uses to insert cuepoints automatically. schedule-strategy=sed The strategy to use when scheduling cuepoints. ...snippet actual-end-time=stet The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. actual-start-time=aliquyam The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. channel-id=kasd The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast. description=lorem The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource. is-default-broadcast=true Indicates whether this broadcast is the default broadcast. Internal only. live-chat-id=kasd The id of the live chat for this broadcast. published-at=tempor The date and time that the broadcast was added to YouTube's live broadcast schedule. scheduled-end-time=dolor The date and time that the broadcast is scheduled to end. scheduled-start-time=amet The date and time that the broadcast is scheduled to start. thumbnails.default height=98 (Optional) Height of the thumbnail image. url=rebum. The thumbnail image's URL. width=41 (Optional) Width of the thumbnail image. ..high height=1 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=77 (Optional) Width of the thumbnail image. ..maxres height=7 (Optional) Height of the thumbnail image. url=eirmod The thumbnail image's URL. width=97 (Optional) Width of the thumbnail image. ..medium height=6 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=47 (Optional) Width of the thumbnail image. ..standard height=55 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=53 (Optional) Width of the thumbnail image. ... title=lorem The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource. ..statistics concurrent-viewers=nonumy The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. ..status life-cycle-status=diam The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method. live-broadcast-priority=ipsum Priority of the live broadcast event (internal state). made-for-kids=true Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only. privacy-status=stet The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource. recording-status=voluptua. The broadcast's recording status. self-declared-made-for-kids=false This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work.","title":"Required Request Value"},{"location":"live-broadcasts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-broadcasts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-broadcasts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-broadcasts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-bans_delete/","text":"Deletes a chat ban. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-bans delete ... Required Scalar Argument <id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"live-chat-bans_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-bans delete ...","title":"Scopes"},{"location":"live-chat-bans_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"live-chat-bans_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-bans_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-bans insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatBan: etag: string id: string kind: string snippet: ban-duration-seconds: string banned-user-details: channel-id: string channel-url: string display-name: string profile-image-url: string live-chat-id: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=diam Etag of this resource. id=amet The ID that YouTube assigns to uniquely identify the ban. kind=at Identifies what kind of resource this is. Value: the fixed string &#34;youtube#liveChatBan&#34; . snippet ban-duration-seconds=eirmod The duration of a ban, only filled if the ban has type TEMPORARY. banned-user-details channel-id=erat The YouTube channel ID. channel-url=duo The channel's URL. display-name=et The channel's display name. profile-image-url=erat The channels's avatar URL. .. live-chat-id=sit The chat this ban is pertinent to. type=accusam The type of ban. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"live-chat-bans_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-bans insert ...","title":"Scopes"},{"location":"live-chat-bans_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatBan: etag: string id: string kind: string snippet: ban-duration-seconds: string banned-user-details: channel-id: string channel-url: string display-name: string profile-image-url: string live-chat-id: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=diam Etag of this resource. id=amet The ID that YouTube assigns to uniquely identify the ban. kind=at Identifies what kind of resource this is. Value: the fixed string &#34;youtube#liveChatBan&#34; . snippet ban-duration-seconds=eirmod The duration of a ban, only filled if the ban has type TEMPORARY. banned-user-details channel-id=erat The YouTube channel ID. channel-url=duo The channel's URL. display-name=et The channel's display name. profile-image-url=erat The channels's avatar URL. .. live-chat-id=sit The chat this ban is pertinent to. type=accusam The type of ban.","title":"Required Request Value"},{"location":"live-chat-bans_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-chat-bans_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-chat-bans_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-messages_delete/","text":"Deletes a chat message. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages delete ... Required Scalar Argument <id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"live-chat-messages_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages delete ...","title":"Scopes"},{"location":"live-chat-messages_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"live-chat-messages_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-messages_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatMessage: author-details: channel-id: string channel-url: string display-name: string is-chat-moderator: boolean is-chat-owner: boolean is-chat-sponsor: boolean is-verified: boolean profile-image-url: string etag: string id: string kind: string snippet: author-channel-id: string display-message: string fan-funding-event-details: amount-display-string: string amount-micros: string currency: string user-comment: string gift-membership-received-details: associated-membership-gifting-message-id: string gifter-channel-id: string member-level-name: string has-display-content: boolean live-chat-id: string member-milestone-chat-details: member-level-name: string member-month: integer user-comment: string membership-gifting-details: gift-memberships-count: integer gift-memberships-level-name: string message-deleted-details: deleted-message-id: string message-retracted-details: retracted-message-id: string new-sponsor-details: is-upgrade: boolean member-level-name: string poll-details: metadata: question-text: string status: string published-at: string super-chat-details: amount-display-string: string amount-micros: string currency: string tier: integer user-comment: string super-sticker-details: amount-display-string: string amount-micros: string currency: string super-sticker-metadata: alt-text: string alt-text-language: string sticker-id: string tier: integer text-message-details: message-text: string type: string user-banned-details: ban-duration-seconds: string ban-type: string banned-user-details: channel-id: string channel-url: string display-name: string profile-image-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author-details channel-id=et The YouTube channel ID. channel-url=nonumy The channel's URL. display-name=accusam The channel's display name. is-chat-moderator=false Whether the author is a moderator of the live chat. is-chat-owner=true Whether the author is the owner of the live chat. is-chat-sponsor=false Whether the author is a sponsor of the live chat. is-verified=true Whether the author's identity has been verified by YouTube. profile-image-url=et The channels's avatar URL. .. etag=aliquyam Etag of this resource. id=ipsum The ID that YouTube assigns to uniquely identify the message. kind=gubergren Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatMessage\". snippet author-channel-id=invidunt The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor memberMilestoneChatEvent - the member that sent the message membershipGiftingEvent - the user that made the purchase giftMembershipReceivedEvent - the user that received the gift membership messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action superChatEvent - the user that made the purchase superStickerEvent - the user that made the purchase pollEvent - the user that created the poll display-message=sea Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent. fan-funding-event-details amount-display-string=duo A rendered string that displays the fund amount and currency to the user. amount-micros=sea The amount of the fund. currency=stet The currency in which the fund was made. user-comment=sadipscing The comment added by the user to this fan funding event. ..gift-membership-received-details associated-membership-gifting-message-id=no The ID of the membership gifting message that is related to this gift membership. This ID will always refer to a message whose type is 'membershipGiftingEvent'. gifter-channel-id=tempor The ID of the user that made the membership gifting purchase. This matches the snippet.authorChannelId of the associated membership gifting message. member-level-name=ipsum The name of the Level at which the viewer is a member. This matches the snippet.membershipGiftingDetails.giftMembershipsLevelName of the associated membership gifting message. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. .. has-display-content=true Whether the message has display content that should be displayed to users. live-chat-id=sit No description provided. member-milestone-chat-details member-level-name=amet. The name of the Level at which the viever is a member. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. member-month=46 The total amount of months (rounded up) the viewer has been a member that granted them this Member Milestone Chat. This is the same number of months as is being displayed to YouTube users. user-comment=at The comment added by the member to this Member Milestone Chat. This field is empty for messages without a comment from the member. ..membership-gifting-details gift-memberships-count=75 The number of gift memberships purchased by the user. gift-memberships-level-name=takimata The name of the level of the gift memberships purchased by the user. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. ..message-deleted-details deleted-message-id=gubergren No description provided. ..message-retracted-details retracted-message-id=et No description provided. ..new-sponsor-details is-upgrade=false If the viewer just had upgraded from a lower level. For viewers that were not members at the time of purchase, this field is false. member-level-name=magna The name of the Level that the viewer just had joined. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. ..poll-details.metadata question-text=sit No description provided. .. status=gubergren No description provided. .. published-at=elitr The date and time when the message was orignally published. super-chat-details amount-display-string=ipsum A rendered string that displays the fund amount and currency to the user. amount-micros=kasd The amount purchased by the user, in micros (1,750,000 micros = 1.75). currency=dolore The currency in which the purchase was made. tier=50 The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1. user-comment=amet The comment added by the user to this Super Chat event. ..super-sticker-details amount-display-string=ipsum A rendered string that displays the fund amount and currency to the user. amount-micros=lorem The amount purchased by the user, in micros (1,750,000 micros = 1.75). currency=dolores The currency in which the purchase was made. super-sticker-metadata alt-text=consetetur Internationalized alt text that describes the sticker image and any animation associated with it. alt-text-language=stet Specifies the localization language in which the alt text is returned. sticker-id=accusam Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker. .. tier=55 The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1. ..text-message-details message-text=takimata The user's message. .. type=sed The type of message, this will always be present, it determines the contents of the message as well as which fields will be present. user-banned-details ban-duration-seconds=nonumy The duration of the ban. This property is only present if the banType is temporary. ban-type=sea The type of ban. banned-user-details channel-id=eos The YouTube channel ID. channel-url=dolore The channel's URL. display-name=accusam The channel's display name. profile-image-url=elitr The channels's avatar URL. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"live-chat-messages_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages insert ...","title":"Scopes"},{"location":"live-chat-messages_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatMessage: author-details: channel-id: string channel-url: string display-name: string is-chat-moderator: boolean is-chat-owner: boolean is-chat-sponsor: boolean is-verified: boolean profile-image-url: string etag: string id: string kind: string snippet: author-channel-id: string display-message: string fan-funding-event-details: amount-display-string: string amount-micros: string currency: string user-comment: string gift-membership-received-details: associated-membership-gifting-message-id: string gifter-channel-id: string member-level-name: string has-display-content: boolean live-chat-id: string member-milestone-chat-details: member-level-name: string member-month: integer user-comment: string membership-gifting-details: gift-memberships-count: integer gift-memberships-level-name: string message-deleted-details: deleted-message-id: string message-retracted-details: retracted-message-id: string new-sponsor-details: is-upgrade: boolean member-level-name: string poll-details: metadata: question-text: string status: string published-at: string super-chat-details: amount-display-string: string amount-micros: string currency: string tier: integer user-comment: string super-sticker-details: amount-display-string: string amount-micros: string currency: string super-sticker-metadata: alt-text: string alt-text-language: string sticker-id: string tier: integer text-message-details: message-text: string type: string user-banned-details: ban-duration-seconds: string ban-type: string banned-user-details: channel-id: string channel-url: string display-name: string profile-image-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author-details channel-id=et The YouTube channel ID. channel-url=nonumy The channel's URL. display-name=accusam The channel's display name. is-chat-moderator=false Whether the author is a moderator of the live chat. is-chat-owner=true Whether the author is the owner of the live chat. is-chat-sponsor=false Whether the author is a sponsor of the live chat. is-verified=true Whether the author's identity has been verified by YouTube. profile-image-url=et The channels's avatar URL. .. etag=aliquyam Etag of this resource. id=ipsum The ID that YouTube assigns to uniquely identify the message. kind=gubergren Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatMessage\". snippet author-channel-id=invidunt The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor memberMilestoneChatEvent - the member that sent the message membershipGiftingEvent - the user that made the purchase giftMembershipReceivedEvent - the user that received the gift membership messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action superChatEvent - the user that made the purchase superStickerEvent - the user that made the purchase pollEvent - the user that created the poll display-message=sea Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent. fan-funding-event-details amount-display-string=duo A rendered string that displays the fund amount and currency to the user. amount-micros=sea The amount of the fund. currency=stet The currency in which the fund was made. user-comment=sadipscing The comment added by the user to this fan funding event. ..gift-membership-received-details associated-membership-gifting-message-id=no The ID of the membership gifting message that is related to this gift membership. This ID will always refer to a message whose type is 'membershipGiftingEvent'. gifter-channel-id=tempor The ID of the user that made the membership gifting purchase. This matches the snippet.authorChannelId of the associated membership gifting message. member-level-name=ipsum The name of the Level at which the viewer is a member. This matches the snippet.membershipGiftingDetails.giftMembershipsLevelName of the associated membership gifting message. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. .. has-display-content=true Whether the message has display content that should be displayed to users. live-chat-id=sit No description provided. member-milestone-chat-details member-level-name=amet. The name of the Level at which the viever is a member. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. member-month=46 The total amount of months (rounded up) the viewer has been a member that granted them this Member Milestone Chat. This is the same number of months as is being displayed to YouTube users. user-comment=at The comment added by the member to this Member Milestone Chat. This field is empty for messages without a comment from the member. ..membership-gifting-details gift-memberships-count=75 The number of gift memberships purchased by the user. gift-memberships-level-name=takimata The name of the level of the gift memberships purchased by the user. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. ..message-deleted-details deleted-message-id=gubergren No description provided. ..message-retracted-details retracted-message-id=et No description provided. ..new-sponsor-details is-upgrade=false If the viewer just had upgraded from a lower level. For viewers that were not members at the time of purchase, this field is false. member-level-name=magna The name of the Level that the viewer just had joined. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled. ..poll-details.metadata question-text=sit No description provided. .. status=gubergren No description provided. .. published-at=elitr The date and time when the message was orignally published. super-chat-details amount-display-string=ipsum A rendered string that displays the fund amount and currency to the user. amount-micros=kasd The amount purchased by the user, in micros (1,750,000 micros = 1.75). currency=dolore The currency in which the purchase was made. tier=50 The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1. user-comment=amet The comment added by the user to this Super Chat event. ..super-sticker-details amount-display-string=ipsum A rendered string that displays the fund amount and currency to the user. amount-micros=lorem The amount purchased by the user, in micros (1,750,000 micros = 1.75). currency=dolores The currency in which the purchase was made. super-sticker-metadata alt-text=consetetur Internationalized alt text that describes the sticker image and any animation associated with it. alt-text-language=stet Specifies the localization language in which the alt text is returned. sticker-id=accusam Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker. .. tier=55 The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1. ..text-message-details message-text=takimata The user's message. .. type=sed The type of message, this will always be present, it determines the contents of the message as well as which fields will be present. user-banned-details ban-duration-seconds=nonumy The duration of the ban. This property is only present if the banType is temporary. ban-type=sea The type of ban. banned-user-details channel-id=eos The YouTube channel ID. channel-url=dolore The channel's URL. display-name=accusam The channel's display name. profile-image-url=elitr The channels's avatar URL.","title":"Required Request Value"},{"location":"live-chat-messages_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-chat-messages_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-chat-messages_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-messages_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages list ... Required Scalar Arguments <live-chat-id> (string) The id of the live chat for which comments should be returned. <part>... (string) The part parameter specifies the liveChatComment resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string Specifies the localization language in which the system messages should be returned. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identify other pages that could be retrieved. -p profile-image-size=integer Specifies the size of the profile image that should be returned for each user. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"live-chat-messages_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-messages list ...","title":"Scopes"},{"location":"live-chat-messages_list/#required-scalar-arguments","text":"<live-chat-id> (string) The id of the live chat for which comments should be returned. <part>... (string) The part parameter specifies the liveChatComment resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times","title":"Required Scalar Arguments"},{"location":"live-chat-messages_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-chat-messages_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string Specifies the localization language in which the system messages should be returned. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identify other pages that could be retrieved. -p profile-image-size=integer Specifies the size of the profile image that should be returned for each user.","title":"Optional Method Properties"},{"location":"live-chat-messages_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-moderators_delete/","text":"Deletes a chat moderator. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators delete ... Required Scalar Argument <id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"live-chat-moderators_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators delete ...","title":"Scopes"},{"location":"live-chat-moderators_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"live-chat-moderators_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-moderators_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatModerator: etag: string id: string kind: string snippet: live-chat-id: string moderator-details: channel-id: string channel-url: string display-name: string profile-image-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=sed Etag of this resource. id=labore The ID that YouTube assigns to uniquely identify the moderator. kind=et Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatModerator\". snippet live-chat-id=eirmod The ID of the live chat this moderator can act on. moderator-details channel-id=sed The YouTube channel ID. channel-url=at The channel's URL. display-name=stet The channel's display name. profile-image-url=sit The channels's avatar URL. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"live-chat-moderators_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators insert ...","title":"Scopes"},{"location":"live-chat-moderators_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveChatModerator: etag: string id: string kind: string snippet: live-chat-id: string moderator-details: channel-id: string channel-url: string display-name: string profile-image-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=sed Etag of this resource. id=labore The ID that YouTube assigns to uniquely identify the moderator. kind=et Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatModerator\". snippet live-chat-id=eirmod The ID of the live chat this moderator can act on. moderator-details channel-id=sed The YouTube channel ID. channel-url=at The channel's URL. display-name=stet The channel's display name. profile-image-url=sit The channels's avatar URL.","title":"Required Request Value"},{"location":"live-chat-moderators_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-chat-moderators_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-chat-moderators_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-chat-moderators_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators list ... Required Scalar Arguments <live-chat-id> (string) The id of the live chat for which moderators should be returned. <part>... (string) The part parameter specifies the liveChatModerator resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"live-chat-moderators_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-chat-moderators list ...","title":"Scopes"},{"location":"live-chat-moderators_list/#required-scalar-arguments","text":"<live-chat-id> (string) The id of the live chat for which moderators should be returned. <part>... (string) The part parameter specifies the liveChatModerator resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times","title":"Required Scalar Arguments"},{"location":"live-chat-moderators_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-chat-moderators_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"live-chat-moderators_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-streams_delete/","text":"Deletes an existing stream for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"live-streams_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams delete ...","title":"Scopes"},{"location":"live-streams_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"live-streams_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-streams_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-streams_insert/","text":"Inserts a new stream for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveStream: cdn: format: string frame-rate: string ingestion-info: backup-ingestion-address: string ingestion-address: string rtmps-backup-ingestion-address: string rtmps-ingestion-address: string stream-name: string ingestion-type: string resolution: string content-details: closed-captions-ingestion-url: string is-reusable: boolean etag: string id: string kind: string snippet: channel-id: string description: string is-default-stream: boolean published-at: string title: string status: health-status: last-update-time-seconds: string status: string stream-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdn format=ipsum The format of the video stream that you are sending to Youtube. frame-rate=lorem The frame rate of the inbound video data. ingestion-info backup-ingestion-address=dolor The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL. ingestion-address=amet The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL. Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format: STREAM_URL/STREAM_NAME rtmps-backup-ingestion-address=magna This ingestion url may be used instead of backupIngestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. rtmps-ingestion-address=magna This ingestion url may be used instead of ingestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. stream-name=invidunt The stream name that YouTube assigns to the video stream. .. ingestion-type=et The method or protocol used to transmit the video stream. resolution=et The resolution of the inbound video data. ..content-details closed-captions-ingestion-url=dolor The ingestion URL where the closed captions of this stream are sent. is-reusable=false Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times. If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways: - A non-reusable stream can only be bound to one broadcast. - A non-reusable stream might be deleted by an automated process after the broadcast ends. - The liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream. .. etag=dolore Etag of this resource. id=vero The ID that YouTube assigns to uniquely identify the stream. kind=ea Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\". snippet channel-id=et The ID that YouTube uses to uniquely identify the channel that is transmitting the stream. description=amet. The stream's description. The value cannot be longer than 10000 characters. is-default-stream=true No description provided. published-at=sanctus The date and time that the stream was created. title=sed The stream's title. The value must be between 1 and 128 characters long. ..status.health-status last-update-time-seconds=dolor The last time this status was updated (in seconds) status=et The status code of this stream .. stream-status=et No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"live-streams_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams insert ...","title":"Scopes"},{"location":"live-streams_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveStream: cdn: format: string frame-rate: string ingestion-info: backup-ingestion-address: string ingestion-address: string rtmps-backup-ingestion-address: string rtmps-ingestion-address: string stream-name: string ingestion-type: string resolution: string content-details: closed-captions-ingestion-url: string is-reusable: boolean etag: string id: string kind: string snippet: channel-id: string description: string is-default-stream: boolean published-at: string title: string status: health-status: last-update-time-seconds: string status: string stream-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdn format=ipsum The format of the video stream that you are sending to Youtube. frame-rate=lorem The frame rate of the inbound video data. ingestion-info backup-ingestion-address=dolor The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL. ingestion-address=amet The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL. Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format: STREAM_URL/STREAM_NAME rtmps-backup-ingestion-address=magna This ingestion url may be used instead of backupIngestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. rtmps-ingestion-address=magna This ingestion url may be used instead of ingestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. stream-name=invidunt The stream name that YouTube assigns to the video stream. .. ingestion-type=et The method or protocol used to transmit the video stream. resolution=et The resolution of the inbound video data. ..content-details closed-captions-ingestion-url=dolor The ingestion URL where the closed captions of this stream are sent. is-reusable=false Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times. If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways: - A non-reusable stream can only be bound to one broadcast. - A non-reusable stream might be deleted by an automated process after the broadcast ends. - The liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream. .. etag=dolore Etag of this resource. id=vero The ID that YouTube assigns to uniquely identify the stream. kind=ea Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\". snippet channel-id=et The ID that YouTube uses to uniquely identify the channel that is transmitting the stream. description=amet. The stream's description. The value cannot be longer than 10000 characters. is-default-stream=true No description provided. published-at=sanctus The date and time that the stream was created. title=sed The stream's title. The value must be between 1 and 128 characters long. ..status.health-status last-update-time-seconds=dolor The last time this status was updated (in seconds) status=et The status code of this stream .. stream-status=et No description provided.","title":"Required Request Value"},{"location":"live-streams_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-streams_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-streams_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-streams_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-streams_list/","text":"Retrieve the list of streams associated with the given channel. -- Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-streams list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more liveStream resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, cdn, and status. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Return LiveStreams with the given ids from Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"live-streams_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> live-streams list ...","title":"Scopes"},{"location":"live-streams_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more liveStream resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, cdn, and status. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"live-streams_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-streams_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Return LiveStreams with the given ids from Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean No description provided. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"live-streams_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"live-streams_update/","text":"Updates an existing stream for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveStream: cdn: format: string frame-rate: string ingestion-info: backup-ingestion-address: string ingestion-address: string rtmps-backup-ingestion-address: string rtmps-ingestion-address: string stream-name: string ingestion-type: string resolution: string content-details: closed-captions-ingestion-url: string is-reusable: boolean etag: string id: string kind: string snippet: channel-id: string description: string is-default-stream: boolean published-at: string title: string status: health-status: last-update-time-seconds: string status: string stream-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdn format=erat The format of the video stream that you are sending to Youtube. frame-rate=eos The frame rate of the inbound video data. ingestion-info backup-ingestion-address=nonumy The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL. ingestion-address=ea The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL. Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format: STREAM_URL/STREAM_NAME rtmps-backup-ingestion-address=aliquyam This ingestion url may be used instead of backupIngestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. rtmps-ingestion-address=nonumy This ingestion url may be used instead of ingestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. stream-name=stet The stream name that YouTube assigns to the video stream. .. ingestion-type=rebum. The method or protocol used to transmit the video stream. resolution=eirmod The resolution of the inbound video data. ..content-details closed-captions-ingestion-url=dolores The ingestion URL where the closed captions of this stream are sent. is-reusable=false Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times. If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways: - A non-reusable stream can only be bound to one broadcast. - A non-reusable stream might be deleted by an automated process after the broadcast ends. - The liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream. .. etag=sanctus Etag of this resource. id=invidunt The ID that YouTube assigns to uniquely identify the stream. kind=dolor Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\". snippet channel-id=eos The ID that YouTube uses to uniquely identify the channel that is transmitting the stream. description=magna The stream's description. The value cannot be longer than 10000 characters. is-default-stream=false No description provided. published-at=aliquyam The date and time that the stream was created. title=consetetur The stream's title. The value must be between 1 and 128 characters long. ..status.health-status last-update-time-seconds=ea The last time this status was updated (in seconds) status=lorem The status code of this stream .. stream-status=elitr No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"live-streams_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> live-streams update ...","title":"Scopes"},{"location":"live-streams_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiveStream: cdn: format: string frame-rate: string ingestion-info: backup-ingestion-address: string ingestion-address: string rtmps-backup-ingestion-address: string rtmps-ingestion-address: string stream-name: string ingestion-type: string resolution: string content-details: closed-captions-ingestion-url: string is-reusable: boolean etag: string id: string kind: string snippet: channel-id: string description: string is-default-stream: boolean published-at: string title: string status: health-status: last-update-time-seconds: string status: string stream-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdn format=erat The format of the video stream that you are sending to Youtube. frame-rate=eos The frame rate of the inbound video data. ingestion-info backup-ingestion-address=nonumy The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL. ingestion-address=ea The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL. Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format: STREAM_URL/STREAM_NAME rtmps-backup-ingestion-address=aliquyam This ingestion url may be used instead of backupIngestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. rtmps-ingestion-address=nonumy This ingestion url may be used instead of ingestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams. stream-name=stet The stream name that YouTube assigns to the video stream. .. ingestion-type=rebum. The method or protocol used to transmit the video stream. resolution=eirmod The resolution of the inbound video data. ..content-details closed-captions-ingestion-url=dolores The ingestion URL where the closed captions of this stream are sent. is-reusable=false Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times. If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways: - A non-reusable stream can only be bound to one broadcast. - A non-reusable stream might be deleted by an automated process after the broadcast ends. - The liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream. .. etag=sanctus Etag of this resource. id=invidunt The ID that YouTube assigns to uniquely identify the stream. kind=dolor Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\". snippet channel-id=eos The ID that YouTube uses to uniquely identify the channel that is transmitting the stream. description=magna The stream's description. The value cannot be longer than 10000 characters. is-default-stream=false No description provided. published-at=aliquyam The date and time that the stream was created. title=consetetur The stream's title. The value must be between 1 and 128 characters long. ..status.health-status last-update-time-seconds=ea The last time this status was updated (in seconds) status=lorem The status code of this stream .. stream-status=elitr No description provided.","title":"Required Request Value"},{"location":"live-streams_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"live-streams_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"live-streams_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"live-streams_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"members_list/","text":"Retrieves a list of members that match the request criteria for a channel. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.channel-memberships.creator scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.channel-memberships.creator . You can set the scope for this method like this: youtube3 --scope <scope> members list ... Required Scalar Argument <part>... (string) The part parameter specifies the member resource parts that the API response will include. Set the parameter value to snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter-by-member-channel-id=string Comma separated list of channel IDs. Only data about members that are part of this list will be included in the response. -p has-access-to-level=string Filter members in the results set to the ones that have access to a level. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mode=string Parameter that specifies which channel members to return. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"members_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.channel-memberships.creator scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.channel-memberships.creator . You can set the scope for this method like this: youtube3 --scope <scope> members list ...","title":"Scopes"},{"location":"members_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the member resource parts that the API response will include. Set the parameter value to snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"members_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"members_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter-by-member-channel-id=string Comma separated list of channel IDs. Only data about members that are part of this list will be included in the response. -p has-access-to-level=string Filter members in the results set to the ones that have access to a level. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mode=string Parameter that specifies which channel members to return. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"members_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"memberships-levels_list/","text":"Retrieves a list of all pricing levels offered by a creator to the fans. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.channel-memberships.creator scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.channel-memberships.creator . You can set the scope for this method like this: youtube3 --scope <scope> memberships-levels list ... Required Scalar Argument <part>... (string) The part parameter specifies the membershipsLevel resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"memberships-levels_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.channel-memberships.creator scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.channel-memberships.creator . You can set the scope for this method like this: youtube3 --scope <scope> memberships-levels list ...","title":"Scopes"},{"location":"memberships-levels_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the membershipsLevel resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"memberships-levels_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"memberships-levels_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-images_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images delete ... Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Id to identify this image. This is returned from by the List method. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"playlist-images_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images delete ...","title":"Scopes"},{"location":"playlist-images_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string Id to identify this image. This is returned from by the List method. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlist-images_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-images_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistImage: id: string kind: string snippet: height: integer playlist-id: string type: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=justo Identifies this resource (playlist id and image type). kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistImages\". snippet height=15 The image height. playlist-id=gubergren The Playlist ID of the playlist this image is associated with. type=vero The image type. width=84 The image width. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p part=string The part parameter specifies the properties that the API response will include. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"playlist-images_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images insert ...","title":"Scopes"},{"location":"playlist-images_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistImage: id: string kind: string snippet: height: integer playlist-id: string type: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=justo Identifies this resource (playlist id and image type). kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistImages\". snippet height=15 The image height. playlist-id=gubergren The Playlist ID of the playlist this image is associated with. type=vero The image type. width=84 The image width.","title":"Required Request Value"},{"location":"playlist-images_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlist-images_insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"playlist-images_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-images_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p part=string The part parameter specifies the properties that the API response will include.","title":"Optional Method Properties"},{"location":"playlist-images_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-images_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p parent=string Return PlaylistImages for this playlist id. -p part=string The part parameter specifies a comma-separated list of one or more playlistImage resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"playlist-images_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images list ...","title":"Scopes"},{"location":"playlist-images_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-images_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p parent=string Return PlaylistImages for this playlist id. -p part=string The part parameter specifies a comma-separated list of one or more playlistImage resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response.","title":"Optional Method Properties"},{"location":"playlist-images_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-images_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistImage: id: string kind: string snippet: height: integer playlist-id: string type: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=sed Identifies this resource (playlist id and image type). kind=sanctus Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistImages\". snippet height=65 The image height. playlist-id=amet The Playlist ID of the playlist this image is associated with. type=et The image type. width=67 The image width. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p part=string The part parameter specifies the properties that the API response will include. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"playlist-images_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-images update ...","title":"Scopes"},{"location":"playlist-images_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistImage: id: string kind: string snippet: height: integer playlist-id: string type: string width: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=sed Identifies this resource (playlist id and image type). kind=sanctus Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistImages\". snippet height=65 The image height. playlist-id=amet The Playlist ID of the playlist this image is associated with. type=et The image type. width=67 The image width.","title":"Required Request Value"},{"location":"playlist-images_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlist-images_update/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"playlist-images_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-images_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p part=string The part parameter specifies the properties that the API response will include.","title":"Optional Method Properties"},{"location":"playlist-images_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-items_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"playlist-items_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items delete ...","title":"Scopes"},{"location":"playlist-items_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"playlist-items_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlist-items_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-items_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistItem: content-details: end-at: string note: string start-at: string video-id: string video-published-at: string etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string playlist-id: string position: integer published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string video-owner-channel-id: string video-owner-channel-title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details end-at=voluptua. The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video. note=sit A user-generated note for this item. start-at=sanctus The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0. video-id=ipsum The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request. video-published-at=eirmod The date and time that the video was published to YouTube. .. etag=vero Etag of this resource. id=voluptua. The ID that YouTube uses to uniquely identify the playlist item. kind=sea Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\". snippet channel-id=ipsum The ID that YouTube uses to uniquely identify the user that added the item to the playlist. channel-title=sea Channel title for the channel that the playlist item belongs to. description=et The item's description. playlist-id=gubergren The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in. position=67 The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth. published-at=ea The date and time that the item was added to the playlist. resource-id channel-id=elitr The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=takimata The type of the API resource. playlist-id=duo The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=tempor The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=37 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=40 (Optional) Width of the thumbnail image. ..high height=36 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=37 (Optional) Width of the thumbnail image. ..maxres height=5 (Optional) Height of the thumbnail image. url=dolores The thumbnail image's URL. width=53 (Optional) Width of the thumbnail image. ..medium height=41 (Optional) Height of the thumbnail image. url=sanctus The thumbnail image's URL. width=88 (Optional) Width of the thumbnail image. ..standard height=11 (Optional) Height of the thumbnail image. url=dolores The thumbnail image's URL. width=69 (Optional) Width of the thumbnail image. ... title=dolor The item's title. video-owner-channel-id=vero Channel id for the channel this video belongs to. video-owner-channel-title=ea Channel title for the channel this video belongs to. ..status privacy-status=magna This resource's privacy status. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"playlist-items_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items insert ...","title":"Scopes"},{"location":"playlist-items_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistItem: content-details: end-at: string note: string start-at: string video-id: string video-published-at: string etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string playlist-id: string position: integer published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string video-owner-channel-id: string video-owner-channel-title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details end-at=voluptua. The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video. note=sit A user-generated note for this item. start-at=sanctus The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0. video-id=ipsum The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request. video-published-at=eirmod The date and time that the video was published to YouTube. .. etag=vero Etag of this resource. id=voluptua. The ID that YouTube uses to uniquely identify the playlist item. kind=sea Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\". snippet channel-id=ipsum The ID that YouTube uses to uniquely identify the user that added the item to the playlist. channel-title=sea Channel title for the channel that the playlist item belongs to. description=et The item's description. playlist-id=gubergren The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in. position=67 The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth. published-at=ea The date and time that the item was added to the playlist. resource-id channel-id=elitr The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=takimata The type of the API resource. playlist-id=duo The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=tempor The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=37 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=40 (Optional) Width of the thumbnail image. ..high height=36 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=37 (Optional) Width of the thumbnail image. ..maxres height=5 (Optional) Height of the thumbnail image. url=dolores The thumbnail image's URL. width=53 (Optional) Width of the thumbnail image. ..medium height=41 (Optional) Height of the thumbnail image. url=sanctus The thumbnail image's URL. width=88 (Optional) Width of the thumbnail image. ..standard height=11 (Optional) Height of the thumbnail image. url=dolores The thumbnail image's URL. width=69 (Optional) Width of the thumbnail image. ... title=dolor The item's title. video-owner-channel-id=vero Channel id for the channel this video belongs to. video-owner-channel-title=ea Channel title for the channel this video belongs to. ..status privacy-status=magna This resource's privacy status.","title":"Required Request Value"},{"location":"playlist-items_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlist-items_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-items_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlist-items_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-items_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p playlist-id=string Return the playlist items within the given playlist. -p video-id=string Return the playlist items associated with the given video ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"playlist-items_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items list ...","title":"Scopes"},{"location":"playlist-items_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"playlist-items_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-items_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p id=string No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p playlist-id=string Return the playlist items within the given playlist. -p video-id=string Return the playlist items associated with the given video ID.","title":"Optional Method Properties"},{"location":"playlist-items_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlist-items_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistItem: content-details: end-at: string note: string start-at: string video-id: string video-published-at: string etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string playlist-id: string position: integer published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string video-owner-channel-id: string video-owner-channel-title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details end-at=rebum. The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video. note=amet A user-generated note for this item. start-at=sea The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0. video-id=sadipscing The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request. video-published-at=dolore The date and time that the video was published to YouTube. .. etag=amet Etag of this resource. id=invidunt The ID that YouTube uses to uniquely identify the playlist item. kind=invidunt Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\". snippet channel-id=dolores The ID that YouTube uses to uniquely identify the user that added the item to the playlist. channel-title=diam Channel title for the channel that the playlist item belongs to. description=sanctus The item's description. playlist-id=sed The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in. position=76 The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth. published-at=sit The date and time that the item was added to the playlist. resource-id channel-id=et The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=ea The type of the API resource. playlist-id=dolor The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=sadipscing The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=9 (Optional) Height of the thumbnail image. url=at The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ..high height=88 (Optional) Height of the thumbnail image. url=magna The thumbnail image's URL. width=49 (Optional) Width of the thumbnail image. ..maxres height=94 (Optional) Height of the thumbnail image. url=gubergren The thumbnail image's URL. width=26 (Optional) Width of the thumbnail image. ..medium height=67 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=86 (Optional) Width of the thumbnail image. ..standard height=78 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=52 (Optional) Width of the thumbnail image. ... title=diam The item's title. video-owner-channel-id=elitr Channel id for the channel this video belongs to. video-owner-channel-title=sea Channel title for the channel this video belongs to. ..status privacy-status=vero This resource's privacy status. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"playlist-items_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlist-items update ...","title":"Scopes"},{"location":"playlist-items_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PlaylistItem: content-details: end-at: string note: string start-at: string video-id: string video-published-at: string etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string playlist-id: string position: integer published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string video-owner-channel-id: string video-owner-channel-title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details end-at=rebum. The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video. note=amet A user-generated note for this item. start-at=sea The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0. video-id=sadipscing The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request. video-published-at=dolore The date and time that the video was published to YouTube. .. etag=amet Etag of this resource. id=invidunt The ID that YouTube uses to uniquely identify the playlist item. kind=invidunt Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\". snippet channel-id=dolores The ID that YouTube uses to uniquely identify the user that added the item to the playlist. channel-title=diam Channel title for the channel that the playlist item belongs to. description=sanctus The item's description. playlist-id=sed The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in. position=76 The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth. published-at=sit The date and time that the item was added to the playlist. resource-id channel-id=et The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=ea The type of the API resource. playlist-id=dolor The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=sadipscing The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=9 (Optional) Height of the thumbnail image. url=at The thumbnail image's URL. width=24 (Optional) Width of the thumbnail image. ..high height=88 (Optional) Height of the thumbnail image. url=magna The thumbnail image's URL. width=49 (Optional) Width of the thumbnail image. ..maxres height=94 (Optional) Height of the thumbnail image. url=gubergren The thumbnail image's URL. width=26 (Optional) Width of the thumbnail image. ..medium height=67 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=86 (Optional) Width of the thumbnail image. ..standard height=78 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=52 (Optional) Width of the thumbnail image. ... title=diam The item's title. video-owner-channel-id=elitr Channel id for the channel this video belongs to. video-owner-channel-title=sea Channel title for the channel this video belongs to. ..status privacy-status=vero This resource's privacy status.","title":"Required Request Value"},{"location":"playlist-items_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlist-items_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlist-items_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlist-items_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlists_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"playlists_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists delete ...","title":"Scopes"},{"location":"playlists_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"playlists_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlists_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlists_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Playlist: content-details: item-count: integer etag: string id: string kind: string player: embed-html: string snippet: channel-id: string channel-title: string default-language: string description: string localized: description: string title: string published-at: string tags: [string] thumbnail-video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details item-count=16 The number of videos in the playlist. .. etag=lorem Etag of this resource. id=sit The ID that YouTube uses to uniquely identify the playlist. kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\". player embed-html=amet. An <iframe> tag that embeds a player that will play the playlist. ..snippet channel-id=diam The ID that YouTube uses to uniquely identify the channel that published the playlist. channel-title=diam The channel title of the channel that the video belongs to. default-language=et The language of the playlist's default title and description. description=takimata The playlist's description. localized description=et The localized strings for playlist's description. title=dolores The localized strings for playlist's title. .. published-at=dolores The date and time that the playlist was created. tags=diam Keyword tags associated with the playlist. Each invocation of this argument appends the given value to the array. thumbnail-video-id=ea Note: if the playlist has a custom thumbnail, this field will not be populated. The video id selected by the user that will be used as the thumbnail of this playlist. This field defaults to the first publicly viewable video in the playlist, if: 1. The user has never selected a video to be the thumbnail of the playlist. 2. The user selects a video to be the thumbnail, and then removes that video from the playlist. 3. The user selects a non-owned video to be the thumbnail, but that video becomes private, or gets deleted. thumbnails.default height=91 (Optional) Height of the thumbnail image. url=dolore The thumbnail image's URL. width=32 (Optional) Width of the thumbnail image. ..high height=13 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=79 (Optional) Width of the thumbnail image. ..maxres height=23 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=44 (Optional) Width of the thumbnail image. ..medium height=86 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=16 (Optional) Width of the thumbnail image. ..standard height=65 (Optional) Height of the thumbnail image. url=labore The thumbnail image's URL. width=83 (Optional) Width of the thumbnail image. ... title=aliquyam The playlist's title. ..status privacy-status=ut The playlist's privacy status. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"playlists_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists insert ...","title":"Scopes"},{"location":"playlists_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Playlist: content-details: item-count: integer etag: string id: string kind: string player: embed-html: string snippet: channel-id: string channel-title: string default-language: string description: string localized: description: string title: string published-at: string tags: [string] thumbnail-video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details item-count=16 The number of videos in the playlist. .. etag=lorem Etag of this resource. id=sit The ID that YouTube uses to uniquely identify the playlist. kind=lorem Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\". player embed-html=amet. An <iframe> tag that embeds a player that will play the playlist. ..snippet channel-id=diam The ID that YouTube uses to uniquely identify the channel that published the playlist. channel-title=diam The channel title of the channel that the video belongs to. default-language=et The language of the playlist's default title and description. description=takimata The playlist's description. localized description=et The localized strings for playlist's description. title=dolores The localized strings for playlist's title. .. published-at=dolores The date and time that the playlist was created. tags=diam Keyword tags associated with the playlist. Each invocation of this argument appends the given value to the array. thumbnail-video-id=ea Note: if the playlist has a custom thumbnail, this field will not be populated. The video id selected by the user that will be used as the thumbnail of this playlist. This field defaults to the first publicly viewable video in the playlist, if: 1. The user has never selected a video to be the thumbnail of the playlist. 2. The user selects a video to be the thumbnail, and then removes that video from the playlist. 3. The user selects a non-owned video to be the thumbnail, but that video becomes private, or gets deleted. thumbnails.default height=91 (Optional) Height of the thumbnail image. url=dolore The thumbnail image's URL. width=32 (Optional) Width of the thumbnail image. ..high height=13 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=79 (Optional) Width of the thumbnail image. ..maxres height=23 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=44 (Optional) Width of the thumbnail image. ..medium height=86 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=16 (Optional) Width of the thumbnail image. ..standard height=65 (Optional) Height of the thumbnail image. url=labore The thumbnail image's URL. width=83 (Optional) Width of the thumbnail image. ... title=aliquyam The playlist's title. ..status privacy-status=ut The playlist's privacy status.","title":"Required Request Value"},{"location":"playlists_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlists_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlists_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.","title":"Optional Method Properties"},{"location":"playlists_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlists_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlists list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the playlists owned by the specified channel ID. -p hl=string Return content in specified language -p id=string Return the playlists with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Return the playlists owned by the authenticated user. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"playlists_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> playlists list ...","title":"Scopes"},{"location":"playlists_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"playlists_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlists_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the playlists owned by the specified channel ID. -p hl=string Return content in specified language -p id=string Return the playlists with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Return the playlists owned by the authenticated user. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"playlists_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"playlists_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Playlist: content-details: item-count: integer etag: string id: string kind: string player: embed-html: string snippet: channel-id: string channel-title: string default-language: string description: string localized: description: string title: string published-at: string tags: [string] thumbnail-video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details item-count=49 The number of videos in the playlist. .. etag=gubergren Etag of this resource. id=est The ID that YouTube uses to uniquely identify the playlist. kind=rebum. Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\". player embed-html=consetetur An <iframe> tag that embeds a player that will play the playlist. ..snippet channel-id=erat The ID that YouTube uses to uniquely identify the channel that published the playlist. channel-title=dolor The channel title of the channel that the video belongs to. default-language=amet. The language of the playlist's default title and description. description=kasd The playlist's description. localized description=eirmod The localized strings for playlist's description. title=amet. The localized strings for playlist's title. .. published-at=takimata The date and time that the playlist was created. tags=amet. Keyword tags associated with the playlist. Each invocation of this argument appends the given value to the array. thumbnail-video-id=et Note: if the playlist has a custom thumbnail, this field will not be populated. The video id selected by the user that will be used as the thumbnail of this playlist. This field defaults to the first publicly viewable video in the playlist, if: 1. The user has never selected a video to be the thumbnail of the playlist. 2. The user selects a video to be the thumbnail, and then removes that video from the playlist. 3. The user selects a non-owned video to be the thumbnail, but that video becomes private, or gets deleted. thumbnails.default height=65 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=98 (Optional) Width of the thumbnail image. ..high height=3 (Optional) Height of the thumbnail image. url=invidunt The thumbnail image's URL. width=7 (Optional) Width of the thumbnail image. ..maxres height=73 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=99 (Optional) Width of the thumbnail image. ..medium height=19 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=89 (Optional) Width of the thumbnail image. ..standard height=8 (Optional) Height of the thumbnail image. url=no The thumbnail image's URL. width=3 (Optional) Width of the thumbnail image. ... title=est The playlist's title. ..status privacy-status=elitr The playlist's privacy status. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"playlists_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> playlists update ...","title":"Scopes"},{"location":"playlists_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Playlist: content-details: item-count: integer etag: string id: string kind: string player: embed-html: string snippet: channel-id: string channel-title: string default-language: string description: string localized: description: string title: string published-at: string tags: [string] thumbnail-video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string status: privacy-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details item-count=49 The number of videos in the playlist. .. etag=gubergren Etag of this resource. id=est The ID that YouTube uses to uniquely identify the playlist. kind=rebum. Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\". player embed-html=consetetur An <iframe> tag that embeds a player that will play the playlist. ..snippet channel-id=erat The ID that YouTube uses to uniquely identify the channel that published the playlist. channel-title=dolor The channel title of the channel that the video belongs to. default-language=amet. The language of the playlist's default title and description. description=kasd The playlist's description. localized description=eirmod The localized strings for playlist's description. title=amet. The localized strings for playlist's title. .. published-at=takimata The date and time that the playlist was created. tags=amet. Keyword tags associated with the playlist. Each invocation of this argument appends the given value to the array. thumbnail-video-id=et Note: if the playlist has a custom thumbnail, this field will not be populated. The video id selected by the user that will be used as the thumbnail of this playlist. This field defaults to the first publicly viewable video in the playlist, if: 1. The user has never selected a video to be the thumbnail of the playlist. 2. The user selects a video to be the thumbnail, and then removes that video from the playlist. 3. The user selects a non-owned video to be the thumbnail, but that video becomes private, or gets deleted. thumbnails.default height=65 (Optional) Height of the thumbnail image. url=sed The thumbnail image's URL. width=98 (Optional) Width of the thumbnail image. ..high height=3 (Optional) Height of the thumbnail image. url=invidunt The thumbnail image's URL. width=7 (Optional) Width of the thumbnail image. ..maxres height=73 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=99 (Optional) Width of the thumbnail image. ..medium height=19 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=89 (Optional) Width of the thumbnail image. ..standard height=8 (Optional) Height of the thumbnail image. url=no The thumbnail image's URL. width=3 (Optional) Width of the thumbnail image. ... title=est The playlist's title. ..status privacy-status=elitr The playlist's privacy status.","title":"Required Request Value"},{"location":"playlists_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"playlists_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"playlists_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"playlists_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"search_list/","text":"Retrieves a list of search resources Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> search list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Filter on resources belonging to this channelId. -p channel-type=string Add a filter on the channel search. -p event-type=string Filter on the livestream status of the videos. -p for-content-owner=boolean Search owned by a content owner. -p for-developer=boolean Restrict the search to only retrieve videos uploaded using the project id of the authenticated user. -p for-mine=boolean Search for the private videos of the authenticated user. -p location=string Filter on location of the video -p location-radius=string Filter on distance from the location (specified above). -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p order=string Sort order of the results. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p published-after=string Filter on resources published after this date. -p published-before=string Filter on resources published before this date. -p q=string Textual search terms to match. -p region-code=string Display the content as seen by viewers in this country. -p relevance-language=string Return results relevant to this language. -p safe-search=string Indicates whether the search results should include restricted content as well as standard content. -p topic-id=string Restrict results to a particular topic. -p type=string Restrict results to a particular set of resource types from One Platform. -p video-caption=string Filter on the presence of captions on the videos. -p video-category-id=string Filter on videos in a specific category. -p video-definition=string Filter on the definition of the videos. -p video-dimension=string Filter on 3d videos. -p video-duration=string Filter on the duration of the videos. -p video-embeddable=string Filter on embeddable videos. -p video-license=string Filter on the license of the videos. -p video-paid-product-placement=string No description provided. -p video-syndicated=string Filter on syndicated videos. -p video-type=string Filter on videos of a specific type. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"search_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> search list ...","title":"Scopes"},{"location":"search_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"search_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"search_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Filter on resources belonging to this channelId. -p channel-type=string Add a filter on the channel search. -p event-type=string Filter on the livestream status of the videos. -p for-content-owner=boolean Search owned by a content owner. -p for-developer=boolean Restrict the search to only retrieve videos uploaded using the project id of the authenticated user. -p for-mine=boolean Search for the private videos of the authenticated user. -p location=string Filter on location of the video -p location-radius=string Filter on distance from the location (specified above). -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p order=string Sort order of the results. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. -p published-after=string Filter on resources published after this date. -p published-before=string Filter on resources published before this date. -p q=string Textual search terms to match. -p region-code=string Display the content as seen by viewers in this country. -p relevance-language=string Return results relevant to this language. -p safe-search=string Indicates whether the search results should include restricted content as well as standard content. -p topic-id=string Restrict results to a particular topic. -p type=string Restrict results to a particular set of resource types from One Platform. -p video-caption=string Filter on the presence of captions on the videos. -p video-category-id=string Filter on videos in a specific category. -p video-definition=string Filter on the definition of the videos. -p video-dimension=string Filter on 3d videos. -p video-duration=string Filter on the duration of the videos. -p video-embeddable=string Filter on embeddable videos. -p video-license=string Filter on the license of the videos. -p video-paid-product-placement=string No description provided. -p video-syndicated=string Filter on syndicated videos. -p video-type=string Filter on videos of a specific type.","title":"Optional Method Properties"},{"location":"search_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"subscriptions_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions delete ... Required Scalar Argument <id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"subscriptions_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions delete ...","title":"Scopes"},{"location":"subscriptions_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"subscriptions_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"subscriptions_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: content-details: activity-type: string new-item-count: integer total-item-count: integer etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string subscriber-snippet: channel-id: string description: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details activity-type=et The type of activity this subscription is for (only uploads, everything). new-item-count=5 The number of new items in the subscription since its content was last read. total-item-count=74 The approximate number of items that the subscription points to. .. etag=et Etag of this resource. id=accusam The ID that YouTube uses to uniquely identify the subscription. kind=sit Identifies what kind of resource this is. Value: the fixed string \"youtube#subscription\". snippet channel-id=voluptua. The ID that YouTube uses to uniquely identify the subscriber's channel. channel-title=kasd Channel title for the channel that the subscription belongs to. description=no The subscription's details. published-at=amet. The date and time that the subscription was created. resource-id channel-id=aliquyam The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=accusam The type of the API resource. playlist-id=sanctus The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=duo The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=38 (Optional) Height of the thumbnail image. url=eos The thumbnail image's URL. width=90 (Optional) Width of the thumbnail image. ..high height=38 (Optional) Height of the thumbnail image. url=sanctus The thumbnail image's URL. width=39 (Optional) Width of the thumbnail image. ..maxres height=78 (Optional) Height of the thumbnail image. url=lorem The thumbnail image's URL. width=97 (Optional) Width of the thumbnail image. ..medium height=43 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=22 (Optional) Width of the thumbnail image. ..standard height=4 (Optional) Height of the thumbnail image. url=magna The thumbnail image's URL. width=78 (Optional) Width of the thumbnail image. ... title=lorem The subscription's title. ..subscriber-snippet channel-id=tempor The channel ID of the subscriber. description=consetetur The description of the subscriber. thumbnails.default height=54 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=29 (Optional) Width of the thumbnail image. ..high height=57 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=81 (Optional) Width of the thumbnail image. ..maxres height=9 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=0 (Optional) Width of the thumbnail image. ..medium height=90 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=66 (Optional) Width of the thumbnail image. ..standard height=23 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=34 (Optional) Width of the thumbnail image. ... title=ipsum The title of the subscriber. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"subscriptions_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions insert ...","title":"Scopes"},{"location":"subscriptions_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: content-details: activity-type: string new-item-count: integer total-item-count: integer etag: string id: string kind: string snippet: channel-id: string channel-title: string description: string published-at: string resource-id: channel-id: string kind: string playlist-id: string video-id: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string subscriber-snippet: channel-id: string description: string thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .content-details activity-type=et The type of activity this subscription is for (only uploads, everything). new-item-count=5 The number of new items in the subscription since its content was last read. total-item-count=74 The approximate number of items that the subscription points to. .. etag=et Etag of this resource. id=accusam The ID that YouTube uses to uniquely identify the subscription. kind=sit Identifies what kind of resource this is. Value: the fixed string \"youtube#subscription\". snippet channel-id=voluptua. The ID that YouTube uses to uniquely identify the subscriber's channel. channel-title=kasd Channel title for the channel that the subscription belongs to. description=no The subscription's details. published-at=amet. The date and time that the subscription was created. resource-id channel-id=aliquyam The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel. kind=accusam The type of the API resource. playlist-id=sanctus The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist. video-id=duo The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video. ..thumbnails.default height=38 (Optional) Height of the thumbnail image. url=eos The thumbnail image's URL. width=90 (Optional) Width of the thumbnail image. ..high height=38 (Optional) Height of the thumbnail image. url=sanctus The thumbnail image's URL. width=39 (Optional) Width of the thumbnail image. ..maxres height=78 (Optional) Height of the thumbnail image. url=lorem The thumbnail image's URL. width=97 (Optional) Width of the thumbnail image. ..medium height=43 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=22 (Optional) Width of the thumbnail image. ..standard height=4 (Optional) Height of the thumbnail image. url=magna The thumbnail image's URL. width=78 (Optional) Width of the thumbnail image. ... title=lorem The subscription's title. ..subscriber-snippet channel-id=tempor The channel ID of the subscriber. description=consetetur The description of the subscriber. thumbnails.default height=54 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=29 (Optional) Width of the thumbnail image. ..high height=57 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=81 (Optional) Width of the thumbnail image. ..maxres height=9 (Optional) Height of the thumbnail image. url=et The thumbnail image's URL. width=0 (Optional) Width of the thumbnail image. ..medium height=90 (Optional) Height of the thumbnail image. url=sea The thumbnail image's URL. width=66 (Optional) Width of the thumbnail image. ..standard height=23 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=34 (Optional) Width of the thumbnail image. ... title=ipsum The title of the subscriber.","title":"Required Request Value"},{"location":"subscriptions_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"subscriptions_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the subscriptions of the given channel owner. -p for-channel-id=string Return the subscriptions to the subset of these channels that the authenticated user is subscribed to. -p id=string Return the subscriptions with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Flag for returning the subscriptions of the authenticated user. -p my-recent-subscribers=boolean No description provided. -p my-subscribers=boolean Return the subscribers of the given channel owner. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p order=string The order of the returned subscriptions -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"subscriptions_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> subscriptions list ...","title":"Scopes"},{"location":"subscriptions_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet , the API response will also contain all of those nested properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"subscriptions_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p channel-id=string Return the subscriptions of the given channel owner. -p for-channel-id=string Return the subscriptions to the subset of these channels that the authenticated user is subscribed to. -p id=string Return the subscriptions with the given IDs for Stubby or Apiary. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p mine=boolean Flag for returning the subscriptions of the authenticated user. -p my-recent-subscribers=boolean No description provided. -p my-subscribers=boolean Return the subscribers of the given channel owner. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p order=string The order of the returned subscriptions -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"subscriptions_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"super-chat-events_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> super-chat-events list ... Required Scalar Argument <part>... (string) The part parameter specifies the superChatEvent resource parts that the API response will include. This parameter is currently not supported. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string Return rendered funding amounts in specified language. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"super-chat-events_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> super-chat-events list ...","title":"Scopes"},{"location":"super-chat-events_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the superChatEvent resource parts that the API response will include. This parameter is currently not supported. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"super-chat-events_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"super-chat-events_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string Return rendered funding amounts in specified language. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.","title":"Optional Method Properties"},{"location":"super-chat-events_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"tests_insert/","text":"POST method. Scopes You will need authorization for the https://www.googleapis.com/auth/youtube.readonly scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> tests insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestItem: featured-part: boolean gaia: string id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . featured-part=true No description provided. gaia=dolores No description provided. id=elitr No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"tests_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/youtube.readonly scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> tests insert ...","title":"Scopes"},{"location":"tests_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestItem: featured-part: boolean gaia: string id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . featured-part=true No description provided. gaia=dolores No description provided. id=elitr No description provided.","title":"Required Request Value"},{"location":"tests_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"tests_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"tests_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string No description provided.","title":"Optional Method Properties"},{"location":"tests_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"third-party-links_delete/","text":"Deletes a resource. Required Scalar Arguments <linking-token> (string) Delete the partner links with the given linking token. <type> (string) Type of the link to be deleted. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. -p part=string Do not use. Required for compatibility. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"third-party-links_delete/#required-scalar-arguments","text":"<linking-token> (string) Delete the partner links with the given linking token. <type> (string) Type of the link to be deleted.","title":"Required Scalar Arguments"},{"location":"third-party-links_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. -p part=string Do not use. Required for compatibility.","title":"Optional Method Properties"},{"location":"third-party-links_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"third-party-links_insert/","text":"Inserts a new resource into this collection. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ThirdPartyLink: etag: string kind: string linking-token: string snippet: channel-to-store-link: billing-details: billing-status: string merchant-id: string store-name: string store-url: string type: string status: link-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=diam Etag of this resource kind=sed Identifies what kind of resource this is. Value: the fixed string \"youtube#thirdPartyLink\". linking-token=lorem The linking_token identifies a YouTube account and channel with which the third party account is linked. snippet.channel-to-store-link.billing-details billing-status=magna The current billing profile status. .. merchant-id=duo Google Merchant Center id of the store. store-name=et Name of the store. store-url=no Landing page of the store. .. type=sadipscing Type of the link named after the entities that are being linked. ..status link-status=sit No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"third-party-links_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ThirdPartyLink: etag: string kind: string linking-token: string snippet: channel-to-store-link: billing-details: billing-status: string merchant-id: string store-name: string store-url: string type: string status: link-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=diam Etag of this resource kind=sed Identifies what kind of resource this is. Value: the fixed string \"youtube#thirdPartyLink\". linking-token=lorem The linking_token identifies a YouTube account and channel with which the third party account is linked. snippet.channel-to-store-link.billing-details billing-status=magna The current billing profile status. .. merchant-id=duo Google Merchant Center id of the store. store-name=et Name of the store. store-url=no Landing page of the store. .. type=sadipscing Type of the link named after the entities that are being linked. ..status link-status=sit No description provided.","title":"Required Request Value"},{"location":"third-party-links_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"third-party-links_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"third-party-links_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation.","title":"Optional Method Properties"},{"location":"third-party-links_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"third-party-links_list/","text":"Retrieves a list of resources, possibly filtered. Required Scalar Argument <part>... (string) The part parameter specifies the thirdPartyLink resource parts that the API response will include. Supported values are linkingToken, status, and snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. -p linking-token=string Get a third party link with the given linking token. -p type=string Get a third party link of the given type. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"third-party-links_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the thirdPartyLink resource parts that the API response will include. Supported values are linkingToken, status, and snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"third-party-links_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"third-party-links_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. -p linking-token=string Get a third party link with the given linking token. -p type=string Get a third party link of the given type.","title":"Optional Method Properties"},{"location":"third-party-links_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"third-party-links_update/","text":"Updates an existing resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ThirdPartyLink: etag: string kind: string linking-token: string snippet: channel-to-store-link: billing-details: billing-status: string merchant-id: string store-name: string store-url: string type: string status: link-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=duo Etag of this resource kind=stet Identifies what kind of resource this is. Value: the fixed string \"youtube#thirdPartyLink\". linking-token=diam The linking_token identifies a YouTube account and channel with which the third party account is linked. snippet.channel-to-store-link.billing-details billing-status=accusam The current billing profile status. .. merchant-id=dolore Google Merchant Center id of the store. store-name=eirmod Name of the store. store-url=lorem Landing page of the store. .. type=ut Type of the link named after the entities that are being linked. ..status link-status=est No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"third-party-links_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ThirdPartyLink: etag: string kind: string linking-token: string snippet: channel-to-store-link: billing-details: billing-status: string merchant-id: string store-name: string store-url: string type: string status: link-status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=duo Etag of this resource kind=stet Identifies what kind of resource this is. Value: the fixed string \"youtube#thirdPartyLink\". linking-token=diam The linking_token identifies a YouTube account and channel with which the third party account is linked. snippet.channel-to-store-link.billing-details billing-status=accusam The current billing profile status. .. merchant-id=dolore Google Merchant Center id of the store. store-name=eirmod Name of the store. store-url=lorem Landing page of the store. .. type=ut Type of the link named after the entities that are being linked. ..status link-status=est No description provided.","title":"Required Request Value"},{"location":"third-party-links_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"third-party-links_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"third-party-links_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-channel-id=string Channel ID to which changes should be applied, for delegation.","title":"Optional Method Properties"},{"location":"third-party-links_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"thumbnails_set/","text":"As this is not an insert in a strict sense (it supports uploading/setting of a thumbnail for multiple videos, which doesn't result in creation of a single resource), I use a custom verb here. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> thumbnails set ... Required Scalar Argument <video-id> (string) Returns the Thumbnail with the given video IDs for Stubby or Apiary. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set"},{"location":"thumbnails_set/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> thumbnails set ...","title":"Scopes"},{"location":"thumbnails_set/#required-scalar-argument","text":"<video-id> (string) Returns the Thumbnail with the given video IDs for Stubby or Apiary.","title":"Required Scalar Argument"},{"location":"thumbnails_set/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"thumbnails_set/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"thumbnails_set/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"thumbnails_set/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"video-abuse-report-reasons_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> video-abuse-report-reasons list ... Required Scalar Argument <part>... (string) The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"video-abuse-report-reasons_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> video-abuse-report-reasons list ...","title":"Scopes"},{"location":"video-abuse-report-reasons_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"video-abuse-report-reasons_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"video-abuse-report-reasons_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided.","title":"Optional Method Properties"},{"location":"video-abuse-report-reasons_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"video-categories_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> video-categories list ... Required Scalar Argument <part>... (string) The part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided. -p id=string Returns the video categories with the given IDs for Stubby or Apiary. -p region-code=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"video-categories_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> video-categories list ...","title":"Scopes"},{"location":"video-categories_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"video-categories_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"video-categories_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p hl=string No description provided. -p id=string Returns the video categories with the given IDs for Stubby or Apiary. -p region-code=string No description provided.","title":"Optional Method Properties"},{"location":"video-categories_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_delete/","text":"Deletes a resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos delete ... Required Scalar Argument <id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"videos_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos delete ...","title":"Scopes"},{"location":"videos_delete/#required-scalar-argument","text":"<id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"videos_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"videos_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_get-rating/","text":"Retrieves the ratings that the authorized user gave to a list of specified videos. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos get-rating ... Required Scalar Argument <id>... (string) No description provided. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Rating"},{"location":"videos_get-rating/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos get-rating ...","title":"Scopes"},{"location":"videos_get-rating/#required-scalar-argument","text":"<id>... (string) No description provided. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"videos_get-rating/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"videos_get-rating/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"videos_get-rating/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_insert/","text":"Inserts a new resource into this collection. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Video: age-gating: alcohol-content: boolean restricted: boolean video-game-rating: string content-details: caption: string content-rating: acb-rating: string agcom-rating: string anatel-rating: string bbfc-rating: string bfvc-rating: string bmukk-rating: string catv-rating: string catvfr-rating: string cbfc-rating: string ccc-rating: string cce-rating: string chfilm-rating: string chvrs-rating: string cicf-rating: string cna-rating: string cnc-rating: string csa-rating: string cscf-rating: string czfilm-rating: string djctq-rating: string djctq-rating-reasons: [string] ecbmct-rating: string eefilm-rating: string egfilm-rating: string eirin-rating: string fcbm-rating: string fco-rating: string fmoc-rating: string fpb-rating: string fpb-rating-reasons: [string] fsk-rating: string grfilm-rating: string icaa-rating: string ifco-rating: string ilfilm-rating: string incaa-rating: string kfcb-rating: string kijkwijzer-rating: string kmrb-rating: string lsf-rating: string mccaa-rating: string mccyp-rating: string mcst-rating: string mda-rating: string medietilsynet-rating: string meku-rating: string mena-mpaa-rating: string mibac-rating: string moc-rating: string moctw-rating: string mpaa-rating: string mpaat-rating: string mtrcb-rating: string nbc-rating: string nbcpl-rating: string nfrc-rating: string nfvcb-rating: string nkclv-rating: string nmc-rating: string oflc-rating: string pefilm-rating: string rcnof-rating: string resorteviolencia-rating: string rtc-rating: string rte-rating: string russia-rating: string skfilm-rating: string smais-rating: string smsa-rating: string tvpg-rating: string yt-rating: string country-restriction: allowed: boolean exception: [string] definition: string dimension: string duration: string has-custom-thumbnail: boolean licensed-content: boolean projection: string region-restriction: allowed: [string] blocked: [string] etag: string file-details: bitrate-bps: string container: string creation-time: string duration-ms: string file-name: string file-size: string file-type: string id: string kind: string live-streaming-details: active-live-chat-id: string actual-end-time: string actual-start-time: string concurrent-viewers: string scheduled-end-time: string scheduled-start-time: string monetization-details: access: allowed: boolean exception: [string] player: embed-height: string embed-html: string embed-width: string processing-details: editor-suggestions-availability: string file-details-availability: string processing-failure-reason: string processing-issues-availability: string processing-progress: parts-processed: string parts-total: string time-left-ms: string processing-status: string tag-suggestions-availability: string thumbnails-availability: string recording-details: location: altitude: number latitude: number longitude: number location-description: string recording-date: string snippet: category-id: string channel-id: string channel-title: string default-audio-language: string default-language: string description: string live-broadcast-content: string localized: description: string title: string published-at: string tags: [string] thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 dislike-count: int64 favorite-count: int64 like-count: int64 view-count: int64 status: embeddable: boolean failure-reason: string license: string made-for-kids: boolean privacy-status: string public-stats-viewable: boolean publish-at: string rejection-reason: string self-declared-made-for-kids: boolean upload-status: string suggestions: editor-suggestions: [string] processing-errors: [string] processing-hints: [string] processing-warnings: [string] topic-details: relevant-topic-ids: [string] topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .age-gating alcohol-content=false Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. restricted=false Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present. video-game-rating=amet. Video game rating, if any. ..content-details caption=et The value of captions indicates whether the video has captions or not. content-rating acb-rating=ut The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming. agcom-rating=et The video's rating from Italy's Autorit\u00e0 per le Garanzie nelle Comunicazioni (AGCOM). anatel-rating=et The video's Anatel (Asociaci\u00f3n Nacional de Televisi\u00f3n) rating for Chilean television. bbfc-rating=at The video's British Board of Film Classification (BBFC) rating. bfvc-rating=sed The video's rating from Thailand's Board of Film and Video Censors. bmukk-rating=stet The video's rating from the Austrian Board of Media Classification (Bundesministerium f\u00fcr Unterricht, Kunst und Kultur). catv-rating=sadipscing Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. catvfr-rating=voluptua. The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. cbfc-rating=et The video's Central Board of Film Certification (CBFC - India) rating. ccc-rating=clita The video's Consejo de Calificaci\u00f3n Cinematogr\u00e1fica (Chile) rating. cce-rating=sit The video's rating from Portugal's Comiss\u00e3o de Classifica\u00e7\u00e3o de Espect\u00b4culos. chfilm-rating=rebum. The video's rating in Switzerland. chvrs-rating=sanctus The video's Canadian Home Video Rating System (CHVRS) rating. cicf-rating=no The video's rating from the Commission de Contr\u00f4le des Films (Belgium). cna-rating=stet The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA). cnc-rating=diam Rating system in France - Commission de classification cinematographique csa-rating=ipsum The video's rating from France's Conseil sup\u00e9rieur de l\u2019audiovisuel, which rates broadcast content. cscf-rating=eos The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF). czfilm-rating=erat The video's rating in the Czech Republic. djctq-rating=at The video's Departamento de Justi\u00e7a, Classifica\u00e7\u00e3o, Qualifica\u00e7\u00e3o e T\u00edtulos (DJCQT - Brazil) rating. djctq-rating-reasons=amet Reasons that explain why the video received its DJCQT (Brazil) rating. Each invocation of this argument appends the given value to the array. ecbmct-rating=justo Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism eefilm-rating=justo The video's rating in Estonia. egfilm-rating=eirmod The video's rating in Egypt. eirin-rating=duo The video's Eirin (\u6620\u502b) rating. Eirin is the Japanese rating system. fcbm-rating=sanctus The video's rating from Malaysia's Film Censorship Board. fco-rating=aliquyam The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration. fmoc-rating=voluptua. This property has been deprecated. Use the contentDetails.contentRating.cncRating instead. fpb-rating=eirmod The video's rating from South Africa's Film and Publication Board. fpb-rating-reasons=sanctus Reasons that explain why the video received its FPB (South Africa) rating. Each invocation of this argument appends the given value to the array. fsk-rating=rebum. The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating. grfilm-rating=kasd The video's rating in Greece. icaa-rating=voluptua. The video's Instituto de la Cinematograf\u00eda y de las Artes Audiovisuales (ICAA - Spain) rating. ifco-rating=erat The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information. ilfilm-rating=nonumy The video's rating in Israel. incaa-rating=magna The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating. kfcb-rating=gubergren The video's rating from the Kenya Film Classification Board. kijkwijzer-rating=lorem The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands). kmrb-rating=aliquyam The video's Korea Media Rating Board (\uc601\uc0c1\ubb3c\ub4f1\uae09\uc704\uc6d0\ud68c) rating. The KMRB rates videos in South Korea. lsf-rating=diam The video's rating from Indonesia's Lembaga Sensor Film. mccaa-rating=vero The video's rating from Malta's Film Age-Classification Board. mccyp-rating=erat The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People. mcst-rating=dolore The video's rating system for Vietnam - MCST mda-rating=sit The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC). medietilsynet-rating=consetetur The video's rating from Medietilsynet, the Norwegian Media Authority. meku-rating=amet The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute). mena-mpaa-rating=magna The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details. mibac-rating=sanctus The video's rating from the Ministero dei Beni e delle Attivit\u00e0 Culturali e del Turismo (Italy). moc-rating=clita The video's Ministerio de Cultura (Colombia) rating. moctw-rating=invidunt The video's rating from Taiwan's Ministry of Culture (\u6587\u5316\u90e8). mpaa-rating=accusam The video's Motion Picture Association of America (MPAA) rating. mpaat-rating=amet. The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html. mtrcb-rating=sanctus The video's rating from the Movie and Television Review and Classification Board (Philippines). nbc-rating=invidunt The video's rating from the Maldives National Bureau of Classification. nbcpl-rating=sit The video's rating in Poland. nfrc-rating=sed The video's rating from the Bulgarian National Film Center. nfvcb-rating=duo The video's rating from Nigeria's National Film and Video Censors Board. nkclv-rating=et The video's rating from the Nacion\u00e3lais Kino centrs (National Film Centre of Latvia). nmc-rating=dolor The National Media Council ratings system for United Arab Emirates. oflc-rating=et The video's Office of Film and Literature Classification (OFLC - New Zealand) rating. pefilm-rating=sed The video's rating in Peru. rcnof-rating=justo The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film. resorteviolencia-rating=sadipscing The video's rating in Venezuela. rtc-rating=accusam The video's General Directorate of Radio, Television and Cinematography (Mexico) rating. rte-rating=takimata The video's rating from Ireland's Raidi\u00f3 Teilif\u00eds \u00c9ireann. russia-rating=invidunt The video's National Film Registry of the Russian Federation (MKRF - Russia) rating. skfilm-rating=invidunt The video's rating in Slovakia. smais-rating=gubergren The video's rating in Iceland. smsa-rating=sed The video's rating from Statens medier\u00e5d (Sweden's National Media Council). tvpg-rating=justo The video's TV Parental Guidelines (TVPG) rating. yt-rating=amet A rating that YouTube uses to identify age-restricted content. ..country-restriction allowed=false The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=et A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. .. definition=kasd The value of definition indicates whether the video is available in high definition or only in standard definition. dimension=gubergren The value of dimension indicates whether the video is available in 3D or in 2D. duration=et The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long. has-custom-thumbnail=false Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader. licensed-content=true The value of is_license_content indicates whether the video is licensed content. projection=at Specifies the projection format of the video. region-restriction allowed=et A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries. Each invocation of this argument appends the given value to the array. blocked=dolor A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries. Each invocation of this argument appends the given value to the array. ... etag=clita Etag of this resource. file-details bitrate-bps=tempor The uploaded video file's combined (video and audio) bitrate in bits per second. container=amet The uploaded video file's container format. creation-time=dolor The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM duration-ms=dolore The length of the uploaded video in milliseconds. file-name=clita The uploaded file's name. This field is present whether a video file or another type of file was uploaded. file-size=et The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded. file-type=diam The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded. .. id=sanctus The ID that YouTube uses to uniquely identify the video. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#video\". live-streaming-details active-live-chat-id=lorem The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page. actual-end-time=sed The time that the broadcast actually ended. This value will not be available until the broadcast is over. actual-start-time=tempor The time that the broadcast actually started. This value will not be available until the broadcast begins. concurrent-viewers=et The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. scheduled-end-time=et The time that the broadcast is scheduled to end. If the value is empty or the property is not present, then the broadcast is scheduled to contiue indefinitely. scheduled-start-time=sadipscing The time that the broadcast is scheduled to begin. ..monetization-details.access allowed=false The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=sed A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. ...player embed-height=et No description provided. embed-html=sea An <iframe> tag that embeds a player that will play the video. embed-width=ut The embed width ..processing-details editor-suggestions-availability=et This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. file-details-availability=sanctus This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request. processing-failure-reason=magna The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed. processing-issues-availability=magna This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. processing-progress parts-processed=ea The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video. parts-total=no An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video. time-left-ms=aliquyam An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video. .. processing-status=sed The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. tag-suggestions-availability=dolores This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. thumbnails-availability=invidunt This value indicates whether thumbnail images have been generated for the video. ..recording-details.location altitude=0.44314409260228127 Altitude above the reference ellipsoid, in meters. latitude=0.11445649675939595 Latitude in degrees. longitude=0.040412627400529755 Longitude in degrees. .. location-description=vero The text description of the location where the video was recorded. recording-date=ipsum The date and time when the video was recorded. ..snippet category-id=no The YouTube video category associated with the video. channel-id=rebum. The ID that YouTube uses to uniquely identify the channel that the video was uploaded to. channel-title=est Channel title for the channel that the video belongs to. default-audio-language=rebum. The default_audio_language property specifies the language spoken in the video's default audio track. default-language=nonumy The language of the videos's default snippet. description=rebum. The video's description. @mutable youtube.videos.insert youtube.videos.update live-broadcast-content=et Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast. localized description=et Localized version of the video's description. title=aliquyam Localized version of the video's title. .. published-at=sanctus The date and time when the video was uploaded. tags=sed A list of keyword tags associated with the video. Tags may contain spaces. Each invocation of this argument appends the given value to the array. thumbnails.default height=12 (Optional) Height of the thumbnail image. url=dolore The thumbnail image's URL. width=17 (Optional) Width of the thumbnail image. ..high height=46 (Optional) Height of the thumbnail image. url=takimata The thumbnail image's URL. width=80 (Optional) Width of the thumbnail image. ..maxres height=34 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=9 (Optional) Width of the thumbnail image. ..medium height=21 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=34 (Optional) Width of the thumbnail image. ..standard height=66 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=32 (Optional) Width of the thumbnail image. ... title=amet The video's title. @mutable youtube.videos.insert youtube.videos.update ..statistics comment-count=-98 The number of comments for the video. dislike-count=-46 The number of users who have indicated that they disliked the video by giving it a negative rating. favorite-count=-13 The number of users who currently have the video marked as a favorite video. like-count=-77 The number of users who have indicated that they liked the video by giving it a positive rating. view-count=-66 The number of times the video has been viewed. ..status embeddable=true This value indicates if the video can be embedded on another website. @mutable youtube.videos.insert youtube.videos.update failure-reason=gubergren This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed. license=kasd The video's license. @mutable youtube.videos.insert youtube.videos.update made-for-kids=true No description provided. privacy-status=kasd The video's privacy status. public-stats-viewable=true This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled. @mutable youtube.videos.insert youtube.videos.update publish-at=labore The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private.. rejection-reason=et This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected. self-declared-made-for-kids=true No description provided. upload-status=voluptua. The status of the uploaded video. ..suggestions editor-suggestions=no A list of video editing operations that might improve the video quality or playback experience of the uploaded video. Each invocation of this argument appends the given value to the array. processing-errors=ut A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed. Each invocation of this argument appends the given value to the array. processing-hints=dolore A list of suggestions that may improve YouTube's ability to process the video. Each invocation of this argument appends the given value to the array. processing-warnings=takimata A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track. Each invocation of this argument appends the given value to the array. ..topic-details relevant-topic-ids=invidunt Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API. Each invocation of this argument appends the given value to the array. topic-categories=sed A list of Wikipedia URLs that provide a high-level description of the video's content. Each invocation of this argument appends the given value to the array. topic-ids=et A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-levels=boolean Should auto-levels be applied to the upload. -p notify-subscribers=boolean Notify the channel subscribers about the new video. As default, the notification is enabled. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p stabilize=boolean Should stabilize be applied to the upload. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"videos_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos insert ...","title":"Scopes"},{"location":"videos_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Video: age-gating: alcohol-content: boolean restricted: boolean video-game-rating: string content-details: caption: string content-rating: acb-rating: string agcom-rating: string anatel-rating: string bbfc-rating: string bfvc-rating: string bmukk-rating: string catv-rating: string catvfr-rating: string cbfc-rating: string ccc-rating: string cce-rating: string chfilm-rating: string chvrs-rating: string cicf-rating: string cna-rating: string cnc-rating: string csa-rating: string cscf-rating: string czfilm-rating: string djctq-rating: string djctq-rating-reasons: [string] ecbmct-rating: string eefilm-rating: string egfilm-rating: string eirin-rating: string fcbm-rating: string fco-rating: string fmoc-rating: string fpb-rating: string fpb-rating-reasons: [string] fsk-rating: string grfilm-rating: string icaa-rating: string ifco-rating: string ilfilm-rating: string incaa-rating: string kfcb-rating: string kijkwijzer-rating: string kmrb-rating: string lsf-rating: string mccaa-rating: string mccyp-rating: string mcst-rating: string mda-rating: string medietilsynet-rating: string meku-rating: string mena-mpaa-rating: string mibac-rating: string moc-rating: string moctw-rating: string mpaa-rating: string mpaat-rating: string mtrcb-rating: string nbc-rating: string nbcpl-rating: string nfrc-rating: string nfvcb-rating: string nkclv-rating: string nmc-rating: string oflc-rating: string pefilm-rating: string rcnof-rating: string resorteviolencia-rating: string rtc-rating: string rte-rating: string russia-rating: string skfilm-rating: string smais-rating: string smsa-rating: string tvpg-rating: string yt-rating: string country-restriction: allowed: boolean exception: [string] definition: string dimension: string duration: string has-custom-thumbnail: boolean licensed-content: boolean projection: string region-restriction: allowed: [string] blocked: [string] etag: string file-details: bitrate-bps: string container: string creation-time: string duration-ms: string file-name: string file-size: string file-type: string id: string kind: string live-streaming-details: active-live-chat-id: string actual-end-time: string actual-start-time: string concurrent-viewers: string scheduled-end-time: string scheduled-start-time: string monetization-details: access: allowed: boolean exception: [string] player: embed-height: string embed-html: string embed-width: string processing-details: editor-suggestions-availability: string file-details-availability: string processing-failure-reason: string processing-issues-availability: string processing-progress: parts-processed: string parts-total: string time-left-ms: string processing-status: string tag-suggestions-availability: string thumbnails-availability: string recording-details: location: altitude: number latitude: number longitude: number location-description: string recording-date: string snippet: category-id: string channel-id: string channel-title: string default-audio-language: string default-language: string description: string live-broadcast-content: string localized: description: string title: string published-at: string tags: [string] thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 dislike-count: int64 favorite-count: int64 like-count: int64 view-count: int64 status: embeddable: boolean failure-reason: string license: string made-for-kids: boolean privacy-status: string public-stats-viewable: boolean publish-at: string rejection-reason: string self-declared-made-for-kids: boolean upload-status: string suggestions: editor-suggestions: [string] processing-errors: [string] processing-hints: [string] processing-warnings: [string] topic-details: relevant-topic-ids: [string] topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .age-gating alcohol-content=false Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. restricted=false Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present. video-game-rating=amet. Video game rating, if any. ..content-details caption=et The value of captions indicates whether the video has captions or not. content-rating acb-rating=ut The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming. agcom-rating=et The video's rating from Italy's Autorit\u00e0 per le Garanzie nelle Comunicazioni (AGCOM). anatel-rating=et The video's Anatel (Asociaci\u00f3n Nacional de Televisi\u00f3n) rating for Chilean television. bbfc-rating=at The video's British Board of Film Classification (BBFC) rating. bfvc-rating=sed The video's rating from Thailand's Board of Film and Video Censors. bmukk-rating=stet The video's rating from the Austrian Board of Media Classification (Bundesministerium f\u00fcr Unterricht, Kunst und Kultur). catv-rating=sadipscing Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. catvfr-rating=voluptua. The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. cbfc-rating=et The video's Central Board of Film Certification (CBFC - India) rating. ccc-rating=clita The video's Consejo de Calificaci\u00f3n Cinematogr\u00e1fica (Chile) rating. cce-rating=sit The video's rating from Portugal's Comiss\u00e3o de Classifica\u00e7\u00e3o de Espect\u00b4culos. chfilm-rating=rebum. The video's rating in Switzerland. chvrs-rating=sanctus The video's Canadian Home Video Rating System (CHVRS) rating. cicf-rating=no The video's rating from the Commission de Contr\u00f4le des Films (Belgium). cna-rating=stet The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA). cnc-rating=diam Rating system in France - Commission de classification cinematographique csa-rating=ipsum The video's rating from France's Conseil sup\u00e9rieur de l\u2019audiovisuel, which rates broadcast content. cscf-rating=eos The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF). czfilm-rating=erat The video's rating in the Czech Republic. djctq-rating=at The video's Departamento de Justi\u00e7a, Classifica\u00e7\u00e3o, Qualifica\u00e7\u00e3o e T\u00edtulos (DJCQT - Brazil) rating. djctq-rating-reasons=amet Reasons that explain why the video received its DJCQT (Brazil) rating. Each invocation of this argument appends the given value to the array. ecbmct-rating=justo Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism eefilm-rating=justo The video's rating in Estonia. egfilm-rating=eirmod The video's rating in Egypt. eirin-rating=duo The video's Eirin (\u6620\u502b) rating. Eirin is the Japanese rating system. fcbm-rating=sanctus The video's rating from Malaysia's Film Censorship Board. fco-rating=aliquyam The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration. fmoc-rating=voluptua. This property has been deprecated. Use the contentDetails.contentRating.cncRating instead. fpb-rating=eirmod The video's rating from South Africa's Film and Publication Board. fpb-rating-reasons=sanctus Reasons that explain why the video received its FPB (South Africa) rating. Each invocation of this argument appends the given value to the array. fsk-rating=rebum. The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating. grfilm-rating=kasd The video's rating in Greece. icaa-rating=voluptua. The video's Instituto de la Cinematograf\u00eda y de las Artes Audiovisuales (ICAA - Spain) rating. ifco-rating=erat The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information. ilfilm-rating=nonumy The video's rating in Israel. incaa-rating=magna The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating. kfcb-rating=gubergren The video's rating from the Kenya Film Classification Board. kijkwijzer-rating=lorem The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands). kmrb-rating=aliquyam The video's Korea Media Rating Board (\uc601\uc0c1\ubb3c\ub4f1\uae09\uc704\uc6d0\ud68c) rating. The KMRB rates videos in South Korea. lsf-rating=diam The video's rating from Indonesia's Lembaga Sensor Film. mccaa-rating=vero The video's rating from Malta's Film Age-Classification Board. mccyp-rating=erat The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People. mcst-rating=dolore The video's rating system for Vietnam - MCST mda-rating=sit The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC). medietilsynet-rating=consetetur The video's rating from Medietilsynet, the Norwegian Media Authority. meku-rating=amet The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute). mena-mpaa-rating=magna The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details. mibac-rating=sanctus The video's rating from the Ministero dei Beni e delle Attivit\u00e0 Culturali e del Turismo (Italy). moc-rating=clita The video's Ministerio de Cultura (Colombia) rating. moctw-rating=invidunt The video's rating from Taiwan's Ministry of Culture (\u6587\u5316\u90e8). mpaa-rating=accusam The video's Motion Picture Association of America (MPAA) rating. mpaat-rating=amet. The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html. mtrcb-rating=sanctus The video's rating from the Movie and Television Review and Classification Board (Philippines). nbc-rating=invidunt The video's rating from the Maldives National Bureau of Classification. nbcpl-rating=sit The video's rating in Poland. nfrc-rating=sed The video's rating from the Bulgarian National Film Center. nfvcb-rating=duo The video's rating from Nigeria's National Film and Video Censors Board. nkclv-rating=et The video's rating from the Nacion\u00e3lais Kino centrs (National Film Centre of Latvia). nmc-rating=dolor The National Media Council ratings system for United Arab Emirates. oflc-rating=et The video's Office of Film and Literature Classification (OFLC - New Zealand) rating. pefilm-rating=sed The video's rating in Peru. rcnof-rating=justo The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film. resorteviolencia-rating=sadipscing The video's rating in Venezuela. rtc-rating=accusam The video's General Directorate of Radio, Television and Cinematography (Mexico) rating. rte-rating=takimata The video's rating from Ireland's Raidi\u00f3 Teilif\u00eds \u00c9ireann. russia-rating=invidunt The video's National Film Registry of the Russian Federation (MKRF - Russia) rating. skfilm-rating=invidunt The video's rating in Slovakia. smais-rating=gubergren The video's rating in Iceland. smsa-rating=sed The video's rating from Statens medier\u00e5d (Sweden's National Media Council). tvpg-rating=justo The video's TV Parental Guidelines (TVPG) rating. yt-rating=amet A rating that YouTube uses to identify age-restricted content. ..country-restriction allowed=false The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=et A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. .. definition=kasd The value of definition indicates whether the video is available in high definition or only in standard definition. dimension=gubergren The value of dimension indicates whether the video is available in 3D or in 2D. duration=et The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long. has-custom-thumbnail=false Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader. licensed-content=true The value of is_license_content indicates whether the video is licensed content. projection=at Specifies the projection format of the video. region-restriction allowed=et A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries. Each invocation of this argument appends the given value to the array. blocked=dolor A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries. Each invocation of this argument appends the given value to the array. ... etag=clita Etag of this resource. file-details bitrate-bps=tempor The uploaded video file's combined (video and audio) bitrate in bits per second. container=amet The uploaded video file's container format. creation-time=dolor The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM duration-ms=dolore The length of the uploaded video in milliseconds. file-name=clita The uploaded file's name. This field is present whether a video file or another type of file was uploaded. file-size=et The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded. file-type=diam The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded. .. id=sanctus The ID that YouTube uses to uniquely identify the video. kind=ipsum Identifies what kind of resource this is. Value: the fixed string \"youtube#video\". live-streaming-details active-live-chat-id=lorem The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page. actual-end-time=sed The time that the broadcast actually ended. This value will not be available until the broadcast is over. actual-start-time=tempor The time that the broadcast actually started. This value will not be available until the broadcast begins. concurrent-viewers=et The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. scheduled-end-time=et The time that the broadcast is scheduled to end. If the value is empty or the property is not present, then the broadcast is scheduled to contiue indefinitely. scheduled-start-time=sadipscing The time that the broadcast is scheduled to begin. ..monetization-details.access allowed=false The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=sed A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. ...player embed-height=et No description provided. embed-html=sea An <iframe> tag that embeds a player that will play the video. embed-width=ut The embed width ..processing-details editor-suggestions-availability=et This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. file-details-availability=sanctus This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request. processing-failure-reason=magna The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed. processing-issues-availability=magna This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. processing-progress parts-processed=ea The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video. parts-total=no An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video. time-left-ms=aliquyam An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video. .. processing-status=sed The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. tag-suggestions-availability=dolores This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. thumbnails-availability=invidunt This value indicates whether thumbnail images have been generated for the video. ..recording-details.location altitude=0.44314409260228127 Altitude above the reference ellipsoid, in meters. latitude=0.11445649675939595 Latitude in degrees. longitude=0.040412627400529755 Longitude in degrees. .. location-description=vero The text description of the location where the video was recorded. recording-date=ipsum The date and time when the video was recorded. ..snippet category-id=no The YouTube video category associated with the video. channel-id=rebum. The ID that YouTube uses to uniquely identify the channel that the video was uploaded to. channel-title=est Channel title for the channel that the video belongs to. default-audio-language=rebum. The default_audio_language property specifies the language spoken in the video's default audio track. default-language=nonumy The language of the videos's default snippet. description=rebum. The video's description. @mutable youtube.videos.insert youtube.videos.update live-broadcast-content=et Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast. localized description=et Localized version of the video's description. title=aliquyam Localized version of the video's title. .. published-at=sanctus The date and time when the video was uploaded. tags=sed A list of keyword tags associated with the video. Tags may contain spaces. Each invocation of this argument appends the given value to the array. thumbnails.default height=12 (Optional) Height of the thumbnail image. url=dolore The thumbnail image's URL. width=17 (Optional) Width of the thumbnail image. ..high height=46 (Optional) Height of the thumbnail image. url=takimata The thumbnail image's URL. width=80 (Optional) Width of the thumbnail image. ..maxres height=34 (Optional) Height of the thumbnail image. url=ipsum The thumbnail image's URL. width=9 (Optional) Width of the thumbnail image. ..medium height=21 (Optional) Height of the thumbnail image. url=justo The thumbnail image's URL. width=34 (Optional) Width of the thumbnail image. ..standard height=66 (Optional) Height of the thumbnail image. url=dolor The thumbnail image's URL. width=32 (Optional) Width of the thumbnail image. ... title=amet The video's title. @mutable youtube.videos.insert youtube.videos.update ..statistics comment-count=-98 The number of comments for the video. dislike-count=-46 The number of users who have indicated that they disliked the video by giving it a negative rating. favorite-count=-13 The number of users who currently have the video marked as a favorite video. like-count=-77 The number of users who have indicated that they liked the video by giving it a positive rating. view-count=-66 The number of times the video has been viewed. ..status embeddable=true This value indicates if the video can be embedded on another website. @mutable youtube.videos.insert youtube.videos.update failure-reason=gubergren This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed. license=kasd The video's license. @mutable youtube.videos.insert youtube.videos.update made-for-kids=true No description provided. privacy-status=kasd The video's privacy status. public-stats-viewable=true This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled. @mutable youtube.videos.insert youtube.videos.update publish-at=labore The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private.. rejection-reason=et This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected. self-declared-made-for-kids=true No description provided. upload-status=voluptua. The status of the uploaded video. ..suggestions editor-suggestions=no A list of video editing operations that might improve the video quality or playback experience of the uploaded video. Each invocation of this argument appends the given value to the array. processing-errors=ut A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed. Each invocation of this argument appends the given value to the array. processing-hints=dolore A list of suggestions that may improve YouTube's ability to process the video. Each invocation of this argument appends the given value to the array. processing-warnings=takimata A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track. Each invocation of this argument appends the given value to the array. ..topic-details relevant-topic-ids=invidunt Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API. Each invocation of this argument appends the given value to the array. topic-categories=sed A list of Wikipedia URLs that provide a high-level description of the video's content. Each invocation of this argument appends the given value to the array. topic-ids=et A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"videos_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"videos_insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"videos_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"videos_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-levels=boolean Should auto-levels be applied to the upload. -p notify-subscribers=boolean Notify the channel subscribers about the new video. As default, the notification is enabled. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p on-behalf-of-content-owner-channel=string This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel. -p stabilize=boolean Should stabilize be applied to the upload.","title":"Optional Method Properties"},{"location":"videos_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_list/","text":"Retrieves a list of resources, possibly filtered. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> videos list ... Required Scalar Argument <part>... (string) The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p chart=string Return the videos that are in the specified chart. -p hl=string Stands for \"host language\". Specifies the localization language of the metadata to be filled into snippet.localized. The field is filled with the default metadata if there is no localization in the specified language. The parameter value must be a language code included in the list returned by the i18nLanguages.list method (e.g. en_US, es_MX). -p id=string Return videos with the given ids. -p locale=string No description provided. -p max-height=integer No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. Note: This parameter is supported for use in conjunction with the myRating and chart parameters, but it is not supported for use in conjunction with the id parameter. -p max-width=integer Return the player with maximum height specified in -p my-rating=string Return videos liked/disliked by the authenticated user. Does not support RateType.RATED_TYPE_NONE. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Note: This parameter is supported for use in conjunction with the myRating and chart parameters, but it is not supported for use in conjunction with the id parameter. -p region-code=string Use a chart that is specific to the specified region -p video-category-id=string Use chart that is specific to the specified video category Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"videos_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube.readonly . You can set the scope for this method like this: youtube3 --scope <scope> videos list ...","title":"Scopes"},{"location":"videos_list/#required-scalar-argument","text":"<part>... (string) The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet , the API response will contain all of those properties. This property can be specified one or more times","title":"Required Scalar Argument"},{"location":"videos_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"videos_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p chart=string Return the videos that are in the specified chart. -p hl=string Stands for \"host language\". Specifies the localization language of the metadata to be filled into snippet.localized. The field is filled with the default metadata if there is no localization in the specified language. The parameter value must be a language code included in the list returned by the i18nLanguages.list method (e.g. en_US, es_MX). -p id=string Return videos with the given ids. -p locale=string No description provided. -p max-height=integer No description provided. -p max-results=integer The maxResults parameter specifies the maximum number of items that should be returned in the result set. Note: This parameter is supported for use in conjunction with the myRating and chart parameters, but it is not supported for use in conjunction with the id parameter. -p max-width=integer Return the player with maximum height specified in -p my-rating=string Return videos liked/disliked by the authenticated user. Does not support RateType.RATED_TYPE_NONE. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. -p page-token=string The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Note: This parameter is supported for use in conjunction with the myRating and chart parameters, but it is not supported for use in conjunction with the id parameter. -p region-code=string Use a chart that is specific to the specified region -p video-category-id=string Use chart that is specific to the specified video category","title":"Optional Method Properties"},{"location":"videos_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_rate/","text":"Adds a like or dislike rating to a video or removes a rating from a video. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos rate ... Required Scalar Arguments <id> (string) No description provided. <rating> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Rate"},{"location":"videos_rate/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos rate ...","title":"Scopes"},{"location":"videos_rate/#required-scalar-arguments","text":"<id> (string) No description provided. <rating> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"videos_rate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_report-abuse/","text":"Report abuse for a video. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos report-abuse ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: VideoAbuseReport: comments: string language: string reason-id: string secondary-reason-id: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . comments=consetetur Additional comments regarding the abuse report. language=lorem The language that the content was viewed in. reason-id=rebum. The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID. secondary-reason-id=sadipscing The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason. video-id=stet The ID that YouTube uses to uniquely identify the video. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Report Abuse"},{"location":"videos_report-abuse/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos report-abuse ...","title":"Scopes"},{"location":"videos_report-abuse/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: VideoAbuseReport: comments: string language: string reason-id: string secondary-reason-id: string video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . comments=consetetur Additional comments regarding the abuse report. language=lorem The language that the content was viewed in. reason-id=rebum. The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID. secondary-reason-id=sadipscing The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason. video-id=stet The ID that YouTube uses to uniquely identify the video.","title":"Required Request Value"},{"location":"videos_report-abuse/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"videos_report-abuse/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"videos_report-abuse/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"videos_update/","text":"Updates an existing resource. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Video: age-gating: alcohol-content: boolean restricted: boolean video-game-rating: string content-details: caption: string content-rating: acb-rating: string agcom-rating: string anatel-rating: string bbfc-rating: string bfvc-rating: string bmukk-rating: string catv-rating: string catvfr-rating: string cbfc-rating: string ccc-rating: string cce-rating: string chfilm-rating: string chvrs-rating: string cicf-rating: string cna-rating: string cnc-rating: string csa-rating: string cscf-rating: string czfilm-rating: string djctq-rating: string djctq-rating-reasons: [string] ecbmct-rating: string eefilm-rating: string egfilm-rating: string eirin-rating: string fcbm-rating: string fco-rating: string fmoc-rating: string fpb-rating: string fpb-rating-reasons: [string] fsk-rating: string grfilm-rating: string icaa-rating: string ifco-rating: string ilfilm-rating: string incaa-rating: string kfcb-rating: string kijkwijzer-rating: string kmrb-rating: string lsf-rating: string mccaa-rating: string mccyp-rating: string mcst-rating: string mda-rating: string medietilsynet-rating: string meku-rating: string mena-mpaa-rating: string mibac-rating: string moc-rating: string moctw-rating: string mpaa-rating: string mpaat-rating: string mtrcb-rating: string nbc-rating: string nbcpl-rating: string nfrc-rating: string nfvcb-rating: string nkclv-rating: string nmc-rating: string oflc-rating: string pefilm-rating: string rcnof-rating: string resorteviolencia-rating: string rtc-rating: string rte-rating: string russia-rating: string skfilm-rating: string smais-rating: string smsa-rating: string tvpg-rating: string yt-rating: string country-restriction: allowed: boolean exception: [string] definition: string dimension: string duration: string has-custom-thumbnail: boolean licensed-content: boolean projection: string region-restriction: allowed: [string] blocked: [string] etag: string file-details: bitrate-bps: string container: string creation-time: string duration-ms: string file-name: string file-size: string file-type: string id: string kind: string live-streaming-details: active-live-chat-id: string actual-end-time: string actual-start-time: string concurrent-viewers: string scheduled-end-time: string scheduled-start-time: string monetization-details: access: allowed: boolean exception: [string] player: embed-height: string embed-html: string embed-width: string processing-details: editor-suggestions-availability: string file-details-availability: string processing-failure-reason: string processing-issues-availability: string processing-progress: parts-processed: string parts-total: string time-left-ms: string processing-status: string tag-suggestions-availability: string thumbnails-availability: string recording-details: location: altitude: number latitude: number longitude: number location-description: string recording-date: string snippet: category-id: string channel-id: string channel-title: string default-audio-language: string default-language: string description: string live-broadcast-content: string localized: description: string title: string published-at: string tags: [string] thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 dislike-count: int64 favorite-count: int64 like-count: int64 view-count: int64 status: embeddable: boolean failure-reason: string license: string made-for-kids: boolean privacy-status: string public-stats-viewable: boolean publish-at: string rejection-reason: string self-declared-made-for-kids: boolean upload-status: string suggestions: editor-suggestions: [string] processing-errors: [string] processing-hints: [string] processing-warnings: [string] topic-details: relevant-topic-ids: [string] topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .age-gating alcohol-content=false Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. restricted=true Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present. video-game-rating=dolor Video game rating, if any. ..content-details caption=sadipscing The value of captions indicates whether the video has captions or not. content-rating acb-rating=duo The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming. agcom-rating=at The video's rating from Italy's Autorit\u00e0 per le Garanzie nelle Comunicazioni (AGCOM). anatel-rating=accusam The video's Anatel (Asociaci\u00f3n Nacional de Televisi\u00f3n) rating for Chilean television. bbfc-rating=no The video's British Board of Film Classification (BBFC) rating. bfvc-rating=tempor The video's rating from Thailand's Board of Film and Video Censors. bmukk-rating=ipsum The video's rating from the Austrian Board of Media Classification (Bundesministerium f\u00fcr Unterricht, Kunst und Kultur). catv-rating=diam Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. catvfr-rating=ea The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. cbfc-rating=erat The video's Central Board of Film Certification (CBFC - India) rating. ccc-rating=accusam The video's Consejo de Calificaci\u00f3n Cinematogr\u00e1fica (Chile) rating. cce-rating=magna The video's rating from Portugal's Comiss\u00e3o de Classifica\u00e7\u00e3o de Espect\u00b4culos. chfilm-rating=ipsum The video's rating in Switzerland. chvrs-rating=gubergren The video's Canadian Home Video Rating System (CHVRS) rating. cicf-rating=kasd The video's rating from the Commission de Contr\u00f4le des Films (Belgium). cna-rating=sit The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA). cnc-rating=sed Rating system in France - Commission de classification cinematographique csa-rating=ea The video's rating from France's Conseil sup\u00e9rieur de l\u2019audiovisuel, which rates broadcast content. cscf-rating=sit The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF). czfilm-rating=lorem The video's rating in the Czech Republic. djctq-rating=sed The video's Departamento de Justi\u00e7a, Classifica\u00e7\u00e3o, Qualifica\u00e7\u00e3o e T\u00edtulos (DJCQT - Brazil) rating. djctq-rating-reasons=takimata Reasons that explain why the video received its DJCQT (Brazil) rating. Each invocation of this argument appends the given value to the array. ecbmct-rating=voluptua. Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism eefilm-rating=justo The video's rating in Estonia. egfilm-rating=takimata The video's rating in Egypt. eirin-rating=justo The video's Eirin (\u6620\u502b) rating. Eirin is the Japanese rating system. fcbm-rating=est The video's rating from Malaysia's Film Censorship Board. fco-rating=sea The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration. fmoc-rating=magna This property has been deprecated. Use the contentDetails.contentRating.cncRating instead. fpb-rating=et The video's rating from South Africa's Film and Publication Board. fpb-rating-reasons=ipsum Reasons that explain why the video received its FPB (South Africa) rating. Each invocation of this argument appends the given value to the array. fsk-rating=ipsum The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating. grfilm-rating=dolor The video's rating in Greece. icaa-rating=elitr The video's Instituto de la Cinematograf\u00eda y de las Artes Audiovisuales (ICAA - Spain) rating. ifco-rating=et The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information. ilfilm-rating=amet. The video's rating in Israel. incaa-rating=duo The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating. kfcb-rating=dolore The video's rating from the Kenya Film Classification Board. kijkwijzer-rating=takimata The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands). kmrb-rating=justo The video's Korea Media Rating Board (\uc601\uc0c1\ubb3c\ub4f1\uae09\uc704\uc6d0\ud68c) rating. The KMRB rates videos in South Korea. lsf-rating=eirmod The video's rating from Indonesia's Lembaga Sensor Film. mccaa-rating=at The video's rating from Malta's Film Age-Classification Board. mccyp-rating=dolor The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People. mcst-rating=et The video's rating system for Vietnam - MCST mda-rating=et The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC). medietilsynet-rating=lorem The video's rating from Medietilsynet, the Norwegian Media Authority. meku-rating=et The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute). mena-mpaa-rating=lorem The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details. mibac-rating=dolores The video's rating from the Ministero dei Beni e delle Attivit\u00e0 Culturali e del Turismo (Italy). moc-rating=eos The video's Ministerio de Cultura (Colombia) rating. moctw-rating=magna The video's rating from Taiwan's Ministry of Culture (\u6587\u5316\u90e8). mpaa-rating=stet The video's Motion Picture Association of America (MPAA) rating. mpaat-rating=kasd The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html. mtrcb-rating=stet The video's rating from the Movie and Television Review and Classification Board (Philippines). nbc-rating=sed The video's rating from the Maldives National Bureau of Classification. nbcpl-rating=eirmod The video's rating in Poland. nfrc-rating=ea The video's rating from the Bulgarian National Film Center. nfvcb-rating=ipsum The video's rating from Nigeria's National Film and Video Censors Board. nkclv-rating=ea The video's rating from the Nacion\u00e3lais Kino centrs (National Film Centre of Latvia). nmc-rating=amet. The National Media Council ratings system for United Arab Emirates. oflc-rating=sadipscing The video's Office of Film and Literature Classification (OFLC - New Zealand) rating. pefilm-rating=dolores The video's rating in Peru. rcnof-rating=justo The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film. resorteviolencia-rating=clita The video's rating in Venezuela. rtc-rating=stet The video's General Directorate of Radio, Television and Cinematography (Mexico) rating. rte-rating=sea The video's rating from Ireland's Raidi\u00f3 Teilif\u00eds \u00c9ireann. russia-rating=sit The video's National Film Registry of the Russian Federation (MKRF - Russia) rating. skfilm-rating=sed The video's rating in Slovakia. smais-rating=et The video's rating in Iceland. smsa-rating=no The video's rating from Statens medier\u00e5d (Sweden's National Media Council). tvpg-rating=sit The video's TV Parental Guidelines (TVPG) rating. yt-rating=labore A rating that YouTube uses to identify age-restricted content. ..country-restriction allowed=true The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=sea A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. .. definition=sadipscing The value of definition indicates whether the video is available in high definition or only in standard definition. dimension=justo The value of dimension indicates whether the video is available in 3D or in 2D. duration=aliquyam The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long. has-custom-thumbnail=false Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader. licensed-content=false The value of is_license_content indicates whether the video is licensed content. projection=invidunt Specifies the projection format of the video. region-restriction allowed=at A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries. Each invocation of this argument appends the given value to the array. blocked=sea A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries. Each invocation of this argument appends the given value to the array. ... etag=sed Etag of this resource. file-details bitrate-bps=dolor The uploaded video file's combined (video and audio) bitrate in bits per second. container=dolor The uploaded video file's container format. creation-time=sed The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM duration-ms=et The length of the uploaded video in milliseconds. file-name=et The uploaded file's name. This field is present whether a video file or another type of file was uploaded. file-size=duo The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded. file-type=dolor The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded. .. id=voluptua. The ID that YouTube uses to uniquely identify the video. kind=magna Identifies what kind of resource this is. Value: the fixed string \"youtube#video\". live-streaming-details active-live-chat-id=est The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page. actual-end-time=voluptua. The time that the broadcast actually ended. This value will not be available until the broadcast is over. actual-start-time=voluptua. The time that the broadcast actually started. This value will not be available until the broadcast begins. concurrent-viewers=tempor The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. scheduled-end-time=takimata The time that the broadcast is scheduled to end. If the value is empty or the property is not present, then the broadcast is scheduled to contiue indefinitely. scheduled-start-time=ut The time that the broadcast is scheduled to begin. ..monetization-details.access allowed=true The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=ut A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. ...player embed-height=voluptua. No description provided. embed-html=stet An <iframe> tag that embeds a player that will play the video. embed-width=lorem The embed width ..processing-details editor-suggestions-availability=amet This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. file-details-availability=sed This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request. processing-failure-reason=rebum. The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed. processing-issues-availability=eirmod This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. processing-progress parts-processed=sit The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video. parts-total=no An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video. time-left-ms=kasd An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video. .. processing-status=stet The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. tag-suggestions-availability=accusam This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. thumbnails-availability=lorem This value indicates whether thumbnail images have been generated for the video. ..recording-details.location altitude=0.12765079344541164 Altitude above the reference ellipsoid, in meters. latitude=0.30124032216124874 Latitude in degrees. longitude=0.42678050338357243 Longitude in degrees. .. location-description=dolor The text description of the location where the video was recorded. recording-date=elitr The date and time when the video was recorded. ..snippet category-id=sanctus The YouTube video category associated with the video. channel-id=dolor The ID that YouTube uses to uniquely identify the channel that the video was uploaded to. channel-title=sea Channel title for the channel that the video belongs to. default-audio-language=sanctus The default_audio_language property specifies the language spoken in the video's default audio track. default-language=sit The language of the videos's default snippet. description=est The video's description. @mutable youtube.videos.insert youtube.videos.update live-broadcast-content=nonumy Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast. localized description=duo Localized version of the video's description. title=sed Localized version of the video's title. .. published-at=invidunt The date and time when the video was uploaded. tags=takimata A list of keyword tags associated with the video. Tags may contain spaces. Each invocation of this argument appends the given value to the array. thumbnails.default height=33 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=60 (Optional) Width of the thumbnail image. ..high height=43 (Optional) Height of the thumbnail image. url=labore The thumbnail image's URL. width=44 (Optional) Width of the thumbnail image. ..maxres height=6 (Optional) Height of the thumbnail image. url=accusam The thumbnail image's URL. width=57 (Optional) Width of the thumbnail image. ..medium height=53 (Optional) Height of the thumbnail image. url=invidunt The thumbnail image's URL. width=67 (Optional) Width of the thumbnail image. ..standard height=83 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=10 (Optional) Width of the thumbnail image. ... title=labore The video's title. @mutable youtube.videos.insert youtube.videos.update ..statistics comment-count=-22 The number of comments for the video. dislike-count=-74 The number of users who have indicated that they disliked the video by giving it a negative rating. favorite-count=-41 The number of users who currently have the video marked as a favorite video. like-count=-3 The number of users who have indicated that they liked the video by giving it a positive rating. view-count=-51 The number of times the video has been viewed. ..status embeddable=true This value indicates if the video can be embedded on another website. @mutable youtube.videos.insert youtube.videos.update failure-reason=sea This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed. license=duo The video's license. @mutable youtube.videos.insert youtube.videos.update made-for-kids=true No description provided. privacy-status=stet The video's privacy status. public-stats-viewable=false This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled. @mutable youtube.videos.insert youtube.videos.update publish-at=no The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private.. rejection-reason=eirmod This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected. self-declared-made-for-kids=false No description provided. upload-status=et The status of the uploaded video. ..suggestions editor-suggestions=sit A list of video editing operations that might improve the video quality or playback experience of the uploaded video. Each invocation of this argument appends the given value to the array. processing-errors=lorem A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed. Each invocation of this argument appends the given value to the array. processing-hints=et A list of suggestions that may improve YouTube's ability to process the video. Each invocation of this argument appends the given value to the array. processing-warnings=tempor A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track. Each invocation of this argument appends the given value to the array. ..topic-details relevant-topic-ids=lorem Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API. Each invocation of this argument appends the given value to the array. topic-categories=vero A list of Wikipedia URLs that provide a high-level description of the video's content. Each invocation of this argument appends the given value to the array. topic-ids=at A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"videos_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> videos update ...","title":"Scopes"},{"location":"videos_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Video: age-gating: alcohol-content: boolean restricted: boolean video-game-rating: string content-details: caption: string content-rating: acb-rating: string agcom-rating: string anatel-rating: string bbfc-rating: string bfvc-rating: string bmukk-rating: string catv-rating: string catvfr-rating: string cbfc-rating: string ccc-rating: string cce-rating: string chfilm-rating: string chvrs-rating: string cicf-rating: string cna-rating: string cnc-rating: string csa-rating: string cscf-rating: string czfilm-rating: string djctq-rating: string djctq-rating-reasons: [string] ecbmct-rating: string eefilm-rating: string egfilm-rating: string eirin-rating: string fcbm-rating: string fco-rating: string fmoc-rating: string fpb-rating: string fpb-rating-reasons: [string] fsk-rating: string grfilm-rating: string icaa-rating: string ifco-rating: string ilfilm-rating: string incaa-rating: string kfcb-rating: string kijkwijzer-rating: string kmrb-rating: string lsf-rating: string mccaa-rating: string mccyp-rating: string mcst-rating: string mda-rating: string medietilsynet-rating: string meku-rating: string mena-mpaa-rating: string mibac-rating: string moc-rating: string moctw-rating: string mpaa-rating: string mpaat-rating: string mtrcb-rating: string nbc-rating: string nbcpl-rating: string nfrc-rating: string nfvcb-rating: string nkclv-rating: string nmc-rating: string oflc-rating: string pefilm-rating: string rcnof-rating: string resorteviolencia-rating: string rtc-rating: string rte-rating: string russia-rating: string skfilm-rating: string smais-rating: string smsa-rating: string tvpg-rating: string yt-rating: string country-restriction: allowed: boolean exception: [string] definition: string dimension: string duration: string has-custom-thumbnail: boolean licensed-content: boolean projection: string region-restriction: allowed: [string] blocked: [string] etag: string file-details: bitrate-bps: string container: string creation-time: string duration-ms: string file-name: string file-size: string file-type: string id: string kind: string live-streaming-details: active-live-chat-id: string actual-end-time: string actual-start-time: string concurrent-viewers: string scheduled-end-time: string scheduled-start-time: string monetization-details: access: allowed: boolean exception: [string] player: embed-height: string embed-html: string embed-width: string processing-details: editor-suggestions-availability: string file-details-availability: string processing-failure-reason: string processing-issues-availability: string processing-progress: parts-processed: string parts-total: string time-left-ms: string processing-status: string tag-suggestions-availability: string thumbnails-availability: string recording-details: location: altitude: number latitude: number longitude: number location-description: string recording-date: string snippet: category-id: string channel-id: string channel-title: string default-audio-language: string default-language: string description: string live-broadcast-content: string localized: description: string title: string published-at: string tags: [string] thumbnails: default: height: integer url: string width: integer high: height: integer url: string width: integer maxres: height: integer url: string width: integer medium: height: integer url: string width: integer standard: height: integer url: string width: integer title: string statistics: comment-count: int64 dislike-count: int64 favorite-count: int64 like-count: int64 view-count: int64 status: embeddable: boolean failure-reason: string license: string made-for-kids: boolean privacy-status: string public-stats-viewable: boolean publish-at: string rejection-reason: string self-declared-made-for-kids: boolean upload-status: string suggestions: editor-suggestions: [string] processing-errors: [string] processing-hints: [string] processing-warnings: [string] topic-details: relevant-topic-ids: [string] topic-categories: [string] topic-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .age-gating alcohol-content=false Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. restricted=true Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present. video-game-rating=dolor Video game rating, if any. ..content-details caption=sadipscing The value of captions indicates whether the video has captions or not. content-rating acb-rating=duo The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming. agcom-rating=at The video's rating from Italy's Autorit\u00e0 per le Garanzie nelle Comunicazioni (AGCOM). anatel-rating=accusam The video's Anatel (Asociaci\u00f3n Nacional de Televisi\u00f3n) rating for Chilean television. bbfc-rating=no The video's British Board of Film Classification (BBFC) rating. bfvc-rating=tempor The video's rating from Thailand's Board of Film and Video Censors. bmukk-rating=ipsum The video's rating from the Austrian Board of Media Classification (Bundesministerium f\u00fcr Unterricht, Kunst und Kultur). catv-rating=diam Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. catvfr-rating=ea The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website. cbfc-rating=erat The video's Central Board of Film Certification (CBFC - India) rating. ccc-rating=accusam The video's Consejo de Calificaci\u00f3n Cinematogr\u00e1fica (Chile) rating. cce-rating=magna The video's rating from Portugal's Comiss\u00e3o de Classifica\u00e7\u00e3o de Espect\u00b4culos. chfilm-rating=ipsum The video's rating in Switzerland. chvrs-rating=gubergren The video's Canadian Home Video Rating System (CHVRS) rating. cicf-rating=kasd The video's rating from the Commission de Contr\u00f4le des Films (Belgium). cna-rating=sit The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA). cnc-rating=sed Rating system in France - Commission de classification cinematographique csa-rating=ea The video's rating from France's Conseil sup\u00e9rieur de l\u2019audiovisuel, which rates broadcast content. cscf-rating=sit The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF). czfilm-rating=lorem The video's rating in the Czech Republic. djctq-rating=sed The video's Departamento de Justi\u00e7a, Classifica\u00e7\u00e3o, Qualifica\u00e7\u00e3o e T\u00edtulos (DJCQT - Brazil) rating. djctq-rating-reasons=takimata Reasons that explain why the video received its DJCQT (Brazil) rating. Each invocation of this argument appends the given value to the array. ecbmct-rating=voluptua. Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism eefilm-rating=justo The video's rating in Estonia. egfilm-rating=takimata The video's rating in Egypt. eirin-rating=justo The video's Eirin (\u6620\u502b) rating. Eirin is the Japanese rating system. fcbm-rating=est The video's rating from Malaysia's Film Censorship Board. fco-rating=sea The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration. fmoc-rating=magna This property has been deprecated. Use the contentDetails.contentRating.cncRating instead. fpb-rating=et The video's rating from South Africa's Film and Publication Board. fpb-rating-reasons=ipsum Reasons that explain why the video received its FPB (South Africa) rating. Each invocation of this argument appends the given value to the array. fsk-rating=ipsum The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating. grfilm-rating=dolor The video's rating in Greece. icaa-rating=elitr The video's Instituto de la Cinematograf\u00eda y de las Artes Audiovisuales (ICAA - Spain) rating. ifco-rating=et The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information. ilfilm-rating=amet. The video's rating in Israel. incaa-rating=duo The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating. kfcb-rating=dolore The video's rating from the Kenya Film Classification Board. kijkwijzer-rating=takimata The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands). kmrb-rating=justo The video's Korea Media Rating Board (\uc601\uc0c1\ubb3c\ub4f1\uae09\uc704\uc6d0\ud68c) rating. The KMRB rates videos in South Korea. lsf-rating=eirmod The video's rating from Indonesia's Lembaga Sensor Film. mccaa-rating=at The video's rating from Malta's Film Age-Classification Board. mccyp-rating=dolor The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People. mcst-rating=et The video's rating system for Vietnam - MCST mda-rating=et The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC). medietilsynet-rating=lorem The video's rating from Medietilsynet, the Norwegian Media Authority. meku-rating=et The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute). mena-mpaa-rating=lorem The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details. mibac-rating=dolores The video's rating from the Ministero dei Beni e delle Attivit\u00e0 Culturali e del Turismo (Italy). moc-rating=eos The video's Ministerio de Cultura (Colombia) rating. moctw-rating=magna The video's rating from Taiwan's Ministry of Culture (\u6587\u5316\u90e8). mpaa-rating=stet The video's Motion Picture Association of America (MPAA) rating. mpaat-rating=kasd The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html. mtrcb-rating=stet The video's rating from the Movie and Television Review and Classification Board (Philippines). nbc-rating=sed The video's rating from the Maldives National Bureau of Classification. nbcpl-rating=eirmod The video's rating in Poland. nfrc-rating=ea The video's rating from the Bulgarian National Film Center. nfvcb-rating=ipsum The video's rating from Nigeria's National Film and Video Censors Board. nkclv-rating=ea The video's rating from the Nacion\u00e3lais Kino centrs (National Film Centre of Latvia). nmc-rating=amet. The National Media Council ratings system for United Arab Emirates. oflc-rating=sadipscing The video's Office of Film and Literature Classification (OFLC - New Zealand) rating. pefilm-rating=dolores The video's rating in Peru. rcnof-rating=justo The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film. resorteviolencia-rating=clita The video's rating in Venezuela. rtc-rating=stet The video's General Directorate of Radio, Television and Cinematography (Mexico) rating. rte-rating=sea The video's rating from Ireland's Raidi\u00f3 Teilif\u00eds \u00c9ireann. russia-rating=sit The video's National Film Registry of the Russian Federation (MKRF - Russia) rating. skfilm-rating=sed The video's rating in Slovakia. smais-rating=et The video's rating in Iceland. smsa-rating=no The video's rating from Statens medier\u00e5d (Sweden's National Media Council). tvpg-rating=sit The video's TV Parental Guidelines (TVPG) rating. yt-rating=labore A rating that YouTube uses to identify age-restricted content. ..country-restriction allowed=true The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=sea A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. .. definition=sadipscing The value of definition indicates whether the video is available in high definition or only in standard definition. dimension=justo The value of dimension indicates whether the video is available in 3D or in 2D. duration=aliquyam The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long. has-custom-thumbnail=false Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader. licensed-content=false The value of is_license_content indicates whether the video is licensed content. projection=invidunt Specifies the projection format of the video. region-restriction allowed=at A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries. Each invocation of this argument appends the given value to the array. blocked=sea A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries. Each invocation of this argument appends the given value to the array. ... etag=sed Etag of this resource. file-details bitrate-bps=dolor The uploaded video file's combined (video and audio) bitrate in bits per second. container=dolor The uploaded video file's container format. creation-time=sed The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM duration-ms=et The length of the uploaded video in milliseconds. file-name=et The uploaded file's name. This field is present whether a video file or another type of file was uploaded. file-size=duo The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded. file-type=dolor The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded. .. id=voluptua. The ID that YouTube uses to uniquely identify the video. kind=magna Identifies what kind of resource this is. Value: the fixed string \"youtube#video\". live-streaming-details active-live-chat-id=est The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page. actual-end-time=voluptua. The time that the broadcast actually ended. This value will not be available until the broadcast is over. actual-start-time=voluptua. The time that the broadcast actually started. This value will not be available until the broadcast begins. concurrent-viewers=tempor The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended. scheduled-end-time=takimata The time that the broadcast is scheduled to end. If the value is empty or the property is not present, then the broadcast is scheduled to contiue indefinitely. scheduled-start-time=ut The time that the broadcast is scheduled to begin. ..monetization-details.access allowed=true The value of allowed indicates whether the access to the policy is allowed or denied by default. exception=ut A list of region codes that identify countries where the default policy do not apply. Each invocation of this argument appends the given value to the array. ...player embed-height=voluptua. No description provided. embed-html=stet An <iframe> tag that embeds a player that will play the video. embed-width=lorem The embed width ..processing-details editor-suggestions-availability=amet This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. file-details-availability=sed This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request. processing-failure-reason=rebum. The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed. processing-issues-availability=eirmod This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. processing-progress parts-processed=sit The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video. parts-total=no An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video. time-left-ms=kasd An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video. .. processing-status=stet The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. tag-suggestions-availability=accusam This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. thumbnails-availability=lorem This value indicates whether thumbnail images have been generated for the video. ..recording-details.location altitude=0.12765079344541164 Altitude above the reference ellipsoid, in meters. latitude=0.30124032216124874 Latitude in degrees. longitude=0.42678050338357243 Longitude in degrees. .. location-description=dolor The text description of the location where the video was recorded. recording-date=elitr The date and time when the video was recorded. ..snippet category-id=sanctus The YouTube video category associated with the video. channel-id=dolor The ID that YouTube uses to uniquely identify the channel that the video was uploaded to. channel-title=sea Channel title for the channel that the video belongs to. default-audio-language=sanctus The default_audio_language property specifies the language spoken in the video's default audio track. default-language=sit The language of the videos's default snippet. description=est The video's description. @mutable youtube.videos.insert youtube.videos.update live-broadcast-content=nonumy Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast. localized description=duo Localized version of the video's description. title=sed Localized version of the video's title. .. published-at=invidunt The date and time when the video was uploaded. tags=takimata A list of keyword tags associated with the video. Tags may contain spaces. Each invocation of this argument appends the given value to the array. thumbnails.default height=33 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=60 (Optional) Width of the thumbnail image. ..high height=43 (Optional) Height of the thumbnail image. url=labore The thumbnail image's URL. width=44 (Optional) Width of the thumbnail image. ..maxres height=6 (Optional) Height of the thumbnail image. url=accusam The thumbnail image's URL. width=57 (Optional) Width of the thumbnail image. ..medium height=53 (Optional) Height of the thumbnail image. url=invidunt The thumbnail image's URL. width=67 (Optional) Width of the thumbnail image. ..standard height=83 (Optional) Height of the thumbnail image. url=tempor The thumbnail image's URL. width=10 (Optional) Width of the thumbnail image. ... title=labore The video's title. @mutable youtube.videos.insert youtube.videos.update ..statistics comment-count=-22 The number of comments for the video. dislike-count=-74 The number of users who have indicated that they disliked the video by giving it a negative rating. favorite-count=-41 The number of users who currently have the video marked as a favorite video. like-count=-3 The number of users who have indicated that they liked the video by giving it a positive rating. view-count=-51 The number of times the video has been viewed. ..status embeddable=true This value indicates if the video can be embedded on another website. @mutable youtube.videos.insert youtube.videos.update failure-reason=sea This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed. license=duo The video's license. @mutable youtube.videos.insert youtube.videos.update made-for-kids=true No description provided. privacy-status=stet The video's privacy status. public-stats-viewable=false This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled. @mutable youtube.videos.insert youtube.videos.update publish-at=no The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private.. rejection-reason=eirmod This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected. self-declared-made-for-kids=false No description provided. upload-status=et The status of the uploaded video. ..suggestions editor-suggestions=sit A list of video editing operations that might improve the video quality or playback experience of the uploaded video. Each invocation of this argument appends the given value to the array. processing-errors=lorem A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed. Each invocation of this argument appends the given value to the array. processing-hints=et A list of suggestions that may improve YouTube's ability to process the video. Each invocation of this argument appends the given value to the array. processing-warnings=tempor A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track. Each invocation of this argument appends the given value to the array. ..topic-details relevant-topic-ids=lorem Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API. Each invocation of this argument appends the given value to the array. topic-categories=vero A list of Wikipedia URLs that provide a high-level description of the video's content. Each invocation of this argument appends the given value to the array. topic-ids=at A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"videos_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"videos_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"videos_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"videos_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"watermarks_set/","text":"Allows upload of watermark image and setting it for a channel. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> watermarks set ... Required Scalar Argument <channel-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InvideoBranding: image-bytes: string image-url: string position: corner-position: string type: string target-channel-id: string timing: duration-ms: string offset-ms: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . image-bytes=duo The bytes the uploaded image. Only used in api to youtube communication. image-url=ea The url of the uploaded image. Only used in apiary to api communication. position corner-position=et Describes in which corner of the video the visual widget will appear. type=lorem Defines the position type. .. target-channel-id=justo The channel to which this branding links. If not present it defaults to the current channel. timing duration-ms=et Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default. offset-ms=labore Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds. type=ipsum Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set"},{"location":"watermarks_set/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> watermarks set ...","title":"Scopes"},{"location":"watermarks_set/#required-scalar-argument","text":"<channel-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"watermarks_set/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InvideoBranding: image-bytes: string image-url: string position: corner-position: string type: string target-channel-id: string timing: duration-ms: string offset-ms: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . image-bytes=duo The bytes the uploaded image. Only used in api to youtube communication. image-url=ea The url of the uploaded image. Only used in apiary to api communication. position corner-position=et Describes in which corner of the video the visual widget will appear. type=lorem Defines the position type. .. target-channel-id=justo The channel to which this branding links. If not present it defaults to the current channel. timing duration-ms=et Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default. offset-ms=labore Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds. type=ipsum Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.","title":"Required Request Value"},{"location":"watermarks_set/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"watermarks_set/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"watermarks_set/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"watermarks_set/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"watermarks_unset/","text":"Allows removal of channel watermark. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> watermarks unset ... Required Scalar Argument <channel-id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Unset"},{"location":"watermarks_unset/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner If unset, the scope for this method defaults to https://www.googleapis.com/auth/youtube . You can set the scope for this method like this: youtube3 --scope <scope> watermarks unset ...","title":"Scopes"},{"location":"watermarks_unset/#required-scalar-argument","text":"<channel-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"watermarks_unset/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p on-behalf-of-content-owner=string Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.","title":"Optional Method Properties"},{"location":"watermarks_unset/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"youtube_v3-update-comment-threads/","text":"Updates an existing resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CommentThread: etag: string id: string kind: string snippet: can-reply: boolean channel-id: string is-public: boolean top-level-comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string total-reply-count: integer video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=aliquyam Etag of this resource. id=magna The ID that YouTube uses to uniquely identify the comment thread. kind=erat Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\". snippet can-reply=false Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field. channel-id=et The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself. is-public=false Whether the thread (and therefore all its comments) is visible to all YouTube users. top-level-comment etag=et Etag of this resource. id=dolor The ID that YouTube uses to uniquely identify the comment. kind=amet Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=magna No description provided. .. author-channel-url=gubergren Link to the author's YouTube channel, if any. author-display-name=dolor The name of the user who posted the comment. author-profile-image-url=est The URL for the avatar of the user who posted the comment. can-rate=false Whether the current viewer can rate this comment. channel-id=invidunt The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=55 The total number of likes this comment has received. moderation-status=duo The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=est The unique id of the parent comment, only set for replies. published-at=erat The date and time when the comment was originally published. text-display=duo The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=sed The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=dolor The date and time when the comment was last updated. video-id=gubergren The ID of the video the comment refers to, if any. viewer-rating=takimata The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. ... total-reply-count=29 The total number of replies (not including the top level comment). video-id=erat The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p part=string The part parameter specifies a comma-separated list of commentThread resource properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"V3 Update Comment Threads"},{"location":"youtube_v3-update-comment-threads/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CommentThread: etag: string id: string kind: string snippet: can-reply: boolean channel-id: string is-public: boolean top-level-comment: etag: string id: string kind: string snippet: author-channel-id: value: string author-channel-url: string author-display-name: string author-profile-image-url: string can-rate: boolean channel-id: string like-count: integer moderation-status: string parent-id: string published-at: string text-display: string text-original: string updated-at: string video-id: string viewer-rating: string total-reply-count: integer video-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=aliquyam Etag of this resource. id=magna The ID that YouTube uses to uniquely identify the comment thread. kind=erat Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\". snippet can-reply=false Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field. channel-id=et The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself. is-public=false Whether the thread (and therefore all its comments) is visible to all YouTube users. top-level-comment etag=et Etag of this resource. id=dolor The ID that YouTube uses to uniquely identify the comment. kind=amet Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". snippet.author-channel-id value=magna No description provided. .. author-channel-url=gubergren Link to the author's YouTube channel, if any. author-display-name=dolor The name of the user who posted the comment. author-profile-image-url=est The URL for the avatar of the user who posted the comment. can-rate=false Whether the current viewer can rate this comment. channel-id=invidunt The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel. like-count=55 The total number of likes this comment has received. moderation-status=duo The comment's moderation status. Will not be set if the comments were requested through the id filter. parent-id=est The unique id of the parent comment, only set for replies. published-at=erat The date and time when the comment was originally published. text-display=duo The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc. text-original=sed The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author. updated-at=dolor The date and time when the comment was last updated. video-id=gubergren The ID of the video the comment refers to, if any. viewer-rating=takimata The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future. ... total-reply-count=29 The total number of replies (not including the top level comment). video-id=erat The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.","title":"Required Request Value"},{"location":"youtube_v3-update-comment-threads/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"youtube_v3-update-comment-threads/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"youtube_v3-update-comment-threads/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p part=string The part parameter specifies a comma-separated list of commentThread resource properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update.","title":"Optional Method Properties"},{"location":"youtube_v3-update-comment-threads/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}