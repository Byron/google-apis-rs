{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The adexchangebuyer2-v2-beta1 command-line interface (CLI) allows to use most features of the Google AdExchangeBuyerII service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the AdExchangeBuyerII API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-adexchangebuyer2_v2_beta1-cli Find the source code on github . Usage This documentation was generated from the AdExchangeBuyerII API at revision 20240305 . The CLI is at version 5.0.4 . adexchangebuyer2-v2-beta1 [options] accounts clients-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-get <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-invitations-create <account-id> <client-account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-invitations-get <account-id> <client-account-id> <invitation-id> [-p <v>]... [-o <out>] clients-invitations-list <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-list <account-id> [-p <v>]... [-o <out>] clients-update <account-id> <client-account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-get <account-id> <client-account-id> <user-id> [-p <v>]... [-o <out>] clients-users-list <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-users-update <account-id> <client-account-id> <user-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-deal-associations-add <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-deal-associations-list <account-id> <creative-id> [-p <v>]... [-o <out>] creatives-deal-associations-remove <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-get <account-id> <creative-id> [-p <v>]... [-o <out>] creatives-list <account-id> [-p <v>]... [-o <out>] creatives-stop-watching <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-update <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-watch <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] finalized-proposals-list <account-id> [-p <v>]... [-o <out>] finalized-proposals-pause <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] finalized-proposals-resume <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] products-get <account-id> <product-id> [-p <v>]... [-o <out>] products-list <account-id> [-p <v>]... [-o <out>] proposals-accept <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-add-note <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-cancel-negotiation <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-complete-setup <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-get <account-id> <proposal-id> [-p <v>]... [-o <out>] proposals-list <account-id> [-p <v>]... [-o <out>] proposals-pause <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-resume <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-update <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] publisher-profiles-get <account-id> <publisher-profile-id> [-p <v>]... [-o <out>] publisher-profiles-list <account-id> [-p <v>]... [-o <out>] bidders accounts-filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] accounts-filter-sets-delete <name> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-get <name> [-p <v>]... [-o <out>] accounts-filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-list <owner-name> [-p <v>]... [-o <out>] accounts-filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] filter-sets-delete <name> [-p <v>]... [-o <out>] filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-get <name> [-p <v>]... [-o <out>] filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-list <owner-name> [-p <v>]... [-o <out>] filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] buyers filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] filter-sets-delete <name> [-p <v>]... [-o <out>] filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-get <name> [-p <v>]... [-o <out>] filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-list <owner-name> [-p <v>]... [-o <out>] filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] adexchangebuyer2-v2-beta1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer2-v2-beta1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer2-v2-beta1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer2-v2-beta1-secret.json , assuming that the required adexchangebuyer2 API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer2-v2-beta1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-adexchangebuyer2_v2_beta1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the AdExchangeBuyerII API at revision 20240305 . The CLI is at version 5.0.4 . adexchangebuyer2-v2-beta1 [options] accounts clients-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-get <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-invitations-create <account-id> <client-account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-invitations-get <account-id> <client-account-id> <invitation-id> [-p <v>]... [-o <out>] clients-invitations-list <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-list <account-id> [-p <v>]... [-o <out>] clients-update <account-id> <client-account-id> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-get <account-id> <client-account-id> <user-id> [-p <v>]... [-o <out>] clients-users-list <account-id> <client-account-id> [-p <v>]... [-o <out>] clients-users-update <account-id> <client-account-id> <user-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-deal-associations-add <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-deal-associations-list <account-id> <creative-id> [-p <v>]... [-o <out>] creatives-deal-associations-remove <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-get <account-id> <creative-id> [-p <v>]... [-o <out>] creatives-list <account-id> [-p <v>]... [-o <out>] creatives-stop-watching <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-update <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] creatives-watch <account-id> <creative-id> (-r <kv>)... [-p <v>]... [-o <out>] finalized-proposals-list <account-id> [-p <v>]... [-o <out>] finalized-proposals-pause <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] finalized-proposals-resume <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] products-get <account-id> <product-id> [-p <v>]... [-o <out>] products-list <account-id> [-p <v>]... [-o <out>] proposals-accept <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-add-note <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-cancel-negotiation <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-complete-setup <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-create <account-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-get <account-id> <proposal-id> [-p <v>]... [-o <out>] proposals-list <account-id> [-p <v>]... [-o <out>] proposals-pause <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-resume <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] proposals-update <account-id> <proposal-id> (-r <kv>)... [-p <v>]... [-o <out>] publisher-profiles-get <account-id> <publisher-profile-id> [-p <v>]... [-o <out>] publisher-profiles-list <account-id> [-p <v>]... [-o <out>] bidders accounts-filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] accounts-filter-sets-delete <name> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] accounts-filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-get <name> [-p <v>]... [-o <out>] accounts-filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-list <owner-name> [-p <v>]... [-o <out>] accounts-filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] accounts-filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] filter-sets-delete <name> [-p <v>]... [-o <out>] filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-get <name> [-p <v>]... [-o <out>] filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-list <owner-name> [-p <v>]... [-o <out>] filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] buyers filter-sets-bid-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-response-errors-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-bid-responses-without-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-create <owner-name> (-r <kv>)... [-p <v>]... [-o <out>] filter-sets-delete <name> [-p <v>]... [-o <out>] filter-sets-filtered-bid-requests-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-filtered-bids-creatives-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-details-list <filter-set-name> <creative-status-id> [-p <v>]... [-o <out>] filter-sets-filtered-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-get <name> [-p <v>]... [-o <out>] filter-sets-impression-metrics-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-list <owner-name> [-p <v>]... [-o <out>] filter-sets-losing-bids-list <filter-set-name> [-p <v>]... [-o <out>] filter-sets-non-billable-winning-bids-list <filter-set-name> [-p <v>]... [-o <out>] adexchangebuyer2-v2-beta1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with adexchangebuyer2-v2-beta1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/adexchangebuyer2-v2-beta1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/adexchangebuyer2-v2-beta1-secret.json , assuming that the required adexchangebuyer2 API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. adexchangebuyer2-v2-beta1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_clients-create/","text":"Creates a new client buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-create ... Required Scalar Argument <account-id> (string) Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to create a client for. (required) Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: client-account-id: string client-name: string entity-id: string entity-name: string entity-type: string partner-client-id: string role: string status: string visible-to-seller: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=et The globally-unique numerical ID of the client. The value of this field is ignored in create and update operations. client-name=magna Name used to represent this client to publishers. You may have multiple clients that map to the same entity, but for each client the combination of clientName and entity must be unique. You can specify this field as empty. Maximum length of 255 characters is allowed. entity-id=no Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency. This identifier is unique among all the entities with the same type. The value of this field is ignored if the entity type is not provided. A list of all known advertisers with their identifiers is available in the advertisers.txt file. A list of all known brands with their identifiers is available in the brands.txt file. A list of all known agencies with their identifiers is available in the agencies.txt file. entity-name=ipsum The name of the entity. This field is automatically fetched based on the type and ID. The value of this field is ignored in create and update operations. entity-type=voluptua. An optional field for specifying the type of the client entity: ADVERTISER , BRAND , or AGENCY . partner-client-id=at Optional arbitrary unique identifier of this client buyer from the standpoint of its Ad Exchange sponsor buyer. This field can be used to associate a client buyer with the identifier in the namespace of its sponsor buyer, lookup client buyers by that identifier and verify whether an Ad Exchange counterpart of a given client buyer already exists. If present, must be unique among all the client buyers for its Ad Exchange sponsor buyer. role=sanctus The role which is assigned to the client buyer. Each role implies a set of permissions granted to the client. Must be one of CLIENT_DEAL_VIEWER , CLIENT_DEAL_NEGOTIATOR or CLIENT_DEAL_APPROVER . status=sed The status of the client buyer. visible-to-seller=true Whether the client buyer will be visible to sellers. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Create"},{"location":"accounts_clients-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-create ...","title":"Scopes"},{"location":"accounts_clients-create/#required-scalar-argument","text":"<account-id> (string) Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to create a client for. (required)","title":"Required Scalar Argument"},{"location":"accounts_clients-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: client-account-id: string client-name: string entity-id: string entity-name: string entity-type: string partner-client-id: string role: string status: string visible-to-seller: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=et The globally-unique numerical ID of the client. The value of this field is ignored in create and update operations. client-name=magna Name used to represent this client to publishers. You may have multiple clients that map to the same entity, but for each client the combination of clientName and entity must be unique. You can specify this field as empty. Maximum length of 255 characters is allowed. entity-id=no Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency. This identifier is unique among all the entities with the same type. The value of this field is ignored if the entity type is not provided. A list of all known advertisers with their identifiers is available in the advertisers.txt file. A list of all known brands with their identifiers is available in the brands.txt file. A list of all known agencies with their identifiers is available in the agencies.txt file. entity-name=ipsum The name of the entity. This field is automatically fetched based on the type and ID. The value of this field is ignored in create and update operations. entity-type=voluptua. An optional field for specifying the type of the client entity: ADVERTISER , BRAND , or AGENCY . partner-client-id=at Optional arbitrary unique identifier of this client buyer from the standpoint of its Ad Exchange sponsor buyer. This field can be used to associate a client buyer with the identifier in the namespace of its sponsor buyer, lookup client buyers by that identifier and verify whether an Ad Exchange counterpart of a given client buyer already exists. If present, must be unique among all the client buyers for its Ad Exchange sponsor buyer. role=sanctus The role which is assigned to the client buyer. Each role implies a set of permissions granted to the client. Must be one of CLIENT_DEAL_VIEWER , CLIENT_DEAL_NEGOTIATOR or CLIENT_DEAL_APPROVER . status=sed The status of the client buyer. visible-to-seller=true Whether the client buyer will be visible to sellers.","title":"Required Request Value"},{"location":"accounts_clients-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_clients-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-get/","text":"Gets a client buyer with a given client account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-get ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer to retrieve. (required) Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Get"},{"location":"accounts_clients-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-get ...","title":"Scopes"},{"location":"accounts_clients-get/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer to retrieve. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-invitations-create/","text":"Creates and sends out an email invitation to access an Ad Exchange client buyer account. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-create ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user should be associated with. (required) Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUserInvitation: client-account-id: string email: string invitation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=amet. Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations. email=duo The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer. invitation-id=ipsum The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Invitations Create"},{"location":"accounts_clients-invitations-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-create ...","title":"Scopes"},{"location":"accounts_clients-invitations-create/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user should be associated with. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-invitations-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUserInvitation: client-account-id: string email: string invitation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=amet. Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations. email=duo The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer. invitation-id=ipsum The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations.","title":"Required Request Value"},{"location":"accounts_clients-invitations-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_clients-invitations-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-invitations-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-invitations-get/","text":"Retrieves an existing client user invitation. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-get ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user invitation to be retrieved is associated with. (required) <invitation-id> (string) Numerical identifier of the user invitation to retrieve. (required) Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Invitations Get"},{"location":"accounts_clients-invitations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-get ...","title":"Scopes"},{"location":"accounts_clients-invitations-get/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user invitation to be retrieved is associated with. (required) <invitation-id> (string) Numerical identifier of the user invitation to retrieve. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-invitations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-invitations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-invitations-list/","text":"Lists all the client users invitations for a client with a given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-list ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer to list invitations for. (required) You must either specify a string representation of a numerical account identifier or the - character to list all the invitations for all the clients of a given sponsor buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer clients than requested. If unspecified, server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUserInvitationsResponse.nextPageToken returned from the previous call to the clients.invitations.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Invitations List"},{"location":"accounts_clients-invitations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-invitations-list ...","title":"Scopes"},{"location":"accounts_clients-invitations-list/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer to list invitations for. (required) You must either specify a string representation of a numerical account identifier or the - character to list all the invitations for all the clients of a given sponsor buyer.","title":"Required Scalar Arguments"},{"location":"accounts_clients-invitations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-invitations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer clients than requested. If unspecified, server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUserInvitationsResponse.nextPageToken returned from the previous call to the clients.invitations.list method.","title":"Optional Method Properties"},{"location":"accounts_clients-invitations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-list/","text":"Lists all the clients for the current sponsor buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-list ... Required Scalar Argument <account-id> (string) Unique numerical account ID of the sponsor buyer to list the clients for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientsResponse.nextPageToken returned from the previous call to the accounts.clients.list method. -p partner-client-id=string Optional unique identifier (from the standpoint of an Ad Exchange sponsor buyer partner) of the client to return. If specified, at most one client will be returned in the response. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients List"},{"location":"accounts_clients-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-list ...","title":"Scopes"},{"location":"accounts_clients-list/#required-scalar-argument","text":"<account-id> (string) Unique numerical account ID of the sponsor buyer to list the clients for.","title":"Required Scalar Argument"},{"location":"accounts_clients-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientsResponse.nextPageToken returned from the previous call to the accounts.clients.list method. -p partner-client-id=string Optional unique identifier (from the standpoint of an Ad Exchange sponsor buyer partner) of the client to return. If specified, at most one client will be returned in the response.","title":"Optional Method Properties"},{"location":"accounts_clients-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-update/","text":"Updates an existing client buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-update ... Required Scalar Arguments <account-id> (string) Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to update a client for. (required) <client-account-id> (string) Unique numerical account ID of the client to update. (required) Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: client-account-id: string client-name: string entity-id: string entity-name: string entity-type: string partner-client-id: string role: string status: string visible-to-seller: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=gubergren The globally-unique numerical ID of the client. The value of this field is ignored in create and update operations. client-name=lorem Name used to represent this client to publishers. You may have multiple clients that map to the same entity, but for each client the combination of clientName and entity must be unique. You can specify this field as empty. Maximum length of 255 characters is allowed. entity-id=gubergren Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency. This identifier is unique among all the entities with the same type. The value of this field is ignored if the entity type is not provided. A list of all known advertisers with their identifiers is available in the advertisers.txt file. A list of all known brands with their identifiers is available in the brands.txt file. A list of all known agencies with their identifiers is available in the agencies.txt file. entity-name=eos The name of the entity. This field is automatically fetched based on the type and ID. The value of this field is ignored in create and update operations. entity-type=dolor An optional field for specifying the type of the client entity: ADVERTISER , BRAND , or AGENCY . partner-client-id=ea Optional arbitrary unique identifier of this client buyer from the standpoint of its Ad Exchange sponsor buyer. This field can be used to associate a client buyer with the identifier in the namespace of its sponsor buyer, lookup client buyers by that identifier and verify whether an Ad Exchange counterpart of a given client buyer already exists. If present, must be unique among all the client buyers for its Ad Exchange sponsor buyer. role=ipsum The role which is assigned to the client buyer. Each role implies a set of permissions granted to the client. Must be one of CLIENT_DEAL_VIEWER , CLIENT_DEAL_NEGOTIATOR or CLIENT_DEAL_APPROVER . status=invidunt The status of the client buyer. visible-to-seller=true Whether the client buyer will be visible to sellers. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Update"},{"location":"accounts_clients-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-update ...","title":"Scopes"},{"location":"accounts_clients-update/#required-scalar-arguments","text":"<account-id> (string) Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to update a client for. (required) <client-account-id> (string) Unique numerical account ID of the client to update. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: client-account-id: string client-name: string entity-id: string entity-name: string entity-type: string partner-client-id: string role: string status: string visible-to-seller: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=gubergren The globally-unique numerical ID of the client. The value of this field is ignored in create and update operations. client-name=lorem Name used to represent this client to publishers. You may have multiple clients that map to the same entity, but for each client the combination of clientName and entity must be unique. You can specify this field as empty. Maximum length of 255 characters is allowed. entity-id=gubergren Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency. This identifier is unique among all the entities with the same type. The value of this field is ignored if the entity type is not provided. A list of all known advertisers with their identifiers is available in the advertisers.txt file. A list of all known brands with their identifiers is available in the brands.txt file. A list of all known agencies with their identifiers is available in the agencies.txt file. entity-name=eos The name of the entity. This field is automatically fetched based on the type and ID. The value of this field is ignored in create and update operations. entity-type=dolor An optional field for specifying the type of the client entity: ADVERTISER , BRAND , or AGENCY . partner-client-id=ea Optional arbitrary unique identifier of this client buyer from the standpoint of its Ad Exchange sponsor buyer. This field can be used to associate a client buyer with the identifier in the namespace of its sponsor buyer, lookup client buyers by that identifier and verify whether an Ad Exchange counterpart of a given client buyer already exists. If present, must be unique among all the client buyers for its Ad Exchange sponsor buyer. role=ipsum The role which is assigned to the client buyer. Each role implies a set of permissions granted to the client. Must be one of CLIENT_DEAL_VIEWER , CLIENT_DEAL_NEGOTIATOR or CLIENT_DEAL_APPROVER . status=invidunt The status of the client buyer. visible-to-seller=true Whether the client buyer will be visible to sellers.","title":"Required Request Value"},{"location":"accounts_clients-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_clients-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-users-get/","text":"Retrieves an existing client user. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-get ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user to be retrieved is associated with. (required) <user-id> (string) Numerical identifier of the user to retrieve. (required) Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Get"},{"location":"accounts_clients-users-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-get ...","title":"Scopes"},{"location":"accounts_clients-users-get/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user to be retrieved is associated with. (required) <user-id> (string) Numerical identifier of the user to retrieve. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-users-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-users-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-users-list/","text":"Lists all the known client users for a specified sponsor buyer account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-list ... Required Scalar Arguments <account-id> (string) Numerical account ID of the sponsor buyer of the client to list users for. (required) <client-account-id> (string) The account ID of the client buyer to list users for. (required) You must specify either a string representation of a numerical account identifier or the - character to list all the client users for all the clients of a given sponsor buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUsersResponse.nextPageToken returned from the previous call to the accounts.clients.users.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users List"},{"location":"accounts_clients-users-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-list ...","title":"Scopes"},{"location":"accounts_clients-users-list/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the sponsor buyer of the client to list users for. (required) <client-account-id> (string) The account ID of the client buyer to list users for. (required) You must specify either a string representation of a numerical account identifier or the - character to list all the client users for all the clients of a given sponsor buyer.","title":"Required Scalar Arguments"},{"location":"accounts_clients-users-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-users-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUsersResponse.nextPageToken returned from the previous call to the accounts.clients.users.list method.","title":"Optional Method Properties"},{"location":"accounts_clients-users-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_clients-users-update/","text":"Updates an existing client user. Only the user status can be changed on update. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-update ... Required Scalar Arguments <account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user to be retrieved is associated with. (required) <user-id> (string) Numerical identifier of the user to retrieve. (required) Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUser: client-account-id: string email: string status: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=duo Numerical account ID of the client buyer with which the user is associated; the buyer must be a client of the current sponsor buyer. The value of this field is ignored in an update operation. email=ipsum User's email address. The value of this field is ignored in an update operation. status=sed The status of the client user. user-id=ut The unique numerical ID of the client user that has accepted an invitation. The value of this field is ignored in an update operation. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Update"},{"location":"accounts_clients-users-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts clients-users-update ...","title":"Scopes"},{"location":"accounts_clients-users-update/#required-scalar-arguments","text":"<account-id> (string) Numerical account ID of the client's sponsor buyer. (required) <client-account-id> (string) Numerical account ID of the client buyer that the user to be retrieved is associated with. (required) <user-id> (string) Numerical identifier of the user to retrieve. (required)","title":"Required Scalar Arguments"},{"location":"accounts_clients-users-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUser: client-account-id: string email: string status: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-account-id=duo Numerical account ID of the client buyer with which the user is associated; the buyer must be a client of the current sponsor buyer. The value of this field is ignored in an update operation. email=ipsum User's email address. The value of this field is ignored in an update operation. status=sed The status of the client user. user-id=ut The unique numerical ID of the client user that has accepted an invitation. The value of this field is ignored in an update operation.","title":"Required Request Value"},{"location":"accounts_clients-users-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_clients-users-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_clients-users-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-create/","text":"Creates a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-create ... Required Scalar Argument <account-id> (string) The account that this creative belongs to. Can be used to filter the response of the creatives.list method. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-name: string agency-id: string api-update-time: string attributes: [string] click-through-urls: [string] creative-id: string deals-status: string declared-click-through-urls: [string] detected-advertiser-ids: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number store-url: string video-url: string open-auction-status: string restricted-categories: [string] vendor-ids: [integer] version: integer video: video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=gubergren The account that this creative belongs to. Can be used to filter the response of the creatives.list method. ad-choices-destination-url=rebum. The link to AdChoices destination page. ad-technology-providers detected-provider-ids=est The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the (Google bid protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto] and the BidRequest.user.ext.consented_providers_settings.consented_providers field on the (OpenRTB protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto], and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction. .. advertiser-name=ipsum The name of the company being advertised in the creative. agency-id=est The agency ID for this creative. api-update-time=gubergren Output only. The last update timestamp of the creative through the API. attributes=ea All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. click-through-urls=dolor The set of destination URLs for the creative. Each invocation of this argument appends the given value to the array. creative-id=lorem The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method. deals-status=eos Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. declared-click-through-urls=labore The set of declared destination URLs for the creative. Each invocation of this argument appends the given value to the array. detected-advertiser-ids=sed Output only. Detected advertiser IDs, if any. Each invocation of this argument appends the given value to the array. detected-domains=duo Output only. The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=sed Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. detected-product-categories=40 Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=86 Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. html height=88 The height of the HTML snippet in pixels. snippet=et The HTML snippet that displays the ad when inserted in the web page. width=58 The width of the HTML snippet in pixels. .. impression-tracking-urls=et The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. native advertiser-name=et The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=25 Image height in pixels. url=erat The URL of the image. width=8 Image width in pixels. .. body=duo A long description of the ad. call-to-action=dolore A label for the button that the user is supposed to click. click-link-url=et The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=voluptua. The URL to use for click tracking. headline=amet. A short title for the ad. image height=5 Image height in pixels. url=diam The URL of the image. width=52 Image width in pixels. ..logo height=83 Image height in pixels. url=et The URL of the image. width=6 Image width in pixels. .. price-display-text=stet The price of the promoted app including currency info. star-rating=0.017140519879742522 The app rating in the app store. Must be in the range [0-5]. store-url=vero The URL to the app store to purchase/download the promoted app. video-url=vero The URL to fetch a native video ad. .. open-auction-status=invidunt Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. restricted-categories=stet All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. vendor-ids=25 All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Each invocation of this argument appends the given value to the array. version=57 Output only. The version of this creative. video video-url=lorem The URL to fetch a video ad. video-vast-xml=diam The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p duplicate-id-mode=string Indicates if multiple creatives can share an ID or not. Default is NO_DUPLICATES (one ID per creative). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Create"},{"location":"accounts_creatives-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-create ...","title":"Scopes"},{"location":"accounts_creatives-create/#required-scalar-argument","text":"<account-id> (string) The account that this creative belongs to. Can be used to filter the response of the creatives.list method.","title":"Required Scalar Argument"},{"location":"accounts_creatives-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-name: string agency-id: string api-update-time: string attributes: [string] click-through-urls: [string] creative-id: string deals-status: string declared-click-through-urls: [string] detected-advertiser-ids: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number store-url: string video-url: string open-auction-status: string restricted-categories: [string] vendor-ids: [integer] version: integer video: video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=gubergren The account that this creative belongs to. Can be used to filter the response of the creatives.list method. ad-choices-destination-url=rebum. The link to AdChoices destination page. ad-technology-providers detected-provider-ids=est The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the (Google bid protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto] and the BidRequest.user.ext.consented_providers_settings.consented_providers field on the (OpenRTB protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto], and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction. .. advertiser-name=ipsum The name of the company being advertised in the creative. agency-id=est The agency ID for this creative. api-update-time=gubergren Output only. The last update timestamp of the creative through the API. attributes=ea All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. click-through-urls=dolor The set of destination URLs for the creative. Each invocation of this argument appends the given value to the array. creative-id=lorem The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method. deals-status=eos Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. declared-click-through-urls=labore The set of declared destination URLs for the creative. Each invocation of this argument appends the given value to the array. detected-advertiser-ids=sed Output only. Detected advertiser IDs, if any. Each invocation of this argument appends the given value to the array. detected-domains=duo Output only. The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=sed Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. detected-product-categories=40 Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=86 Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. html height=88 The height of the HTML snippet in pixels. snippet=et The HTML snippet that displays the ad when inserted in the web page. width=58 The width of the HTML snippet in pixels. .. impression-tracking-urls=et The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. native advertiser-name=et The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=25 Image height in pixels. url=erat The URL of the image. width=8 Image width in pixels. .. body=duo A long description of the ad. call-to-action=dolore A label for the button that the user is supposed to click. click-link-url=et The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=voluptua. The URL to use for click tracking. headline=amet. A short title for the ad. image height=5 Image height in pixels. url=diam The URL of the image. width=52 Image width in pixels. ..logo height=83 Image height in pixels. url=et The URL of the image. width=6 Image width in pixels. .. price-display-text=stet The price of the promoted app including currency info. star-rating=0.017140519879742522 The app rating in the app store. Must be in the range [0-5]. store-url=vero The URL to the app store to purchase/download the promoted app. video-url=vero The URL to fetch a native video ad. .. open-auction-status=invidunt Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. restricted-categories=stet All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. vendor-ids=25 All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Each invocation of this argument appends the given value to the array. version=57 Output only. The version of this creative. video video-url=lorem The URL to fetch a video ad. video-vast-xml=diam The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.","title":"Required Request Value"},{"location":"accounts_creatives-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p duplicate-id-mode=string Indicates if multiple creatives can share an ID or not. Default is NO_DUPLICATES (one ID per creative).","title":"Optional Method Properties"},{"location":"accounts_creatives-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-deal-associations-add/","text":"Associate an existing deal with a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-add ... Required Scalar Arguments <account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative associated with the deal. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddDealAssociationRequest: association: account-id: string creative-id: string deals-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .association account-id=no The account the creative belongs to. creative-id=ipsum The ID of the creative associated with the deal. deals-id=accusam The externalDealId for the deal associated with the creative. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Deal Associations Add"},{"location":"accounts_creatives-deal-associations-add/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-add ...","title":"Scopes"},{"location":"accounts_creatives-deal-associations-add/#required-scalar-arguments","text":"<account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative associated with the deal.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-deal-associations-add/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddDealAssociationRequest: association: account-id: string creative-id: string deals-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .association account-id=no The account the creative belongs to. creative-id=ipsum The ID of the creative associated with the deal. deals-id=accusam The externalDealId for the deal associated with the creative.","title":"Required Request Value"},{"location":"accounts_creatives-deal-associations-add/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-deal-associations-add/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-deal-associations-add/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-deal-associations-list/","text":"List all creative-deal associations. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-list ... Required Scalar Arguments <account-id> (string) The account to list the associations from. Specify \"-\" to list all creatives the current user has access to. <creative-id> (string) The creative ID to list the associations from. Specify \"-\" to list all creatives under the above account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer associations than requested. If unspecified, server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListDealAssociationsResponse.next_page_token returned from the previous call to 'ListDealAssociations' method. -p query=string An optional query string to filter deal associations. If no filter is specified, all associations will be returned. Supported queries are: - accountId= account_id_string - creativeId= creative_id_string - dealsId= deals_id_string - dealsStatus:{approved, conditionally_approved, disapproved, not_checked} - openAuctionStatus:{approved, conditionally_approved, disapproved, not_checked} Example: 'dealsId=12345 AND dealsStatus:disapproved' Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Deal Associations List"},{"location":"accounts_creatives-deal-associations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-list ...","title":"Scopes"},{"location":"accounts_creatives-deal-associations-list/#required-scalar-arguments","text":"<account-id> (string) The account to list the associations from. Specify \"-\" to list all creatives the current user has access to. <creative-id> (string) The creative ID to list the associations from. Specify \"-\" to list all creatives under the above account.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-deal-associations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-deal-associations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer associations than requested. If unspecified, server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListDealAssociationsResponse.next_page_token returned from the previous call to 'ListDealAssociations' method. -p query=string An optional query string to filter deal associations. If no filter is specified, all associations will be returned. Supported queries are: - accountId= account_id_string - creativeId= creative_id_string - dealsId= deals_id_string - dealsStatus:{approved, conditionally_approved, disapproved, not_checked} - openAuctionStatus:{approved, conditionally_approved, disapproved, not_checked} Example: 'dealsId=12345 AND dealsStatus:disapproved'","title":"Optional Method Properties"},{"location":"accounts_creatives-deal-associations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-deal-associations-remove/","text":"Remove the association between a deal and a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-remove ... Required Scalar Arguments <account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative associated with the deal. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveDealAssociationRequest: association: account-id: string creative-id: string deals-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .association account-id=takimata The account the creative belongs to. creative-id=consetetur The ID of the creative associated with the deal. deals-id=voluptua. The externalDealId for the deal associated with the creative. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Deal Associations Remove"},{"location":"accounts_creatives-deal-associations-remove/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-deal-associations-remove ...","title":"Scopes"},{"location":"accounts_creatives-deal-associations-remove/#required-scalar-arguments","text":"<account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative associated with the deal.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-deal-associations-remove/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveDealAssociationRequest: association: account-id: string creative-id: string deals-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .association account-id=takimata The account the creative belongs to. creative-id=consetetur The ID of the creative associated with the deal. deals-id=voluptua. The externalDealId for the deal associated with the creative.","title":"Required Request Value"},{"location":"accounts_creatives-deal-associations-remove/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-deal-associations-remove/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-deal-associations-remove/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-get/","text":"Gets a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-get ... Required Scalar Arguments <account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Get"},{"location":"accounts_creatives-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-get ...","title":"Scopes"},{"location":"accounts_creatives-get/#required-scalar-arguments","text":"<account-id> (string) The account the creative belongs to. <creative-id> (string) The ID of the creative to retrieve.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-list/","text":"Lists creatives. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-list ... Required Scalar Argument <account-id> (string) The account to list the creatives from. Specify \"-\" to list all creatives the current user has access to. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.next_page_token returned from the previous call to 'ListCreatives' method. -p query=string An optional query string to filter creatives. If no filter is specified, all active creatives will be returned. Supported queries are: - accountId= account_id_string - creativeId= creative_id_string - dealsStatus: {approved, conditionally_approved, disapproved, not_checked} - openAuctionStatus: {approved, conditionally_approved, disapproved, not_checked} - attribute: {a numeric attribute from the list of attributes} - disapprovalReason: {a reason from DisapprovalReason} Example: 'accountId=12345 AND (dealsStatus:disapproved AND disapprovalReason:unacceptable_content) OR attribute:47' Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives List"},{"location":"accounts_creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-list ...","title":"Scopes"},{"location":"accounts_creatives-list/#required-scalar-argument","text":"<account-id> (string) The account to list the creatives from. Specify \"-\" to list all creatives the current user has access to.","title":"Required Scalar Argument"},{"location":"accounts_creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.next_page_token returned from the previous call to 'ListCreatives' method. -p query=string An optional query string to filter creatives. If no filter is specified, all active creatives will be returned. Supported queries are: - accountId= account_id_string - creativeId= creative_id_string - dealsStatus: {approved, conditionally_approved, disapproved, not_checked} - openAuctionStatus: {approved, conditionally_approved, disapproved, not_checked} - attribute: {a numeric attribute from the list of attributes} - disapprovalReason: {a reason from DisapprovalReason} Example: 'accountId=12345 AND (dealsStatus:disapproved AND disapprovalReason:unacceptable_content) OR attribute:47'","title":"Optional Method Properties"},{"location":"accounts_creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-stop-watching/","text":"Stops watching a creative. Will stop push notifications being sent to the topics when the creative changes status. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-stop-watching ... Required Scalar Arguments <account-id> (string) The account of the creative to stop notifications for. <creative-id> (string) The creative ID of the creative to stop notifications for. Specify \"-\" to specify stopping account level notifications. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopWatchingCreativeRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Stop Watching"},{"location":"accounts_creatives-stop-watching/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-stop-watching ...","title":"Scopes"},{"location":"accounts_creatives-stop-watching/#required-scalar-arguments","text":"<account-id> (string) The account of the creative to stop notifications for. <creative-id> (string) The creative ID of the creative to stop notifications for. Specify \"-\" to specify stopping account level notifications.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-stop-watching/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopWatchingCreativeRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_creatives-stop-watching/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-stop-watching/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-stop-watching/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-update/","text":"Updates a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-update ... Required Scalar Arguments <account-id> (string) The account that this creative belongs to. Can be used to filter the response of the creatives.list method. <creative-id> (string) The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-name: string agency-id: string api-update-time: string attributes: [string] click-through-urls: [string] creative-id: string deals-status: string declared-click-through-urls: [string] detected-advertiser-ids: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number store-url: string video-url: string open-auction-status: string restricted-categories: [string] vendor-ids: [integer] version: integer video: video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=et The account that this creative belongs to. Can be used to filter the response of the creatives.list method. ad-choices-destination-url=erat The link to AdChoices destination page. ad-technology-providers detected-provider-ids=consetetur The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the (Google bid protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto] and the BidRequest.user.ext.consented_providers_settings.consented_providers field on the (OpenRTB protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto], and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction. .. advertiser-name=et The name of the company being advertised in the creative. agency-id=accusam The agency ID for this creative. api-update-time=voluptua. Output only. The last update timestamp of the creative through the API. attributes=dolore All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. click-through-urls=dolore The set of destination URLs for the creative. Each invocation of this argument appends the given value to the array. creative-id=dolore The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method. deals-status=voluptua. Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. declared-click-through-urls=amet. The set of declared destination URLs for the creative. Each invocation of this argument appends the given value to the array. detected-advertiser-ids=ea Output only. Detected advertiser IDs, if any. Each invocation of this argument appends the given value to the array. detected-domains=sadipscing Output only. The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=lorem Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. detected-product-categories=63 Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=90 Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. html height=94 The height of the HTML snippet in pixels. snippet=at The HTML snippet that displays the ad when inserted in the web page. width=58 The width of the HTML snippet in pixels. .. impression-tracking-urls=sit The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. native advertiser-name=et The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=62 Image height in pixels. url=aliquyam The URL of the image. width=96 Image width in pixels. .. body=et A long description of the ad. call-to-action=sanctus A label for the button that the user is supposed to click. click-link-url=lorem The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=est The URL to use for click tracking. headline=sed A short title for the ad. image height=72 Image height in pixels. url=dolores The URL of the image. width=32 Image width in pixels. ..logo height=33 Image height in pixels. url=sed The URL of the image. width=90 Image width in pixels. .. price-display-text=et The price of the promoted app including currency info. star-rating=0.9478375320054573 The app rating in the app store. Must be in the range [0-5]. store-url=sed The URL to the app store to purchase/download the promoted app. video-url=no The URL to fetch a native video ad. .. open-auction-status=nonumy Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. restricted-categories=at All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. vendor-ids=56 All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Each invocation of this argument appends the given value to the array. version=69 Output only. The version of this creative. video video-url=dolores The URL to fetch a video ad. video-vast-xml=sadipscing The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Update"},{"location":"accounts_creatives-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-update ...","title":"Scopes"},{"location":"accounts_creatives-update/#required-scalar-arguments","text":"<account-id> (string) The account that this creative belongs to. Can be used to filter the response of the creatives.list method. <creative-id> (string) The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string ad-technology-providers: detected-provider-ids: [string] has-unidentified-provider: boolean advertiser-name: string agency-id: string api-update-time: string attributes: [string] click-through-urls: [string] creative-id: string deals-status: string declared-click-through-urls: [string] detected-advertiser-ids: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number store-url: string video-url: string open-auction-status: string restricted-categories: [string] vendor-ids: [integer] version: integer video: video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=et The account that this creative belongs to. Can be used to filter the response of the creatives.list method. ad-choices-destination-url=erat The link to AdChoices destination page. ad-technology-providers detected-provider-ids=consetetur The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the BidRequest.adslot.consented_providers_settings.consented_providers field on the (Google bid protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto] and the BidRequest.user.ext.consented_providers_settings.consented_providers field on the (OpenRTB protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto], and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. has-unidentified-provider=true Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction. .. advertiser-name=et The name of the company being advertised in the creative. agency-id=accusam The agency ID for this creative. api-update-time=voluptua. Output only. The last update timestamp of the creative through the API. attributes=dolore All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. click-through-urls=dolore The set of destination URLs for the creative. Each invocation of this argument appends the given value to the array. creative-id=dolore The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method. deals-status=voluptua. Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. declared-click-through-urls=amet. The set of declared destination URLs for the creative. Each invocation of this argument appends the given value to the array. detected-advertiser-ids=ea Output only. Detected advertiser IDs, if any. Each invocation of this argument appends the given value to the array. detected-domains=sadipscing Output only. The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=lorem Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. detected-product-categories=63 Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=90 Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. html height=94 The height of the HTML snippet in pixels. snippet=at The HTML snippet that displays the ad when inserted in the web page. width=58 The width of the HTML snippet in pixels. .. impression-tracking-urls=sit The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. native advertiser-name=et The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=62 Image height in pixels. url=aliquyam The URL of the image. width=96 Image width in pixels. .. body=et A long description of the ad. call-to-action=sanctus A label for the button that the user is supposed to click. click-link-url=lorem The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=est The URL to use for click tracking. headline=sed A short title for the ad. image height=72 Image height in pixels. url=dolores The URL of the image. width=32 Image width in pixels. ..logo height=33 Image height in pixels. url=sed The URL of the image. width=90 Image width in pixels. .. price-display-text=et The price of the promoted app including currency info. star-rating=0.9478375320054573 The app rating in the app store. Must be in the range [0-5]. store-url=sed The URL to the app store to purchase/download the promoted app. video-url=no The URL to fetch a native video ad. .. open-auction-status=nonumy Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method. restricted-categories=at All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. vendor-ids=56 All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Each invocation of this argument appends the given value to the array. version=69 Output only. The version of this creative. video video-url=dolores The URL to fetch a video ad. video-vast-xml=sadipscing The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.","title":"Required Request Value"},{"location":"accounts_creatives-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_creatives-watch/","text":"Watches a creative. Will result in push notifications being sent to the topic when the creative changes status. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-watch ... Required Scalar Arguments <account-id> (string) The account of the creative to watch. <creative-id> (string) The creative ID to watch for status changes. Specify \"-\" to watch all creatives under the above account. If both creative-level and account-level notifications are sent, only a single notification will be sent to the creative-level notification topic. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: WatchCreativeRequest: topic: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . topic=erat The Pub/Sub topic to publish notifications to. This topic must already exist and must give permission to ad-exchange-buyside-reports@google.com to write to the topic. This should be the full resource name in \"projects/{project_id}/topics/{topic_id}\" format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Watch"},{"location":"accounts_creatives-watch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts creatives-watch ...","title":"Scopes"},{"location":"accounts_creatives-watch/#required-scalar-arguments","text":"<account-id> (string) The account of the creative to watch. <creative-id> (string) The creative ID to watch for status changes. Specify \"-\" to watch all creatives under the above account. If both creative-level and account-level notifications are sent, only a single notification will be sent to the creative-level notification topic.","title":"Required Scalar Arguments"},{"location":"accounts_creatives-watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: WatchCreativeRequest: topic: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . topic=erat The Pub/Sub topic to publish notifications to. This topic must already exist and must give permission to ad-exchange-buyside-reports@google.com to write to the topic. This should be the full resource name in \"projects/{project_id}/topics/{topic_id}\" format.","title":"Required Request Value"},{"location":"accounts_creatives-watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_creatives-watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_creatives-watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_finalized-proposals-list/","text":"List finalized proposals, regardless if a proposal is being renegotiated. A filter expression (PQL query) may be specified to filter the results. The notes will not be returned. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-list ... Required Scalar Argument <account-id> (string) Account ID of the buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL filter query used to query for proposals. Nested repeated fields, such as proposal.deals.targetingCriterion, cannot be filtered. -p filter-syntax=string Syntax the filter is written in. Current implementation defaults to PQL but in the future it will be LIST_FILTER. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProposalsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Proposals List"},{"location":"accounts_finalized-proposals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-list ...","title":"Scopes"},{"location":"accounts_finalized-proposals-list/#required-scalar-argument","text":"<account-id> (string) Account ID of the buyer.","title":"Required Scalar Argument"},{"location":"accounts_finalized-proposals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_finalized-proposals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL filter query used to query for proposals. Nested repeated fields, such as proposal.deals.targetingCriterion, cannot be filtered. -p filter-syntax=string Syntax the filter is written in. Current implementation defaults to PQL but in the future it will be LIST_FILTER. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProposalsResponse.","title":"Optional Method Properties"},{"location":"accounts_finalized-proposals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_finalized-proposals-pause/","text":"Update given deals to pause serving. This method will set the DealServingMetadata.DealPauseStatus.has_buyer_paused bit to true for all listed deals in the request. Currently, this method only applies to PG and PD deals. For PA deals, call accounts.proposals.pause endpoint. It is a no-op to pause already-paused deals. It is an error to call PauseProposalDeals for deals which are not part of the proposal of proposal_id or which are not finalized or renegotiating. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-pause ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The proposal_id of the proposal containing the deals. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseProposalDealsRequest: external-deal-ids: [string] reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-ids=aliquyam The external_deal_id's of the deals to be paused. If empty, all the deals in the proposal will be paused. Each invocation of this argument appends the given value to the array. reason=amet The reason why the deals are being paused. This human readable message will be displayed in the seller's UI. (Max length: 1000 unicode code units.) About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Proposals Pause"},{"location":"accounts_finalized-proposals-pause/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-pause ...","title":"Scopes"},{"location":"accounts_finalized-proposals-pause/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The proposal_id of the proposal containing the deals.","title":"Required Scalar Arguments"},{"location":"accounts_finalized-proposals-pause/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseProposalDealsRequest: external-deal-ids: [string] reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-ids=aliquyam The external_deal_id's of the deals to be paused. If empty, all the deals in the proposal will be paused. Each invocation of this argument appends the given value to the array. reason=amet The reason why the deals are being paused. This human readable message will be displayed in the seller's UI. (Max length: 1000 unicode code units.)","title":"Required Request Value"},{"location":"accounts_finalized-proposals-pause/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_finalized-proposals-pause/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_finalized-proposals-pause/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_finalized-proposals-resume/","text":"Update given deals to resume serving. This method will set the DealServingMetadata.DealPauseStatus.has_buyer_paused bit to false for all listed deals in the request. Currently, this method only applies to PG and PD deals. For PA deals, call accounts.proposals.resume endpoint. It is a no-op to resume running deals or deals paused by the other party. It is an error to call ResumeProposalDeals for deals which are not part of the proposal of proposal_id or which are not finalized or renegotiating. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-resume ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The proposal_id of the proposal containing the deals. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeProposalDealsRequest: external-deal-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-ids=est The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Proposals Resume"},{"location":"accounts_finalized-proposals-resume/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts finalized-proposals-resume ...","title":"Scopes"},{"location":"accounts_finalized-proposals-resume/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The proposal_id of the proposal containing the deals.","title":"Required Scalar Arguments"},{"location":"accounts_finalized-proposals-resume/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeProposalDealsRequest: external-deal-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . external-deal-ids=est The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"accounts_finalized-proposals-resume/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_finalized-proposals-resume/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_finalized-proposals-resume/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_products-get/","text":"Gets the requested product by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts products-get ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <product-id> (string) The ID for the product to get the head revision for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Products Get"},{"location":"accounts_products-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts products-get ...","title":"Scopes"},{"location":"accounts_products-get/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <product-id> (string) The ID for the product to get the head revision for.","title":"Required Scalar Arguments"},{"location":"accounts_products-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_products-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_products-list/","text":"List all products visible to the buyer (optionally filtered by the specified PQL query). Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts products-list ... Required Scalar Argument <account-id> (string) Account ID of the buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL query used to query for products. See https://developers.google.com/ad-manager/docs/pqlreference for documentation about PQL and examples. Nested repeated fields, such as product.targetingCriterion.inclusions, cannot be filtered. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProductsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Products List"},{"location":"accounts_products-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts products-list ...","title":"Scopes"},{"location":"accounts_products-list/#required-scalar-argument","text":"<account-id> (string) Account ID of the buyer.","title":"Required Scalar Argument"},{"location":"accounts_products-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_products-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL query used to query for products. See https://developers.google.com/ad-manager/docs/pqlreference for documentation about PQL and examples. Nested repeated fields, such as product.targetingCriterion.inclusions, cannot be filtered. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProductsResponse.","title":"Optional Method Properties"},{"location":"accounts_products-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-accept/","text":"Mark the proposal as accepted at the given revision number. If the number does not match the server's revision number an ABORTED error message will be returned. This call updates the proposal_state from PROPOSED to BUYER_ACCEPTED , or from SELLER_ACCEPTED to FINALIZED . Upon calling this endpoint, the buyer implicitly agrees to the terms and conditions optionally set within the proposal by the publisher. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-accept ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to accept. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptProposalRequest: proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision=et The last known client revision number of the proposal. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Accept"},{"location":"accounts_proposals-accept/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-accept ...","title":"Scopes"},{"location":"accounts_proposals-accept/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to accept.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-accept/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptProposalRequest: proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision=et The last known client revision number of the proposal.","title":"Required Request Value"},{"location":"accounts_proposals-accept/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-accept/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-accept/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-add-note/","text":"Create a new note and attach it to the proposal. The note is assigned a unique ID by the server. The proposal revision number will not increase when associated with a new note. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-add-note ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to attach the note to. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddNoteRequest: note: create-time: string creator-role: string note: string note-id: string proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .note create-time=sea Output only. The timestamp for when this note was created. creator-role=consetetur Output only. The role of the person (buyer/seller) creating the note. note=consetetur The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error. note-id=stet Output only. The unique ID for the note. proposal-revision=est Output only. The revision number of the proposal when the note is created. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Add Note"},{"location":"accounts_proposals-add-note/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-add-note ...","title":"Scopes"},{"location":"accounts_proposals-add-note/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to attach the note to.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-add-note/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddNoteRequest: note: create-time: string creator-role: string note: string note-id: string proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .note create-time=sea Output only. The timestamp for when this note was created. creator-role=consetetur Output only. The role of the person (buyer/seller) creating the note. note=consetetur The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error. note-id=stet Output only. The unique ID for the note. proposal-revision=est Output only. The revision number of the proposal when the note is created.","title":"Required Request Value"},{"location":"accounts_proposals-add-note/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-add-note/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-add-note/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-cancel-negotiation/","text":"Cancel an ongoing negotiation on a proposal. This does not cancel or end serving for the deals if the proposal has been finalized, but only cancels a negotiation unilaterally. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-cancel-negotiation ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to cancel negotiation for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelNegotiationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Cancel Negotiation"},{"location":"accounts_proposals-cancel-negotiation/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-cancel-negotiation ...","title":"Scopes"},{"location":"accounts_proposals-cancel-negotiation/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to cancel negotiation for.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-cancel-negotiation/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelNegotiationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_proposals-cancel-negotiation/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-cancel-negotiation/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-cancel-negotiation/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-complete-setup/","text":"You can opt-in to manually update proposals to indicate that setup is complete. By default, proposal setup is automatically completed after their deals are finalized. Contact your Technical Account Manager to opt in. Buyers can call this method when the proposal has been finalized, and all the required creatives have been uploaded using the Creatives API. This call updates the is_setup_completed field on the deals in the proposal, and notifies the seller. The server then advances the revision number of the most recent proposal. To mark an individual deal as ready to serve, call buyers.finalizedDeals.setReadyToServe in the Marketplace API. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-complete-setup ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to mark as setup completed. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompleteSetupRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Complete Setup"},{"location":"accounts_proposals-complete-setup/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-complete-setup ...","title":"Scopes"},{"location":"accounts_proposals-complete-setup/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to mark as setup completed.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-complete-setup/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompleteSetupRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_proposals-complete-setup/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-complete-setup/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-complete-setup/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-create/","text":"Create the given proposal. Each created proposal and any deals it contains are assigned a unique ID by the server. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-create ... Required Scalar Argument <account-id> (string) Account ID of the buyer. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string display-name: string is-renegotiating: boolean is-setup-complete: boolean last-updater-or-commentor-role: string originator-role: string private-auction-id: string proposal-id: string proposal-revision: string proposal-state: string seller: account-id: string sub-account-id: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=aliquyam Authorized Buyers account ID of the buyer. ..buyer account-id=elitr Authorized Buyers account ID of the buyer. ..buyer-private-data reference-id=duo A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. display-name=diam The name for the proposal. is-renegotiating=true Output only. True if the proposal is being renegotiated. is-setup-complete=true Output only. True, if the buyside inventory setup is complete for this proposal. last-updater-or-commentor-role=sed Output only. The role of the last user that either updated the proposal or left a comment. originator-role=eos Output only. Indicates whether the buyer/seller created the proposal. private-auction-id=lorem Output only. Private auction ID if this proposal is a private auction proposal. proposal-id=ea Output only. The unique ID of the proposal. proposal-revision=stet Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. proposal-state=dolores Output only. The current state of the proposal. seller account-id=eos The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product. sub-account-id=et Output only. Ad manager network code for the seller. .. terms-and-conditions=sea Output only. The terms and conditions set by the publisher for this proposal. update-time=et Output only. The time when the proposal was last revised. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Create"},{"location":"accounts_proposals-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-create ...","title":"Scopes"},{"location":"accounts_proposals-create/#required-scalar-argument","text":"<account-id> (string) Account ID of the buyer.","title":"Required Scalar Argument"},{"location":"accounts_proposals-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string display-name: string is-renegotiating: boolean is-setup-complete: boolean last-updater-or-commentor-role: string originator-role: string private-auction-id: string proposal-id: string proposal-revision: string proposal-state: string seller: account-id: string sub-account-id: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=aliquyam Authorized Buyers account ID of the buyer. ..buyer account-id=elitr Authorized Buyers account ID of the buyer. ..buyer-private-data reference-id=duo A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. display-name=diam The name for the proposal. is-renegotiating=true Output only. True if the proposal is being renegotiated. is-setup-complete=true Output only. True, if the buyside inventory setup is complete for this proposal. last-updater-or-commentor-role=sed Output only. The role of the last user that either updated the proposal or left a comment. originator-role=eos Output only. Indicates whether the buyer/seller created the proposal. private-auction-id=lorem Output only. Private auction ID if this proposal is a private auction proposal. proposal-id=ea Output only. The unique ID of the proposal. proposal-revision=stet Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. proposal-state=dolores Output only. The current state of the proposal. seller account-id=eos The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product. sub-account-id=et Output only. Ad manager network code for the seller. .. terms-and-conditions=sea Output only. The terms and conditions set by the publisher for this proposal. update-time=et Output only. The time when the proposal was last revised.","title":"Required Request Value"},{"location":"accounts_proposals-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-get/","text":"Gets a proposal given its ID. The proposal is returned at its head revision. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-get ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The unique ID of the proposal Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Get"},{"location":"accounts_proposals-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-get ...","title":"Scopes"},{"location":"accounts_proposals-get/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The unique ID of the proposal","title":"Required Scalar Arguments"},{"location":"accounts_proposals-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-list/","text":"List proposals. A filter expression (PQL query) may be specified to filter the results. To retrieve all finalized proposals, regardless if a proposal is being renegotiated, see the FinalizedProposals resource. Note that Bidder/ChildSeat relationships differ from the usual behavior. A Bidder account can only see its child seats' proposals by specifying the ChildSeat's accountId in the request path. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-list ... Required Scalar Argument <account-id> (string) Account ID of the buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL filter query used to query for proposals. Nested repeated fields, such as proposal.deals.targetingCriterion, cannot be filtered. -p filter-syntax=string Syntax the filter is written in. Current implementation defaults to PQL but in the future it will be LIST_FILTER. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProposalsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals List"},{"location":"accounts_proposals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-list ...","title":"Scopes"},{"location":"accounts_proposals-list/#required-scalar-argument","text":"<account-id> (string) Account ID of the buyer.","title":"Required Scalar Argument"},{"location":"accounts_proposals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string An optional PQL filter query used to query for proposals. Nested repeated fields, such as proposal.deals.targetingCriterion, cannot be filtered. -p filter-syntax=string Syntax the filter is written in. Current implementation defaults to PQL but in the future it will be LIST_FILTER. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string The page token as returned from ListProposalsResponse.","title":"Optional Method Properties"},{"location":"accounts_proposals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-pause/","text":"Update the given proposal to pause serving. This method will set the DealServingMetadata.DealPauseStatus.has_buyer_paused bit to true for all deals in the proposal. It is a no-op to pause an already-paused proposal. It is an error to call PauseProposal for a proposal that is not finalized or renegotiating. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-pause ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to pause. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseProposalRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=at The reason why the proposal is being paused. This human readable message will be displayed in the seller's UI. (Max length: 1000 unicode code units.) About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Pause"},{"location":"accounts_proposals-pause/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-pause ...","title":"Scopes"},{"location":"accounts_proposals-pause/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to pause.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-pause/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseProposalRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=at The reason why the proposal is being paused. This human readable message will be displayed in the seller's UI. (Max length: 1000 unicode code units.)","title":"Required Request Value"},{"location":"accounts_proposals-pause/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-pause/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-pause/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-resume/","text":"Update the given proposal to resume serving. This method will set the DealServingMetadata.DealPauseStatus.has_buyer_paused bit to false for all deals in the proposal. Note that if the has_seller_paused bit is also set, serving will not resume until the seller also resumes. It is a no-op to resume an already-running proposal. It is an error to call ResumeProposal for a proposal that is not finalized or renegotiating. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-resume ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to resume. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeProposalRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Resume"},{"location":"accounts_proposals-resume/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-resume ...","title":"Scopes"},{"location":"accounts_proposals-resume/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The ID of the proposal to resume.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-resume/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeProposalRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_proposals-resume/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-resume/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-resume/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_proposals-update/","text":"Update the given proposal at the client known revision number. If the server revision has advanced since the passed-in proposal.proposal_revision , an ABORTED error message will be returned. Only the buyer-modifiable fields of the proposal will be updated. Note that the deals in the proposal will be updated to match the passed-in copy. If a passed-in deal does not have a deal_id , the server will assign a new unique ID and create the deal. If passed-in deal has a deal_id , it will be updated to match the passed-in copy. Any existing deals not present in the passed-in proposal will be deleted. It is an error to pass in a deal with a deal_id not present at head. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-update ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <proposal-id> (string) The unique ID of the proposal. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string display-name: string is-renegotiating: boolean is-setup-complete: boolean last-updater-or-commentor-role: string originator-role: string private-auction-id: string proposal-id: string proposal-revision: string proposal-state: string seller: account-id: string sub-account-id: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=dolore Authorized Buyers account ID of the buyer. ..buyer account-id=eirmod Authorized Buyers account ID of the buyer. ..buyer-private-data reference-id=lorem A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. display-name=accusam The name for the proposal. is-renegotiating=true Output only. True if the proposal is being renegotiated. is-setup-complete=true Output only. True, if the buyside inventory setup is complete for this proposal. last-updater-or-commentor-role=erat Output only. The role of the last user that either updated the proposal or left a comment. originator-role=accusam Output only. Indicates whether the buyer/seller created the proposal. private-auction-id=sea Output only. Private auction ID if this proposal is a private auction proposal. proposal-id=takimata Output only. The unique ID of the proposal. proposal-revision=lorem Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. proposal-state=et Output only. The current state of the proposal. seller account-id=at The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product. sub-account-id=dolor Output only. Ad manager network code for the seller. .. terms-and-conditions=et Output only. The terms and conditions set by the publisher for this proposal. update-time=sit Output only. The time when the proposal was last revised. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Update"},{"location":"accounts_proposals-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts proposals-update ...","title":"Scopes"},{"location":"accounts_proposals-update/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <proposal-id> (string) The unique ID of the proposal.","title":"Required Scalar Arguments"},{"location":"accounts_proposals-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: account-id: string buyer: account-id: string buyer-private-data: reference-id: string display-name: string is-renegotiating: boolean is-setup-complete: boolean last-updater-or-commentor-role: string originator-role: string private-auction-id: string proposal-id: string proposal-revision: string proposal-state: string seller: account-id: string sub-account-id: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .billed-buyer account-id=dolore Authorized Buyers account ID of the buyer. ..buyer account-id=eirmod Authorized Buyers account ID of the buyer. ..buyer-private-data reference-id=lorem A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. display-name=accusam The name for the proposal. is-renegotiating=true Output only. True if the proposal is being renegotiated. is-setup-complete=true Output only. True, if the buyside inventory setup is complete for this proposal. last-updater-or-commentor-role=erat Output only. The role of the last user that either updated the proposal or left a comment. originator-role=accusam Output only. Indicates whether the buyer/seller created the proposal. private-auction-id=sea Output only. Private auction ID if this proposal is a private auction proposal. proposal-id=takimata Output only. The unique ID of the proposal. proposal-revision=lorem Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. proposal-state=et Output only. The current state of the proposal. seller account-id=at The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product. sub-account-id=dolor Output only. Ad manager network code for the seller. .. terms-and-conditions=et Output only. The terms and conditions set by the publisher for this proposal. update-time=sit Output only. The time when the proposal was last revised.","title":"Required Request Value"},{"location":"accounts_proposals-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_proposals-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_proposals-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_publisher-profiles-get/","text":"Gets the requested publisher profile by id. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts publisher-profiles-get ... Required Scalar Arguments <account-id> (string) Account ID of the buyer. <publisher-profile-id> (string) The id for the publisher profile to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Profiles Get"},{"location":"accounts_publisher-profiles-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts publisher-profiles-get ...","title":"Scopes"},{"location":"accounts_publisher-profiles-get/#required-scalar-arguments","text":"<account-id> (string) Account ID of the buyer. <publisher-profile-id> (string) The id for the publisher profile to get.","title":"Required Scalar Arguments"},{"location":"accounts_publisher-profiles-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_publisher-profiles-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_publisher-profiles-list/","text":"List all publisher profiles visible to the buyer Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts publisher-profiles-list ... Required Scalar Argument <account-id> (string) Account ID of the buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Specify the number of results to include per page. -p page-token=string The page token as return from ListPublisherProfilesResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Profiles List"},{"location":"accounts_publisher-profiles-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> accounts publisher-profiles-list ...","title":"Scopes"},{"location":"accounts_publisher-profiles-list/#required-scalar-argument","text":"<account-id> (string) Account ID of the buyer.","title":"Required Scalar Argument"},{"location":"accounts_publisher-profiles-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_publisher-profiles-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Specify the number of results to include per page. -p page-token=string The page token as return from ListPublisherProfilesResponse.","title":"Optional Method Properties"},{"location":"accounts_publisher-profiles-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/","text":"Lists all metrics that are measured in terms of number of bids. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Bid Metrics List"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-metrics-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-bid-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/","text":"List all errors that occurred in bid responses, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-response-errors-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Bid Response Errors List"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-response-errors-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-bid-response-errors-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/","text":"List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-responses-without-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Bid Responses Without Bids List"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-bid-responses-without-bids-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-bid-responses-without-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-create/","text":"Creates the specified filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-create ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=20 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=91 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=60 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=79 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=89 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=80 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=sea The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=consetetur The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=sit The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=aliquyam The environment on which to filter; optional. format=eos Creative format bidded on or allowed to bid on, can be empty. formats=at Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=dolores A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=consetetur The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=gubergren For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=dolor The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=69 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=40 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=99 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=ipsum The granularity of time intervals if a time series breakdown is preferred; optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Create"},{"location":"bidders_accounts-filter-sets-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-create ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-create/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=20 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=91 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=60 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=79 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=89 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=80 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=sea The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=consetetur The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=sit The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=aliquyam The environment on which to filter; optional. format=eos Creative format bidded on or allowed to bid on, can be empty. formats=at Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=dolores A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=consetetur The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=gubergren For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=dolor The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=69 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=40 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=99 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=ipsum The granularity of time intervals if a time series breakdown is preferred; optional.","title":"Required Request Value"},{"location":"bidders_accounts-filter-sets-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_accounts-filter-sets-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-delete/","text":"Deletes the requested filter set from the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-delete ... Required Scalar Argument <name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Delete"},{"location":"bidders_accounts-filter-sets-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-delete ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-delete/#required-scalar-argument","text":"<name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/","text":"List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bid-requests-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Filtered Bid Requests List"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bid-requests-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-filtered-bid-requests-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/","text":"List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-creatives-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Filtered Bids Creatives List"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-creatives-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes .","title":"Required Scalar Arguments"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/","text":"List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-details-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Filtered Bids Details List"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-details-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.","title":"Required Scalar Arguments"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-details-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/","text":"List all reasons for which bids were filtered, with the number of bids filtered for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Filtered Bids List"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-filtered-bids-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-filtered-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-get/","text":"Retrieves the requested filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-get ... Required Scalar Argument <name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Get"},{"location":"bidders_accounts-filter-sets-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-get ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-get/#required-scalar-argument","text":"<name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/","text":"Lists all metrics that are measured in terms of number of impressions. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-impression-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Impression Metrics List"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-impression-metrics-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-impression-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-list/","text":"Lists all filter sets for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-list ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets List"},{"location":"bidders_accounts-filter-sets-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-list/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-losing-bids-list/","text":"List all reasons for which bids lost in the auction, with the number of bids that lost for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-losing-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Losing Bids List"},{"location":"bidders_accounts-filter-sets-losing-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-losing-bids-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-losing-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-losing-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-losing-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-losing-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/","text":"List all reasons for which winning bids were not billable, with the number of bids not billed for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-non-billable-winning-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Accounts Filter Sets Non Billable Winning Bids List"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders accounts-filter-sets-non-billable-winning-bids-list ...","title":"Scopes"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method.","title":"Optional Method Properties"},{"location":"bidders_accounts-filter-sets-non-billable-winning-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-bid-metrics-list/","text":"Lists all metrics that are measured in terms of number of bids. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Metrics List"},{"location":"bidders_filter-sets-bid-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-metrics-list ...","title":"Scopes"},{"location":"bidders_filter-sets-bid-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-bid-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-bid-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-bid-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-bid-response-errors-list/","text":"List all errors that occurred in bid responses, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-response-errors-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Response Errors List"},{"location":"bidders_filter-sets-bid-response-errors-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-response-errors-list ...","title":"Scopes"},{"location":"bidders_filter-sets-bid-response-errors-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-bid-response-errors-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-bid-response-errors-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-bid-response-errors-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/","text":"List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-responses-without-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Responses Without Bids List"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-bid-responses-without-bids-list ...","title":"Scopes"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-bid-responses-without-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-create/","text":"Creates the specified filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-create ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=45 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=28 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=39 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=56 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=74 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=48 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=duo The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=sit The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=magna The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=et The environment on which to filter; optional. format=rebum. Creative format bidded on or allowed to bid on, can be empty. formats=dolor Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=lorem A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=justo The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=amet. For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=no The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=10 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=58 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=88 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=lorem The granularity of time intervals if a time series breakdown is preferred; optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Create"},{"location":"bidders_filter-sets-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-create ...","title":"Scopes"},{"location":"bidders_filter-sets-create/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=45 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=28 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=39 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=56 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=74 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=48 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=duo The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=sit The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=magna The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=et The environment on which to filter; optional. format=rebum. Creative format bidded on or allowed to bid on, can be empty. formats=dolor Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=lorem A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=justo The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=amet. For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=no The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=10 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=58 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=88 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=lorem The granularity of time intervals if a time series breakdown is preferred; optional.","title":"Required Request Value"},{"location":"bidders_filter-sets-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_filter-sets-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-delete/","text":"Deletes the requested filter set from the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-delete ... Required Scalar Argument <name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Delete"},{"location":"bidders_filter-sets-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-delete ...","title":"Scopes"},{"location":"bidders_filter-sets-delete/#required-scalar-argument","text":"<name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-filtered-bid-requests-list/","text":"List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bid-requests-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bid Requests List"},{"location":"bidders_filter-sets-filtered-bid-requests-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bid-requests-list ...","title":"Scopes"},{"location":"bidders_filter-sets-filtered-bid-requests-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-filtered-bid-requests-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-filtered-bid-requests-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-filtered-bid-requests-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/","text":"List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-creatives-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids Creatives List"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-creatives-list ...","title":"Scopes"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes .","title":"Required Scalar Arguments"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-filtered-bids-creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-filtered-bids-details-list/","text":"List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-details-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids Details List"},{"location":"bidders_filter-sets-filtered-bids-details-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-details-list ...","title":"Scopes"},{"location":"bidders_filter-sets-filtered-bids-details-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.","title":"Required Scalar Arguments"},{"location":"bidders_filter-sets-filtered-bids-details-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-filtered-bids-details-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-filtered-bids-details-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-filtered-bids-list/","text":"List all reasons for which bids were filtered, with the number of bids filtered for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids List"},{"location":"bidders_filter-sets-filtered-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-filtered-bids-list ...","title":"Scopes"},{"location":"bidders_filter-sets-filtered-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-filtered-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-filtered-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-filtered-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-get/","text":"Retrieves the requested filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-get ... Required Scalar Argument <name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Get"},{"location":"bidders_filter-sets-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-get ...","title":"Scopes"},{"location":"bidders_filter-sets-get/#required-scalar-argument","text":"<name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-impression-metrics-list/","text":"Lists all metrics that are measured in terms of number of impressions. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-impression-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Impression Metrics List"},{"location":"bidders_filter-sets-impression-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-impression-metrics-list ...","title":"Scopes"},{"location":"bidders_filter-sets-impression-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-impression-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-impression-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-impression-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-list/","text":"Lists all filter sets for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-list ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets List"},{"location":"bidders_filter-sets-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-list ...","title":"Scopes"},{"location":"bidders_filter-sets-list/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-losing-bids-list/","text":"List all reasons for which bids lost in the auction, with the number of bids that lost for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-losing-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Losing Bids List"},{"location":"bidders_filter-sets-losing-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-losing-bids-list ...","title":"Scopes"},{"location":"bidders_filter-sets-losing-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-losing-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-losing-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-losing-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/","text":"List all reasons for which winning bids were not billable, with the number of bids not billed for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-non-billable-winning-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Non Billable Winning Bids List"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> bidders filter-sets-non-billable-winning-bids-list ...","title":"Scopes"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method.","title":"Optional Method Properties"},{"location":"bidders_filter-sets-non-billable-winning-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-bid-metrics-list/","text":"Lists all metrics that are measured in terms of number of bids. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Metrics List"},{"location":"buyers_filter-sets-bid-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-metrics-list ...","title":"Scopes"},{"location":"buyers_filter-sets-bid-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-bid-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-bid-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-bid-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-bid-response-errors-list/","text":"List all errors that occurred in bid responses, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-response-errors-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Response Errors List"},{"location":"buyers_filter-sets-bid-response-errors-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-response-errors-list ...","title":"Scopes"},{"location":"buyers_filter-sets-bid-response-errors-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-bid-response-errors-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-bid-response-errors-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-bid-response-errors-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/","text":"List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-responses-without-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Bid Responses Without Bids List"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-bid-responses-without-bids-list ...","title":"Scopes"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-bid-responses-without-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-create/","text":"Creates the specified filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-create ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=43 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=10 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=35 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=62 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=67 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=76 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=amet. The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=dolore The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=amet The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=ut The environment on which to filter; optional. format=at Creative format bidded on or allowed to bid on, can be empty. formats=sit Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=vero A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=duo The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=sadipscing For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=ut The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=85 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=31 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=38 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=sadipscing The granularity of time intervals if a time series breakdown is preferred; optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Create"},{"location":"buyers_filter-sets-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-create ...","title":"Scopes"},{"location":"buyers_filter-sets-create/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter set to be created. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FilterSet: absolute-date-range: end-date: day: integer month: integer year: integer start-date: day: integer month: integer year: integer breakdown-dimensions: [string] creative-id: string deal-id: string environment: string format: string formats: [string] name: string platforms: [string] publisher-identifiers: [string] realtime-time-range: start-timestamp: string relative-date-range: duration-days: integer offset-days: integer seller-network-ids: [integer] time-series-granularity: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .absolute-date-range.end-date day=43 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=10 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=35 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ..start-date day=62 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=67 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=76 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. ... breakdown-dimensions=amet. The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions. Each invocation of this argument appends the given value to the array. creative-id=dolore The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. deal-id=amet The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the bidders/*/accounts/*/filterSets/* pattern. environment=ut The environment on which to filter; optional. format=at Creative format bidded on or allowed to bid on, can be empty. formats=sit Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items. Each invocation of this argument appends the given value to the array. name=vero A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - bidders/*/filterSets/* (for accessing bidder-level troubleshooting data) - bidders/*/accounts/*/filterSets/* (for accessing account-level troubleshooting data) This field is required in create operations. platforms=duo The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms). Each invocation of this argument appends the given value to the array. publisher-identifiers=sadipscing For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together. Each invocation of this argument appends the given value to the array. realtime-time-range start-timestamp=ut The start timestamp of the real-time RTB metrics aggregation. ..relative-date-range duration-days=85 The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7. offset-days=31 The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0. .. seller-network-ids=38 For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See seller-network-ids file for the set of existing seller network IDs. Each invocation of this argument appends the given value to the array. time-series-granularity=sadipscing The granularity of time intervals if a time series breakdown is preferred; optional.","title":"Required Request Value"},{"location":"buyers_filter-sets-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_filter-sets-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-transient=boolean Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-delete/","text":"Deletes the requested filter set from the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-delete ... Required Scalar Argument <name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Delete"},{"location":"buyers_filter-sets-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-delete ...","title":"Scopes"},{"location":"buyers_filter-sets-delete/#required-scalar-argument","text":"<name> (string) Full name of the resource to delete. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-filtered-bid-requests-list/","text":"List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bid-requests-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bid Requests List"},{"location":"buyers_filter-sets-filtered-bid-requests-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bid-requests-list ...","title":"Scopes"},{"location":"buyers_filter-sets-filtered-bid-requests-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-filtered-bid-requests-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-filtered-bid-requests-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-filtered-bid-requests-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/","text":"List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-creatives-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids Creatives List"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-creatives-list ...","title":"Scopes"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by creative. See creative-status-codes .","title":"Required Scalar Arguments"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-filtered-bids-creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-filtered-bids-details-list/","text":"List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-details-list ... Required Scalar Arguments <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids Details List"},{"location":"buyers_filter-sets-filtered-bids-details-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-details-list ...","title":"Scopes"},{"location":"buyers_filter-sets-filtered-bids-details-list/#required-scalar-arguments","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc <creative-status-id> (integer) The ID of the creative status for which to retrieve a breakdown by detail. See creative-status-codes . Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.","title":"Required Scalar Arguments"},{"location":"buyers_filter-sets-filtered-bids-details-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-filtered-bids-details-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-filtered-bids-details-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-filtered-bids-list/","text":"List all reasons for which bids were filtered, with the number of bids filtered for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Filtered Bids List"},{"location":"buyers_filter-sets-filtered-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-filtered-bids-list ...","title":"Scopes"},{"location":"buyers_filter-sets-filtered-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-filtered-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-filtered-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-filtered-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-get/","text":"Retrieves the requested filter set for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-get ... Required Scalar Argument <name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Get"},{"location":"buyers_filter-sets-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-get ...","title":"Scopes"},{"location":"buyers_filter-sets-get/#required-scalar-argument","text":"<name> (string) Full name of the resource being requested. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-impression-metrics-list/","text":"Lists all metrics that are measured in terms of number of impressions. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-impression-metrics-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Impression Metrics List"},{"location":"buyers_filter-sets-impression-metrics-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-impression-metrics-list ...","title":"Scopes"},{"location":"buyers_filter-sets-impression-metrics-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-impression-metrics-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-impression-metrics-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-impression-metrics-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-list/","text":"Lists all filter sets for the account with the given account ID. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-list ... Required Scalar Argument <owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456 Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets List"},{"location":"buyers_filter-sets-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-list ...","title":"Scopes"},{"location":"buyers_filter-sets-list/#required-scalar-argument","text":"<owner-name> (string) Name of the owner (bidder or account) of the filter sets to be listed. For example: - For a bidder-level filter set for bidder 123: bidders/123 - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123 - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-losing-bids-list/","text":"List all reasons for which bids lost in the auction, with the number of bids that lost for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-losing-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Losing Bids List"},{"location":"buyers_filter-sets-losing-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-losing-bids-list ...","title":"Scopes"},{"location":"buyers_filter-sets-losing-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-losing-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-losing-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-losing-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/","text":"List all reasons for which winning bids were not billable, with the number of bids not billed for each reason. Scopes You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-non-billable-winning-bids-list ... Required Scalar Argument <filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Filter Sets Non Billable Winning Bids List"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/adexchange.buyer scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/adexchange.buyer . You can set the scope for this method like this: adexchangebuyer2-v2-beta1 --scope <scope> buyers filter-sets-non-billable-winning-bids-list ...","title":"Scopes"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/#required-scalar-argument","text":"<filter-set-name> (string) Name of the filter set that should be applied to the requested metrics. For example: - For a bidder-level filter set for bidder 123: bidders/123/filterSets/abc - For an account-level filter set for the buyer account representing bidder 123: bidders/123/accounts/123/filterSets/abc - For an account-level filter set for the child seat buyer account 456 whose bidder is 123: bidders/123/accounts/456/filterSets/abc","title":"Required Scalar Argument"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method.","title":"Optional Method Properties"},{"location":"buyers_filter-sets-non-billable-winning-bids-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}