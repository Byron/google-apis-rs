{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The analyticsdata1-beta command-line interface (CLI) allows to use most features of the Google AnalyticsData service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the AnalyticsData API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-analyticsdata1_beta-cli Find the source code on github . Usage This documentation was generated from the AnalyticsData API at revision 20240304 . The CLI is at version 5.0.4 . analyticsdata1-beta [options] properties audience-exports-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] audience-exports-get <name> [-p <v>]... [-o <out>] audience-exports-list <parent> [-p <v>]... [-o <out>] audience-exports-query <name> (-r <kv>)... [-p <v>]... [-o <out>] batch-run-pivot-reports <property> (-r <kv>)... [-p <v>]... [-o <out>] batch-run-reports <property> (-r <kv>)... [-p <v>]... [-o <out>] check-compatibility <property> (-r <kv>)... [-p <v>]... [-o <out>] get-metadata <name> [-p <v>]... [-o <out>] run-pivot-report <property> (-r <kv>)... [-p <v>]... [-o <out>] run-realtime-report <property> (-r <kv>)... [-p <v>]... [-o <out>] run-report <property> (-r <kv>)... [-p <v>]... [-o <out>] analyticsdata1-beta --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with analyticsdata1-beta- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/analyticsdata1-beta-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/analyticsdata1-beta-secret.json , assuming that the required analyticsdata API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. analyticsdata1-beta --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-analyticsdata1_beta-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the AnalyticsData API at revision 20240304 . The CLI is at version 5.0.4 . analyticsdata1-beta [options] properties audience-exports-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] audience-exports-get <name> [-p <v>]... [-o <out>] audience-exports-list <parent> [-p <v>]... [-o <out>] audience-exports-query <name> (-r <kv>)... [-p <v>]... [-o <out>] batch-run-pivot-reports <property> (-r <kv>)... [-p <v>]... [-o <out>] batch-run-reports <property> (-r <kv>)... [-p <v>]... [-o <out>] check-compatibility <property> (-r <kv>)... [-p <v>]... [-o <out>] get-metadata <name> [-p <v>]... [-o <out>] run-pivot-report <property> (-r <kv>)... [-p <v>]... [-o <out>] run-realtime-report <property> (-r <kv>)... [-p <v>]... [-o <out>] run-report <property> (-r <kv>)... [-p <v>]... [-o <out>] analyticsdata1-beta --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with analyticsdata1-beta- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/analyticsdata1-beta-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/analyticsdata1-beta-secret.json , assuming that the required analyticsdata API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. analyticsdata1-beta --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"properties_audience-exports-create/","text":"Creates an audience export for later retrieval. This method quickly returns the audience export's resource name and initiates a long running asynchronous request to form an audience export. To export the users in an audience export, first create the audience export through this method and then send the audience resource name to the QueryAudienceExport method. See Creating an Audience Export for an introduction to Audience Exports with examples. An audience export is a snapshot of the users currently in the audience at the time of audience export creation. Creating audience exports for one audience on different days will return different results as users enter and exit the audience. Audiences in Google Analytics 4 allow you to segment your users in the ways that are important to your business. To learn more, see https://support.google.com/analytics/answer/9267572. Audience exports contain the users in each audience. Audience Export APIs have some methods at alpha and other methods at beta stability. The intention is to advance methods to beta stability after some feedback and adoption. To give your feedback on this API, complete the Google Analytics Audience Export API Feedback form. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-create ... Required Scalar Argument <parent> (string) Required. The parent resource where this audience export will be created. Format: properties/{property} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AudienceExport: audience: string audience-display-name: string begin-creating-time: string creation-quota-tokens-charged: integer error-message: string name: string percentage-completed: number row-count: integer state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . audience=et Required. The audience resource name. This resource name identifies the audience being listed and is shared between the Analytics Data & Admin APIs. Format: properties/{property}/audiences/{audience} audience-display-name=magna Output only. The descriptive display name for this audience. For example, \"Purchasers\". begin-creating-time=no Output only. The time when CreateAudienceExport was called and the AudienceExport began the CREATING state. creation-quota-tokens-charged=46 Output only. The total quota tokens charged during creation of the AudienceExport. Because this token count is based on activity from the CREATING state, this tokens charged will be fixed once an AudienceExport enters the ACTIVE or FAILED states. error-message=voluptua. Output only. Error message is populated when an audience export fails during creation. A common reason for such a failure is quota exhaustion. name=at Output only. Identifier. The audience export resource name assigned during creation. This resource name identifies this AudienceExport . Format: properties/{property}/audienceExports/{audience_export} percentage-completed=0.7318948296136206 Output only. The percentage completed for this audience export ranging between 0 to 100. row-count=99 Output only. The total number of rows in the AudienceExport result. state=takimata Output only. The current state for this AudienceExport. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Audience Exports Create"},{"location":"properties_audience-exports-create/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-create ...","title":"Scopes"},{"location":"properties_audience-exports-create/#required-scalar-argument","text":"<parent> (string) Required. The parent resource where this audience export will be created. Format: properties/{property}","title":"Required Scalar Argument"},{"location":"properties_audience-exports-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AudienceExport: audience: string audience-display-name: string begin-creating-time: string creation-quota-tokens-charged: integer error-message: string name: string percentage-completed: number row-count: integer state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . audience=et Required. The audience resource name. This resource name identifies the audience being listed and is shared between the Analytics Data & Admin APIs. Format: properties/{property}/audiences/{audience} audience-display-name=magna Output only. The descriptive display name for this audience. For example, \"Purchasers\". begin-creating-time=no Output only. The time when CreateAudienceExport was called and the AudienceExport began the CREATING state. creation-quota-tokens-charged=46 Output only. The total quota tokens charged during creation of the AudienceExport. Because this token count is based on activity from the CREATING state, this tokens charged will be fixed once an AudienceExport enters the ACTIVE or FAILED states. error-message=voluptua. Output only. Error message is populated when an audience export fails during creation. A common reason for such a failure is quota exhaustion. name=at Output only. Identifier. The audience export resource name assigned during creation. This resource name identifies this AudienceExport . Format: properties/{property}/audienceExports/{audience_export} percentage-completed=0.7318948296136206 Output only. The percentage completed for this audience export ranging between 0 to 100. row-count=99 Output only. The total number of rows in the AudienceExport result. state=takimata Output only. The current state for this AudienceExport.","title":"Required Request Value"},{"location":"properties_audience-exports-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_audience-exports-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_audience-exports-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_audience-exports-get/","text":"Gets configuration metadata about a specific audience export. This method can be used to understand an audience export after it has been created. See Creating an Audience Export for an introduction to Audience Exports with examples. Audience Export APIs have some methods at alpha and other methods at beta stability. The intention is to advance methods to beta stability after some feedback and adoption. To give your feedback on this API, complete the Google Analytics Audience Export API Feedback form. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-get ... Required Scalar Argument <name> (string) Required. The audience export resource name. Format: properties/{property}/audienceExports/{audience_export} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Audience Exports Get"},{"location":"properties_audience-exports-get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-get ...","title":"Scopes"},{"location":"properties_audience-exports-get/#required-scalar-argument","text":"<name> (string) Required. The audience export resource name. Format: properties/{property}/audienceExports/{audience_export}","title":"Required Scalar Argument"},{"location":"properties_audience-exports-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_audience-exports-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_audience-exports-list/","text":"Lists all audience exports for a property. This method can be used for you to find and reuse existing audience exports rather than creating unnecessary new audience exports. The same audience can have multiple audience exports that represent the export of users that were in an audience on different days. See Creating an Audience Export for an introduction to Audience Exports with examples. Audience Export APIs have some methods at alpha and other methods at beta stability. The intention is to advance methods to beta stability after some feedback and adoption. To give your feedback on this API, complete the Google Analytics Audience Export API Feedback form. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-list ... Required Scalar Argument <parent> (string) Required. All audience exports for this property will be listed in the response. Format: properties/{property} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of audience exports to return. The service may return fewer than this value. If unspecified, at most 200 audience exports will be returned. The maximum value is 1000 (higher values will be coerced to the maximum). -p page-token=string Optional. A page token, received from a previous ListAudienceExports call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAudienceExports must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Audience Exports List"},{"location":"properties_audience-exports-list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-list ...","title":"Scopes"},{"location":"properties_audience-exports-list/#required-scalar-argument","text":"<parent> (string) Required. All audience exports for this property will be listed in the response. Format: properties/{property}","title":"Required Scalar Argument"},{"location":"properties_audience-exports-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_audience-exports-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of audience exports to return. The service may return fewer than this value. If unspecified, at most 200 audience exports will be returned. The maximum value is 1000 (higher values will be coerced to the maximum). -p page-token=string Optional. A page token, received from a previous ListAudienceExports call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAudienceExports must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"properties_audience-exports-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_audience-exports-query/","text":"Retrieves an audience export of users. After creating an audience, the users are not immediately available for exporting. First, a request to CreateAudienceExport is necessary to create an audience export of users, and then second, this method is used to retrieve the users in the audience export. See Creating an Audience Export for an introduction to Audience Exports with examples. Audiences in Google Analytics 4 allow you to segment your users in the ways that are important to your business. To learn more, see https://support.google.com/analytics/answer/9267572. Audience Export APIs have some methods at alpha and other methods at beta stability. The intention is to advance methods to beta stability after some feedback and adoption. To give your feedback on this API, complete the Google Analytics Audience Export API Feedback form. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-query ... Required Scalar Argument <name> (string) Required. The name of the audience export to retrieve users from. Format: properties/{property}/audienceExports/{audience_export} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: QueryAudienceExportRequest: limit: string offset: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . limit=amet. Optional. The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . To learn more about this pagination parameter, see Pagination . offset=duo Optional. The row count of the start row. The first row is counted as row 0. When paging, the first request does not specify offset; or equivalently, sets offset to 0; the first request returns the first limit of rows. The second request sets offset to the limit of the first request; the second request returns the second limit of rows. To learn more about this pagination parameter, see Pagination . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Audience Exports Query"},{"location":"properties_audience-exports-query/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties audience-exports-query ...","title":"Scopes"},{"location":"properties_audience-exports-query/#required-scalar-argument","text":"<name> (string) Required. The name of the audience export to retrieve users from. Format: properties/{property}/audienceExports/{audience_export}","title":"Required Scalar Argument"},{"location":"properties_audience-exports-query/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: QueryAudienceExportRequest: limit: string offset: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . limit=amet. Optional. The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . To learn more about this pagination parameter, see Pagination . offset=duo Optional. The row count of the start row. The first row is counted as row 0. When paging, the first request does not specify offset; or equivalently, sets offset to 0; the first request returns the first limit of rows. The second request sets offset to the limit of the first request; the second request returns the second limit of rows. To learn more about this pagination parameter, see Pagination .","title":"Required Request Value"},{"location":"properties_audience-exports-query/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_audience-exports-query/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_audience-exports-query/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_batch-run-pivot-reports/","text":"Returns multiple pivot reports in a batch. All reports must be for the same GA4 Property. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties batch-run-pivot-reports ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . This property must be specified for the batch. The property within RunPivotReportRequest may either be unspecified or consistent with this property. Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRunPivotReportsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Run Pivot Reports"},{"location":"properties_batch-run-pivot-reports/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties batch-run-pivot-reports ...","title":"Scopes"},{"location":"properties_batch-run-pivot-reports/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . This property must be specified for the batch. The property within RunPivotReportRequest may either be unspecified or consistent with this property. Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_batch-run-pivot-reports/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRunPivotReportsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"properties_batch-run-pivot-reports/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_batch-run-pivot-reports/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_batch-run-pivot-reports/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_batch-run-reports/","text":"Returns multiple reports in a batch. All reports must be for the same GA4 Property. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties batch-run-reports ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . This property must be specified for the batch. The property within RunReportRequest may either be unspecified or consistent with this property. Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRunReportsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Run Reports"},{"location":"properties_batch-run-reports/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties batch-run-reports ...","title":"Scopes"},{"location":"properties_batch-run-reports/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . This property must be specified for the batch. The property within RunReportRequest may either be unspecified or consistent with this property. Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_batch-run-reports/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRunReportsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"properties_batch-run-reports/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_batch-run-reports/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_batch-run-reports/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_check-compatibility/","text":"This compatibility method lists dimensions and metrics that can be added to a report request and maintain compatibility. This method fails if the request's dimensions and metrics are incompatible. In Google Analytics, reports fail if they request incompatible dimensions and/or metrics; in that case, you will need to remove dimensions and/or metrics from the incompatible report until the report is compatible. The Realtime and Core reports have different compatibility rules. This method checks compatibility for Core reports. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties check-compatibility ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. To learn more, see where to find your Property ID . property should be the same value as in your runReport request. Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CheckCompatibilityRequest: compatibility-filter: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . compatibility-filter=ipsum Filters the dimensions and metrics in the response to just this compatibility. Commonly used as \u201dcompatibilityFilter\u201d: \u201cCOMPATIBLE\u201d to only return compatible dimensions & metrics. dimension-filter.filter.between-filter.from-value double-value=0.9217265098962596 Double value int64-value=gubergren Integer value ..to-value double-value=0.39155134552901283 Double value int64-value=gubergren Integer value ... field-name=eos The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=invidunt The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=amet The operation type for this filter. value double-value=0.8204376297831348 Double value int64-value=ipsum Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=ut The match type for this filter. value=gubergren The string value used for the matching. ....metric-filter.filter.between-filter.from-value double-value=0.6681221451468909 Double value int64-value=ipsum Integer value ..to-value double-value=0.4033695817113857 Double value int64-value=est Integer value ... field-name=gubergren The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=lorem The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=eos The operation type for this filter. value double-value=0.11853734747270994 Double value int64-value=duo Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=no The match type for this filter. value=stet The string value used for the matching. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Check Compatibility"},{"location":"properties_check-compatibility/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties check-compatibility ...","title":"Scopes"},{"location":"properties_check-compatibility/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. To learn more, see where to find your Property ID . property should be the same value as in your runReport request. Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_check-compatibility/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CheckCompatibilityRequest: compatibility-filter: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . compatibility-filter=ipsum Filters the dimensions and metrics in the response to just this compatibility. Commonly used as \u201dcompatibilityFilter\u201d: \u201cCOMPATIBLE\u201d to only return compatible dimensions & metrics. dimension-filter.filter.between-filter.from-value double-value=0.9217265098962596 Double value int64-value=gubergren Integer value ..to-value double-value=0.39155134552901283 Double value int64-value=gubergren Integer value ... field-name=eos The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=invidunt The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=amet The operation type for this filter. value double-value=0.8204376297831348 Double value int64-value=ipsum Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=ut The match type for this filter. value=gubergren The string value used for the matching. ....metric-filter.filter.between-filter.from-value double-value=0.6681221451468909 Double value int64-value=ipsum Integer value ..to-value double-value=0.4033695817113857 Double value int64-value=est Integer value ... field-name=gubergren The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=lorem The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=eos The operation type for this filter. value double-value=0.11853734747270994 Double value int64-value=duo Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=no The match type for this filter. value=stet The string value used for the matching.","title":"Required Request Value"},{"location":"properties_check-compatibility/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_check-compatibility/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_check-compatibility/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_get-metadata/","text":"Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. In this method, a Google Analytics GA4 Property Identifier is specified in the request, and the metadata response includes Custom dimensions and metrics as well as Universal metadata. For example if a custom metric with parameter name levels_unlocked is registered to a property, the Metadata response will contain customEvent:levels_unlocked . Universal metadata are dimensions and metrics applicable to any property such as country and totalUsers . Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties get-metadata ... Required Scalar Argument <name> (string) Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics GA4 Property identifier. To learn more, see where to find your Property ID . Example: properties/1234/metadata Set the Property ID to 0 for dimensions and metrics common to all properties. In this special mode, this method will not return custom dimensions and metrics. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Metadata"},{"location":"properties_get-metadata/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics.readonly . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties get-metadata ...","title":"Scopes"},{"location":"properties_get-metadata/#required-scalar-argument","text":"<name> (string) Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics GA4 Property identifier. To learn more, see where to find your Property ID . Example: properties/1234/metadata Set the Property ID to 0 for dimensions and metrics common to all properties. In this special mode, this method will not return custom dimensions and metrics.","title":"Required Scalar Argument"},{"location":"properties_get-metadata/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_get-metadata/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_run-pivot-report/","text":"Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-pivot-report ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunPivotReportRequest: cohort-spec: cohort-report-settings: accumulate: boolean cohorts-range: end-offset: integer granularity: string start-offset: integer currency-code: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string keep-empty-rows: boolean metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string property: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cohort-spec.cohort-report-settings accumulate=true If true, accumulates the result from first touch day to the end day. Not supported in RunReportRequest . ..cohorts-range end-offset=77 Required. endOffset specifies the end date of the extended reporting date range for a cohort report. endOffset can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If granularity is DAILY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset days. If granularity is WEEKLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 7 days. If granularity is MONTHLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 30 days. granularity=et Required. The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report. start-offset=25 startOffset specifies the start date of the extended reporting date range for a cohort report. startOffset is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If granularity is DAILY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset days. If granularity is WEEKLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 7 days. If granularity is MONTHLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 30 days. ... currency-code=erat A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency. dimension-filter.filter.between-filter.from-value double-value=0.06730027227364666 Double value int64-value=dolore Integer value ..to-value double-value=0.9694857568940014 Double value int64-value=voluptua. Integer value ... field-name=amet. The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=diam The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=dolor The operation type for this filter. value double-value=0.9625057030686941 Double value int64-value=et Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=stet The match type for this filter. value=dolor The string value used for the matching. .... keep-empty-rows=false If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this keep_empty_rows setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a purchase event, then a query for the eventName dimension and eventCount metric will not have a row eventName: \"purchase\" and eventCount: 0. metric-filter.filter.between-filter.from-value double-value=0.1970220513983837 Double value int64-value=stet Integer value ..to-value double-value=0.19657477328425788 Double value int64-value=lorem Integer value ... field-name=diam The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=ipsum The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=accusam The operation type for this filter. value double-value=0.333591971041029 Double value int64-value=voluptua. Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=erat The match type for this filter. value=consetetur The string value used for the matching. .... property=amet. A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 return-property-quota=true Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in PropertyQuota . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Run Pivot Report"},{"location":"properties_run-pivot-report/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-pivot-report ...","title":"Scopes"},{"location":"properties_run-pivot-report/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_run-pivot-report/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunPivotReportRequest: cohort-spec: cohort-report-settings: accumulate: boolean cohorts-range: end-offset: integer granularity: string start-offset: integer currency-code: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string keep-empty-rows: boolean metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string property: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cohort-spec.cohort-report-settings accumulate=true If true, accumulates the result from first touch day to the end day. Not supported in RunReportRequest . ..cohorts-range end-offset=77 Required. endOffset specifies the end date of the extended reporting date range for a cohort report. endOffset can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If granularity is DAILY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset days. If granularity is WEEKLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 7 days. If granularity is MONTHLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 30 days. granularity=et Required. The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report. start-offset=25 startOffset specifies the start date of the extended reporting date range for a cohort report. startOffset is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If granularity is DAILY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset days. If granularity is WEEKLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 7 days. If granularity is MONTHLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 30 days. ... currency-code=erat A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency. dimension-filter.filter.between-filter.from-value double-value=0.06730027227364666 Double value int64-value=dolore Integer value ..to-value double-value=0.9694857568940014 Double value int64-value=voluptua. Integer value ... field-name=amet. The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=diam The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=dolor The operation type for this filter. value double-value=0.9625057030686941 Double value int64-value=et Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=stet The match type for this filter. value=dolor The string value used for the matching. .... keep-empty-rows=false If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this keep_empty_rows setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a purchase event, then a query for the eventName dimension and eventCount metric will not have a row eventName: \"purchase\" and eventCount: 0. metric-filter.filter.between-filter.from-value double-value=0.1970220513983837 Double value int64-value=stet Integer value ..to-value double-value=0.19657477328425788 Double value int64-value=lorem Integer value ... field-name=diam The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=ipsum The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=accusam The operation type for this filter. value double-value=0.333591971041029 Double value int64-value=voluptua. Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=erat The match type for this filter. value=consetetur The string value used for the matching. .... property=amet. A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 return-property-quota=true Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in PropertyQuota .","title":"Required Request Value"},{"location":"properties_run-pivot-report/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_run-pivot-report/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_run-pivot-report/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_run-realtime-report/","text":"Returns a customized report of realtime event data for your property. Events appear in realtime reports seconds after they have been sent to the Google Analytics. Realtime reports show events and usage data for the periods of time ranging from the present moment to 30 minutes ago (up to 60 minutes for Google Analytics 360 properties). For a guide to constructing realtime requests & understanding responses, see Creating a Realtime Report . Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-realtime-report ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunRealtimeReportRequest: dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string limit: string metric-aggregations: [string] metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .dimension-filter.filter.between-filter.from-value double-value=0.8484298131719972 Double value int64-value=et Integer value ..to-value double-value=0.611403219211556 Double value int64-value=voluptua. Integer value ... field-name=dolore The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=amet. The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=ea The operation type for this filter. value double-value=0.05043422241780038 Double value int64-value=invidunt Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=sit The match type for this filter. value=et The string value used for the matching. .... limit=tempor The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . For instance, there are fewer than 300 possible values for the dimension country , so when reporting on only country , you can't get more than 300 rows, even if you set limit to a higher value. metric-aggregations=aliquyam Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\". Each invocation of this argument appends the given value to the array. metric-filter.filter.between-filter.from-value double-value=0.7521809909805838 Double value int64-value=sanctus Integer value ..to-value double-value=0.9329847794220517 Double value int64-value=est Integer value ... field-name=sed The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=et The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=sed The operation type for this filter. value double-value=0.7087562540955133 Double value int64-value=elitr Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=no The match type for this filter. value=nonumy The string value used for the matching. .... return-property-quota=false Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in PropertyQuota . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Run Realtime Report"},{"location":"properties_run-realtime-report/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-realtime-report ...","title":"Scopes"},{"location":"properties_run-realtime-report/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_run-realtime-report/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunRealtimeReportRequest: dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string limit: string metric-aggregations: [string] metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .dimension-filter.filter.between-filter.from-value double-value=0.8484298131719972 Double value int64-value=et Integer value ..to-value double-value=0.611403219211556 Double value int64-value=voluptua. Integer value ... field-name=dolore The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=amet. The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=ea The operation type for this filter. value double-value=0.05043422241780038 Double value int64-value=invidunt Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=sit The match type for this filter. value=et The string value used for the matching. .... limit=tempor The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . For instance, there are fewer than 300 possible values for the dimension country , so when reporting on only country , you can't get more than 300 rows, even if you set limit to a higher value. metric-aggregations=aliquyam Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\". Each invocation of this argument appends the given value to the array. metric-filter.filter.between-filter.from-value double-value=0.7521809909805838 Double value int64-value=sanctus Integer value ..to-value double-value=0.9329847794220517 Double value int64-value=est Integer value ... field-name=sed The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=et The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=sed The operation type for this filter. value double-value=0.7087562540955133 Double value int64-value=elitr Integer value ...string-filter case-sensitive=false If true, the string value is case sensitive. match-type=no The match type for this filter. value=nonumy The string value used for the matching. .... return-property-quota=false Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in PropertyQuota .","title":"Required Request Value"},{"location":"properties_run-realtime-report/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_run-realtime-report/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_run-realtime-report/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"properties_run-report/","text":"Returns a customized report of your Google Analytics event data. Reports contain statistics derived from data collected by the Google Analytics tracking code. The data returned from the API is as a table with columns for the requested dimensions and metrics. Metrics are individual measurements of user activity on your property, such as active users or event count. Dimensions break down metrics across some common criteria, such as country or event name. For a guide to constructing requests & understanding responses, see Creating a Report . Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-report ... Required Scalar Argument <property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunReportRequest: cohort-spec: cohort-report-settings: accumulate: boolean cohorts-range: end-offset: integer granularity: string start-offset: integer currency-code: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string keep-empty-rows: boolean limit: string metric-aggregations: [string] metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string offset: string property: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cohort-spec.cohort-report-settings accumulate=true If true, accumulates the result from first touch day to the end day. Not supported in RunReportRequest . ..cohorts-range end-offset=69 Required. endOffset specifies the end date of the extended reporting date range for a cohort report. endOffset can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If granularity is DAILY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset days. If granularity is WEEKLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 7 days. If granularity is MONTHLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 30 days. granularity=dolores Required. The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report. start-offset=6 startOffset specifies the start date of the extended reporting date range for a cohort report. startOffset is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If granularity is DAILY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset days. If granularity is WEEKLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 7 days. If granularity is MONTHLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 30 days. ... currency-code=erat A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency. dimension-filter.filter.between-filter.from-value double-value=0.14995920976292842 Double value int64-value=est Integer value ..to-value double-value=0.6063928061497748 Double value int64-value=consetetur Integer value ... field-name=consetetur The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=est The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=aliquyam The operation type for this filter. value double-value=0.05595565314531503 Double value int64-value=diam Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=sit The match type for this filter. value=sed The string value used for the matching. .... keep-empty-rows=false If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this keep_empty_rows setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a purchase event, then a query for the eventName dimension and eventCount metric will not have a row eventName: \"purchase\" and eventCount: 0. limit=lorem The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . For instance, there are fewer than 300 possible values for the dimension country , so when reporting on only country , you can't get more than 300 rows, even if you set limit to a higher value. To learn more about this pagination parameter, see Pagination . metric-aggregations=ea Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\". Each invocation of this argument appends the given value to the array. metric-filter.filter.between-filter.from-value double-value=0.6768631685059072 Double value int64-value=eos Integer value ..to-value double-value=0.26366414664221993 Double value int64-value=et Integer value ... field-name=at The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=eirmod The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=lorem The operation type for this filter. value double-value=0.6131721394478933 Double value int64-value=erat Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=erat The match type for this filter. value=accusam The string value used for the matching. .... offset=sea The row count of the start row. The first row is counted as row 0. When paging, the first request does not specify offset; or equivalently, sets offset to 0; the first request returns the first limit of rows. The second request sets offset to the limit of the first request; the second request returns the second limit of rows. To learn more about this pagination parameter, see Pagination . property=takimata A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 return-property-quota=true Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in PropertyQuota . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Run Report"},{"location":"properties_run-report/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/analytics https://www.googleapis.com/auth/analytics.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/analytics . You can set the scope for this method like this: analyticsdata1-beta --scope <scope> properties run-report ...","title":"Scopes"},{"location":"properties_run-report/#required-scalar-argument","text":"<property> (string) A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234","title":"Required Scalar Argument"},{"location":"properties_run-report/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunReportRequest: cohort-spec: cohort-report-settings: accumulate: boolean cohorts-range: end-offset: integer granularity: string start-offset: integer currency-code: string dimension-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string keep-empty-rows: boolean limit: string metric-aggregations: [string] metric-filter: filter: between-filter: from-value: double-value: number int64-value: string to-value: double-value: number int64-value: string field-name: string in-list-filter: case-sensitive: boolean values: [string] numeric-filter: operation: string value: double-value: number int64-value: string string-filter: case-sensitive: boolean match-type: string value: string offset: string property: string return-property-quota: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cohort-spec.cohort-report-settings accumulate=true If true, accumulates the result from first touch day to the end day. Not supported in RunReportRequest . ..cohorts-range end-offset=69 Required. endOffset specifies the end date of the extended reporting date range for a cohort report. endOffset can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If granularity is DAILY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset days. If granularity is WEEKLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 7 days. If granularity is MONTHLY , the endDate of the extended reporting date range is endDate of the cohort plus endOffset * 30 days. granularity=dolores Required. The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report. start-offset=6 startOffset specifies the start date of the extended reporting date range for a cohort report. startOffset is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If granularity is DAILY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset days. If granularity is WEEKLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 7 days. If granularity is MONTHLY , the startDate of the extended reporting date range is startDate of the cohort plus startOffset * 30 days. ... currency-code=erat A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency. dimension-filter.filter.between-filter.from-value double-value=0.14995920976292842 Double value int64-value=est Integer value ..to-value double-value=0.6063928061497748 Double value int64-value=consetetur Integer value ... field-name=consetetur The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=true If true, the string value is case sensitive. values=est The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=aliquyam The operation type for this filter. value double-value=0.05595565314531503 Double value int64-value=diam Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=sit The match type for this filter. value=sed The string value used for the matching. .... keep-empty-rows=false If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this keep_empty_rows setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a purchase event, then a query for the eventName dimension and eventCount metric will not have a row eventName: \"purchase\" and eventCount: 0. limit=lorem The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. limit must be positive. The API can also return fewer rows than the requested limit , if there aren't as many dimension values as the limit . For instance, there are fewer than 300 possible values for the dimension country , so when reporting on only country , you can't get more than 300 rows, even if you set limit to a higher value. To learn more about this pagination parameter, see Pagination . metric-aggregations=ea Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\". Each invocation of this argument appends the given value to the array. metric-filter.filter.between-filter.from-value double-value=0.6768631685059072 Double value int64-value=eos Integer value ..to-value double-value=0.26366414664221993 Double value int64-value=et Integer value ... field-name=at The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics. in-list-filter case-sensitive=false If true, the string value is case sensitive. values=eirmod The list of string values. Must be non-empty. Each invocation of this argument appends the given value to the array. ..numeric-filter operation=lorem The operation type for this filter. value double-value=0.6131721394478933 Double value int64-value=erat Integer value ...string-filter case-sensitive=true If true, the string value is case sensitive. match-type=erat The match type for this filter. value=accusam The string value used for the matching. .... offset=sea The row count of the start row. The first row is counted as row 0. When paging, the first request does not specify offset; or equivalently, sets offset to 0; the first request returns the first limit of rows. The second request sets offset to the limit of the first request; the second request returns the second limit of rows. To learn more about this pagination parameter, see Pagination . property=takimata A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see where to find your Property ID . Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234 return-property-quota=true Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in PropertyQuota .","title":"Required Request Value"},{"location":"properties_run-report/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"properties_run-report/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"properties_run-report/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}