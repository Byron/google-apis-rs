{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The mirror1 command-line interface (CLI) allows to use most features of the Google mirror service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the mirror API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-mirror1-cli Find the source code on github . Usage This documentation was generated from the mirror API at revision 20190424 . The CLI is at version 5.0.4 . mirror1 [options] accounts insert <user-token> <account-type> <account-name> (-r <kv>)... [-p <v>]... [-o <out>] contacts delete <id> [-p <v>]... get <id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] locations get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] settings get <id> [-p <v>]... [-o <out>] subscriptions delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] timeline attachments-delete <item-id> <attachment-id> [-p <v>]... attachments-get <item-id> <attachment-id> [-p <v>]... [-o <out>] attachments-insert <item-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] attachments-list <item-id> [-p <v>]... [-o <out>] delete <id> [-p <v>]... get <id> [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] mirror1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with mirror1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/mirror1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/mirror1-secret.json , assuming that the required mirror API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. mirror1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-mirror1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the mirror API at revision 20190424 . The CLI is at version 5.0.4 . mirror1 [options] accounts insert <user-token> <account-type> <account-name> (-r <kv>)... [-p <v>]... [-o <out>] contacts delete <id> [-p <v>]... get <id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] locations get <id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] settings get <id> [-p <v>]... [-o <out>] subscriptions delete <id> [-p <v>]... insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update <id> (-r <kv>)... [-p <v>]... [-o <out>] timeline attachments-delete <item-id> <attachment-id> [-p <v>]... attachments-get <item-id> <attachment-id> [-p <v>]... [-o <out>] attachments-insert <item-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] attachments-list <item-id> [-p <v>]... [-o <out>] delete <id> [-p <v>]... get <id> [-p <v>]... [-o <out>] insert (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <id> (-r <kv>)... [-p <v>]... [-o <out>] update <id> (-r <kv>)... (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] mirror1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with mirror1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/mirror1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/mirror1-secret.json , assuming that the required mirror API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. mirror1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_insert/","text":"Inserts a new account for a user Required Scalar Arguments <user-token> (string) The ID for the user. <account-type> (string) Account type to be passed to Android Account Manager. <account-name> (string) The name of the account to be passed to the Android Account Manager. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: features: [string] password: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . features=et No description provided. Each invocation of this argument appends the given value to the array. password=magna No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"accounts_insert/#required-scalar-arguments","text":"<user-token> (string) The ID for the user. <account-type> (string) Account type to be passed to Android Account Manager. <account-name> (string) The name of the account to be passed to the Android Account Manager.","title":"Required Scalar Arguments"},{"location":"accounts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: features: [string] password: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . features=et No description provided. Each invocation of this argument appends the given value to the array. password=magna No description provided.","title":"Required Request Value"},{"location":"accounts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_delete/","text":"Deletes a contact. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts delete ... Required Scalar Argument <id> (string) The ID of the contact. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"contacts_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts delete ...","title":"Scopes"},{"location":"contacts_delete/#required-scalar-argument","text":"<id> (string) The ID of the contact.","title":"Required Scalar Argument"},{"location":"contacts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_get/","text":"Gets a single contact by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts get ... Required Scalar Argument <id> (string) The ID of the contact. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"contacts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts get ...","title":"Scopes"},{"location":"contacts_get/#required-scalar-argument","text":"<id> (string) The ID of the contact.","title":"Required Scalar Argument"},{"location":"contacts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"contacts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_insert/","text":"Inserts a new contact. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=no A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=ipsum The name to display for this contact. id=voluptua. An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=at Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=sanctus The type of resource. This is always mirror#contact. phone-number=sed Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=99 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=takimata A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=amet. The ID of the application that created this contact. This is populated by the API speakable-name=duo Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"contacts_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts insert ...","title":"Scopes"},{"location":"contacts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=no A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=ipsum The name to display for this contact. id=voluptua. An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=at Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=sanctus The type of resource. This is always mirror#contact. phone-number=sed Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=99 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=takimata A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=amet. The ID of the application that created this contact. This is populated by the API speakable-name=duo Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person.","title":"Required Request Value"},{"location":"contacts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"contacts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"contacts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_list/","text":"Retrieves a list of contacts for the authenticated user. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"contacts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts list ...","title":"Scopes"},{"location":"contacts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"contacts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_patch/","text":"Updates a contact in place. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts patch ... Required Scalar Argument <id> (string) The ID of the contact. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=gubergren A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=lorem The name to display for this contact. id=gubergren An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=eos Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=dolor The type of resource. This is always mirror#contact. phone-number=ea Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=46 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=invidunt A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=amet The ID of the application that created this contact. This is populated by the API speakable-name=duo Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"contacts_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts patch ...","title":"Scopes"},{"location":"contacts_patch/#required-scalar-argument","text":"<id> (string) The ID of the contact.","title":"Required Scalar Argument"},{"location":"contacts_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=gubergren A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=lorem The name to display for this contact. id=gubergren An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=eos Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=dolor The type of resource. This is always mirror#contact. phone-number=ea Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=46 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=invidunt A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=amet The ID of the application that created this contact. This is populated by the API speakable-name=duo Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person.","title":"Required Request Value"},{"location":"contacts_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"contacts_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"contacts_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"contacts_update/","text":"Updates a contact in place. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts update ... Required Scalar Argument <id> (string) The ID of the contact. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=sed A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=ut The name to display for this contact. id=gubergren An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=rebum. Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=est The type of resource. This is always mirror#contact. phone-number=ipsum Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=51 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=est A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=gubergren The ID of the application that created this contact. This is populated by the API speakable-name=ea Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=dolor The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"contacts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> contacts update ...","title":"Scopes"},{"location":"contacts_update/#required-scalar-argument","text":"<id> (string) The ID of the contact.","title":"Required Scalar Argument"},{"location":"contacts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Contact: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . accept-types=sed A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=ut The name to display for this contact. id=gubergren An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=rebum. Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=est The type of resource. This is always mirror#contact. phone-number=ipsum Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=51 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=est A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=gubergren The ID of the application that created this contact. This is populated by the API speakable-name=ea Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=dolor The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person.","title":"Required Request Value"},{"location":"contacts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"contacts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"contacts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"locations_get/","text":"Gets a single location by ID. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> locations get ... Required Scalar Argument <id> (string) The ID of the location or latest for the last known location. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"locations_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> locations get ...","title":"Scopes"},{"location":"locations_get/#required-scalar-argument","text":"<id> (string) The ID of the location or latest for the last known location.","title":"Required Scalar Argument"},{"location":"locations_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"locations_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"locations_list/","text":"Retrieves a list of locations for the user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> locations list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"locations_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> locations list ...","title":"Scopes"},{"location":"locations_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"locations_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"settings_get/","text":"Gets a single setting by ID. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> settings get ... Required Scalar Argument <id> (string) The ID of the setting. The following IDs are valid: locale - The key to the user\u2019s language/locale (BCP 47 identifier) that Glassware should use to render localized content. timezone - The key to the user\u2019s current time zone region as defined in the tz database. Example: America/Los_Angeles. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"settings_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> settings get ...","title":"Scopes"},{"location":"settings_get/#required-scalar-argument","text":"<id> (string) The ID of the setting. The following IDs are valid: locale - The key to the user\u2019s language/locale (BCP 47 identifier) that Glassware should use to render localized content. timezone - The key to the user\u2019s current time zone region as defined in the tz database. Example: America/Los_Angeles.","title":"Required Scalar Argument"},{"location":"settings_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"settings_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"subscriptions_delete/","text":"Deletes a subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions delete ... Required Scalar Argument <id> (string) The ID of the subscription. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"subscriptions_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions delete ...","title":"Scopes"},{"location":"subscriptions_delete/#required-scalar-argument","text":"<id> (string) The ID of the subscription.","title":"Required Scalar Argument"},{"location":"subscriptions_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"subscriptions_insert/","text":"Creates a new subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: callback-url: string collection: string id: string kind: string notification: collection: string item-id: string operation: string user-token: string verify-token: string operation: [string] updated: string user-token: string verify-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . callback-url=lorem The URL where notifications should be delivered (must start with https://). collection=eos The collection to subscribe to. Allowed values are: timeline - Changes in the timeline including insertion, deletion, and updates. locations - Location updates. settings - Settings updates. id=labore The ID of the subscription. kind=sed The type of resource. This is always mirror#subscription. notification collection=duo The collection that generated the notification. item-id=sed The ID of the item that generated the notification. operation=no The type of operation that generated the notification. user-token=stet The user token provided by the service when it subscribed for notifications. verify-token=kasd The secret verify token provided by the service when it subscribed for notifications. .. operation=et A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are: UPDATE - The item has been updated. INSERT - A new item has been inserted. DELETE - The item has been deleted. MENU_ACTION - A custom menu item has been triggered by the user. Each invocation of this argument appends the given value to the array. updated=sed The time at which this subscription was last modified, formatted according to RFC 3339. user-token=et An opaque token sent to the subscriber in notifications so that it can determine the ID of the user. verify-token=et A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"subscriptions_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions insert ...","title":"Scopes"},{"location":"subscriptions_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: callback-url: string collection: string id: string kind: string notification: collection: string item-id: string operation: string user-token: string verify-token: string operation: [string] updated: string user-token: string verify-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . callback-url=lorem The URL where notifications should be delivered (must start with https://). collection=eos The collection to subscribe to. Allowed values are: timeline - Changes in the timeline including insertion, deletion, and updates. locations - Location updates. settings - Settings updates. id=labore The ID of the subscription. kind=sed The type of resource. This is always mirror#subscription. notification collection=duo The collection that generated the notification. item-id=sed The ID of the item that generated the notification. operation=no The type of operation that generated the notification. user-token=stet The user token provided by the service when it subscribed for notifications. verify-token=kasd The secret verify token provided by the service when it subscribed for notifications. .. operation=et A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are: UPDATE - The item has been updated. INSERT - A new item has been inserted. DELETE - The item has been deleted. MENU_ACTION - A custom menu item has been triggered by the user. Each invocation of this argument appends the given value to the array. updated=sed The time at which this subscription was last modified, formatted according to RFC 3339. user-token=et An opaque token sent to the subscriber in notifications so that it can determine the ID of the user. verify-token=et A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.","title":"Required Request Value"},{"location":"subscriptions_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"subscriptions_list/","text":"Retrieves a list of subscriptions for the authenticated user and service. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"subscriptions_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions list ...","title":"Scopes"},{"location":"subscriptions_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"subscriptions_update/","text":"Updates an existing subscription in place. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions update ... Required Scalar Argument <id> (string) The ID of the subscription. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: callback-url: string collection: string id: string kind: string notification: collection: string item-id: string operation: string user-token: string verify-token: string operation: [string] updated: string user-token: string verify-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . callback-url=vero The URL where notifications should be delivered (must start with https://). collection=erat The collection to subscribe to. Allowed values are: timeline - Changes in the timeline including insertion, deletion, and updates. locations - Location updates. settings - Settings updates. id=sed The ID of the subscription. kind=duo The type of resource. This is always mirror#subscription. notification collection=dolore The collection that generated the notification. item-id=et The ID of the item that generated the notification. operation=voluptua. The type of operation that generated the notification. user-token=amet. The user token provided by the service when it subscribed for notifications. verify-token=consetetur The secret verify token provided by the service when it subscribed for notifications. .. operation=diam A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are: UPDATE - The item has been updated. INSERT - A new item has been inserted. DELETE - The item has been deleted. MENU_ACTION - A custom menu item has been triggered by the user. Each invocation of this argument appends the given value to the array. updated=dolor The time at which this subscription was last modified, formatted according to RFC 3339. user-token=et An opaque token sent to the subscriber in notifications so that it can determine the ID of the user. verify-token=et A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"subscriptions_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> subscriptions update ...","title":"Scopes"},{"location":"subscriptions_update/#required-scalar-argument","text":"<id> (string) The ID of the subscription.","title":"Required Scalar Argument"},{"location":"subscriptions_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: callback-url: string collection: string id: string kind: string notification: collection: string item-id: string operation: string user-token: string verify-token: string operation: [string] updated: string user-token: string verify-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . callback-url=vero The URL where notifications should be delivered (must start with https://). collection=erat The collection to subscribe to. Allowed values are: timeline - Changes in the timeline including insertion, deletion, and updates. locations - Location updates. settings - Settings updates. id=sed The ID of the subscription. kind=duo The type of resource. This is always mirror#subscription. notification collection=dolore The collection that generated the notification. item-id=et The ID of the item that generated the notification. operation=voluptua. The type of operation that generated the notification. user-token=amet. The user token provided by the service when it subscribed for notifications. verify-token=consetetur The secret verify token provided by the service when it subscribed for notifications. .. operation=diam A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are: UPDATE - The item has been updated. INSERT - A new item has been inserted. DELETE - The item has been deleted. MENU_ACTION - A custom menu item has been triggered by the user. Each invocation of this argument appends the given value to the array. updated=dolor The time at which this subscription was last modified, formatted according to RFC 3339. user-token=et An opaque token sent to the subscriber in notifications so that it can determine the ID of the user. verify-token=et A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.","title":"Required Request Value"},{"location":"subscriptions_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_attachments-delete/","text":"Deletes an attachment from a timeline item. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-delete ... Required Scalar Arguments <item-id> (string) The ID of the timeline item the attachment belongs to. <attachment-id> (string) The ID of the attachment. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Attachments Delete"},{"location":"timeline_attachments-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-delete ...","title":"Scopes"},{"location":"timeline_attachments-delete/#required-scalar-arguments","text":"<item-id> (string) The ID of the timeline item the attachment belongs to. <attachment-id> (string) The ID of the attachment.","title":"Required Scalar Arguments"},{"location":"timeline_attachments-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_attachments-get/","text":"Retrieves an attachment on a timeline item by item ID and attachment ID. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-get ... Required Scalar Arguments <item-id> (string) The ID of the timeline item the attachment belongs to. <attachment-id> (string) The ID of the attachment. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Attachments Get"},{"location":"timeline_attachments-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-get ...","title":"Scopes"},{"location":"timeline_attachments-get/#required-scalar-arguments","text":"<item-id> (string) The ID of the timeline item the attachment belongs to. <attachment-id> (string) The ID of the attachment.","title":"Required Scalar Arguments"},{"location":"timeline_attachments-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_attachments-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_attachments-insert/","text":"Adds a new attachment to a timeline item. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-insert ... Required Scalar Argument <item-id> (string) The ID of the timeline item the attachment belongs to. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Attachments Insert"},{"location":"timeline_attachments-insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-insert ...","title":"Scopes"},{"location":"timeline_attachments-insert/#required-scalar-argument","text":"<item-id> (string) The ID of the timeline item the attachment belongs to.","title":"Required Scalar Argument"},{"location":"timeline_attachments-insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"timeline_attachments-insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_attachments-insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_attachments-list/","text":"Returns a list of attachments for a timeline item. Scopes You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-list ... Required Scalar Argument <item-id> (string) The ID of the timeline item whose attachments should be listed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Attachments List"},{"location":"timeline_attachments-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/glass.timeline scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.timeline . You can set the scope for this method like this: mirror1 --scope <scope> timeline attachments-list ...","title":"Scopes"},{"location":"timeline_attachments-list/#required-scalar-argument","text":"<item-id> (string) The ID of the timeline item whose attachments should be listed.","title":"Required Scalar Argument"},{"location":"timeline_attachments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_attachments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_delete/","text":"Deletes a timeline item. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline delete ... Required Scalar Argument <id> (string) The ID of the timeline item. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"timeline_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline delete ...","title":"Scopes"},{"location":"timeline_delete/#required-scalar-argument","text":"<id> (string) The ID of the timeline item.","title":"Required Scalar Argument"},{"location":"timeline_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_get/","text":"Gets a single timeline item by ID. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline get ... Required Scalar Argument <id> (string) The ID of the timeline item. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"timeline_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline get ...","title":"Scopes"},{"location":"timeline_get/#required-scalar-argument","text":"<id> (string) The ID of the timeline item.","title":"Required Scalar Argument"},{"location":"timeline_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_insert/","text":"Inserts a new item into the timeline. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sadipscing The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=stet A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=dolor The time at which this item was created, formatted according to RFC 3339. creator accept-types=duo A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=vero The name to display for this contact. id=vero An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=invidunt Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=stet The type of resource. This is always mirror#contact. phone-number=vero Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=57 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=lorem A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=diam The ID of the application that created this contact. This is populated by the API speakable-name=no Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=accusam The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=takimata ETag for this item. html=consetetur HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=voluptua. The ID of the timeline item. This is unique within a user's timeline. in-reply-to=et If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=false Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=true - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=false - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=accusam - The type of resource. This is always mirror#timelineItem. * location accuracy=0.974461005485015 - The accuracy of the location fix in meters. * address=dolore - The full address of the location. * display-name=dolore - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=dolore - The ID of the location. * kind=voluptua. - The type of resource. This is always mirror#location. * latitude=0.7753213022845796 - The latitude, in degrees. * longitude=0.05043422241780038 - The longitude, in degrees. * timestamp=invidunt - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=no The time at which the notification should be delivered. level=est Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=74 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=sed A URL that can be used to retrieve this item. source-item-id=sit Opaque string you can use to map a timeline item to data in your own service. speakable-text=et The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=tempor - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=aliquyam - Text content of this item. * title=ipsum - The title of this item. * updated=et - The time at which this item was last modified, formatted according to RFC 3339. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"timeline_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline insert ...","title":"Scopes"},{"location":"timeline_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sadipscing The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=stet A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=dolor The time at which this item was created, formatted according to RFC 3339. creator accept-types=duo A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=vero The name to display for this contact. id=vero An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=invidunt Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=stet The type of resource. This is always mirror#contact. phone-number=vero Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=57 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=lorem A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=diam The ID of the application that created this contact. This is populated by the API speakable-name=no Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=ipsum The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=accusam The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=takimata ETag for this item. html=consetetur HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=voluptua. The ID of the timeline item. This is unique within a user's timeline. in-reply-to=et If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=false Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=true - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=false - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=accusam - The type of resource. This is always mirror#timelineItem. * location accuracy=0.974461005485015 - The accuracy of the location fix in meters. * address=dolore - The full address of the location. * display-name=dolore - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=dolore - The ID of the location. * kind=voluptua. - The type of resource. This is always mirror#location. * latitude=0.7753213022845796 - The latitude, in degrees. * longitude=0.05043422241780038 - The longitude, in degrees. * timestamp=invidunt - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=no The time at which the notification should be delivered. level=est Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=74 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=sed A URL that can be used to retrieve this item. source-item-id=sit Opaque string you can use to map a timeline item to data in your own service. speakable-text=et The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=tempor - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=aliquyam - Text content of this item. * title=ipsum - The title of this item. * updated=et - The time at which this item was last modified, formatted according to RFC 3339.","title":"Required Request Value"},{"location":"timeline_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"timeline_insert/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"timeline_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_list/","text":"Retrieves a list of timeline items for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p bundle-id=string If provided, only items with the given bundleId will be returned. -p include-deleted=boolean If true, tombstone records for deleted items will be returned. -p max-results=integer The maximum number of items to include in the response, used for paging. -p order-by=string Controls the order in which timeline items are returned. -p page-token=string Token for the page of results to return. -p pinned-only=boolean If true, only pinned items will be returned. -p source-item-id=string If provided, only items with the given sourceItemId will be returned. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"timeline_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline list ...","title":"Scopes"},{"location":"timeline_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p bundle-id=string If provided, only items with the given bundleId will be returned. -p include-deleted=boolean If true, tombstone records for deleted items will be returned. -p max-results=integer The maximum number of items to include in the response, used for paging. -p order-by=string Controls the order in which timeline items are returned. -p page-token=string Token for the page of results to return. -p pinned-only=boolean If true, only pinned items will be returned. -p source-item-id=string If provided, only items with the given sourceItemId will be returned.","title":"Optional Method Properties"},{"location":"timeline_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_patch/","text":"Updates a timeline item in place. This method supports patch semantics. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline patch ... Required Scalar Argument <id> (string) The ID of the timeline item. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sanctus The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=lorem A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=est The time at which this item was created, formatted according to RFC 3339. creator accept-types=sed A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=diam The name to display for this contact. id=dolores An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=dolores Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=et The type of resource. This is always mirror#contact. phone-number=sed Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=90 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=et A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=elitr The ID of the application that created this contact. This is populated by the API speakable-name=sed Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=no The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=nonumy The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=at ETag for this item. html=sadipscing HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=aliquyam The ID of the timeline item. This is unique within a user's timeline. in-reply-to=dolores If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=false Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=false - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=true - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=est - The type of resource. This is always mirror#timelineItem. * location accuracy=0.6063928061497748 - The accuracy of the location fix in meters. * address=consetetur - The full address of the location. * display-name=consetetur - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=stet - The ID of the location. * kind=est - The type of resource. This is always mirror#location. * latitude=0.9713160109189481 - The latitude, in degrees. * longitude=0.05595565314531503 - The longitude, in degrees. * timestamp=diam - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=est The time at which the notification should be delivered. level=sit Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=8 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=eos A URL that can be used to retrieve this item. source-item-id=lorem Opaque string you can use to map a timeline item to data in your own service. speakable-text=ea The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=stet - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=dolores - Text content of this item. * title=eos - The title of this item. * updated=et - The time at which this item was last modified, formatted according to RFC 3339. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"timeline_patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline patch ...","title":"Scopes"},{"location":"timeline_patch/#required-scalar-argument","text":"<id> (string) The ID of the timeline item.","title":"Required Scalar Argument"},{"location":"timeline_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sanctus The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=lorem A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=est The time at which this item was created, formatted according to RFC 3339. creator accept-types=sed A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=diam The name to display for this contact. id=dolores An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=dolores Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=et The type of resource. This is always mirror#contact. phone-number=sed Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=90 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=et A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=elitr The ID of the application that created this contact. This is populated by the API speakable-name=sed Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=no The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=nonumy The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=at ETag for this item. html=sadipscing HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=aliquyam The ID of the timeline item. This is unique within a user's timeline. in-reply-to=dolores If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=false Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=false - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=true - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=est - The type of resource. This is always mirror#timelineItem. * location accuracy=0.6063928061497748 - The accuracy of the location fix in meters. * address=consetetur - The full address of the location. * display-name=consetetur - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=stet - The ID of the location. * kind=est - The type of resource. This is always mirror#location. * latitude=0.9713160109189481 - The latitude, in degrees. * longitude=0.05595565314531503 - The longitude, in degrees. * timestamp=diam - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=est The time at which the notification should be delivered. level=sit Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=8 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=eos A URL that can be used to retrieve this item. source-item-id=lorem Opaque string you can use to map a timeline item to data in your own service. speakable-text=ea The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=stet - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=dolores - Text content of this item. * title=eos - The title of this item. * updated=et - The time at which this item was last modified, formatted according to RFC 3339.","title":"Required Request Value"},{"location":"timeline_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"timeline_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"timeline_update/","text":"Updates a timeline item in place. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline update ... Required Scalar Argument <id> (string) The ID of the timeline item. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sea The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=et A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=at The time at which this item was created, formatted according to RFC 3339. creator accept-types=dolore A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=eirmod The name to display for this contact. id=lorem An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=accusam Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=amet The type of resource. This is always mirror#contact. phone-number=erat Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=32 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=erat A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=accusam The ID of the application that created this contact. This is populated by the API speakable-name=sea Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=takimata The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=lorem The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=et ETag for this item. html=at HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=dolor The ID of the timeline item. This is unique within a user's timeline. in-reply-to=et If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=true Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=false - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=true - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=et - The type of resource. This is always mirror#timelineItem. * location accuracy=0.6976549448756626 - The accuracy of the location fix in meters. * address=sea - The full address of the location. * display-name=consetetur - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=sit - The ID of the location. * kind=aliquyam - The type of resource. This is always mirror#location. * latitude=0.5999462320813541 - The latitude, in degrees. * longitude=0.6413061576894121 - The longitude, in degrees. * timestamp=gubergren - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=dolor The time at which the notification should be delivered. level=aliquyam Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=40 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=amet. A URL that can be used to retrieve this item. source-item-id=ipsum Opaque string you can use to map a timeline item to data in your own service. speakable-text=lorem The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=accusam - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=gubergren - Text content of this item. * title=sadipscing - The title of this item. * updated=at - The time at which this item was last modified, formatted according to RFC 3339. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"timeline_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/glass.location https://www.googleapis.com/auth/glass.timeline If unset, the scope for this method defaults to https://www.googleapis.com/auth/glass.location . You can set the scope for this method like this: mirror1 --scope <scope> timeline update ...","title":"Scopes"},{"location":"timeline_update/#required-scalar-argument","text":"<id> (string) The ID of the timeline item.","title":"Required Scalar Argument"},{"location":"timeline_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TimelineItem: bundle-id: string canonical-url: string created: string creator: accept-types: [string] display-name: string id: string image-urls: [string] kind: string phone-number: string priority: integer sharing-features: [string] source: string speakable-name: string type: string display-time: string etag: string html: string id: string in-reply-to: string is-bundle-cover: boolean is-deleted: boolean is-pinned: boolean kind: string location: accuracy: number address: string display-name: string id: string kind: string latitude: number longitude: number timestamp: string notification: delivery-time: string level: string pin-score: integer self-link: string source-item-id: string speakable-text: string speakable-type: string text: string title: string updated: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bundle-id=sea The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device. canonical-url=et A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item. created=at The time at which this item was created, formatted according to RFC 3339. creator accept-types=dolore A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items. Each invocation of this argument appends the given value to the array. display-name=eirmod The name to display for this contact. id=lorem An ID for this contact. This is generated by the application and is treated as an opaque token. image-urls=accusam Set of image URLs to display for a contact. Most contacts will have a single image, but a \"group\" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client. Each invocation of this argument appends the given value to the array. kind=amet The type of resource. This is always mirror#contact. phone-number=erat Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. priority=32 Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. sharing-features=erat A list of sharing features that a contact can handle. Allowed values are: ADD_CAPTION Each invocation of this argument appends the given value to the array. source=accusam The ID of the application that created this contact. This is populated by the API speakable-name=sea Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic. type=takimata The type for this contact. This is used for sorting in UIs. Allowed values are: INDIVIDUAL - Represents a single person. This is the default. GROUP - Represents more than a single person. .. display-time=lorem The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user's timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time. etag=et ETag for this item. html=at HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline. Allowed HTML elements - You can use these elements in your timeline cards. Headers: h1, h2, h3, h4, h5, h6 Images: img Lists: li, ol, ul HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time Structural: blockquote, br, div, hr, p, span Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup Tables: table, tbody, td, tfoot, th, thead, tr Blocked HTML elements: These elements and their contents are removed from HTML payloads. Document headers: head, title Embeds: audio, embed, object, source, video Frames: frame, frameset Scripting: applet, script Other elements: Any elements that aren't listed are removed, but their contents are preserved. id=dolor The ID of the timeline item. This is unique within a user's timeline. in-reply-to=et If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post. is-bundle-cover=true Whether this item is a bundle cover. If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline \u2014 not within the opened bundle. On the main timeline, items that are shown are: - Items that have isBundleCover set to true - Items that do not have a bundleId In a bundle sub-timeline, items that are shown are: - Items that have the bundleId in question AND isBundleCover set to false * is-deleted=false - When true, indicates this item is deleted, and only the ID property is set. * is-pinned=true - When true, indicates this item is pinned, which means it's grouped alongside \"active\" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item. * kind=et - The type of resource. This is always mirror#timelineItem. * location accuracy=0.6976549448756626 - The accuracy of the location fix in meters. * address=sea - The full address of the location. * display-name=consetetur - The name to be displayed. This may be a business name or a user-defined place, such as \"Home\". * id=sit - The ID of the location. * kind=aliquyam - The type of resource. This is always mirror#location. * latitude=0.5999462320813541 - The latitude, in degrees. * longitude=0.6413061576894121 - The longitude, in degrees. * timestamp=gubergren - The time at which this location was captured, formatted according to RFC 3339. ..notification delivery-time=dolor The time at which the notification should be delivered. level=aliquyam Describes how important the notification is. Allowed values are: DEFAULT - Notifications of default importance. A chime will be played to alert users. .. pin-score=40 For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported. self-link=amet. A URL that can be used to retrieve this item. source-item-id=ipsum Opaque string you can use to map a timeline item to data in your own service. speakable-text=lorem The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass. Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. * speakable-type=accusam - A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification. This should be a short, simple noun phrase such as \"Email\", \"Text message\", or \"Daily Planet News Update\". Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen. * text=gubergren - Text content of this item. * title=sadipscing - The title of this item. * updated=at - The time at which this item was last modified, formatted according to RFC 3339.","title":"Required Request Value"},{"location":"timeline_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"timeline_update/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"timeline_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"timeline_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}