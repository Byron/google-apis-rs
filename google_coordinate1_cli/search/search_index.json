{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The coordinate1 command-line interface (CLI) allows to use most features of the Google coordinate service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the coordinate API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-coordinate1-cli Find the source code on github . Usage This documentation was generated from the coordinate API at revision 20150811 . The CLI is at version 5.0.4 . coordinate1 [options] custom-field-def list <team-id> [-p <v>]... [-o <out>] jobs get <team-id> <job-id> [-p <v>]... [-o <out>] insert <team-id> <address> <lat> <lng> <title> (-r <kv>)... [-p <v>]... [-o <out>] list <team-id> [-p <v>]... [-o <out>] patch <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] update <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] location list <team-id> <worker-email> <start-timestamp-ms> [-p <v>]... [-o <out>] schedule get <team-id> <job-id> [-p <v>]... [-o <out>] patch <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] update <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] team list [-p <v>]... [-o <out>] worker list <team-id> [-p <v>]... [-o <out>] coordinate1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with coordinate1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/coordinate1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/coordinate1-secret.json , assuming that the required coordinate API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. coordinate1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-coordinate1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the coordinate API at revision 20150811 . The CLI is at version 5.0.4 . coordinate1 [options] custom-field-def list <team-id> [-p <v>]... [-o <out>] jobs get <team-id> <job-id> [-p <v>]... [-o <out>] insert <team-id> <address> <lat> <lng> <title> (-r <kv>)... [-p <v>]... [-o <out>] list <team-id> [-p <v>]... [-o <out>] patch <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] update <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] location list <team-id> <worker-email> <start-timestamp-ms> [-p <v>]... [-o <out>] schedule get <team-id> <job-id> [-p <v>]... [-o <out>] patch <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] update <team-id> <job-id> (-r <kv>)... [-p <v>]... [-o <out>] team list [-p <v>]... [-o <out>] worker list <team-id> [-p <v>]... [-o <out>] coordinate1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with coordinate1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/coordinate1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/coordinate1-secret.json , assuming that the required coordinate API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. coordinate1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"custom-field-def_list/","text":"Retrieves a list of custom field definitions for a team. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> custom-field-def list ... Required Scalar Argument <team-id> (string) Team ID Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"custom-field-def_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> custom-field-def list ...","title":"Scopes"},{"location":"custom-field-def_list/#required-scalar-argument","text":"<team-id> (string) Team ID","title":"Required Scalar Argument"},{"location":"custom-field-def_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"custom-field-def_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"jobs_get/","text":"Retrieves a job, including all the changes made to the job. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> jobs get ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"jobs_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> jobs get ...","title":"Scopes"},{"location":"jobs_get/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"jobs_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"jobs_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"jobs_insert/","text":"Inserts a new job. Only the state field of the job should be set. Scopes You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs insert ... Required Scalar Arguments <team-id> (string) Team ID <address> (string) Job address as newline (Unix) separated string <lat> (number) The latitude coordinate of this job's location. <lng> (number) The longitude coordinate of this job's location. <title> (string) Job title Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=et Job id. kind=magna Identifies this object as a job. state assignee=no Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ipsum Identifies this object as a collection of custom fields. .. customer-name=voluptua. Customer name. customer-phone-number=at Customer phone number. kind=sanctus Identifies this object as a job state. location address-line=sed Address. Each invocation of this argument appends the given value to the array. kind=amet. Identifies this object as a location. lat=0.8243737469076314 Latitude. lng=0.38370480861420864 Longitude. .. note=ipsum Note added to the job. Each invocation of this argument appends the given value to the array. progress=gubergren Job progress. title=lorem Job title. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p note=string Job note as newline (Unix) separated string Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Insert"},{"location":"jobs_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs insert ...","title":"Scopes"},{"location":"jobs_insert/#required-scalar-arguments","text":"<team-id> (string) Team ID <address> (string) Job address as newline (Unix) separated string <lat> (number) The latitude coordinate of this job's location. <lng> (number) The longitude coordinate of this job's location. <title> (string) Job title","title":"Required Scalar Arguments"},{"location":"jobs_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=et Job id. kind=magna Identifies this object as a job. state assignee=no Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ipsum Identifies this object as a collection of custom fields. .. customer-name=voluptua. Customer name. customer-phone-number=at Customer phone number. kind=sanctus Identifies this object as a job state. location address-line=sed Address. Each invocation of this argument appends the given value to the array. kind=amet. Identifies this object as a location. lat=0.8243737469076314 Latitude. lng=0.38370480861420864 Longitude. .. note=ipsum Note added to the job. Each invocation of this argument appends the given value to the array. progress=gubergren Job progress. title=lorem Job title.","title":"Required Request Value"},{"location":"jobs_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"jobs_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"jobs_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p note=string Job note as newline (Unix) separated string","title":"Optional Method Properties"},{"location":"jobs_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"jobs_list/","text":"Retrieves jobs created or modified since the given timestamp. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> jobs list ... Required Scalar Argument <team-id> (string) Team ID Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of results to return in one page. -p min-modified-timestamp-ms=string Minimum time a job was modified in milliseconds since epoch. -p omit-job-changes=boolean Whether to omit detail job history information. -p page-token=string Continuation token Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"jobs_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> jobs list ...","title":"Scopes"},{"location":"jobs_list/#required-scalar-argument","text":"<team-id> (string) Team ID","title":"Required Scalar Argument"},{"location":"jobs_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"jobs_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of results to return in one page. -p min-modified-timestamp-ms=string Minimum time a job was modified in milliseconds since epoch. -p omit-job-changes=boolean Whether to omit detail job history information. -p page-token=string Continuation token","title":"Optional Method Properties"},{"location":"jobs_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"jobs_patch/","text":"Updates a job. Fields that are set in the job state will be updated. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs patch ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=gubergren Job id. kind=eos Identifies this object as a job. state assignee=dolor Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ea Identifies this object as a collection of custom fields. .. customer-name=ipsum Customer name. customer-phone-number=invidunt Customer phone number. kind=amet Identifies this object as a job state. location address-line=duo Address. Each invocation of this argument appends the given value to the array. kind=ipsum Identifies this object as a location. lat=0.9001265173058445 Latitude. lng=0.5053930334687853 Longitude. .. note=rebum. Note added to the job. Each invocation of this argument appends the given value to the array. progress=est Job progress. title=ipsum Job title. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string Job address as newline (Unix) separated string -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p lat=number The latitude coordinate of this job's location. -p lng=number The longitude coordinate of this job's location. -p note=string Job note as newline (Unix) separated string -p progress=string Job progress -p title=string Job title Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Patch"},{"location":"jobs_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs patch ...","title":"Scopes"},{"location":"jobs_patch/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"jobs_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=gubergren Job id. kind=eos Identifies this object as a job. state assignee=dolor Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ea Identifies this object as a collection of custom fields. .. customer-name=ipsum Customer name. customer-phone-number=invidunt Customer phone number. kind=amet Identifies this object as a job state. location address-line=duo Address. Each invocation of this argument appends the given value to the array. kind=ipsum Identifies this object as a location. lat=0.9001265173058445 Latitude. lng=0.5053930334687853 Longitude. .. note=rebum. Note added to the job. Each invocation of this argument appends the given value to the array. progress=est Job progress. title=ipsum Job title.","title":"Required Request Value"},{"location":"jobs_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"jobs_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"jobs_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string Job address as newline (Unix) separated string -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p lat=number The latitude coordinate of this job's location. -p lng=number The longitude coordinate of this job's location. -p note=string Job note as newline (Unix) separated string -p progress=string Job progress -p title=string Job title","title":"Optional Method Properties"},{"location":"jobs_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"jobs_update/","text":"Updates a job. Fields that are set in the job state will be updated. Scopes You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs update ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=ipsum Job id. kind=est Identifies this object as a job. state assignee=gubergren Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ea Identifies this object as a collection of custom fields. .. customer-name=dolor Customer name. customer-phone-number=lorem Customer phone number. kind=eos Identifies this object as a job state. location address-line=labore Address. Each invocation of this argument appends the given value to the array. kind=sed Identifies this object as a location. lat=0.24638057468506236 Latitude. lng=0.17121742513567395 Longitude. .. note=no Note added to the job. Each invocation of this argument appends the given value to the array. progress=stet Job progress. title=kasd Job title. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string Job address as newline (Unix) separated string -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p lat=number The latitude coordinate of this job's location. -p lng=number The longitude coordinate of this job's location. -p note=string Job note as newline (Unix) separated string -p progress=string Job progress -p title=string Job title Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Update"},{"location":"jobs_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> jobs update ...","title":"Scopes"},{"location":"jobs_update/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"jobs_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Job: id: string kind: string state: assignee: string custom-fields: kind: string customer-name: string customer-phone-number: string kind: string location: address-line: [string] kind: string lat: number lng: number note: [string] progress: string title: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . id=ipsum Job id. kind=est Identifies this object as a job. state assignee=gubergren Email address of the assignee, or the string \"DELETED_USER\" if the account is no longer available. custom-fields kind=ea Identifies this object as a collection of custom fields. .. customer-name=dolor Customer name. customer-phone-number=lorem Customer phone number. kind=eos Identifies this object as a job state. location address-line=labore Address. Each invocation of this argument appends the given value to the array. kind=sed Identifies this object as a location. lat=0.24638057468506236 Latitude. lng=0.17121742513567395 Longitude. .. note=no Note added to the job. Each invocation of this argument appends the given value to the array. progress=stet Job progress. title=kasd Job title.","title":"Required Request Value"},{"location":"jobs_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"jobs_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"jobs_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string Job address as newline (Unix) separated string -p assignee=string Assignee email address, or empty string to unassign. -p custom-field=string Sets the value of custom fields. To set a custom field, pass the field id (from /team/teamId/custom_fields), a URL escaped '=' character, and the desired value as a parameter. For example, customField=12%3DAlice. Repeat the parameter for each custom field. Note that '=' cannot appear in the parameter value. Specifying an invalid, or inactive enum field will result in an error 500. -p customer-name=string Customer name -p customer-phone-number=string Customer phone number -p lat=number The latitude coordinate of this job's location. -p lng=number The longitude coordinate of this job's location. -p note=string Job note as newline (Unix) separated string -p progress=string Job progress -p title=string Job title","title":"Optional Method Properties"},{"location":"jobs_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"location_list/","text":"Retrieves a list of locations for a worker. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> location list ... Required Scalar Arguments <team-id> (string) Team ID <worker-email> (string) Worker email address. <start-timestamp-ms> (string) Start timestamp in milliseconds since the epoch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of results to return in one page. -p page-token=string Continuation token Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"location_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> location list ...","title":"Scopes"},{"location":"location_list/#required-scalar-arguments","text":"<team-id> (string) Team ID <worker-email> (string) Worker email address. <start-timestamp-ms> (string) Start timestamp in milliseconds since the epoch.","title":"Required Scalar Arguments"},{"location":"location_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"location_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of results to return in one page. -p page-token=string Continuation token","title":"Optional Method Properties"},{"location":"location_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"schedule_get/","text":"Retrieves the schedule for a job. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> schedule get ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"schedule_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> schedule get ...","title":"Scopes"},{"location":"schedule_get/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"schedule_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"schedule_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"schedule_patch/","text":"Replaces the schedule of a job with the provided schedule. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> schedule patch ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Schedule: all-day: boolean duration: string end-time: string kind: string start-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . all-day=true Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. duration=et Job duration in milliseconds. end-time=et Scheduled end time in milliseconds since epoch. kind=vero Identifies this object as a job schedule. start-time=erat Scheduled start time in milliseconds since epoch. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-day=boolean Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. -p duration=string Job duration in milliseconds. -p end-time=string Scheduled end time in milliseconds since epoch. -p start-time=string Scheduled start time in milliseconds since epoch. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Patch"},{"location":"schedule_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> schedule patch ...","title":"Scopes"},{"location":"schedule_patch/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"schedule_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Schedule: all-day: boolean duration: string end-time: string kind: string start-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . all-day=true Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. duration=et Job duration in milliseconds. end-time=et Scheduled end time in milliseconds since epoch. kind=vero Identifies this object as a job schedule. start-time=erat Scheduled start time in milliseconds since epoch.","title":"Required Request Value"},{"location":"schedule_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"schedule_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"schedule_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-day=boolean Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. -p duration=string Job duration in milliseconds. -p end-time=string Scheduled end time in milliseconds since epoch. -p start-time=string Scheduled start time in milliseconds since epoch.","title":"Optional Method Properties"},{"location":"schedule_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"schedule_update/","text":"Replaces the schedule of a job with the provided schedule. Scopes You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> schedule update ... Required Scalar Arguments <team-id> (string) Team ID <job-id> (string) Job number Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Schedule: all-day: boolean duration: string end-time: string kind: string start-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . all-day=false Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. duration=duo Job duration in milliseconds. end-time=dolore Scheduled end time in milliseconds since epoch. kind=et Identifies this object as a job schedule. start-time=voluptua. Scheduled start time in milliseconds since epoch. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-day=boolean Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. -p duration=string Job duration in milliseconds. -p end-time=string Scheduled end time in milliseconds since epoch. -p start-time=string Scheduled start time in milliseconds since epoch. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Update"},{"location":"schedule_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/coordinate scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate . You can set the scope for this method like this: coordinate1 --scope <scope> schedule update ...","title":"Scopes"},{"location":"schedule_update/#required-scalar-arguments","text":"<team-id> (string) Team ID <job-id> (string) Job number","title":"Required Scalar Arguments"},{"location":"schedule_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Schedule: all-day: boolean duration: string end-time: string kind: string start-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . all-day=false Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. duration=duo Job duration in milliseconds. end-time=dolore Scheduled end time in milliseconds since epoch. kind=et Identifies this object as a job schedule. start-time=voluptua. Scheduled start time in milliseconds since epoch.","title":"Required Request Value"},{"location":"schedule_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"schedule_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"schedule_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p all-day=boolean Whether the job is scheduled for the whole day. Time of day in start/end times is ignored if this is true. -p duration=string Job duration in milliseconds. -p end-time=string Scheduled end time in milliseconds since epoch. -p start-time=string Scheduled start time in milliseconds since epoch.","title":"Optional Method Properties"},{"location":"schedule_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"team_list/","text":"Retrieves a list of teams for a user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> team list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p admin=boolean Whether to include teams for which the user has the Admin role. -p dispatcher=boolean Whether to include teams for which the user has the Dispatcher role. -p worker=boolean Whether to include teams for which the user has the Worker role. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"team_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> team list ...","title":"Scopes"},{"location":"team_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"team_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p admin=boolean Whether to include teams for which the user has the Admin role. -p dispatcher=boolean Whether to include teams for which the user has the Dispatcher role. -p worker=boolean Whether to include teams for which the user has the Worker role.","title":"Optional Method Properties"},{"location":"team_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"worker_list/","text":"Retrieves a list of workers in a team. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> worker list ... Required Scalar Argument <team-id> (string) Team ID Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"worker_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/coordinate https://www.googleapis.com/auth/coordinate.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/coordinate.readonly . You can set the scope for this method like this: coordinate1 --scope <scope> worker list ...","title":"Scopes"},{"location":"worker_list/#required-scalar-argument","text":"<team-id> (string) Team ID","title":"Required Scalar Argument"},{"location":"worker_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"worker_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"}]}