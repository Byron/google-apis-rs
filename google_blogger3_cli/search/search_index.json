{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The blogger3 command-line interface (CLI) allows to use most features of the Google Blogger service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Blogger API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-blogger3-cli Find the source code on github . Usage This documentation was generated from the Blogger API at revision 20240304 . The CLI is at version 5.0.4 . blogger3 [options] blog-user-infos get <user-id> <blog-id> [-p <v>]... [-o <out>] blogs get <blog-id> [-p <v>]... [-o <out>] get-by-url <url> [-p <v>]... [-o <out>] list-by-user <user-id> [-p <v>]... [-o <out>] comments approve <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] delete <blog-id> <post-id> <comment-id> [-p <v>]... get <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] list <blog-id> <post-id> [-p <v>]... [-o <out>] list-by-blog <blog-id> [-p <v>]... [-o <out>] mark-as-spam <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] remove-content <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] page-views get <blog-id> [-p <v>]... [-o <out>] pages delete <blog-id> <page-id> [-p <v>]... get <blog-id> <page-id> [-p <v>]... [-o <out>] insert <blog-id> (-r <kv>)... [-p <v>]... [-o <out>] list <blog-id> [-p <v>]... [-o <out>] patch <blog-id> <page-id> (-r <kv>)... [-p <v>]... [-o <out>] publish <blog-id> <page-id> [-p <v>]... [-o <out>] revert <blog-id> <page-id> [-p <v>]... [-o <out>] update <blog-id> <page-id> (-r <kv>)... [-p <v>]... [-o <out>] post-user-infos get <user-id> <blog-id> <post-id> [-p <v>]... [-o <out>] list <user-id> <blog-id> [-p <v>]... [-o <out>] posts delete <blog-id> <post-id> [-p <v>]... get <blog-id> <post-id> [-p <v>]... [-o <out>] get-by-path <blog-id> <path> [-p <v>]... [-o <out>] insert <blog-id> (-r <kv>)... [-p <v>]... [-o <out>] list <blog-id> [-p <v>]... [-o <out>] patch <blog-id> <post-id> (-r <kv>)... [-p <v>]... [-o <out>] publish <blog-id> <post-id> [-p <v>]... [-o <out>] revert <blog-id> <post-id> [-p <v>]... [-o <out>] search <blog-id> <q> [-p <v>]... [-o <out>] update <blog-id> <post-id> (-r <kv>)... [-p <v>]... [-o <out>] users get <user-id> [-p <v>]... [-o <out>] blogger3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with blogger3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/blogger3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/blogger3-secret.json , assuming that the required blogger API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. blogger3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-blogger3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Blogger API at revision 20240304 . The CLI is at version 5.0.4 . blogger3 [options] blog-user-infos get <user-id> <blog-id> [-p <v>]... [-o <out>] blogs get <blog-id> [-p <v>]... [-o <out>] get-by-url <url> [-p <v>]... [-o <out>] list-by-user <user-id> [-p <v>]... [-o <out>] comments approve <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] delete <blog-id> <post-id> <comment-id> [-p <v>]... get <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] list <blog-id> <post-id> [-p <v>]... [-o <out>] list-by-blog <blog-id> [-p <v>]... [-o <out>] mark-as-spam <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] remove-content <blog-id> <post-id> <comment-id> [-p <v>]... [-o <out>] page-views get <blog-id> [-p <v>]... [-o <out>] pages delete <blog-id> <page-id> [-p <v>]... get <blog-id> <page-id> [-p <v>]... [-o <out>] insert <blog-id> (-r <kv>)... [-p <v>]... [-o <out>] list <blog-id> [-p <v>]... [-o <out>] patch <blog-id> <page-id> (-r <kv>)... [-p <v>]... [-o <out>] publish <blog-id> <page-id> [-p <v>]... [-o <out>] revert <blog-id> <page-id> [-p <v>]... [-o <out>] update <blog-id> <page-id> (-r <kv>)... [-p <v>]... [-o <out>] post-user-infos get <user-id> <blog-id> <post-id> [-p <v>]... [-o <out>] list <user-id> <blog-id> [-p <v>]... [-o <out>] posts delete <blog-id> <post-id> [-p <v>]... get <blog-id> <post-id> [-p <v>]... [-o <out>] get-by-path <blog-id> <path> [-p <v>]... [-o <out>] insert <blog-id> (-r <kv>)... [-p <v>]... [-o <out>] list <blog-id> [-p <v>]... [-o <out>] patch <blog-id> <post-id> (-r <kv>)... [-p <v>]... [-o <out>] publish <blog-id> <post-id> [-p <v>]... [-o <out>] revert <blog-id> <post-id> [-p <v>]... [-o <out>] search <blog-id> <q> [-p <v>]... [-o <out>] update <blog-id> <post-id> (-r <kv>)... [-p <v>]... [-o <out>] users get <user-id> [-p <v>]... [-o <out>] blogger3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with blogger3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/blogger3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/blogger3-secret.json , assuming that the required blogger API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. blogger3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"blog-user-infos_get/","text":"Gets one blog and user info pair by blog id and user id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blog-user-infos get ... Required Scalar Arguments <user-id> (string) No description provided. <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-posts=integer No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"blog-user-infos_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blog-user-infos get ...","title":"Scopes"},{"location":"blog-user-infos_get/#required-scalar-arguments","text":"<user-id> (string) No description provided. <blog-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"blog-user-infos_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"blog-user-infos_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-posts=integer No description provided.","title":"Optional Method Properties"},{"location":"blog-user-infos_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"blogs_get-by-url/","text":"Gets a blog by url. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs get-by-url ... Required Scalar Argument <url> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get By Url"},{"location":"blogs_get-by-url/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs get-by-url ...","title":"Scopes"},{"location":"blogs_get-by-url/#required-scalar-argument","text":"<url> (string) No description provided.","title":"Required Scalar Argument"},{"location":"blogs_get-by-url/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"blogs_get-by-url/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"blogs_get-by-url/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"blogs_get/","text":"Gets a blog by id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs get ... Required Scalar Argument <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-posts=integer No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"blogs_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs get ...","title":"Scopes"},{"location":"blogs_get/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"blogs_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"blogs_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-posts=integer No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"blogs_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"blogs_list-by-user/","text":"Lists blogs by user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs list-by-user ... Required Scalar Argument <user-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-user-info=boolean No description provided. -p role=string No description provided. -p status=string Default value of status is LIVE. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List By User"},{"location":"blogs_list-by-user/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> blogs list-by-user ...","title":"Scopes"},{"location":"blogs_list-by-user/#required-scalar-argument","text":"<user-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"blogs_list-by-user/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"blogs_list-by-user/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-user-info=boolean No description provided. -p role=string No description provided. -p status=string Default value of status is LIVE. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"blogs_list-by-user/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_approve/","text":"Marks a comment as not spam by blog id, post id and comment id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments approve ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Approve"},{"location":"comments_approve/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments approve ...","title":"Scopes"},{"location":"comments_approve/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_approve/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_approve/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_delete/","text":"Deletes a comment by blog id, post id and comment id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments delete ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"comments_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments delete ...","title":"Scopes"},{"location":"comments_delete/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_get/","text":"Gets a comment by id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments get ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"comments_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments get ...","title":"Scopes"},{"location":"comments_get/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"comments_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_list-by-blog/","text":"Lists comments by blog. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments list-by-blog ... Required Scalar Argument <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List By Blog"},{"location":"comments_list-by-blog/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments list-by-blog ...","title":"Scopes"},{"location":"comments_list-by-blog/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"comments_list-by-blog/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_list-by-blog/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided.","title":"Optional Method Properties"},{"location":"comments_list-by-blog/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_list/","text":"Lists comments. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments list ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"comments_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> comments list ...","title":"Scopes"},{"location":"comments_list/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"comments_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_mark-as-spam/","text":"Marks a comment as spam by blog id, post id and comment id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments mark-as-spam ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Mark As Spam"},{"location":"comments_mark-as-spam/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments mark-as-spam ...","title":"Scopes"},{"location":"comments_mark-as-spam/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_mark-as-spam/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_mark-as-spam/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"comments_remove-content/","text":"Removes the content of a comment by blog id, post id and comment id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments remove-content ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Remove Content"},{"location":"comments_remove-content/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> comments remove-content ...","title":"Scopes"},{"location":"comments_remove-content/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided. <comment-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"comments_remove-content/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"comments_remove-content/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"page-views_get/","text":"Gets page views by blog id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> page-views get ... Required Scalar Argument <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p range=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"page-views_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> page-views get ...","title":"Scopes"},{"location":"page-views_get/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"page-views_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"page-views_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p range=string No description provided.","title":"Optional Method Properties"},{"location":"page-views_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_delete/","text":"Deletes a page by blog id and page id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages delete ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p use-trash=boolean Move to Trash if possible Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"pages_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages delete ...","title":"Scopes"},{"location":"pages_delete/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p use-trash=boolean Move to Trash if possible","title":"Optional Method Properties"},{"location":"pages_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_get/","text":"Gets a page by blog id and page id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> pages get ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"pages_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> pages get ...","title":"Scopes"},{"location":"pages_get/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"pages_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_insert/","text":"Inserts a page. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages insert ... Required Scalar Argument <blog-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=et The display name. id=magna The identifier of the creator. image url=no The creator's avatar URL. .. url=ipsum The URL of the creator's Profile page. ..blog id=voluptua. The identifier of the blog containing this page. .. content=at The body content of this Page, in HTML. etag=sanctus Etag of the resource. id=sed The identifier for this resource. kind=amet. The kind of this entity. Always blogger#page. published=takimata RFC 3339 date-time when this Page was published. self-link=amet. The API REST URL to fetch this resource from. status=duo The status of the page for admin resources (either LIVE or DRAFT). title=ipsum The title of this entity. This is the name displayed in the Admin user interface. trashed=gubergren RFC 3339 date-time when this Page was trashed. updated=lorem RFC 3339 date-time when this Page was last updated. url=gubergren The URL that this Page is displayed at. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-draft=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"pages_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages insert ...","title":"Scopes"},{"location":"pages_insert/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"pages_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=et The display name. id=magna The identifier of the creator. image url=no The creator's avatar URL. .. url=ipsum The URL of the creator's Profile page. ..blog id=voluptua. The identifier of the blog containing this page. .. content=at The body content of this Page, in HTML. etag=sanctus Etag of the resource. id=sed The identifier for this resource. kind=amet. The kind of this entity. Always blogger#page. published=takimata RFC 3339 date-time when this Page was published. self-link=amet. The API REST URL to fetch this resource from. status=duo The status of the page for admin resources (either LIVE or DRAFT). title=ipsum The title of this entity. This is the name displayed in the Admin user interface. trashed=gubergren RFC 3339 date-time when this Page was trashed. updated=lorem RFC 3339 date-time when this Page was last updated. url=gubergren The URL that this Page is displayed at.","title":"Required Request Value"},{"location":"pages_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pages_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p is-draft=boolean No description provided.","title":"Optional Method Properties"},{"location":"pages_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_list/","text":"Lists pages. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> pages list ... Required Scalar Argument <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p status=string No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"pages_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> pages list ...","title":"Scopes"},{"location":"pages_list/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"pages_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-bodies=boolean No description provided. -p max-results=integer No description provided. -p page-token=string No description provided. -p status=string No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"pages_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_patch/","text":"Patches a page. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages patch ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=eos The display name. id=dolor The identifier of the creator. image url=ea The creator's avatar URL. .. url=ipsum The URL of the creator's Profile page. ..blog id=invidunt The identifier of the blog containing this page. .. content=amet The body content of this Page, in HTML. etag=duo Etag of the resource. id=ipsum The identifier for this resource. kind=sed The kind of this entity. Always blogger#page. published=ut RFC 3339 date-time when this Page was published. self-link=gubergren The API REST URL to fetch this resource from. status=rebum. The status of the page for admin resources (either LIVE or DRAFT). title=est The title of this entity. This is the name displayed in the Admin user interface. trashed=ipsum RFC 3339 date-time when this Page was trashed. updated=ipsum RFC 3339 date-time when this Page was last updated. url=est The URL that this Page is displayed at. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish=boolean No description provided. -p revert=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"pages_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages patch ...","title":"Scopes"},{"location":"pages_patch/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=eos The display name. id=dolor The identifier of the creator. image url=ea The creator's avatar URL. .. url=ipsum The URL of the creator's Profile page. ..blog id=invidunt The identifier of the blog containing this page. .. content=amet The body content of this Page, in HTML. etag=duo Etag of the resource. id=ipsum The identifier for this resource. kind=sed The kind of this entity. Always blogger#page. published=ut RFC 3339 date-time when this Page was published. self-link=gubergren The API REST URL to fetch this resource from. status=rebum. The status of the page for admin resources (either LIVE or DRAFT). title=est The title of this entity. This is the name displayed in the Admin user interface. trashed=ipsum RFC 3339 date-time when this Page was trashed. updated=ipsum RFC 3339 date-time when this Page was last updated. url=est The URL that this Page is displayed at.","title":"Required Request Value"},{"location":"pages_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pages_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish=boolean No description provided. -p revert=boolean No description provided.","title":"Optional Method Properties"},{"location":"pages_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_publish/","text":"Publishes a page. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages publish ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publish"},{"location":"pages_publish/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages publish ...","title":"Scopes"},{"location":"pages_publish/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_publish/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_publish/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_revert/","text":"Reverts a published or scheduled page to draft state. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages revert ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Revert"},{"location":"pages_revert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages revert ...","title":"Scopes"},{"location":"pages_revert/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_revert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_revert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_update/","text":"Updates a page by blog id and page id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages update ... Required Scalar Arguments <blog-id> (string) No description provided. <page-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=gubergren The display name. id=ea The identifier of the creator. image url=dolor The creator's avatar URL. .. url=lorem The URL of the creator's Profile page. ..blog id=eos The identifier of the blog containing this page. .. content=labore The body content of this Page, in HTML. etag=sed Etag of the resource. id=duo The identifier for this resource. kind=sed The kind of this entity. Always blogger#page. published=no RFC 3339 date-time when this Page was published. self-link=stet The API REST URL to fetch this resource from. status=kasd The status of the page for admin resources (either LIVE or DRAFT). title=et The title of this entity. This is the name displayed in the Admin user interface. trashed=sed RFC 3339 date-time when this Page was trashed. updated=et RFC 3339 date-time when this Page was last updated. url=et The URL that this Page is displayed at. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish=boolean No description provided. -p revert=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"pages_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> pages update ...","title":"Scopes"},{"location":"pages_update/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <page-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"pages_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Page: author: display-name: string id: string image: url: string url: string blog: id: string content: string etag: string id: string kind: string published: string self-link: string status: string title: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=gubergren The display name. id=ea The identifier of the creator. image url=dolor The creator's avatar URL. .. url=lorem The URL of the creator's Profile page. ..blog id=eos The identifier of the blog containing this page. .. content=labore The body content of this Page, in HTML. etag=sed Etag of the resource. id=duo The identifier for this resource. kind=sed The kind of this entity. Always blogger#page. published=no RFC 3339 date-time when this Page was published. self-link=stet The API REST URL to fetch this resource from. status=kasd The status of the page for admin resources (either LIVE or DRAFT). title=et The title of this entity. This is the name displayed in the Admin user interface. trashed=sed RFC 3339 date-time when this Page was trashed. updated=et RFC 3339 date-time when this Page was last updated. url=et The URL that this Page is displayed at.","title":"Required Request Value"},{"location":"pages_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pages_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish=boolean No description provided. -p revert=boolean No description provided.","title":"Optional Method Properties"},{"location":"pages_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"post-user-infos_get/","text":"Gets one post and user info pair, by post_id and user_id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> post-user-infos get ... Required Scalar Arguments <user-id> (string) No description provided. <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-comments=integer No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"post-user-infos_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> post-user-infos get ...","title":"Scopes"},{"location":"post-user-infos_get/#required-scalar-arguments","text":"<user-id> (string) No description provided. <blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"post-user-infos_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"post-user-infos_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-comments=integer No description provided.","title":"Optional Method Properties"},{"location":"post-user-infos_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"post-user-infos_list/","text":"Lists post and user info pairs. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> post-user-infos list ... Required Scalar Arguments <user-id> (string) No description provided. <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p labels=string No description provided. -p max-results=integer No description provided. -p order-by=string No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"post-user-infos_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> post-user-infos list ...","title":"Scopes"},{"location":"post-user-infos_list/#required-scalar-arguments","text":"<user-id> (string) No description provided. <blog-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"post-user-infos_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"post-user-infos_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p labels=string No description provided. -p max-results=integer No description provided. -p order-by=string No description provided. -p page-token=string No description provided. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"post-user-infos_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_delete/","text":"Deletes a post by blog id and post id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts delete ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p use-trash=boolean Move to Trash if possible Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"posts_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts delete ...","title":"Scopes"},{"location":"posts_delete/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p use-trash=boolean Move to Trash if possible","title":"Optional Method Properties"},{"location":"posts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_get-by-path/","text":"Gets a post by path. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts get-by-path ... Required Scalar Arguments <blog-id> (string) No description provided. <path> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-comments=integer No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get By Path"},{"location":"posts_get-by-path/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts get-by-path ...","title":"Scopes"},{"location":"posts_get-by-path/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <path> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_get-by-path/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_get-by-path/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-comments=integer No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"posts_get-by-path/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_get/","text":"Gets a post by blog id and post id Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts get ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"posts_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts get ...","title":"Scopes"},{"location":"posts_get/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"posts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_insert/","text":"Inserts a post. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts insert ... Required Scalar Argument <blog-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=vero The display name. id=erat The identifier of the creator. image url=sed The creator's avatar URL. .. url=duo The URL of the creator's Profile page. ..blog id=dolore The identifier of the Blog that contains this Post. .. content=et The content of the Post. May contain HTML markup. custom-meta-data=voluptua. The JSON meta-data for the Post. etag=amet. Etag of the resource. id=consetetur The identifier of this Post. kind=diam The kind of this entity. Always blogger#post. labels=dolor The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.9625057030686941 Location's latitude. lng=0.901889097837698 Location's longitude. name=sadipscing Location name. span=stet Location's viewport span. Can be used when rendering a map preview. .. published=dolor RFC 3339 date-time when this Post was published. reader-comments=duo Comment control and display setting for readers of this post. replies self-link=vero The URL of the comments on this post. total-items=vero The count of comments on this post. .. self-link=invidunt The API REST URL to fetch this resource from. status=stet Status of the post. Only set for admin-level requests. title=vero The title of the Post. title-link=elitr The title link URL, similar to atom's related link. trashed=lorem RFC 3339 date-time when this Post was last trashed. updated=diam RFC 3339 date-time when this Post was last updated. url=no The URL where this Post is displayed. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p is-draft=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"posts_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts insert ...","title":"Scopes"},{"location":"posts_insert/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"posts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=vero The display name. id=erat The identifier of the creator. image url=sed The creator's avatar URL. .. url=duo The URL of the creator's Profile page. ..blog id=dolore The identifier of the Blog that contains this Post. .. content=et The content of the Post. May contain HTML markup. custom-meta-data=voluptua. The JSON meta-data for the Post. etag=amet. Etag of the resource. id=consetetur The identifier of this Post. kind=diam The kind of this entity. Always blogger#post. labels=dolor The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.9625057030686941 Location's latitude. lng=0.901889097837698 Location's longitude. name=sadipscing Location name. span=stet Location's viewport span. Can be used when rendering a map preview. .. published=dolor RFC 3339 date-time when this Post was published. reader-comments=duo Comment control and display setting for readers of this post. replies self-link=vero The URL of the comments on this post. total-items=vero The count of comments on this post. .. self-link=invidunt The API REST URL to fetch this resource from. status=stet Status of the post. Only set for admin-level requests. title=vero The title of the Post. title-link=elitr The title link URL, similar to atom's related link. trashed=lorem RFC 3339 date-time when this Post was last trashed. updated=diam RFC 3339 date-time when this Post was last updated. url=no The URL where this Post is displayed.","title":"Required Request Value"},{"location":"posts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"posts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p is-draft=boolean No description provided.","title":"Optional Method Properties"},{"location":"posts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_list/","text":"Lists posts. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts list ... Required Scalar Argument <blog-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p fetch-images=boolean No description provided. -p labels=string No description provided. -p max-results=integer No description provided. -p order-by=string No description provided. -p page-token=string No description provided. -p sort-option=string Sort direction applied to post list. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"posts_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts list ...","title":"Scopes"},{"location":"posts_list/#required-scalar-argument","text":"<blog-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"posts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-date=string No description provided. -p fetch-bodies=boolean No description provided. -p fetch-images=boolean No description provided. -p labels=string No description provided. -p max-results=integer No description provided. -p order-by=string No description provided. -p page-token=string No description provided. -p sort-option=string Sort direction applied to post list. -p start-date=string No description provided. -p status=string No description provided. -p view=string No description provided.","title":"Optional Method Properties"},{"location":"posts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_patch/","text":"Patches a post. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts patch ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=ipsum The display name. id=accusam The identifier of the creator. image url=takimata The creator's avatar URL. .. url=consetetur The URL of the creator's Profile page. ..blog id=voluptua. The identifier of the Blog that contains this Post. .. content=et The content of the Post. May contain HTML markup. custom-meta-data=erat The JSON meta-data for the Post. etag=consetetur Etag of the resource. id=amet. The identifier of this Post. kind=sed The kind of this entity. Always blogger#post. labels=takimata The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.6457566865332331 Location's latitude. lng=0.8484298131719972 Location's longitude. name=et Location name. span=accusam Location's viewport span. Can be used when rendering a map preview. .. published=voluptua. RFC 3339 date-time when this Post was published. reader-comments=dolore Comment control and display setting for readers of this post. replies self-link=dolore The URL of the comments on this post. total-items=dolore The count of comments on this post. .. self-link=voluptua. The API REST URL to fetch this resource from. status=amet. Status of the post. Only set for admin-level requests. title=ea The title of the Post. title-link=sadipscing The title link URL, similar to atom's related link. trashed=lorem RFC 3339 date-time when this Post was last trashed. updated=invidunt RFC 3339 date-time when this Post was last updated. url=no The URL where this Post is displayed. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p publish=boolean No description provided. -p revert=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"posts_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts patch ...","title":"Scopes"},{"location":"posts_patch/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=ipsum The display name. id=accusam The identifier of the creator. image url=takimata The creator's avatar URL. .. url=consetetur The URL of the creator's Profile page. ..blog id=voluptua. The identifier of the Blog that contains this Post. .. content=et The content of the Post. May contain HTML markup. custom-meta-data=erat The JSON meta-data for the Post. etag=consetetur Etag of the resource. id=amet. The identifier of this Post. kind=sed The kind of this entity. Always blogger#post. labels=takimata The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.6457566865332331 Location's latitude. lng=0.8484298131719972 Location's longitude. name=et Location name. span=accusam Location's viewport span. Can be used when rendering a map preview. .. published=voluptua. RFC 3339 date-time when this Post was published. reader-comments=dolore Comment control and display setting for readers of this post. replies self-link=dolore The URL of the comments on this post. total-items=dolore The count of comments on this post. .. self-link=voluptua. The API REST URL to fetch this resource from. status=amet. Status of the post. Only set for admin-level requests. title=ea The title of the Post. title-link=sadipscing The title link URL, similar to atom's related link. trashed=lorem RFC 3339 date-time when this Post was last trashed. updated=invidunt RFC 3339 date-time when this Post was last updated. url=no The URL where this Post is displayed.","title":"Required Request Value"},{"location":"posts_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"posts_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p publish=boolean No description provided. -p revert=boolean No description provided.","title":"Optional Method Properties"},{"location":"posts_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_publish/","text":"Publishes a post. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts publish ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish-date=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publish"},{"location":"posts_publish/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts publish ...","title":"Scopes"},{"location":"posts_publish/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_publish/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_publish/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p publish-date=string No description provided.","title":"Optional Method Properties"},{"location":"posts_publish/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_revert/","text":"Reverts a published or scheduled post to draft state. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts revert ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Revert"},{"location":"posts_revert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts revert ...","title":"Scopes"},{"location":"posts_revert/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_revert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_revert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_search/","text":"Searches for posts matching given query terms in the specified blog. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts search ... Required Scalar Arguments <blog-id> (string) No description provided. <q> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-bodies=boolean No description provided. -p order-by=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Search"},{"location":"posts_search/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> posts search ...","title":"Scopes"},{"location":"posts_search/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <q> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_search/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-bodies=boolean No description provided. -p order-by=string No description provided.","title":"Optional Method Properties"},{"location":"posts_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"posts_update/","text":"Updates a post by blog id and post id. Scopes You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts update ... Required Scalar Arguments <blog-id> (string) No description provided. <post-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=est The display name. id=at The identifier of the creator. image url=sed The creator's avatar URL. .. url=sit The URL of the creator's Profile page. ..blog id=et The identifier of the Blog that contains this Post. .. content=tempor The content of the Post. May contain HTML markup. custom-meta-data=aliquyam The JSON meta-data for the Post. etag=ipsum Etag of the resource. id=et The identifier of this Post. kind=sanctus The kind of this entity. Always blogger#post. labels=lorem The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.7347003486631798 Location's latitude. lng=0.798394050963041 Location's longitude. name=dolores Location name. span=dolores Location's viewport span. Can be used when rendering a map preview. .. published=et RFC 3339 date-time when this Post was published. reader-comments=sed Comment control and display setting for readers of this post. replies self-link=no The URL of the comments on this post. total-items=et The count of comments on this post. .. self-link=elitr The API REST URL to fetch this resource from. status=sed Status of the post. Only set for admin-level requests. title=no The title of the Post. title-link=nonumy The title link URL, similar to atom's related link. trashed=at RFC 3339 date-time when this Post was last trashed. updated=sadipscing RFC 3339 date-time when this Post was last updated. url=aliquyam The URL where this Post is displayed. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p publish=boolean No description provided. -p revert=boolean No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"posts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/blogger scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger . You can set the scope for this method like this: blogger3 --scope <scope> posts update ...","title":"Scopes"},{"location":"posts_update/#required-scalar-arguments","text":"<blog-id> (string) No description provided. <post-id> (string) No description provided.","title":"Required Scalar Arguments"},{"location":"posts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Post: author: display-name: string id: string image: url: string url: string blog: id: string content: string custom-meta-data: string etag: string id: string kind: string labels: [string] location: lat: number lng: number name: string span: string published: string reader-comments: string replies: self-link: string total-items: string self-link: string status: string title: string title-link: string trashed: string updated: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=est The display name. id=at The identifier of the creator. image url=sed The creator's avatar URL. .. url=sit The URL of the creator's Profile page. ..blog id=et The identifier of the Blog that contains this Post. .. content=tempor The content of the Post. May contain HTML markup. custom-meta-data=aliquyam The JSON meta-data for the Post. etag=ipsum Etag of the resource. id=et The identifier of this Post. kind=sanctus The kind of this entity. Always blogger#post. labels=lorem The list of labels this Post was tagged with. Each invocation of this argument appends the given value to the array. location lat=0.7347003486631798 Location's latitude. lng=0.798394050963041 Location's longitude. name=dolores Location name. span=dolores Location's viewport span. Can be used when rendering a map preview. .. published=et RFC 3339 date-time when this Post was published. reader-comments=sed Comment control and display setting for readers of this post. replies self-link=no The URL of the comments on this post. total-items=et The count of comments on this post. .. self-link=elitr The API REST URL to fetch this resource from. status=sed Status of the post. Only set for admin-level requests. title=no The title of the Post. title-link=nonumy The title link URL, similar to atom's related link. trashed=at RFC 3339 date-time when this Post was last trashed. updated=sadipscing RFC 3339 date-time when this Post was last updated. url=aliquyam The URL where this Post is displayed.","title":"Required Request Value"},{"location":"posts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"posts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"posts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p fetch-body=boolean No description provided. -p fetch-images=boolean No description provided. -p max-comments=integer No description provided. -p publish=boolean No description provided. -p revert=boolean No description provided.","title":"Optional Method Properties"},{"location":"posts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_get/","text":"Gets one user by user_id. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> users get ... Required Scalar Argument <user-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"users_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/blogger https://www.googleapis.com/auth/blogger.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/blogger.readonly . You can set the scope for this method like this: blogger3 --scope <scope> users get ...","title":"Scopes"},{"location":"users_get/#required-scalar-argument","text":"<user-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"users_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}