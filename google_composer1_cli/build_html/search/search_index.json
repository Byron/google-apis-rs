{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The composer1 command-line interface (CLI) allows to use most features of the Google Cloud Composer service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Cloud Composer API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-composer1-cli Find the source code on github . Usage This documentation was generated from the Cloud Composer API at revision 20240227 . The CLI is at version 5.0.4 . composer1 [options] projects locations-environments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-database-failover <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-delete <name> [-p <v>]... [-o <out>] locations-environments-execute-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-fetch-database-properties <environment> [-p <v>]... [-o <out>] locations-environments-get <name> [-p <v>]... [-o <out>] locations-environments-list <parent> [-p <v>]... [-o <out>] locations-environments-load-snapshot <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-poll-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-save-snapshot <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-stop-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-delete <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-get <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-list <parent> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-update <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-delete <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-get <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-list <parent> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-update <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-workloads-list <parent> [-p <v>]... [-o <out>] locations-image-versions-list <parent> [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] composer1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with composer1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/composer1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/composer1-secret.json , assuming that the required composer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. composer1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-composer1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Cloud Composer API at revision 20240227 . The CLI is at version 5.0.4 . composer1 [options] projects locations-environments-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-database-failover <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-delete <name> [-p <v>]... [-o <out>] locations-environments-execute-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-fetch-database-properties <environment> [-p <v>]... [-o <out>] locations-environments-get <name> [-p <v>]... [-o <out>] locations-environments-list <parent> [-p <v>]... [-o <out>] locations-environments-load-snapshot <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-poll-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-save-snapshot <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-stop-airflow-command <environment> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-delete <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-get <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-list <parent> [-p <v>]... [-o <out>] locations-environments-user-workloads-config-maps-update <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-delete <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-get <name> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-list <parent> [-p <v>]... [-o <out>] locations-environments-user-workloads-secrets-update <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-environments-workloads-list <parent> [-p <v>]... [-o <out>] locations-image-versions-list <parent> [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] composer1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with composer1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/composer1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/composer1-secret.json , assuming that the required composer API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. composer1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"projects_locations-environments-create/","text":"Create a new environment. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-create ... Required Scalar Argument <parent> (string) The parent must be of the form \"projects/{projectId}/locations/{locationId}\". Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Environment: config: airflow-byoid-uri: string airflow-uri: string dag-gcs-prefix: string data-retention-config: airflow-metadata-retention-config: retention-days: integer retention-mode: string task-logs-retention-config: storage-mode: string database-config: machine-type: string zone: string encryption-config: kms-key-name: string environment-size: string gke-cluster: string maintenance-window: end-time: string recurrence: string start-time: string master-authorized-networks-config: enabled: boolean node-config: composer-internal-ipv4-cidr-block: string composer-network-attachment: string disk-size-gb: integer enable-ip-masq-agent: boolean ip-allocation-policy: cluster-ipv4-cidr-block: string cluster-secondary-range-name: string services-ipv4-cidr-block: string services-secondary-range-name: string use-ip-aliases: boolean location: string machine-type: string network: string oauth-scopes: [string] service-account: string subnetwork: string tags: [string] node-count: integer private-environment-config: cloud-composer-connection-subnetwork: string cloud-composer-network-ipv4-cidr-block: string cloud-composer-network-ipv4-reserved-range: string cloud-sql-ipv4-cidr-block: string enable-private-builds-only: boolean enable-private-environment: boolean enable-privately-used-public-ips: boolean networking-config: connection-type: string private-cluster-config: enable-private-endpoint: boolean master-ipv4-cidr-block: string master-ipv4-reserved-range: string web-server-ipv4-cidr-block: string web-server-ipv4-reserved-range: string recovery-config: scheduled-snapshots-config: enabled: boolean snapshot-creation-schedule: string snapshot-location: string time-zone: string resilience-mode: string software-config: airflow-config-overrides: { string: string } cloud-data-lineage-integration: enabled: boolean env-variables: { string: string } image-version: string pypi-packages: { string: string } python-version: string scheduler-count: integer web-server-plugins-mode: string web-server-config: machine-type: string workloads-config: dag-processor: count: integer cpu: number memory-gb: number storage-gb: number scheduler: count: integer cpu: number memory-gb: number storage-gb: number triggerer: count: integer cpu: number memory-gb: number web-server: cpu: number memory-gb: number storage-gb: number worker: cpu: number max-count: integer memory-gb: number min-count: integer storage-gb: number create-time: string labels: { string: string } name: string satisfies-pzs: boolean state: string storage-config: bucket: string update-time: string uuid: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .config airflow-byoid-uri=et Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see Access environments with workforce identity federation ). airflow-uri=magna Output only. The URI of the Apache Airflow Web UI hosted within this environment (see Airflow web interface ). dag-gcs-prefix=no Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix. data-retention-config.airflow-metadata-retention-config retention-days=46 Optional. How many days data should be retained for. retention-mode=voluptua. Optional. Retention can be either enabled or disabled. ..task-logs-retention-config storage-mode=at Optional. The mode of storage for Airflow workers task logs. For details, see go/composer-store-task-logs-in-cloud-logging-only-design-doc ...database-config machine-type=sanctus Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. zone=sed Optional. The Compute Engine zone where the Airflow database is created. If zone is provided, it must be in the region selected for the environment. If zone is not provided, a zone is automatically selected. The zone can only be set during environment creation. Supported for Cloud Composer environments in versions composer-2. . -airflow- . .*. ..encryption-config kms-key-name=amet. Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used. .. environment-size=takimata Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. gke-cluster=amet. Output only. The Kubernetes Engine cluster used to run this environment. maintenance-window end-time=duo Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to start_time . recurrence=ipsum Required. Maintenance window recurrence. Format is a subset of RFC-5545 RRULE . The only allowed values for FREQ field are FREQ=DAILY and FREQ=WEEKLY;BYDAY=... Example values: FREQ=WEEKLY;BYDAY=TU,WE , FREQ=DAILY . start-time=gubergren Required. Start time of the first recurrence of the maintenance window. ..master-authorized-networks-config enabled=true Whether or not master authorized networks feature is enabled. ..node-config composer-internal-ipv4-cidr-block=gubergren Optional. The IP range in CIDR notation to use internally by Cloud Composer. IP addresses are not reserved - and the same range can be used by multiple Cloud Composer environments. In case of overlap, IPs from this range will not be accessible in the user's VPC network. Cannot be updated. If not specified, the default value of '100.64.128.0/20' is used. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. composer-network-attachment=eos Optional. Network Attachment that Cloud Composer environment is connected to, which provides connectivity with a user's VPC network. Takes precedence over network and subnetwork settings. If not provided, but network and subnetwork are defined during environment, it will be provisioned. If not provided and network and subnetwork are also empty, then connectivity to user's VPC network is disabled. Network attachment must be provided in format projects/{project}/regions/{region}/networkAttachments/{networkAttachment}. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. disk-size-gb=97 Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-ip-masq-agent=true Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent ip-allocation-policy cluster-ipv4-cidr-block=invidunt Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. cluster-secondary-range-name=amet Optional. The name of the GKE cluster's secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. services-ipv4-cidr-block=duo Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. services-secondary-range-name=ipsum Optional. The name of the services' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. use-ip-aliases=false Optional. Whether or not to enable Alias IPs in the GKE cluster. If true , a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use VPC-native GKE clusters. .. location=ut Optional. The Compute Engine zone in which to deploy the VMs used to run the Apache Airflow software, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}\". This location must belong to the enclosing environment's project and location. If both this field and nodeConfig.machineType are specified, nodeConfig.machineType must belong to this location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field ( location or nodeConfig.machineType ) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. machine-type=gubergren Optional. The Compute Engine machine type used for cluster instances, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\". The machineType must belong to the enclosing environment's project and location. If both this field and nodeConfig.location are specified, this machineType must belong to the nodeConfig.location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and nodeConfig.location is specified, the location information from the specified field will be propagated to the unspecified field. The machineTypeId must not be a shared-core machine type . If this field is unspecified, the machineTypeId defaults to \"n1-standard-1\". This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. network=rebum. Optional. The Compute Engine network to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/global/networks/{networkId}\". If unspecified, the \"default\" network ID in the environment's project is used. If a Custom Subnet Network is provided, nodeConfig.subnetwork must also be provided. For Shared VPC subnetwork requirements, see nodeConfig.subnetwork . oauth-scopes=est Optional. The set of Google API scopes to be made available on all node VMs. If oauth_scopes is empty, defaults to [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Each invocation of this argument appends the given value to the array. service-account=ipsum Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated. subnetwork=ipsum Optional. The Compute Engine subnetwork to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\" If a subnetwork is provided, nodeConfig.network must also be provided, and the subnetwork must belong to the enclosing environment's project and location. tags=est Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with RFC1035 . Cannot be updated. Each invocation of this argument appends the given value to the array. .. node-count=39 The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. private-environment-config cloud-composer-connection-subnetwork=ea Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork. cloud-composer-network-ipv4-cidr-block=dolor Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-composer-network-ipv4-reserved-range=lorem Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-sql-ipv4-cidr-block=eos Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block . enable-private-builds-only=false Optional. If true , builds performed during operations that install Python packages have only private connectivity to Google services (including Artifact Registry) and VPC network (if either NodeConfig.network and NodeConfig.subnetwork fields or NodeConfig.composer_network_attachment field are specified). If false , the builds also have access to the internet. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. enable-private-environment=true Optional. If true , a Private IP Cloud Composer environment is created. If this field is set to true, IPAllocationPolicy.use_ip_aliases must be set to true for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-privately-used-public-ips=false Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for IPAllocationPolicy.cluster_ipv4_cidr_block and IPAllocationPolicy.service_ipv4_cidr_block . networking-config connection-type=sed Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment. ..private-cluster-config enable-private-endpoint=true Optional. If true , access to the public endpoint of the GKE cluster is denied. master-ipv4-cidr-block=stet Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used. master-ipv4-reserved-range=kasd Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network. .. web-server-ipv4-cidr-block=et Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block . This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. web-server-ipv4-reserved-range=sed Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. ..recovery-config.scheduled-snapshots-config enabled=true Optional. Whether scheduled snapshots creation is enabled. snapshot-creation-schedule=vero Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution. snapshot-location=erat Optional. The Cloud Storage location for storing automatically created snapshots. time-zone=sed Optional. Time zone that sets the context to interpret snapshot_creation_schedule. ... resilience-mode=duo Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow- . .* and newer. software-config airflow-config-overrides=key=dolore Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example \"core-dags_are_paused_at_creation\". Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\"). The property name must not be empty and must not contain an equals sign (\"=\") or semicolon (\";\"). Section and property names must not contain a period (\".\"). Apache Airflow configuration property names must be written in snake_case . Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are blocked , and cannot be overridden. the value will be associated with the given key cloud-data-lineage-integration enabled=false Optional. Whether or not Cloud Data Lineage integration is enabled. .. env-variables=key=diam Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression a-zA-Z_* . They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+ ), and they cannot match any of the following reserved names: * AIRFLOW_HOME * C_FORCE_ROOT * CONTAINER_NAME * DAGS_FOLDER * GCP_PROJECT * GCS_BUCKET * GKE_CLUSTER_NAME * SQL_DATABASE * SQL_INSTANCE * SQL_PASSWORD * SQL_PROJECT * SQL_REGION * SQL_USER the value will be associated with the given key image-version=dolor The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?) . When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full semantic version , or an alias in the form of major version number or latest . When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also version list and versioning overview . pypi-packages=key=et Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as \"numpy\" and values are the lowercase extras and version specifier such as \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]>=1.8.2, <1.9.2\". To specify a package without pinning it to a version specifier, use the empty string as the value. the value will be associated with the given key python-version=et Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use Python major version 3. scheduler-count=6 Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . web-server-plugins-mode=stet Optional. Whether or not the web server uses custom plugins. If unspecified, the field defaults to PLUGINS_ENABLED . This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. ..web-server-config machine-type=dolor Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values. ..workloads-config.dag-processor count=81 Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor instance will be created. cpu=0.19681975392268636 Optional. CPU request and limit for a single Airflow DAG processor replica. memory-gb=0.10459029141758258 Optional. Memory (GB) request and limit for a single Airflow DAG processor replica. storage-gb=0.19657477328425788 Optional. Storage (GB) request and limit for a single Airflow DAG processor replica. ..scheduler count=95 Optional. The number of schedulers. cpu=0.9165308177445435 Optional. CPU request and limit for a single Airflow scheduler replica. memory-gb=0.7982388255646697 Optional. Memory (GB) request and limit for a single Airflow scheduler replica. storage-gb=0.31428290912855783 Optional. Storage (GB) request and limit for a single Airflow scheduler replica. ..triggerer count=78 Optional. The number of triggerers. cpu=0.333591971041029 Optional. CPU request and limit for a single Airflow triggerer replica. memory-gb=0.5721089079262882 Optional. Memory (GB) request and limit for a single Airflow triggerer replica. ..web-server cpu=0.22880530766851637 Optional. CPU request and limit for Airflow web server. memory-gb=0.04583256524798884 Optional. Memory (GB) request and limit for Airflow web server. storage-gb=0.9786556702510281 Optional. Storage (GB) request and limit for Airflow web server. ..worker cpu=0.726541471822237 Optional. CPU request and limit for a single Airflow worker replica. max-count=39 Optional. Maximum number of workers for autoscaling. memory-gb=0.8484298131719972 Optional. Memory (GB) request and limit for a single Airflow worker replica. min-count=27 Optional. Minimum number of workers for autoscaling. storage-gb=0.611403219211556 Optional. Storage (GB) request and limit for a single Airflow worker replica. .... create-time=voluptua. Output only. The time at which this environment was created. labels=key=dolore Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size. the value will be associated with the given key name=dolore The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. satisfies-pzs=false Output only. Reserved for future use. state=amet. The current state of the environment. storage-config bucket=ea Optional. The name of the Cloud Storage bucket used by the environment. No gs:// prefix. .. update-time=sadipscing Output only. The time at which this environment was last modified. uuid=lorem Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Create"},{"location":"projects_locations-environments-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-create ...","title":"Scopes"},{"location":"projects_locations-environments-create/#required-scalar-argument","text":"<parent> (string) The parent must be of the form \"projects/{projectId}/locations/{locationId}\".","title":"Required Scalar Argument"},{"location":"projects_locations-environments-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Environment: config: airflow-byoid-uri: string airflow-uri: string dag-gcs-prefix: string data-retention-config: airflow-metadata-retention-config: retention-days: integer retention-mode: string task-logs-retention-config: storage-mode: string database-config: machine-type: string zone: string encryption-config: kms-key-name: string environment-size: string gke-cluster: string maintenance-window: end-time: string recurrence: string start-time: string master-authorized-networks-config: enabled: boolean node-config: composer-internal-ipv4-cidr-block: string composer-network-attachment: string disk-size-gb: integer enable-ip-masq-agent: boolean ip-allocation-policy: cluster-ipv4-cidr-block: string cluster-secondary-range-name: string services-ipv4-cidr-block: string services-secondary-range-name: string use-ip-aliases: boolean location: string machine-type: string network: string oauth-scopes: [string] service-account: string subnetwork: string tags: [string] node-count: integer private-environment-config: cloud-composer-connection-subnetwork: string cloud-composer-network-ipv4-cidr-block: string cloud-composer-network-ipv4-reserved-range: string cloud-sql-ipv4-cidr-block: string enable-private-builds-only: boolean enable-private-environment: boolean enable-privately-used-public-ips: boolean networking-config: connection-type: string private-cluster-config: enable-private-endpoint: boolean master-ipv4-cidr-block: string master-ipv4-reserved-range: string web-server-ipv4-cidr-block: string web-server-ipv4-reserved-range: string recovery-config: scheduled-snapshots-config: enabled: boolean snapshot-creation-schedule: string snapshot-location: string time-zone: string resilience-mode: string software-config: airflow-config-overrides: { string: string } cloud-data-lineage-integration: enabled: boolean env-variables: { string: string } image-version: string pypi-packages: { string: string } python-version: string scheduler-count: integer web-server-plugins-mode: string web-server-config: machine-type: string workloads-config: dag-processor: count: integer cpu: number memory-gb: number storage-gb: number scheduler: count: integer cpu: number memory-gb: number storage-gb: number triggerer: count: integer cpu: number memory-gb: number web-server: cpu: number memory-gb: number storage-gb: number worker: cpu: number max-count: integer memory-gb: number min-count: integer storage-gb: number create-time: string labels: { string: string } name: string satisfies-pzs: boolean state: string storage-config: bucket: string update-time: string uuid: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .config airflow-byoid-uri=et Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see Access environments with workforce identity federation ). airflow-uri=magna Output only. The URI of the Apache Airflow Web UI hosted within this environment (see Airflow web interface ). dag-gcs-prefix=no Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix. data-retention-config.airflow-metadata-retention-config retention-days=46 Optional. How many days data should be retained for. retention-mode=voluptua. Optional. Retention can be either enabled or disabled. ..task-logs-retention-config storage-mode=at Optional. The mode of storage for Airflow workers task logs. For details, see go/composer-store-task-logs-in-cloud-logging-only-design-doc ...database-config machine-type=sanctus Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. zone=sed Optional. The Compute Engine zone where the Airflow database is created. If zone is provided, it must be in the region selected for the environment. If zone is not provided, a zone is automatically selected. The zone can only be set during environment creation. Supported for Cloud Composer environments in versions composer-2. . -airflow- . .*. ..encryption-config kms-key-name=amet. Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used. .. environment-size=takimata Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. gke-cluster=amet. Output only. The Kubernetes Engine cluster used to run this environment. maintenance-window end-time=duo Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to start_time . recurrence=ipsum Required. Maintenance window recurrence. Format is a subset of RFC-5545 RRULE . The only allowed values for FREQ field are FREQ=DAILY and FREQ=WEEKLY;BYDAY=... Example values: FREQ=WEEKLY;BYDAY=TU,WE , FREQ=DAILY . start-time=gubergren Required. Start time of the first recurrence of the maintenance window. ..master-authorized-networks-config enabled=true Whether or not master authorized networks feature is enabled. ..node-config composer-internal-ipv4-cidr-block=gubergren Optional. The IP range in CIDR notation to use internally by Cloud Composer. IP addresses are not reserved - and the same range can be used by multiple Cloud Composer environments. In case of overlap, IPs from this range will not be accessible in the user's VPC network. Cannot be updated. If not specified, the default value of '100.64.128.0/20' is used. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. composer-network-attachment=eos Optional. Network Attachment that Cloud Composer environment is connected to, which provides connectivity with a user's VPC network. Takes precedence over network and subnetwork settings. If not provided, but network and subnetwork are defined during environment, it will be provisioned. If not provided and network and subnetwork are also empty, then connectivity to user's VPC network is disabled. Network attachment must be provided in format projects/{project}/regions/{region}/networkAttachments/{networkAttachment}. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. disk-size-gb=97 Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-ip-masq-agent=true Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent ip-allocation-policy cluster-ipv4-cidr-block=invidunt Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. cluster-secondary-range-name=amet Optional. The name of the GKE cluster's secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. services-ipv4-cidr-block=duo Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. services-secondary-range-name=ipsum Optional. The name of the services' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. use-ip-aliases=false Optional. Whether or not to enable Alias IPs in the GKE cluster. If true , a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use VPC-native GKE clusters. .. location=ut Optional. The Compute Engine zone in which to deploy the VMs used to run the Apache Airflow software, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}\". This location must belong to the enclosing environment's project and location. If both this field and nodeConfig.machineType are specified, nodeConfig.machineType must belong to this location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field ( location or nodeConfig.machineType ) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. machine-type=gubergren Optional. The Compute Engine machine type used for cluster instances, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\". The machineType must belong to the enclosing environment's project and location. If both this field and nodeConfig.location are specified, this machineType must belong to the nodeConfig.location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and nodeConfig.location is specified, the location information from the specified field will be propagated to the unspecified field. The machineTypeId must not be a shared-core machine type . If this field is unspecified, the machineTypeId defaults to \"n1-standard-1\". This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. network=rebum. Optional. The Compute Engine network to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/global/networks/{networkId}\". If unspecified, the \"default\" network ID in the environment's project is used. If a Custom Subnet Network is provided, nodeConfig.subnetwork must also be provided. For Shared VPC subnetwork requirements, see nodeConfig.subnetwork . oauth-scopes=est Optional. The set of Google API scopes to be made available on all node VMs. If oauth_scopes is empty, defaults to [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Each invocation of this argument appends the given value to the array. service-account=ipsum Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated. subnetwork=ipsum Optional. The Compute Engine subnetwork to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\" If a subnetwork is provided, nodeConfig.network must also be provided, and the subnetwork must belong to the enclosing environment's project and location. tags=est Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with RFC1035 . Cannot be updated. Each invocation of this argument appends the given value to the array. .. node-count=39 The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. private-environment-config cloud-composer-connection-subnetwork=ea Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork. cloud-composer-network-ipv4-cidr-block=dolor Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-composer-network-ipv4-reserved-range=lorem Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-sql-ipv4-cidr-block=eos Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block . enable-private-builds-only=false Optional. If true , builds performed during operations that install Python packages have only private connectivity to Google services (including Artifact Registry) and VPC network (if either NodeConfig.network and NodeConfig.subnetwork fields or NodeConfig.composer_network_attachment field are specified). If false , the builds also have access to the internet. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. enable-private-environment=true Optional. If true , a Private IP Cloud Composer environment is created. If this field is set to true, IPAllocationPolicy.use_ip_aliases must be set to true for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-privately-used-public-ips=false Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for IPAllocationPolicy.cluster_ipv4_cidr_block and IPAllocationPolicy.service_ipv4_cidr_block . networking-config connection-type=sed Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment. ..private-cluster-config enable-private-endpoint=true Optional. If true , access to the public endpoint of the GKE cluster is denied. master-ipv4-cidr-block=stet Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used. master-ipv4-reserved-range=kasd Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network. .. web-server-ipv4-cidr-block=et Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block . This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. web-server-ipv4-reserved-range=sed Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. ..recovery-config.scheduled-snapshots-config enabled=true Optional. Whether scheduled snapshots creation is enabled. snapshot-creation-schedule=vero Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution. snapshot-location=erat Optional. The Cloud Storage location for storing automatically created snapshots. time-zone=sed Optional. Time zone that sets the context to interpret snapshot_creation_schedule. ... resilience-mode=duo Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow- . .* and newer. software-config airflow-config-overrides=key=dolore Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example \"core-dags_are_paused_at_creation\". Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\"). The property name must not be empty and must not contain an equals sign (\"=\") or semicolon (\";\"). Section and property names must not contain a period (\".\"). Apache Airflow configuration property names must be written in snake_case . Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are blocked , and cannot be overridden. the value will be associated with the given key cloud-data-lineage-integration enabled=false Optional. Whether or not Cloud Data Lineage integration is enabled. .. env-variables=key=diam Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression a-zA-Z_* . They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+ ), and they cannot match any of the following reserved names: * AIRFLOW_HOME * C_FORCE_ROOT * CONTAINER_NAME * DAGS_FOLDER * GCP_PROJECT * GCS_BUCKET * GKE_CLUSTER_NAME * SQL_DATABASE * SQL_INSTANCE * SQL_PASSWORD * SQL_PROJECT * SQL_REGION * SQL_USER the value will be associated with the given key image-version=dolor The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?) . When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full semantic version , or an alias in the form of major version number or latest . When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also version list and versioning overview . pypi-packages=key=et Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as \"numpy\" and values are the lowercase extras and version specifier such as \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]>=1.8.2, <1.9.2\". To specify a package without pinning it to a version specifier, use the empty string as the value. the value will be associated with the given key python-version=et Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use Python major version 3. scheduler-count=6 Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . web-server-plugins-mode=stet Optional. Whether or not the web server uses custom plugins. If unspecified, the field defaults to PLUGINS_ENABLED . This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. ..web-server-config machine-type=dolor Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values. ..workloads-config.dag-processor count=81 Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor instance will be created. cpu=0.19681975392268636 Optional. CPU request and limit for a single Airflow DAG processor replica. memory-gb=0.10459029141758258 Optional. Memory (GB) request and limit for a single Airflow DAG processor replica. storage-gb=0.19657477328425788 Optional. Storage (GB) request and limit for a single Airflow DAG processor replica. ..scheduler count=95 Optional. The number of schedulers. cpu=0.9165308177445435 Optional. CPU request and limit for a single Airflow scheduler replica. memory-gb=0.7982388255646697 Optional. Memory (GB) request and limit for a single Airflow scheduler replica. storage-gb=0.31428290912855783 Optional. Storage (GB) request and limit for a single Airflow scheduler replica. ..triggerer count=78 Optional. The number of triggerers. cpu=0.333591971041029 Optional. CPU request and limit for a single Airflow triggerer replica. memory-gb=0.5721089079262882 Optional. Memory (GB) request and limit for a single Airflow triggerer replica. ..web-server cpu=0.22880530766851637 Optional. CPU request and limit for Airflow web server. memory-gb=0.04583256524798884 Optional. Memory (GB) request and limit for Airflow web server. storage-gb=0.9786556702510281 Optional. Storage (GB) request and limit for Airflow web server. ..worker cpu=0.726541471822237 Optional. CPU request and limit for a single Airflow worker replica. max-count=39 Optional. Maximum number of workers for autoscaling. memory-gb=0.8484298131719972 Optional. Memory (GB) request and limit for a single Airflow worker replica. min-count=27 Optional. Minimum number of workers for autoscaling. storage-gb=0.611403219211556 Optional. Storage (GB) request and limit for a single Airflow worker replica. .... create-time=voluptua. Output only. The time at which this environment was created. labels=key=dolore Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size. the value will be associated with the given key name=dolore The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. satisfies-pzs=false Output only. Reserved for future use. state=amet. The current state of the environment. storage-config bucket=ea Optional. The name of the Cloud Storage bucket used by the environment. No gs:// prefix. .. update-time=sadipscing Output only. The time at which this environment was last modified. uuid=lorem Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.","title":"Required Request Value"},{"location":"projects_locations-environments-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-database-failover/","text":"Triggers database failover (only for highly resilient environments). Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-database-failover ... Required Scalar Argument <environment> (string) Target environment: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatabaseFailoverRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Database Failover"},{"location":"projects_locations-environments-database-failover/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-database-failover ...","title":"Scopes"},{"location":"projects_locations-environments-database-failover/#required-scalar-argument","text":"<environment> (string) Target environment: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-database-failover/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatabaseFailoverRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"projects_locations-environments-database-failover/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-database-failover/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-database-failover/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-delete/","text":"Delete an environment. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-delete ... Required Scalar Argument <name> (string) The environment to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Delete"},{"location":"projects_locations-environments-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-delete ...","title":"Scopes"},{"location":"projects_locations-environments-delete/#required-scalar-argument","text":"<name> (string) The environment to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-execute-airflow-command/","text":"Executes Airflow CLI command. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-execute-airflow-command ... Required Scalar Argument <environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\". Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExecuteAirflowCommandRequest: command: string parameters: [string] subcommand: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . command=invidunt Airflow command. parameters=no Parameters for the Airflow command/subcommand as an array of arguments. It may contain positional arguments like [&#34;my-dag-id&#34;] , key-value parameters like [&#34;--foo=bar&#34;] or [&#34;--foo&#34;,&#34;bar&#34;] , or other flags like [&#34;-f&#34;] . Each invocation of this argument appends the given value to the array. subcommand=est Airflow subcommand. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Execute Airflow Command"},{"location":"projects_locations-environments-execute-airflow-command/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-execute-airflow-command ...","title":"Scopes"},{"location":"projects_locations-environments-execute-airflow-command/#required-scalar-argument","text":"<environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\".","title":"Required Scalar Argument"},{"location":"projects_locations-environments-execute-airflow-command/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExecuteAirflowCommandRequest: command: string parameters: [string] subcommand: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . command=invidunt Airflow command. parameters=no Parameters for the Airflow command/subcommand as an array of arguments. It may contain positional arguments like [&#34;my-dag-id&#34;] , key-value parameters like [&#34;--foo=bar&#34;] or [&#34;--foo&#34;,&#34;bar&#34;] , or other flags like [&#34;-f&#34;] . Each invocation of this argument appends the given value to the array. subcommand=est Airflow subcommand.","title":"Required Request Value"},{"location":"projects_locations-environments-execute-airflow-command/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-execute-airflow-command/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-execute-airflow-command/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-fetch-database-properties/","text":"Fetches database properties. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-fetch-database-properties ... Required Scalar Argument <environment> (string) Required. The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Fetch Database Properties"},{"location":"projects_locations-environments-fetch-database-properties/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-fetch-database-properties ...","title":"Scopes"},{"location":"projects_locations-environments-fetch-database-properties/#required-scalar-argument","text":"<environment> (string) Required. The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-fetch-database-properties/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-fetch-database-properties/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-get/","text":"Get an existing environment. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-get ... Required Scalar Argument <name> (string) The resource name of the environment to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Get"},{"location":"projects_locations-environments-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-get ...","title":"Scopes"},{"location":"projects_locations-environments-get/#required-scalar-argument","text":"<name> (string) The resource name of the environment to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-list/","text":"List environments. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-list ... Required Scalar Argument <parent> (string) List environments in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of environments to return. -p page-token=string The next_page_token value returned from a previous List request, if any. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments List"},{"location":"projects_locations-environments-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-list ...","title":"Scopes"},{"location":"projects_locations-environments-list/#required-scalar-argument","text":"<parent> (string) List environments in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of environments to return. -p page-token=string The next_page_token value returned from a previous List request, if any.","title":"Optional Method Properties"},{"location":"projects_locations-environments-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-load-snapshot/","text":"Loads a snapshot of a Cloud Composer environment. As a result of this operation, a snapshot of environment's specified in LoadSnapshotRequest is loaded into the environment. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-load-snapshot ... Required Scalar Argument <environment> (string) The resource name of the target environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LoadSnapshotRequest: skip-airflow-overrides-setting: boolean skip-environment-variables-setting: boolean skip-gcs-data-copying: boolean skip-pypi-packages-installation: boolean snapshot-path: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . skip-airflow-overrides-setting=true Whether or not to skip setting Airflow overrides when loading the environment's state. skip-environment-variables-setting=false Whether or not to skip setting environment variables when loading the environment's state. skip-gcs-data-copying=true Whether or not to skip copying Cloud Storage data when loading the environment's state. skip-pypi-packages-installation=true Whether or not to skip installing Pypi packages when loading the environment's state. snapshot-path=est A Cloud Storage path to a snapshot to load, e.g.: \"gs://my-bucket/snapshots/project_location_environment_timestamp\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Load Snapshot"},{"location":"projects_locations-environments-load-snapshot/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-load-snapshot ...","title":"Scopes"},{"location":"projects_locations-environments-load-snapshot/#required-scalar-argument","text":"<environment> (string) The resource name of the target environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-load-snapshot/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LoadSnapshotRequest: skip-airflow-overrides-setting: boolean skip-environment-variables-setting: boolean skip-gcs-data-copying: boolean skip-pypi-packages-installation: boolean snapshot-path: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . skip-airflow-overrides-setting=true Whether or not to skip setting Airflow overrides when loading the environment's state. skip-environment-variables-setting=false Whether or not to skip setting environment variables when loading the environment's state. skip-gcs-data-copying=true Whether or not to skip copying Cloud Storage data when loading the environment's state. skip-pypi-packages-installation=true Whether or not to skip installing Pypi packages when loading the environment's state. snapshot-path=est A Cloud Storage path to a snapshot to load, e.g.: \"gs://my-bucket/snapshots/project_location_environment_timestamp\".","title":"Required Request Value"},{"location":"projects_locations-environments-load-snapshot/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-load-snapshot/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-load-snapshot/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-patch/","text":"Update an environment. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-patch ... Required Scalar Argument <name> (string) The relative resource name of the environment to update, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Environment: config: airflow-byoid-uri: string airflow-uri: string dag-gcs-prefix: string data-retention-config: airflow-metadata-retention-config: retention-days: integer retention-mode: string task-logs-retention-config: storage-mode: string database-config: machine-type: string zone: string encryption-config: kms-key-name: string environment-size: string gke-cluster: string maintenance-window: end-time: string recurrence: string start-time: string master-authorized-networks-config: enabled: boolean node-config: composer-internal-ipv4-cidr-block: string composer-network-attachment: string disk-size-gb: integer enable-ip-masq-agent: boolean ip-allocation-policy: cluster-ipv4-cidr-block: string cluster-secondary-range-name: string services-ipv4-cidr-block: string services-secondary-range-name: string use-ip-aliases: boolean location: string machine-type: string network: string oauth-scopes: [string] service-account: string subnetwork: string tags: [string] node-count: integer private-environment-config: cloud-composer-connection-subnetwork: string cloud-composer-network-ipv4-cidr-block: string cloud-composer-network-ipv4-reserved-range: string cloud-sql-ipv4-cidr-block: string enable-private-builds-only: boolean enable-private-environment: boolean enable-privately-used-public-ips: boolean networking-config: connection-type: string private-cluster-config: enable-private-endpoint: boolean master-ipv4-cidr-block: string master-ipv4-reserved-range: string web-server-ipv4-cidr-block: string web-server-ipv4-reserved-range: string recovery-config: scheduled-snapshots-config: enabled: boolean snapshot-creation-schedule: string snapshot-location: string time-zone: string resilience-mode: string software-config: airflow-config-overrides: { string: string } cloud-data-lineage-integration: enabled: boolean env-variables: { string: string } image-version: string pypi-packages: { string: string } python-version: string scheduler-count: integer web-server-plugins-mode: string web-server-config: machine-type: string workloads-config: dag-processor: count: integer cpu: number memory-gb: number storage-gb: number scheduler: count: integer cpu: number memory-gb: number storage-gb: number triggerer: count: integer cpu: number memory-gb: number web-server: cpu: number memory-gb: number storage-gb: number worker: cpu: number max-count: integer memory-gb: number min-count: integer storage-gb: number create-time: string labels: { string: string } name: string satisfies-pzs: boolean state: string storage-config: bucket: string update-time: string uuid: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .config airflow-byoid-uri=sed Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see Access environments with workforce identity federation ). airflow-uri=diam Output only. The URI of the Apache Airflow Web UI hosted within this environment (see Airflow web interface ). dag-gcs-prefix=dolores Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix. data-retention-config.airflow-metadata-retention-config retention-days=32 Optional. How many days data should be retained for. retention-mode=et Optional. Retention can be either enabled or disabled. ..task-logs-retention-config storage-mode=sed Optional. The mode of storage for Airflow workers task logs. For details, see go/composer-store-task-logs-in-cloud-logging-only-design-doc ...database-config machine-type=no Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. zone=et Optional. The Compute Engine zone where the Airflow database is created. If zone is provided, it must be in the region selected for the environment. If zone is not provided, a zone is automatically selected. The zone can only be set during environment creation. Supported for Cloud Composer environments in versions composer-2. . -airflow- . .*. ..encryption-config kms-key-name=elitr Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used. .. environment-size=sed Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. gke-cluster=no Output only. The Kubernetes Engine cluster used to run this environment. maintenance-window end-time=nonumy Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to start_time . recurrence=at Required. Maintenance window recurrence. Format is a subset of RFC-5545 RRULE . The only allowed values for FREQ field are FREQ=DAILY and FREQ=WEEKLY;BYDAY=... Example values: FREQ=WEEKLY;BYDAY=TU,WE , FREQ=DAILY . start-time=sadipscing Required. Start time of the first recurrence of the maintenance window. ..master-authorized-networks-config enabled=true Whether or not master authorized networks feature is enabled. ..node-config composer-internal-ipv4-cidr-block=sadipscing Optional. The IP range in CIDR notation to use internally by Cloud Composer. IP addresses are not reserved - and the same range can be used by multiple Cloud Composer environments. In case of overlap, IPs from this range will not be accessible in the user's VPC network. Cannot be updated. If not specified, the default value of '100.64.128.0/20' is used. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. composer-network-attachment=erat Optional. Network Attachment that Cloud Composer environment is connected to, which provides connectivity with a user's VPC network. Takes precedence over network and subnetwork settings. If not provided, but network and subnetwork are defined during environment, it will be provisioned. If not provided and network and subnetwork are also empty, then connectivity to user's VPC network is disabled. Network attachment must be provided in format projects/{project}/regions/{region}/networkAttachments/{networkAttachment}. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. disk-size-gb=19 Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-ip-masq-agent=true Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent ip-allocation-policy cluster-ipv4-cidr-block=est Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. cluster-secondary-range-name=et Optional. The name of the GKE cluster's secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. services-ipv4-cidr-block=sea Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. services-secondary-range-name=consetetur Optional. The name of the services' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. use-ip-aliases=true Optional. Whether or not to enable Alias IPs in the GKE cluster. If true , a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use VPC-native GKE clusters. .. location=stet Optional. The Compute Engine zone in which to deploy the VMs used to run the Apache Airflow software, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}\". This location must belong to the enclosing environment's project and location. If both this field and nodeConfig.machineType are specified, nodeConfig.machineType must belong to this location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field ( location or nodeConfig.machineType ) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. machine-type=est Optional. The Compute Engine machine type used for cluster instances, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\". The machineType must belong to the enclosing environment's project and location. If both this field and nodeConfig.location are specified, this machineType must belong to the nodeConfig.location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and nodeConfig.location is specified, the location information from the specified field will be propagated to the unspecified field. The machineTypeId must not be a shared-core machine type . If this field is unspecified, the machineTypeId defaults to \"n1-standard-1\". This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. network=aliquyam Optional. The Compute Engine network to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/global/networks/{networkId}\". If unspecified, the \"default\" network ID in the environment's project is used. If a Custom Subnet Network is provided, nodeConfig.subnetwork must also be provided. For Shared VPC subnetwork requirements, see nodeConfig.subnetwork . oauth-scopes=elitr Optional. The set of Google API scopes to be made available on all node VMs. If oauth_scopes is empty, defaults to [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Each invocation of this argument appends the given value to the array. service-account=duo Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated. subnetwork=diam Optional. The Compute Engine subnetwork to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\" If a subnetwork is provided, nodeConfig.network must also be provided, and the subnetwork must belong to the enclosing environment's project and location. tags=est Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with RFC1035 . Cannot be updated. Each invocation of this argument appends the given value to the array. .. node-count=48 The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. private-environment-config cloud-composer-connection-subnetwork=sed Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork. cloud-composer-network-ipv4-cidr-block=eos Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-composer-network-ipv4-reserved-range=lorem Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-sql-ipv4-cidr-block=ea Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block . enable-private-builds-only=true Optional. If true , builds performed during operations that install Python packages have only private connectivity to Google services (including Artifact Registry) and VPC network (if either NodeConfig.network and NodeConfig.subnetwork fields or NodeConfig.composer_network_attachment field are specified). If false , the builds also have access to the internet. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. enable-private-environment=false Optional. If true , a Private IP Cloud Composer environment is created. If this field is set to true, IPAllocationPolicy.use_ip_aliases must be set to true for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-privately-used-public-ips=false Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for IPAllocationPolicy.cluster_ipv4_cidr_block and IPAllocationPolicy.service_ipv4_cidr_block . networking-config connection-type=dolore Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment. ..private-cluster-config enable-private-endpoint=true Optional. If true , access to the public endpoint of the GKE cluster is denied. master-ipv4-cidr-block=lorem Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used. master-ipv4-reserved-range=accusam Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network. .. web-server-ipv4-cidr-block=amet Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block . This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. web-server-ipv4-reserved-range=erat Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. ..recovery-config.scheduled-snapshots-config enabled=true Optional. Whether scheduled snapshots creation is enabled. snapshot-creation-schedule=erat Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution. snapshot-location=accusam Optional. The Cloud Storage location for storing automatically created snapshots. time-zone=sea Optional. Time zone that sets the context to interpret snapshot_creation_schedule. ... resilience-mode=takimata Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow- . .* and newer. software-config airflow-config-overrides=key=lorem Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example \"core-dags_are_paused_at_creation\". Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\"). The property name must not be empty and must not contain an equals sign (\"=\") or semicolon (\";\"). Section and property names must not contain a period (\".\"). Apache Airflow configuration property names must be written in snake_case . Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are blocked , and cannot be overridden. the value will be associated with the given key cloud-data-lineage-integration enabled=false Optional. Whether or not Cloud Data Lineage integration is enabled. .. env-variables=key=dolor Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression a-zA-Z_* . They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+ ), and they cannot match any of the following reserved names: * AIRFLOW_HOME * C_FORCE_ROOT * CONTAINER_NAME * DAGS_FOLDER * GCP_PROJECT * GCS_BUCKET * GKE_CLUSTER_NAME * SQL_DATABASE * SQL_INSTANCE * SQL_PASSWORD * SQL_PROJECT * SQL_REGION * SQL_USER the value will be associated with the given key image-version=et The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?) . When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full semantic version , or an alias in the form of major version number or latest . When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also version list and versioning overview . pypi-packages=key=sit Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as \"numpy\" and values are the lowercase extras and version specifier such as \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]>=1.8.2, <1.9.2\". To specify a package without pinning it to a version specifier, use the empty string as the value. the value will be associated with the given key python-version=erat Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use Python major version 3. scheduler-count=91 Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . web-server-plugins-mode=nonumy Optional. Whether or not the web server uses custom plugins. If unspecified, the field defaults to PLUGINS_ENABLED . This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. ..web-server-config machine-type=et Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values. ..workloads-config.dag-processor count=89 Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor instance will be created. cpu=0.6291766861205718 Optional. CPU request and limit for a single Airflow DAG processor replica. memory-gb=0.03937387488958621 Optional. Memory (GB) request and limit for a single Airflow DAG processor replica. storage-gb=0.5399657234545516 Optional. Storage (GB) request and limit for a single Airflow DAG processor replica. ..scheduler count=24 Optional. The number of schedulers. cpu=0.6413061576894121 Optional. CPU request and limit for a single Airflow scheduler replica. memory-gb=0.3069400471690349 Optional. Memory (GB) request and limit for a single Airflow scheduler replica. storage-gb=0.9429759678190598 Optional. Storage (GB) request and limit for a single Airflow scheduler replica. ..triggerer count=69 Optional. The number of triggerers. cpu=0.3151317222476111 Optional. CPU request and limit for a single Airflow triggerer replica. memory-gb=0.4023962607532475 Optional. Memory (GB) request and limit for a single Airflow triggerer replica. ..web-server cpu=0.3586942197762041 Optional. CPU request and limit for Airflow web server. memory-gb=0.9172551803684075 Optional. Memory (GB) request and limit for Airflow web server. storage-gb=0.8918752107029069 Optional. Storage (GB) request and limit for Airflow web server. ..worker cpu=0.5801385222305127 Optional. CPU request and limit for a single Airflow worker replica. max-count=81 Optional. Maximum number of workers for autoscaling. memory-gb=0.38020685422472145 Optional. Memory (GB) request and limit for a single Airflow worker replica. min-count=79 Optional. Minimum number of workers for autoscaling. storage-gb=0.820349993375188 Optional. Storage (GB) request and limit for a single Airflow worker replica. .... create-time=dolor Output only. The time at which this environment was created. labels=key=lorem Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size. the value will be associated with the given key name=justo The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. satisfies-pzs=true Output only. Reserved for future use. state=no The current state of the environment. storage-config bucket=nonumy Optional. The name of the Cloud Storage bucket used by the environment. No gs:// prefix. .. update-time=sed Output only. The time at which this environment was last modified. uuid=kasd Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Required. A comma-separated list of paths, relative to Environment , of fields to update. For example, to set the version of scikit-learn to install in the environment to 0.19.0 and to remove an existing installation of numpy, the updateMask parameter would include the following two paths values: \"config.softwareConfig.pypiPackages.scikit-learn\" and \"config.softwareConfig.pypiPackages.numpy\". The included patch environment would specify the scikit-learn version as follows: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"scikit-learn\":\"==0.19.0\" } } } } Note that in the above example, any existing PyPI packages other than scikit-learn and numpy will be unaffected. Only one update type may be included in a single request's updateMask . For example, one cannot update both the PyPI packages and labels in the same request. However, it is possible to update multiple members of a map field simultaneously in the same request. For example, to set the labels \"label1\" and \"label2\" while clearing \"label3\" (assuming it already exists), one can provide the paths \"labels.label1\", \"labels.label2\", and \"labels.label3\" and populate the patch environment as follows: { \"labels\":{ \"label1\":\"new-label1-value\" \"label2\":\"new-label2-value\" } } Note that in the above example, any existing labels that are not included in the updateMask will be unaffected. It is also possible to replace an entire map field by providing the map field's path in the updateMask . The new value of the field will be that which is provided in the patch environment. For example, to delete all pre-existing user-specified PyPI packages and install botocore at version 1.7.14, the updateMask would contain the path \"config.softwareConfig.pypiPackages\", and the patch environment would be the following: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"botocore\":\"==1.7.14\" } } } } Note: Only the following fields can be updated: * config.softwareConfig.pypiPackages * Replace all custom custom PyPI packages. If a replacement package map is not included in environment , all custom PyPI packages are cleared. It is an error to provide both this mask and a mask specifying an individual package. * config.softwareConfig.pypiPackages. packagename * Update the custom PyPI package packagename , preserving other packages. To delete the package, include it in updateMask , and omit the mapping for it in environment.config.softwareConfig.pypiPackages . It is an error to provide both a mask of this form and the config.softwareConfig.pypiPackages mask. * labels * Replace all environment labels. If a replacement labels map is not included in environment , all labels are cleared. It is an error to provide both this mask and a mask specifying one or more individual labels. * labels. labelName * Set the label named labelName , while preserving other labels. To delete the label, include it in updateMask and omit its mapping in environment.labels . It is an error to provide both a mask of this form and the labels mask. * config.nodeCount * Horizontally scale the number of nodes in the environment. An integer greater than or equal to 3 must be provided in the config.nodeCount field. Supported for Cloud Composer environments in versions composer-1. . -airflow- . . . * config.webServerNetworkAccessControl * Replace the environment's current WebServerNetworkAccessControl . * config.softwareConfig.airflowConfigOverrides * Replace all Apache Airflow config overrides. If a replacement config overrides map is not included in environment , all config overrides are cleared. It is an error to provide both this mask and a mask specifying one or more individual config overrides. * config.softwareConfig.airflowConfigOverrides. section-name * Override the Apache Airflow config property name in the section named section , preserving other properties. To delete the property override, include it in updateMask and omit its mapping in environment.config.softwareConfig.airflowConfigOverrides . It is an error to provide both a mask of this form and the config.softwareConfig.airflowConfigOverrides mask. * config.softwareConfig.envVariables * Replace all environment variables. If a replacement environment variable map is not included in environment , all custom environment variables are cleared. * config.softwareConfig.schedulerCount * Horizontally scale the number of schedulers in Airflow. A positive integer not greater than the number of nodes must be provided in the config.softwareConfig.schedulerCount field. Supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . * config.databaseConfig.machineType * Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. Supported for Cloud Composer environments in versions composer-1. . -airflow- . . . * config.webServerConfig.machineType * Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Patch"},{"location":"projects_locations-environments-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-patch ...","title":"Scopes"},{"location":"projects_locations-environments-patch/#required-scalar-argument","text":"<name> (string) The relative resource name of the environment to update, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Environment: config: airflow-byoid-uri: string airflow-uri: string dag-gcs-prefix: string data-retention-config: airflow-metadata-retention-config: retention-days: integer retention-mode: string task-logs-retention-config: storage-mode: string database-config: machine-type: string zone: string encryption-config: kms-key-name: string environment-size: string gke-cluster: string maintenance-window: end-time: string recurrence: string start-time: string master-authorized-networks-config: enabled: boolean node-config: composer-internal-ipv4-cidr-block: string composer-network-attachment: string disk-size-gb: integer enable-ip-masq-agent: boolean ip-allocation-policy: cluster-ipv4-cidr-block: string cluster-secondary-range-name: string services-ipv4-cidr-block: string services-secondary-range-name: string use-ip-aliases: boolean location: string machine-type: string network: string oauth-scopes: [string] service-account: string subnetwork: string tags: [string] node-count: integer private-environment-config: cloud-composer-connection-subnetwork: string cloud-composer-network-ipv4-cidr-block: string cloud-composer-network-ipv4-reserved-range: string cloud-sql-ipv4-cidr-block: string enable-private-builds-only: boolean enable-private-environment: boolean enable-privately-used-public-ips: boolean networking-config: connection-type: string private-cluster-config: enable-private-endpoint: boolean master-ipv4-cidr-block: string master-ipv4-reserved-range: string web-server-ipv4-cidr-block: string web-server-ipv4-reserved-range: string recovery-config: scheduled-snapshots-config: enabled: boolean snapshot-creation-schedule: string snapshot-location: string time-zone: string resilience-mode: string software-config: airflow-config-overrides: { string: string } cloud-data-lineage-integration: enabled: boolean env-variables: { string: string } image-version: string pypi-packages: { string: string } python-version: string scheduler-count: integer web-server-plugins-mode: string web-server-config: machine-type: string workloads-config: dag-processor: count: integer cpu: number memory-gb: number storage-gb: number scheduler: count: integer cpu: number memory-gb: number storage-gb: number triggerer: count: integer cpu: number memory-gb: number web-server: cpu: number memory-gb: number storage-gb: number worker: cpu: number max-count: integer memory-gb: number min-count: integer storage-gb: number create-time: string labels: { string: string } name: string satisfies-pzs: boolean state: string storage-config: bucket: string update-time: string uuid: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .config airflow-byoid-uri=sed Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see Access environments with workforce identity federation ). airflow-uri=diam Output only. The URI of the Apache Airflow Web UI hosted within this environment (see Airflow web interface ). dag-gcs-prefix=dolores Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix. data-retention-config.airflow-metadata-retention-config retention-days=32 Optional. How many days data should be retained for. retention-mode=et Optional. Retention can be either enabled or disabled. ..task-logs-retention-config storage-mode=sed Optional. The mode of storage for Airflow workers task logs. For details, see go/composer-store-task-logs-in-cloud-logging-only-design-doc ...database-config machine-type=no Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. zone=et Optional. The Compute Engine zone where the Airflow database is created. If zone is provided, it must be in the region selected for the environment. If zone is not provided, a zone is automatically selected. The zone can only be set during environment creation. Supported for Cloud Composer environments in versions composer-2. . -airflow- . .*. ..encryption-config kms-key-name=elitr Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used. .. environment-size=sed Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. gke-cluster=no Output only. The Kubernetes Engine cluster used to run this environment. maintenance-window end-time=nonumy Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to start_time . recurrence=at Required. Maintenance window recurrence. Format is a subset of RFC-5545 RRULE . The only allowed values for FREQ field are FREQ=DAILY and FREQ=WEEKLY;BYDAY=... Example values: FREQ=WEEKLY;BYDAY=TU,WE , FREQ=DAILY . start-time=sadipscing Required. Start time of the first recurrence of the maintenance window. ..master-authorized-networks-config enabled=true Whether or not master authorized networks feature is enabled. ..node-config composer-internal-ipv4-cidr-block=sadipscing Optional. The IP range in CIDR notation to use internally by Cloud Composer. IP addresses are not reserved - and the same range can be used by multiple Cloud Composer environments. In case of overlap, IPs from this range will not be accessible in the user's VPC network. Cannot be updated. If not specified, the default value of '100.64.128.0/20' is used. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. composer-network-attachment=erat Optional. Network Attachment that Cloud Composer environment is connected to, which provides connectivity with a user's VPC network. Takes precedence over network and subnetwork settings. If not provided, but network and subnetwork are defined during environment, it will be provisioned. If not provided and network and subnetwork are also empty, then connectivity to user's VPC network is disabled. Network attachment must be provided in format projects/{project}/regions/{region}/networkAttachments/{networkAttachment}. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. disk-size-gb=19 Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-ip-masq-agent=true Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent ip-allocation-policy cluster-ipv4-cidr-block=est Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. cluster-secondary-range-name=et Optional. The name of the GKE cluster's secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. services-ipv4-cidr-block=sea Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. /14 ) to have GKE choose a range with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14 ) from the RFC-1918 private networks (e.g. 10.0.0.0/8 , 172.16.0.0/12 , 192.168.0.0/16 ) to pick a specific range to use. services-secondary-range-name=consetetur Optional. The name of the services' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1. . -airflow- . .*, this field is applicable only when use_ip_aliases is true. use-ip-aliases=true Optional. Whether or not to enable Alias IPs in the GKE cluster. If true , a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use VPC-native GKE clusters. .. location=stet Optional. The Compute Engine zone in which to deploy the VMs used to run the Apache Airflow software, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}\". This location must belong to the enclosing environment's project and location. If both this field and nodeConfig.machineType are specified, nodeConfig.machineType must belong to this location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field ( location or nodeConfig.machineType ) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. machine-type=est Optional. The Compute Engine machine type used for cluster instances, specified as a relative resource name . For example: \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\". The machineType must belong to the enclosing environment's project and location. If both this field and nodeConfig.location are specified, this machineType must belong to the nodeConfig.location ; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and nodeConfig.location is specified, the location information from the specified field will be propagated to the unspecified field. The machineTypeId must not be a shared-core machine type . If this field is unspecified, the machineTypeId defaults to \"n1-standard-1\". This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. network=aliquyam Optional. The Compute Engine network to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/global/networks/{networkId}\". If unspecified, the \"default\" network ID in the environment's project is used. If a Custom Subnet Network is provided, nodeConfig.subnetwork must also be provided. For Shared VPC subnetwork requirements, see nodeConfig.subnetwork . oauth-scopes=elitr Optional. The set of Google API scopes to be made available on all node VMs. If oauth_scopes is empty, defaults to [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Each invocation of this argument appends the given value to the array. service-account=duo Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated. subnetwork=diam Optional. The Compute Engine subnetwork to be used for machine communications, specified as a relative resource name . For example: \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\" If a subnetwork is provided, nodeConfig.network must also be provided, and the subnetwork must belong to the enclosing environment's project and location. tags=est Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with RFC1035 . Cannot be updated. Each invocation of this argument appends the given value to the array. .. node-count=48 The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. private-environment-config cloud-composer-connection-subnetwork=sed Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork. cloud-composer-network-ipv4-cidr-block=eos Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-composer-network-ipv4-reserved-range=lorem Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2. . -airflow- . .* and newer. cloud-sql-ipv4-cidr-block=ea Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block . enable-private-builds-only=true Optional. If true , builds performed during operations that install Python packages have only private connectivity to Google services (including Artifact Registry) and VPC network (if either NodeConfig.network and NodeConfig.subnetwork fields or NodeConfig.composer_network_attachment field are specified). If false , the builds also have access to the internet. This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. enable-private-environment=false Optional. If true , a Private IP Cloud Composer environment is created. If this field is set to true, IPAllocationPolicy.use_ip_aliases must be set to true for Cloud Composer environments in versions composer-1. . -airflow- . .*. enable-privately-used-public-ips=false Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for IPAllocationPolicy.cluster_ipv4_cidr_block and IPAllocationPolicy.service_ipv4_cidr_block . networking-config connection-type=dolore Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment. ..private-cluster-config enable-private-endpoint=true Optional. If true , access to the public endpoint of the GKE cluster is denied. master-ipv4-cidr-block=lorem Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used. master-ipv4-reserved-range=accusam Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network. .. web-server-ipv4-cidr-block=amet Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block . This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. web-server-ipv4-reserved-range=erat Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. ..recovery-config.scheduled-snapshots-config enabled=true Optional. Whether scheduled snapshots creation is enabled. snapshot-creation-schedule=erat Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution. snapshot-location=accusam Optional. The Cloud Storage location for storing automatically created snapshots. time-zone=sea Optional. Time zone that sets the context to interpret snapshot_creation_schedule. ... resilience-mode=takimata Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow- . .* and newer. software-config airflow-config-overrides=key=lorem Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example \"core-dags_are_paused_at_creation\". Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\"). The property name must not be empty and must not contain an equals sign (\"=\") or semicolon (\";\"). Section and property names must not contain a period (\".\"). Apache Airflow configuration property names must be written in snake_case . Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are blocked , and cannot be overridden. the value will be associated with the given key cloud-data-lineage-integration enabled=false Optional. Whether or not Cloud Data Lineage integration is enabled. .. env-variables=key=dolor Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression a-zA-Z_* . They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+ ), and they cannot match any of the following reserved names: * AIRFLOW_HOME * C_FORCE_ROOT * CONTAINER_NAME * DAGS_FOLDER * GCP_PROJECT * GCS_BUCKET * GKE_CLUSTER_NAME * SQL_DATABASE * SQL_INSTANCE * SQL_PASSWORD * SQL_PROJECT * SQL_REGION * SQL_USER the value will be associated with the given key image-version=et The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?) . When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full semantic version , or an alias in the form of major version number or latest . When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also version list and versioning overview . pypi-packages=key=sit Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as \"numpy\" and values are the lowercase extras and version specifier such as \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]>=1.8.2, <1.9.2\". To specify a package without pinning it to a version specifier, use the empty string as the value. the value will be associated with the given key python-version=erat Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1. . -airflow- . .*. Environments in newer versions always use Python major version 3. scheduler-count=91 Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . web-server-plugins-mode=nonumy Optional. Whether or not the web server uses custom plugins. If unspecified, the field defaults to PLUGINS_ENABLED . This field is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. ..web-server-config machine-type=et Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values. ..workloads-config.dag-processor count=89 Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor instance will be created. cpu=0.6291766861205718 Optional. CPU request and limit for a single Airflow DAG processor replica. memory-gb=0.03937387488958621 Optional. Memory (GB) request and limit for a single Airflow DAG processor replica. storage-gb=0.5399657234545516 Optional. Storage (GB) request and limit for a single Airflow DAG processor replica. ..scheduler count=24 Optional. The number of schedulers. cpu=0.6413061576894121 Optional. CPU request and limit for a single Airflow scheduler replica. memory-gb=0.3069400471690349 Optional. Memory (GB) request and limit for a single Airflow scheduler replica. storage-gb=0.9429759678190598 Optional. Storage (GB) request and limit for a single Airflow scheduler replica. ..triggerer count=69 Optional. The number of triggerers. cpu=0.3151317222476111 Optional. CPU request and limit for a single Airflow triggerer replica. memory-gb=0.4023962607532475 Optional. Memory (GB) request and limit for a single Airflow triggerer replica. ..web-server cpu=0.3586942197762041 Optional. CPU request and limit for Airflow web server. memory-gb=0.9172551803684075 Optional. Memory (GB) request and limit for Airflow web server. storage-gb=0.8918752107029069 Optional. Storage (GB) request and limit for Airflow web server. ..worker cpu=0.5801385222305127 Optional. CPU request and limit for a single Airflow worker replica. max-count=81 Optional. Maximum number of workers for autoscaling. memory-gb=0.38020685422472145 Optional. Memory (GB) request and limit for a single Airflow worker replica. min-count=79 Optional. Minimum number of workers for autoscaling. storage-gb=0.820349993375188 Optional. Storage (GB) request and limit for a single Airflow worker replica. .... create-time=dolor Output only. The time at which this environment was created. labels=key=lorem Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size. the value will be associated with the given key name=justo The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. satisfies-pzs=true Output only. Reserved for future use. state=no The current state of the environment. storage-config bucket=nonumy Optional. The name of the Cloud Storage bucket used by the environment. No gs:// prefix. .. update-time=sed Output only. The time at which this environment was last modified. uuid=kasd Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.","title":"Required Request Value"},{"location":"projects_locations-environments-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Required. A comma-separated list of paths, relative to Environment , of fields to update. For example, to set the version of scikit-learn to install in the environment to 0.19.0 and to remove an existing installation of numpy, the updateMask parameter would include the following two paths values: \"config.softwareConfig.pypiPackages.scikit-learn\" and \"config.softwareConfig.pypiPackages.numpy\". The included patch environment would specify the scikit-learn version as follows: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"scikit-learn\":\"==0.19.0\" } } } } Note that in the above example, any existing PyPI packages other than scikit-learn and numpy will be unaffected. Only one update type may be included in a single request's updateMask . For example, one cannot update both the PyPI packages and labels in the same request. However, it is possible to update multiple members of a map field simultaneously in the same request. For example, to set the labels \"label1\" and \"label2\" while clearing \"label3\" (assuming it already exists), one can provide the paths \"labels.label1\", \"labels.label2\", and \"labels.label3\" and populate the patch environment as follows: { \"labels\":{ \"label1\":\"new-label1-value\" \"label2\":\"new-label2-value\" } } Note that in the above example, any existing labels that are not included in the updateMask will be unaffected. It is also possible to replace an entire map field by providing the map field's path in the updateMask . The new value of the field will be that which is provided in the patch environment. For example, to delete all pre-existing user-specified PyPI packages and install botocore at version 1.7.14, the updateMask would contain the path \"config.softwareConfig.pypiPackages\", and the patch environment would be the following: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"botocore\":\"==1.7.14\" } } } } Note: Only the following fields can be updated: * config.softwareConfig.pypiPackages * Replace all custom custom PyPI packages. If a replacement package map is not included in environment , all custom PyPI packages are cleared. It is an error to provide both this mask and a mask specifying an individual package. * config.softwareConfig.pypiPackages. packagename * Update the custom PyPI package packagename , preserving other packages. To delete the package, include it in updateMask , and omit the mapping for it in environment.config.softwareConfig.pypiPackages . It is an error to provide both a mask of this form and the config.softwareConfig.pypiPackages mask. * labels * Replace all environment labels. If a replacement labels map is not included in environment , all labels are cleared. It is an error to provide both this mask and a mask specifying one or more individual labels. * labels. labelName * Set the label named labelName , while preserving other labels. To delete the label, include it in updateMask and omit its mapping in environment.labels . It is an error to provide both a mask of this form and the labels mask. * config.nodeCount * Horizontally scale the number of nodes in the environment. An integer greater than or equal to 3 must be provided in the config.nodeCount field. Supported for Cloud Composer environments in versions composer-1. . -airflow- . . . * config.webServerNetworkAccessControl * Replace the environment's current WebServerNetworkAccessControl . * config.softwareConfig.airflowConfigOverrides * Replace all Apache Airflow config overrides. If a replacement config overrides map is not included in environment , all config overrides are cleared. It is an error to provide both this mask and a mask specifying one or more individual config overrides. * config.softwareConfig.airflowConfigOverrides. section-name * Override the Apache Airflow config property name in the section named section , preserving other properties. To delete the property override, include it in updateMask and omit its mapping in environment.config.softwareConfig.airflowConfigOverrides . It is an error to provide both a mask of this form and the config.softwareConfig.airflowConfigOverrides mask. * config.softwareConfig.envVariables * Replace all environment variables. If a replacement environment variable map is not included in environment , all custom environment variables are cleared. * config.softwareConfig.schedulerCount * Horizontally scale the number of schedulers in Airflow. A positive integer not greater than the number of nodes must be provided in the config.softwareConfig.schedulerCount field. Supported for Cloud Composer environments in versions composer-1. . -airflow-2. . . * config.databaseConfig.machineType * Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. Supported for Cloud Composer environments in versions composer-1. . -airflow- . . . * config.webServerConfig.machineType * Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. Supported for Cloud Composer environments in versions composer-1. . -airflow- . .*.","title":"Optional Method Properties"},{"location":"projects_locations-environments-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-poll-airflow-command/","text":"Polls Airflow CLI command execution and fetches logs. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-poll-airflow-command ... Required Scalar Argument <environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PollAirflowCommandRequest: execution-id: string next-line-number: integer pod: string pod-namespace: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . execution-id=lorem The unique ID of the command execution. next-line-number=43 Line number from which new logs should be fetched. pod=nonumy The name of the pod where the command is executed. pod-namespace=rebum. The namespace of the pod where the command is executed. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Poll Airflow Command"},{"location":"projects_locations-environments-poll-airflow-command/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-poll-airflow-command ...","title":"Scopes"},{"location":"projects_locations-environments-poll-airflow-command/#required-scalar-argument","text":"<environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-poll-airflow-command/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PollAirflowCommandRequest: execution-id: string next-line-number: integer pod: string pod-namespace: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . execution-id=lorem The unique ID of the command execution. next-line-number=43 Line number from which new logs should be fetched. pod=nonumy The name of the pod where the command is executed. pod-namespace=rebum. The namespace of the pod where the command is executed.","title":"Required Request Value"},{"location":"projects_locations-environments-poll-airflow-command/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-poll-airflow-command/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-poll-airflow-command/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-save-snapshot/","text":"Creates a snapshots of a Cloud Composer environment. As a result of this operation, snapshot of environment's state is stored in a location specified in the SaveSnapshotRequest. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-save-snapshot ... Required Scalar Argument <environment> (string) The resource name of the source environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SaveSnapshotRequest: snapshot-location: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . snapshot-location=tempor Location in a Cloud Storage where the snapshot is going to be stored, e.g.: \"gs://my-bucket/snapshots\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Save Snapshot"},{"location":"projects_locations-environments-save-snapshot/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-save-snapshot ...","title":"Scopes"},{"location":"projects_locations-environments-save-snapshot/#required-scalar-argument","text":"<environment> (string) The resource name of the source environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-save-snapshot/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SaveSnapshotRequest: snapshot-location: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . snapshot-location=tempor Location in a Cloud Storage where the snapshot is going to be stored, e.g.: \"gs://my-bucket/snapshots\".","title":"Required Request Value"},{"location":"projects_locations-environments-save-snapshot/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-save-snapshot/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-save-snapshot/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-stop-airflow-command/","text":"Stops Airflow CLI command execution. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-stop-airflow-command ... Required Scalar Argument <environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\". Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopAirflowCommandRequest: execution-id: string force: boolean pod: string pod-namespace: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . execution-id=dolore The unique ID of the command execution. force=true If true, the execution is terminated forcefully (SIGKILL). If false, the execution is stopped gracefully, giving it time for cleanup. pod=dolore The name of the pod where the command is executed. pod-namespace=amet The namespace of the pod where the command is executed. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Stop Airflow Command"},{"location":"projects_locations-environments-stop-airflow-command/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-stop-airflow-command ...","title":"Scopes"},{"location":"projects_locations-environments-stop-airflow-command/#required-scalar-argument","text":"<environment> (string) The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\".","title":"Required Scalar Argument"},{"location":"projects_locations-environments-stop-airflow-command/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopAirflowCommandRequest: execution-id: string force: boolean pod: string pod-namespace: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . execution-id=dolore The unique ID of the command execution. force=true If true, the execution is terminated forcefully (SIGKILL). If false, the execution is stopped gracefully, giving it time for cleanup. pod=dolore The name of the pod where the command is executed. pod-namespace=amet The namespace of the pod where the command is executed.","title":"Required Request Value"},{"location":"projects_locations-environments-stop-airflow-command/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-stop-airflow-command/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-stop-airflow-command/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-create/","text":"Creates a user workloads ConfigMap. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-create ... Required Scalar Argument <parent> (string) Required. The environment name to create a ConfigMap for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsConfigMap: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=ut Optional. The \"data\" field of Kubernetes ConfigMap, organized in key-value pairs. For details see: https://kubernetes.io/docs/concepts/configuration/configmap/ the value will be associated with the given key name=at Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Config Maps Create"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-create ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#required-scalar-argument","text":"<parent> (string) Required. The environment name to create a ConfigMap for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsConfigMap: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=ut Optional. The \"data\" field of Kubernetes ConfigMap, organized in key-value pairs. For details see: https://kubernetes.io/docs/concepts/configuration/configmap/ the value will be associated with the given key name=at Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\"","title":"Required Request Value"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-config-maps-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-delete/","text":"Deletes a user workloads ConfigMap. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-delete ... Required Scalar Argument <name> (string) Required. The ConfigMap to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Config Maps Delete"},{"location":"projects_locations-environments-user-workloads-config-maps-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-delete ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-config-maps-delete/#required-scalar-argument","text":"<name> (string) Required. The ConfigMap to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-config-maps-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-config-maps-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-get/","text":"Gets an existing user workloads ConfigMap. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-get ... Required Scalar Argument <name> (string) Required. The resource name of the ConfigMap to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Config Maps Get"},{"location":"projects_locations-environments-user-workloads-config-maps-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-get ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-config-maps-get/#required-scalar-argument","text":"<name> (string) Required. The resource name of the ConfigMap to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-config-maps-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-config-maps-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-list/","text":"Lists user workloads ConfigMaps. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-list ... Required Scalar Argument <parent> (string) Required. List ConfigMaps in the given environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of ConfigMaps to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Config Maps List"},{"location":"projects_locations-environments-user-workloads-config-maps-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-list ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-config-maps-list/#required-scalar-argument","text":"<parent> (string) Required. List ConfigMaps in the given environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-config-maps-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-config-maps-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of ConfigMaps to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any.","title":"Optional Method Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-config-maps-update/","text":"Updates a user workloads ConfigMap. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-update ... Required Scalar Argument <name> (string) Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsConfigMap: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=sit Optional. The \"data\" field of Kubernetes ConfigMap, organized in key-value pairs. For details see: https://kubernetes.io/docs/concepts/configuration/configmap/ the value will be associated with the given key name=vero Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Config Maps Update"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-config-maps-update ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#required-scalar-argument","text":"<name> (string) Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsConfigMap: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=sit Optional. The \"data\" field of Kubernetes ConfigMap, organized in key-value pairs. For details see: https://kubernetes.io/docs/concepts/configuration/configmap/ the value will be associated with the given key name=vero Identifier. The resource name of the ConfigMap, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsConfigMaps/{userWorkloadsConfigMapId}\"","title":"Required Request Value"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-config-maps-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-secrets-create/","text":"Creates a user workloads Secret. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-create ... Required Scalar Argument <parent> (string) Required. The environment name to create a Secret for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsSecret: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=duo Optional. The \"data\" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/ the value will be associated with the given key name=sadipscing Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Secrets Create"},{"location":"projects_locations-environments-user-workloads-secrets-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-create ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-secrets-create/#required-scalar-argument","text":"<parent> (string) Required. The environment name to create a Secret for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-secrets-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsSecret: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=duo Optional. The \"data\" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/ the value will be associated with the given key name=sadipscing Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\"","title":"Required Request Value"},{"location":"projects_locations-environments-user-workloads-secrets-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-user-workloads-secrets-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-secrets-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-secrets-delete/","text":"Deletes a user workloads Secret. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-delete ... Required Scalar Argument <name> (string) Required. The Secret to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Secrets Delete"},{"location":"projects_locations-environments-user-workloads-secrets-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-delete ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-secrets-delete/#required-scalar-argument","text":"<name> (string) Required. The Secret to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-secrets-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-secrets-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-secrets-get/","text":"Gets an existing user workloads Secret. Values of the \"data\" field in the response are cleared. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-get ... Required Scalar Argument <name> (string) Required. The resource name of the Secret to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Secrets Get"},{"location":"projects_locations-environments-user-workloads-secrets-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-get ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-secrets-get/#required-scalar-argument","text":"<name> (string) Required. The resource name of the Secret to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-secrets-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-secrets-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-secrets-list/","text":"Lists user workloads Secrets. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-list ... Required Scalar Argument <parent> (string) Required. List Secrets in the given environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of Secrets to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Secrets List"},{"location":"projects_locations-environments-user-workloads-secrets-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-list ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-secrets-list/#required-scalar-argument","text":"<parent> (string) Required. List Secrets in the given environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-secrets-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-secrets-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Optional. The maximum number of Secrets to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any.","title":"Optional Method Properties"},{"location":"projects_locations-environments-user-workloads-secrets-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-user-workloads-secrets-update/","text":"Updates a user workloads Secret. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-update ... Required Scalar Argument <name> (string) Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsSecret: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=ut Optional. The \"data\" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/ the value will be associated with the given key name=rebum. Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments User Workloads Secrets Update"},{"location":"projects_locations-environments-user-workloads-secrets-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-user-workloads-secrets-update ...","title":"Scopes"},{"location":"projects_locations-environments-user-workloads-secrets-update/#required-scalar-argument","text":"<name> (string) Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-user-workloads-secrets-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserWorkloadsSecret: data: { string: string } name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data=key=ut Optional. The \"data\" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/ the value will be associated with the given key name=rebum. Identifier. The resource name of the Secret, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}\"","title":"Required Request Value"},{"location":"projects_locations-environments-user-workloads-secrets-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-environments-user-workloads-secrets-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-user-workloads-secrets-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-environments-workloads-list/","text":"Lists workloads in a Cloud Composer environment. Workload is a unit that runs a single Composer component. This method is supported for Cloud Composer environments in versions composer-3. . -airflow- . .* and newer. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-workloads-list ... Required Scalar Argument <parent> (string) Required. The environment name to get workloads for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. The list filter. Currently only supports equality on the type field. The value of a field specified in the filter expression must be one ComposerWorkloadType enum option. It's possible to get multiple types using \"OR\" operator, e.g.: \"type=SCHEDULER OR type=CELERY_WORKER\". If not specified, all items are returned. -p page-size=integer Optional. The maximum number of environments to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Environments Workloads List"},{"location":"projects_locations-environments-workloads-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-environments-workloads-list ...","title":"Scopes"},{"location":"projects_locations-environments-workloads-list/#required-scalar-argument","text":"<parent> (string) Required. The environment name to get workloads for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-environments-workloads-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-environments-workloads-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. The list filter. Currently only supports equality on the type field. The value of a field specified in the filter expression must be one ComposerWorkloadType enum option. It's possible to get multiple types using \"OR\" operator, e.g.: \"type=SCHEDULER OR type=CELERY_WORKER\". If not specified, all items are returned. -p page-size=integer Optional. The maximum number of environments to return. -p page-token=string Optional. The next_page_token value returned from a previous List request, if any.","title":"Optional Method Properties"},{"location":"projects_locations-environments-workloads-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-image-versions-list/","text":"List ImageVersions for provided location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-image-versions-list ... Required Scalar Argument <parent> (string) List ImageVersions in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\" Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-past-releases=boolean Whether or not image versions from old releases should be included. -p page-size=integer The maximum number of image_versions to return. -p page-token=string The next_page_token value returned from a previous List request, if any. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Image Versions List"},{"location":"projects_locations-image-versions-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-image-versions-list ...","title":"Scopes"},{"location":"projects_locations-image-versions-list/#required-scalar-argument","text":"<parent> (string) List ImageVersions in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\"","title":"Required Scalar Argument"},{"location":"projects_locations-image-versions-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-image-versions-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-past-releases=boolean Whether or not image versions from old releases should be included. -p page-size=integer The maximum number of image_versions to return. -p page-token=string The next_page_token value returned from a previous List request, if any.","title":"Optional Method Properties"},{"location":"projects_locations-image-versions-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-delete/","text":"Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-delete ... Required Scalar Argument <name> (string) The name of the operation resource to be deleted. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Delete"},{"location":"projects_locations-operations-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-delete ...","title":"Scopes"},{"location":"projects_locations-operations-delete/#required-scalar-argument","text":"<name> (string) The name of the operation resource to be deleted.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-get/","text":"Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-get ... Required Scalar Argument <name> (string) The name of the operation resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Get"},{"location":"projects_locations-operations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-get ...","title":"Scopes"},{"location":"projects_locations-operations-get/#required-scalar-argument","text":"<name> (string) The name of the operation resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-list/","text":"Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-list ... Required Scalar Argument <name> (string) The name of the operation's parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations List"},{"location":"projects_locations-operations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: composer1 --scope <scope> projects locations-operations-list ...","title":"Scopes"},{"location":"projects_locations-operations-list/#required-scalar-argument","text":"<name> (string) The name of the operation's parent resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token.","title":"Optional Method Properties"},{"location":"projects_locations-operations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}