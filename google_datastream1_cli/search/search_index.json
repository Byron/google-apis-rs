{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The datastream1 command-line interface (CLI) allows to use most features of the Google Datastream service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Datastream API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-datastream1-cli Find the source code on github . Usage This documentation was generated from the Datastream API at revision 20240221 . The CLI is at version 5.0.4 . datastream1 [options] projects locations-connection-profiles-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-connection-profiles-delete <name> [-p <v>]... [-o <out>] locations-connection-profiles-discover <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-connection-profiles-get <name> [-p <v>]... [-o <out>] locations-connection-profiles-list <parent> [-p <v>]... [-o <out>] locations-connection-profiles-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-fetch-static-ips <name> [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-list <name> [-p <v>]... [-o <out>] locations-operations-cancel <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] locations-private-connections-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-private-connections-delete <name> [-p <v>]... [-o <out>] locations-private-connections-get <name> [-p <v>]... [-o <out>] locations-private-connections-list <parent> [-p <v>]... [-o <out>] locations-private-connections-routes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-private-connections-routes-delete <name> [-p <v>]... [-o <out>] locations-private-connections-routes-get <name> [-p <v>]... [-o <out>] locations-private-connections-routes-list <parent> [-p <v>]... [-o <out>] locations-streams-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-delete <name> [-p <v>]... [-o <out>] locations-streams-get <name> [-p <v>]... [-o <out>] locations-streams-list <parent> [-p <v>]... [-o <out>] locations-streams-objects-get <name> [-p <v>]... [-o <out>] locations-streams-objects-list <parent> [-p <v>]... [-o <out>] locations-streams-objects-lookup <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-objects-start-backfill-job <object> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-objects-stop-backfill-job <object> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-run <name> (-r <kv>)... [-p <v>]... [-o <out>] datastream1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with datastream1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/datastream1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/datastream1-secret.json , assuming that the required datastream API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. datastream1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-datastream1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Datastream API at revision 20240221 . The CLI is at version 5.0.4 . datastream1 [options] projects locations-connection-profiles-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-connection-profiles-delete <name> [-p <v>]... [-o <out>] locations-connection-profiles-discover <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-connection-profiles-get <name> [-p <v>]... [-o <out>] locations-connection-profiles-list <parent> [-p <v>]... [-o <out>] locations-connection-profiles-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-fetch-static-ips <name> [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-list <name> [-p <v>]... [-o <out>] locations-operations-cancel <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] locations-private-connections-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-private-connections-delete <name> [-p <v>]... [-o <out>] locations-private-connections-get <name> [-p <v>]... [-o <out>] locations-private-connections-list <parent> [-p <v>]... [-o <out>] locations-private-connections-routes-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-private-connections-routes-delete <name> [-p <v>]... [-o <out>] locations-private-connections-routes-get <name> [-p <v>]... [-o <out>] locations-private-connections-routes-list <parent> [-p <v>]... [-o <out>] locations-streams-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-delete <name> [-p <v>]... [-o <out>] locations-streams-get <name> [-p <v>]... [-o <out>] locations-streams-list <parent> [-p <v>]... [-o <out>] locations-streams-objects-get <name> [-p <v>]... [-o <out>] locations-streams-objects-list <parent> [-p <v>]... [-o <out>] locations-streams-objects-lookup <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-objects-start-backfill-job <object> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-objects-stop-backfill-job <object> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-streams-run <name> (-r <kv>)... [-p <v>]... [-o <out>] datastream1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with datastream1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/datastream1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/datastream1-secret.json , assuming that the required datastream API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. datastream1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"projects_locations-connection-profiles-create/","text":"Use this method to create a connection profile in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-create ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of ConnectionProfiles. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConnectionProfile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The create time of the resource. display-name=magna Required. Display name. forward-ssh-connectivity hostname=no Required. Hostname for the SSH tunnel. password=ipsum Input only. SSH password. port=73 Port for the SSH tunnel, default value is 22. private-key=at Input only. SSH private key. username=sanctus Required. Username for the SSH tunnel. ..gcs-profile bucket=sed Required. The Cloud Storage bucket name. root-path=amet. The root path inside the Cloud Storage bucket. .. labels=key=takimata Labels. the value will be associated with the given key mysql-profile hostname=amet. Required. Hostname for the MySQL connection. password=duo Required. Input only. Password for the MySQL connection. port=46 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=gubergren Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field is set. client-certificate=gubergren Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=false Output only. Indicates whether the client_certificate field is set. client-key=dolor Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=true Output only. Indicates whether the client_key field is set. .. username=invidunt Required. Username for the MySQL connection. .. name=amet Output only. The resource's name. oracle-profile connection-attributes=key=duo Connection string attributes the value will be associated with the given key database-service=ipsum Required. Database for the Oracle connection. hostname=sed Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=ut Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=ipsum Required. Password for the Oracle connection. port=51 Port for the Oracle connection, default value is 1521. username=est Required. Username for the Oracle connection. ..postgresql-profile database=gubergren Required. Database for the PostgreSQL connection. hostname=ea Required. Hostname for the PostgreSQL connection. password=dolor Required. Password for the PostgreSQL connection. port=45 Port for the PostgreSQL connection, default value is 5432. username=eos Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=labore Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=sed Required. Database for the SQLServer connection. hostname=duo Required. Hostname for the SQLServer connection. password=sed Required. Password for the SQLServer connection. port=40 Port for the SQLServer connection, default value is 1433. username=stet Required. Username for the SQLServer connection. .. update-time=kasd Output only. The update time of the resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p connection-profile-id=string Required. The connection profile identifier. -p force=boolean Optional. Create the connection profile without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p validate-only=boolean Optional. Only validate the connection profile, but don't create any resources. The default is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles Create"},{"location":"projects_locations-connection-profiles-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-create ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-create/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of ConnectionProfiles.","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConnectionProfile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The create time of the resource. display-name=magna Required. Display name. forward-ssh-connectivity hostname=no Required. Hostname for the SSH tunnel. password=ipsum Input only. SSH password. port=73 Port for the SSH tunnel, default value is 22. private-key=at Input only. SSH private key. username=sanctus Required. Username for the SSH tunnel. ..gcs-profile bucket=sed Required. The Cloud Storage bucket name. root-path=amet. The root path inside the Cloud Storage bucket. .. labels=key=takimata Labels. the value will be associated with the given key mysql-profile hostname=amet. Required. Hostname for the MySQL connection. password=duo Required. Input only. Password for the MySQL connection. port=46 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=gubergren Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field is set. client-certificate=gubergren Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=false Output only. Indicates whether the client_certificate field is set. client-key=dolor Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=true Output only. Indicates whether the client_key field is set. .. username=invidunt Required. Username for the MySQL connection. .. name=amet Output only. The resource's name. oracle-profile connection-attributes=key=duo Connection string attributes the value will be associated with the given key database-service=ipsum Required. Database for the Oracle connection. hostname=sed Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=ut Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=ipsum Required. Password for the Oracle connection. port=51 Port for the Oracle connection, default value is 1521. username=est Required. Username for the Oracle connection. ..postgresql-profile database=gubergren Required. Database for the PostgreSQL connection. hostname=ea Required. Hostname for the PostgreSQL connection. password=dolor Required. Password for the PostgreSQL connection. port=45 Port for the PostgreSQL connection, default value is 5432. username=eos Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=labore Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=sed Required. Database for the SQLServer connection. hostname=duo Required. Hostname for the SQLServer connection. password=sed Required. Password for the SQLServer connection. port=40 Port for the SQLServer connection, default value is 1433. username=stet Required. Username for the SQLServer connection. .. update-time=kasd Output only. The update time of the resource.","title":"Required Request Value"},{"location":"projects_locations-connection-profiles-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-connection-profiles-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p connection-profile-id=string Required. The connection profile identifier. -p force=boolean Optional. Create the connection profile without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p validate-only=boolean Optional. Only validate the connection profile, but don't create any resources. The default is false.","title":"Optional Method Properties"},{"location":"projects_locations-connection-profiles-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-connection-profiles-delete/","text":"Use this method to delete a connection profile. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-delete ... Required Scalar Argument <name> (string) Required. The name of the connection profile resource to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles Delete"},{"location":"projects_locations-connection-profiles-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-delete ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the connection profile resource to delete.","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-connection-profiles-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-connection-profiles-discover/","text":"Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-discover ... Required Scalar Argument <parent> (string) Required. The parent resource of the connection profile type. Must be in the format projects/*/locations/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DiscoverConnectionProfileRequest: connection-profile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string connection-profile-name: string full-hierarchy: boolean hierarchy-depth: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .connection-profile create-time=et Output only. The create time of the resource. display-name=sed Required. Display name. forward-ssh-connectivity hostname=et Required. Hostname for the SSH tunnel. password=et Input only. SSH password. port=25 Port for the SSH tunnel, default value is 22. private-key=erat Input only. SSH private key. username=sed Required. Username for the SSH tunnel. ..gcs-profile bucket=duo Required. The Cloud Storage bucket name. root-path=dolore The root path inside the Cloud Storage bucket. .. labels=key=et Labels. the value will be associated with the given key mysql-profile hostname=voluptua. Required. Hostname for the MySQL connection. password=amet. Required. Input only. Password for the MySQL connection. port=5 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=diam Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field is set. client-certificate=et Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=false Output only. Indicates whether the client_certificate field is set. client-key=stet Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=false Output only. Indicates whether the client_key field is set. .. username=duo Required. Username for the MySQL connection. .. name=vero Output only. The resource's name. oracle-profile connection-attributes=key=vero Connection string attributes the value will be associated with the given key database-service=invidunt Required. Database for the Oracle connection. hostname=stet Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=vero Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=lorem Required. Password for the Oracle connection. port=72 Port for the Oracle connection, default value is 1521. username=no Required. Username for the Oracle connection. ..postgresql-profile database=ipsum Required. Database for the PostgreSQL connection. hostname=accusam Required. Hostname for the PostgreSQL connection. password=takimata Required. Password for the PostgreSQL connection. port=55 Port for the PostgreSQL connection, default value is 5432. username=voluptua. Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=et Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=erat Required. Database for the SQLServer connection. hostname=consetetur Required. Hostname for the SQLServer connection. password=amet. Required. Password for the SQLServer connection. port=71 Port for the SQLServer connection, default value is 1433. username=takimata Required. Username for the SQLServer connection. .. update-time=dolores Output only. The update time of the resource. .. connection-profile-name=gubergren A reference to an existing connection profile. full-hierarchy=false Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE). hierarchy-depth=78 The number of hierarchy levels below the current level to be retrieved. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles Discover"},{"location":"projects_locations-connection-profiles-discover/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-discover ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-discover/#required-scalar-argument","text":"<parent> (string) Required. The parent resource of the connection profile type. Must be in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-discover/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DiscoverConnectionProfileRequest: connection-profile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string connection-profile-name: string full-hierarchy: boolean hierarchy-depth: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .connection-profile create-time=et Output only. The create time of the resource. display-name=sed Required. Display name. forward-ssh-connectivity hostname=et Required. Hostname for the SSH tunnel. password=et Input only. SSH password. port=25 Port for the SSH tunnel, default value is 22. private-key=erat Input only. SSH private key. username=sed Required. Username for the SSH tunnel. ..gcs-profile bucket=duo Required. The Cloud Storage bucket name. root-path=dolore The root path inside the Cloud Storage bucket. .. labels=key=et Labels. the value will be associated with the given key mysql-profile hostname=voluptua. Required. Hostname for the MySQL connection. password=amet. Required. Input only. Password for the MySQL connection. port=5 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=diam Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field is set. client-certificate=et Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=false Output only. Indicates whether the client_certificate field is set. client-key=stet Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=false Output only. Indicates whether the client_key field is set. .. username=duo Required. Username for the MySQL connection. .. name=vero Output only. The resource's name. oracle-profile connection-attributes=key=vero Connection string attributes the value will be associated with the given key database-service=invidunt Required. Database for the Oracle connection. hostname=stet Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=vero Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=true Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=lorem Required. Password for the Oracle connection. port=72 Port for the Oracle connection, default value is 1521. username=no Required. Username for the Oracle connection. ..postgresql-profile database=ipsum Required. Database for the PostgreSQL connection. hostname=accusam Required. Hostname for the PostgreSQL connection. password=takimata Required. Password for the PostgreSQL connection. port=55 Port for the PostgreSQL connection, default value is 5432. username=voluptua. Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=et Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=erat Required. Database for the SQLServer connection. hostname=consetetur Required. Hostname for the SQLServer connection. password=amet. Required. Password for the SQLServer connection. port=71 Port for the SQLServer connection, default value is 1433. username=takimata Required. Username for the SQLServer connection. .. update-time=dolores Output only. The update time of the resource. .. connection-profile-name=gubergren A reference to an existing connection profile. full-hierarchy=false Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE). hierarchy-depth=78 The number of hierarchy levels below the current level to be retrieved.","title":"Required Request Value"},{"location":"projects_locations-connection-profiles-discover/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-connection-profiles-discover/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-discover/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-connection-profiles-get/","text":"Use this method to get details about a connection profile. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-get ... Required Scalar Argument <name> (string) Required. The name of the connection profile resource to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles Get"},{"location":"projects_locations-connection-profiles-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-get ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-get/#required-scalar-argument","text":"<name> (string) Required. The name of the connection profile resource to get.","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-connection-profiles-list/","text":"Use this method to list connection profiles created in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-list ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of connection profiles. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListConnectionProfiles call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListConnectionProfiles must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles List"},{"location":"projects_locations-connection-profiles-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-list ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-list/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of connection profiles.","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListConnectionProfiles call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListConnectionProfiles must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"projects_locations-connection-profiles-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-connection-profiles-patch/","text":"Use this method to update the parameters of a connection profile. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-patch ... Required Scalar Argument <name> (string) Output only. The resource's name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConnectionProfile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=voluptua. Output only. The create time of the resource. display-name=dolore Required. Display name. forward-ssh-connectivity hostname=dolore Required. Hostname for the SSH tunnel. password=dolore Input only. SSH password. port=23 Port for the SSH tunnel, default value is 22. private-key=amet. Input only. SSH private key. username=ea Required. Username for the SSH tunnel. ..gcs-profile bucket=sadipscing Required. The Cloud Storage bucket name. root-path=lorem The root path inside the Cloud Storage bucket. .. labels=key=invidunt Labels. the value will be associated with the given key mysql-profile hostname=no Required. Hostname for the MySQL connection. password=est Required. Input only. Password for the MySQL connection. port=74 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=sed Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=false Output only. Indicates whether the ca_certificate field is set. client-certificate=et Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=true Output only. Indicates whether the client_certificate field is set. client-key=aliquyam Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=true Output only. Indicates whether the client_key field is set. .. username=est Required. Username for the MySQL connection. .. name=sed Output only. The resource's name. oracle-profile connection-attributes=key=diam Connection string attributes the value will be associated with the given key database-service=dolores Required. Database for the Oracle connection. hostname=dolores Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=et Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=false Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=no Required. Password for the Oracle connection. port=16 Port for the Oracle connection, default value is 1521. username=elitr Required. Username for the Oracle connection. ..postgresql-profile database=sed Required. Database for the PostgreSQL connection. hostname=no Required. Hostname for the PostgreSQL connection. password=nonumy Required. Password for the PostgreSQL connection. port=24 Port for the PostgreSQL connection, default value is 5432. username=sadipscing Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=aliquyam Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=dolores Required. Database for the SQLServer connection. hostname=sadipscing Required. Hostname for the SQLServer connection. password=erat Required. Password for the SQLServer connection. port=19 Port for the SQLServer connection, default value is 1433. username=amet Required. Username for the SQLServer connection. .. update-time=est Output only. The update time of the resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Update the connection profile without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. -p validate-only=boolean Optional. Only validate the connection profile, but don't update any resources. The default is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Connection Profiles Patch"},{"location":"projects_locations-connection-profiles-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-connection-profiles-patch ...","title":"Scopes"},{"location":"projects_locations-connection-profiles-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource's name.","title":"Required Scalar Argument"},{"location":"projects_locations-connection-profiles-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConnectionProfile: create-time: string display-name: string forward-ssh-connectivity: hostname: string password: string port: integer private-key: string username: string gcs-profile: bucket: string root-path: string labels: { string: string } mysql-profile: hostname: string password: string port: integer ssl-config: ca-certificate: string ca-certificate-set: boolean client-certificate: string client-certificate-set: boolean client-key: string client-key-set: boolean username: string name: string oracle-profile: connection-attributes: { string: string } database-service: string hostname: string oracle-ssl-config: ca-certificate: string ca-certificate-set: boolean password: string port: integer username: string postgresql-profile: database: string hostname: string password: string port: integer username: string private-connectivity: private-connection: string sql-server-profile: database: string hostname: string password: string port: integer username: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=voluptua. Output only. The create time of the resource. display-name=dolore Required. Display name. forward-ssh-connectivity hostname=dolore Required. Hostname for the SSH tunnel. password=dolore Input only. SSH password. port=23 Port for the SSH tunnel, default value is 22. private-key=amet. Input only. SSH private key. username=ea Required. Username for the SSH tunnel. ..gcs-profile bucket=sadipscing Required. The Cloud Storage bucket name. root-path=lorem The root path inside the Cloud Storage bucket. .. labels=key=invidunt Labels. the value will be associated with the given key mysql-profile hostname=no Required. Hostname for the MySQL connection. password=est Required. Input only. Password for the MySQL connection. port=74 Port for the MySQL connection, default value is 3306. ssl-config ca-certificate=sed Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=false Output only. Indicates whether the ca_certificate field is set. client-certificate=et Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory. client-certificate-set=true Output only. Indicates whether the client_certificate field is set. client-key=aliquyam Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory. client-key-set=true Output only. Indicates whether the client_key field is set. .. username=est Required. Username for the MySQL connection. .. name=sed Output only. The resource's name. oracle-profile connection-attributes=key=diam Connection string attributes the value will be associated with the given key database-service=dolores Required. Database for the Oracle connection. hostname=dolores Required. Hostname for the Oracle connection. oracle-ssl-config ca-certificate=et Input only. PEM-encoded certificate of the CA that signed the source database server's certificate. ca-certificate-set=false Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile. .. password=no Required. Password for the Oracle connection. port=16 Port for the Oracle connection, default value is 1521. username=elitr Required. Username for the Oracle connection. ..postgresql-profile database=sed Required. Database for the PostgreSQL connection. hostname=no Required. Hostname for the PostgreSQL connection. password=nonumy Required. Password for the PostgreSQL connection. port=24 Port for the PostgreSQL connection, default value is 5432. username=sadipscing Required. Username for the PostgreSQL connection. ..private-connectivity private-connection=aliquyam Required. A reference to a private connection resource. Format: projects/{project}/locations/{location}/privateConnections/{name} ..sql-server-profile database=dolores Required. Database for the SQLServer connection. hostname=sadipscing Required. Hostname for the SQLServer connection. password=erat Required. Password for the SQLServer connection. port=19 Port for the SQLServer connection, default value is 1433. username=amet Required. Username for the SQLServer connection. .. update-time=est Output only. The update time of the resource.","title":"Required Request Value"},{"location":"projects_locations-connection-profiles-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-connection-profiles-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-connection-profiles-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Update the connection profile without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. -p validate-only=boolean Optional. Only validate the connection profile, but don't update any resources. The default is false.","title":"Optional Method Properties"},{"location":"projects_locations-connection-profiles-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-fetch-static-ips/","text":"The FetchStaticIps API call exposes the static IP addresses used by Datastream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-fetch-static-ips ... Required Scalar Argument <name> (string) Required. The resource name for the location for which static IPs should be returned. Must be in the format projects/*/locations/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Maximum number of Ips to return, will likely not be specified. -p page-token=string A page token, received from a previous ListStaticIps call. will likely not be specified. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Fetch Static Ips"},{"location":"projects_locations-fetch-static-ips/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-fetch-static-ips ...","title":"Scopes"},{"location":"projects_locations-fetch-static-ips/#required-scalar-argument","text":"<name> (string) Required. The resource name for the location for which static IPs should be returned. Must be in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-fetch-static-ips/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-fetch-static-ips/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Maximum number of Ips to return, will likely not be specified. -p page-token=string A page token, received from a previous ListStaticIps call. will likely not be specified.","title":"Optional Method Properties"},{"location":"projects_locations-fetch-static-ips/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-get/","text":"Gets information about a location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-get ... Required Scalar Argument <name> (string) Resource name for the location. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Get"},{"location":"projects_locations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-get ...","title":"Scopes"},{"location":"projects_locations-get/#required-scalar-argument","text":"<name> (string) Resource name for the location.","title":"Required Scalar Argument"},{"location":"projects_locations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-list/","text":"Lists information about the supported locations for this service. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-list ... Required Scalar Argument <name> (string) The resource that owns the locations collection, if applicable. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter to narrow down results to a preferred subset. The filtering language accepts strings like &#34;displayName=tokyo&#34; , and is documented in more detail in AIP-160 . -p page-size=integer The maximum number of results to return. If not set, the service selects a default. -p page-token=string A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations List"},{"location":"projects_locations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-list ...","title":"Scopes"},{"location":"projects_locations-list/#required-scalar-argument","text":"<name> (string) The resource that owns the locations collection, if applicable.","title":"Required Scalar Argument"},{"location":"projects_locations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter to narrow down results to a preferred subset. The filtering language accepts strings like &#34;displayName=tokyo&#34; , and is documented in more detail in AIP-160 . -p page-size=integer The maximum number of results to return. If not set, the service selects a default. -p page-token=string A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.","title":"Optional Method Properties"},{"location":"projects_locations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-cancel/","text":"Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED . Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-cancel ... Required Scalar Argument <name> (string) The name of the operation resource to be cancelled. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelOperationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Cancel"},{"location":"projects_locations-operations-cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-cancel ...","title":"Scopes"},{"location":"projects_locations-operations-cancel/#required-scalar-argument","text":"<name> (string) The name of the operation resource to be cancelled.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-cancel/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelOperationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"projects_locations-operations-cancel/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-operations-cancel/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-delete/","text":"Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-delete ... Required Scalar Argument <name> (string) The name of the operation resource to be deleted. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Delete"},{"location":"projects_locations-operations-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-delete ...","title":"Scopes"},{"location":"projects_locations-operations-delete/#required-scalar-argument","text":"<name> (string) The name of the operation resource to be deleted.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-get/","text":"Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-get ... Required Scalar Argument <name> (string) The name of the operation resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Get"},{"location":"projects_locations-operations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-get ...","title":"Scopes"},{"location":"projects_locations-operations-get/#required-scalar-argument","text":"<name> (string) The name of the operation resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-list/","text":"Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-list ... Required Scalar Argument <name> (string) The name of the operation's parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations List"},{"location":"projects_locations-operations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-operations-list ...","title":"Scopes"},{"location":"projects_locations-operations-list/#required-scalar-argument","text":"<name> (string) The name of the operation's parent resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token.","title":"Optional Method Properties"},{"location":"projects_locations-operations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-create/","text":"Use this method to create a private connectivity configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-create ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of PrivateConnections. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PrivateConnection: create-time: string display-name: string error: details: { string: string } error-time: string error-uuid: string message: string reason: string labels: { string: string } name: string state: string update-time: string vpc-peering-config: subnet: string vpc: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The create time of the resource. display-name=sea Required. Display name. error details=key=consetetur Additional information about the error. the value will be associated with the given key error-time=consetetur The time when the error occurred. error-uuid=stet A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses. message=est A message containing more information about the error that occurred. reason=aliquyam A title that explains the reason for the error. .. labels=key=elitr Labels. the value will be associated with the given key name=duo Output only. The resource's name. state=diam Output only. The state of the Private Connection. update-time=est Output only. The update time of the resource. vpc-peering-config subnet=sit Required. A free subnet for peering. (CIDR of /29) vpc=sed Required. Fully qualified name of the VPC that Datastream will peer to. Format: projects/{project}/global/{networks}/{name} About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. If set to true, will skip validations. -p private-connection-id=string Required. The private connectivity identifier. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Create"},{"location":"projects_locations-private-connections-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-create ...","title":"Scopes"},{"location":"projects_locations-private-connections-create/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of PrivateConnections.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PrivateConnection: create-time: string display-name: string error: details: { string: string } error-time: string error-uuid: string message: string reason: string labels: { string: string } name: string state: string update-time: string vpc-peering-config: subnet: string vpc: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The create time of the resource. display-name=sea Required. Display name. error details=key=consetetur Additional information about the error. the value will be associated with the given key error-time=consetetur The time when the error occurred. error-uuid=stet A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses. message=est A message containing more information about the error that occurred. reason=aliquyam A title that explains the reason for the error. .. labels=key=elitr Labels. the value will be associated with the given key name=duo Output only. The resource's name. state=diam Output only. The state of the Private Connection. update-time=est Output only. The update time of the resource. vpc-peering-config subnet=sit Required. A free subnet for peering. (CIDR of /29) vpc=sed Required. Fully qualified name of the VPC that Datastream will peer to. Format: projects/{project}/global/{networks}/{name}","title":"Required Request Value"},{"location":"projects_locations-private-connections-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-private-connections-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. If set to true, will skip validations. -p private-connection-id=string Required. The private connectivity identifier. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-delete/","text":"Use this method to delete a private connectivity configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-delete ... Required Scalar Argument <name> (string) Required. The name of the private connectivity configuration to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Delete"},{"location":"projects_locations-private-connections-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-delete ...","title":"Scopes"},{"location":"projects_locations-private-connections-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the private connectivity configuration to delete.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-get/","text":"Use this method to get details about a private connectivity configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-get ... Required Scalar Argument <name> (string) Required. The name of the private connectivity configuration to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Get"},{"location":"projects_locations-private-connections-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-get ...","title":"Scopes"},{"location":"projects_locations-private-connections-get/#required-scalar-argument","text":"<name> (string) Required. The name of the private connectivity configuration to get.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-list/","text":"Use this method to list private connectivity configurations in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-list ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of private connectivity configurations. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListPrivateConnections call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPrivateConnections must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections List"},{"location":"projects_locations-private-connections-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-list ...","title":"Scopes"},{"location":"projects_locations-private-connections-list/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of private connectivity configurations.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListPrivateConnections call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPrivateConnections must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-routes-create/","text":"Use this method to create a route for a private connectivity configuration in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-create ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of Routes. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Route: create-time: string destination-address: string destination-port: integer display-name: string labels: { string: string } name: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=eos Output only. The create time of the resource. destination-address=lorem Required. Destination address for connection destination-port=84 Destination port for connection display-name=stet Required. Display name. labels=key=dolores Labels. the value will be associated with the given key name=eos Output only. The resource's name. update-time=et Output only. The update time of the resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p route-id=string Required. The Route identifier. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Routes Create"},{"location":"projects_locations-private-connections-routes-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-create ...","title":"Scopes"},{"location":"projects_locations-private-connections-routes-create/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of Routes.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-routes-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Route: create-time: string destination-address: string destination-port: integer display-name: string labels: { string: string } name: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=eos Output only. The create time of the resource. destination-address=lorem Required. Destination address for connection destination-port=84 Destination port for connection display-name=stet Required. Display name. labels=key=dolores Labels. the value will be associated with the given key name=eos Output only. The resource's name. update-time=et Output only. The update time of the resource.","title":"Required Request Value"},{"location":"projects_locations-private-connections-routes-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-private-connections-routes-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-routes-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p route-id=string Required. The Route identifier.","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-routes-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-routes-delete/","text":"Use this method to delete a route. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-delete ... Required Scalar Argument <name> (string) Required. The name of the Route resource to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Routes Delete"},{"location":"projects_locations-private-connections-routes-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-delete ...","title":"Scopes"},{"location":"projects_locations-private-connections-routes-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the Route resource to delete.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-routes-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-routes-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-routes-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-routes-get/","text":"Use this method to get details about a route. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-get ... Required Scalar Argument <name> (string) Required. The name of the Route resource to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Routes Get"},{"location":"projects_locations-private-connections-routes-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-get ...","title":"Scopes"},{"location":"projects_locations-private-connections-routes-get/#required-scalar-argument","text":"<name> (string) Required. The name of the Route resource to get.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-routes-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-routes-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-private-connections-routes-list/","text":"Use this method to list routes created for a private connectivity configuration in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-list ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of Routess. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListRoutes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListRoutes must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Private Connections Routes List"},{"location":"projects_locations-private-connections-routes-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-private-connections-routes-list ...","title":"Scopes"},{"location":"projects_locations-private-connections-routes-list/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of Routess.","title":"Required Scalar Argument"},{"location":"projects_locations-private-connections-routes-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-private-connections-routes-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListRoutes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListRoutes must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"projects_locations-private-connections-routes-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-create/","text":"Use this method to create a stream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-create ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of streams. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Stream: create-time: string customer-managed-encryption-key: string destination-config: bigquery-destination-config: data-freshness: string single-target-dataset: dataset-id: string source-hierarchy-datasets: dataset-template: dataset-id-prefix: string kms-key-name: string location: string destination-connection-profile: string gcs-destination-config: file-rotation-interval: string file-rotation-mb: integer json-file-format: compression: string schema-file-format: string path: string display-name: string labels: { string: string } last-recovery-time: string name: string source-config: mysql-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer oracle-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer postgresql-source-config: max-concurrent-backfill-tasks: integer publication: string replication-slot: string source-connection-profile: string sql-server-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=sea Output only. The creation time of the stream. customer-managed-encryption-key=et Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS. destination-config.bigquery-destination-config data-freshness=at The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost. single-target-dataset dataset-id=dolore The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference. ..source-hierarchy-datasets.dataset-template dataset-id-prefix=eirmod If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _. kms-key-name=lorem Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information. location=accusam Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations. .... destination-connection-profile=amet Required. Destination connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} gcs-destination-config file-rotation-interval=erat The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed. file-rotation-mb=32 The maximum file size to be saved in the bucket. json-file-format compression=erat Compression of the loaded JSON file. schema-file-format=accusam The schema file format along JSON data files. .. path=sea Path inside the Cloud Storage bucket to write data to. ... display-name=takimata Required. Display name. labels=key=lorem Labels. the value will be associated with the given key last-recovery-time=et Output only. If the stream was recovered, the time of the last recovery. Note: This field is currently experimental. name=at Output only. The stream's name. source-config.mysql-source-config max-concurrent-backfill-tasks=97 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. max-concurrent-cdc-tasks=79 Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. ..oracle-source-config max-concurrent-backfill-tasks=53 Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. max-concurrent-cdc-tasks=20 Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. ..postgresql-source-config max-concurrent-backfill-tasks=91 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. publication=nonumy Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects. replication-slot=et Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin. .. source-connection-profile=gubergren Required. Source connection profile resoource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} sql-server-source-config max-concurrent-backfill-tasks=80 Max concurrent backfill tasks. max-concurrent-cdc-tasks=41 Max concurrent CDC tasks. ... state=consetetur The state of the stream. update-time=sit Output only. The last update time of the stream. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Create the stream without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p stream-id=string Required. The stream identifier. -p validate-only=boolean Optional. Only validate the stream, but don't create any resources. The default is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Create"},{"location":"projects_locations-streams-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-create ...","title":"Scopes"},{"location":"projects_locations-streams-create/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of streams.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Stream: create-time: string customer-managed-encryption-key: string destination-config: bigquery-destination-config: data-freshness: string single-target-dataset: dataset-id: string source-hierarchy-datasets: dataset-template: dataset-id-prefix: string kms-key-name: string location: string destination-connection-profile: string gcs-destination-config: file-rotation-interval: string file-rotation-mb: integer json-file-format: compression: string schema-file-format: string path: string display-name: string labels: { string: string } last-recovery-time: string name: string source-config: mysql-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer oracle-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer postgresql-source-config: max-concurrent-backfill-tasks: integer publication: string replication-slot: string source-connection-profile: string sql-server-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=sea Output only. The creation time of the stream. customer-managed-encryption-key=et Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS. destination-config.bigquery-destination-config data-freshness=at The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost. single-target-dataset dataset-id=dolore The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference. ..source-hierarchy-datasets.dataset-template dataset-id-prefix=eirmod If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _. kms-key-name=lorem Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information. location=accusam Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations. .... destination-connection-profile=amet Required. Destination connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} gcs-destination-config file-rotation-interval=erat The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed. file-rotation-mb=32 The maximum file size to be saved in the bucket. json-file-format compression=erat Compression of the loaded JSON file. schema-file-format=accusam The schema file format along JSON data files. .. path=sea Path inside the Cloud Storage bucket to write data to. ... display-name=takimata Required. Display name. labels=key=lorem Labels. the value will be associated with the given key last-recovery-time=et Output only. If the stream was recovered, the time of the last recovery. Note: This field is currently experimental. name=at Output only. The stream's name. source-config.mysql-source-config max-concurrent-backfill-tasks=97 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. max-concurrent-cdc-tasks=79 Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. ..oracle-source-config max-concurrent-backfill-tasks=53 Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. max-concurrent-cdc-tasks=20 Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. ..postgresql-source-config max-concurrent-backfill-tasks=91 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. publication=nonumy Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects. replication-slot=et Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin. .. source-connection-profile=gubergren Required. Source connection profile resoource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} sql-server-source-config max-concurrent-backfill-tasks=80 Max concurrent backfill tasks. max-concurrent-cdc-tasks=41 Max concurrent CDC tasks. ... state=consetetur The state of the stream. update-time=sit Output only. The last update time of the stream.","title":"Required Request Value"},{"location":"projects_locations-streams-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Create the stream without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p stream-id=string Required. The stream identifier. -p validate-only=boolean Optional. Only validate the stream, but don't create any resources. The default is false.","title":"Optional Method Properties"},{"location":"projects_locations-streams-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-delete/","text":"Use this method to delete a stream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-delete ... Required Scalar Argument <name> (string) Required. The name of the stream resource to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Delete"},{"location":"projects_locations-streams-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-delete ...","title":"Scopes"},{"location":"projects_locations-streams-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the stream resource to delete.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-streams-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-get/","text":"Use this method to get details about a stream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-get ... Required Scalar Argument <name> (string) Required. The name of the stream resource to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Get"},{"location":"projects_locations-streams-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-get ...","title":"Scopes"},{"location":"projects_locations-streams-get/#required-scalar-argument","text":"<name> (string) Required. The name of the stream resource to get.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-list/","text":"Use this method to list streams in a project and location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-list ... Required Scalar Argument <parent> (string) Required. The parent that owns the collection of streams. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListStreams call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListStreams must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams List"},{"location":"projects_locations-streams-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-list ...","title":"Scopes"},{"location":"projects_locations-streams-list/#required-scalar-argument","text":"<parent> (string) Required. The parent that owns the collection of streams.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Filter request. -p order-by=string Order by fields for the result. -p page-size=integer Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListStreams call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListStreams must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"projects_locations-streams-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-objects-get/","text":"Use this method to get details about a stream object. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-get ... Required Scalar Argument <name> (string) Required. The name of the stream object resource to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Objects Get"},{"location":"projects_locations-streams-objects-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-get ...","title":"Scopes"},{"location":"projects_locations-streams-objects-get/#required-scalar-argument","text":"<name> (string) Required. The name of the stream object resource to get.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-objects-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-objects-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-objects-list/","text":"Use this method to list the objects of a specific stream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-list ... Required Scalar Argument <parent> (string) Required. The parent stream that owns the collection of objects. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListStreamObjectsRequest call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListStreamObjectsRequest must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Objects List"},{"location":"projects_locations-streams-objects-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-list ...","title":"Scopes"},{"location":"projects_locations-streams-objects-list/#required-scalar-argument","text":"<parent> (string) Required. The parent stream that owns the collection of objects.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-objects-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-objects-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string Page token received from a previous ListStreamObjectsRequest call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListStreamObjectsRequest must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"projects_locations-streams-objects-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-objects-lookup/","text":"Use this method to look up a stream object by its source object identifier. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-lookup ... Required Scalar Argument <parent> (string) Required. The parent stream that owns the collection of objects. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LookupStreamObjectRequest: source-object-identifier: mysql-identifier: database: string table: string oracle-identifier: schema: string table: string postgresql-identifier: schema: string table: string sql-server-identifier: schema: string table: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .source-object-identifier.mysql-identifier database=aliquyam Required. The database name. table=eos Required. The table name. ..oracle-identifier schema=at Required. The schema name. table=dolores Required. The table name. ..postgresql-identifier schema=consetetur Required. The schema name. table=gubergren Required. The table name. ..sql-server-identifier schema=dolor Required. The schema name. table=aliquyam Required. The table name. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Objects Lookup"},{"location":"projects_locations-streams-objects-lookup/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-lookup ...","title":"Scopes"},{"location":"projects_locations-streams-objects-lookup/#required-scalar-argument","text":"<parent> (string) Required. The parent stream that owns the collection of objects.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-objects-lookup/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LookupStreamObjectRequest: source-object-identifier: mysql-identifier: database: string table: string oracle-identifier: schema: string table: string postgresql-identifier: schema: string table: string sql-server-identifier: schema: string table: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .source-object-identifier.mysql-identifier database=aliquyam Required. The database name. table=eos Required. The table name. ..oracle-identifier schema=at Required. The schema name. table=dolores Required. The table name. ..postgresql-identifier schema=consetetur Required. The schema name. table=gubergren Required. The table name. ..sql-server-identifier schema=dolor Required. The schema name. table=aliquyam Required. The table name.","title":"Required Request Value"},{"location":"projects_locations-streams-objects-lookup/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-objects-lookup/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-objects-lookup/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-objects-start-backfill-job/","text":"Use this method to start a backfill job for the specified stream object. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-start-backfill-job ... Required Scalar Argument <object> (string) Required. The name of the stream object resource to start a backfill job for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StartBackfillJobRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Objects Start Backfill Job"},{"location":"projects_locations-streams-objects-start-backfill-job/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-start-backfill-job ...","title":"Scopes"},{"location":"projects_locations-streams-objects-start-backfill-job/#required-scalar-argument","text":"<object> (string) Required. The name of the stream object resource to start a backfill job for.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-objects-start-backfill-job/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StartBackfillJobRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"projects_locations-streams-objects-start-backfill-job/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-objects-start-backfill-job/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-objects-start-backfill-job/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-objects-stop-backfill-job/","text":"Use this method to stop a backfill job for the specified stream object. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-stop-backfill-job ... Required Scalar Argument <object> (string) Required. The name of the stream object resource to stop the backfill job for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopBackfillJobRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Objects Stop Backfill Job"},{"location":"projects_locations-streams-objects-stop-backfill-job/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-objects-stop-backfill-job ...","title":"Scopes"},{"location":"projects_locations-streams-objects-stop-backfill-job/#required-scalar-argument","text":"<object> (string) Required. The name of the stream object resource to stop the backfill job for.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-objects-stop-backfill-job/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StopBackfillJobRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"projects_locations-streams-objects-stop-backfill-job/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-objects-stop-backfill-job/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-objects-stop-backfill-job/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-patch/","text":"Use this method to update the configuration of a stream. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-patch ... Required Scalar Argument <name> (string) Output only. The stream's name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Stream: create-time: string customer-managed-encryption-key: string destination-config: bigquery-destination-config: data-freshness: string single-target-dataset: dataset-id: string source-hierarchy-datasets: dataset-template: dataset-id-prefix: string kms-key-name: string location: string destination-connection-profile: string gcs-destination-config: file-rotation-interval: string file-rotation-mb: integer json-file-format: compression: string schema-file-format: string path: string display-name: string labels: { string: string } last-recovery-time: string name: string source-config: mysql-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer oracle-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer postgresql-source-config: max-concurrent-backfill-tasks: integer publication: string replication-slot: string source-connection-profile: string sql-server-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=no Output only. The creation time of the stream. customer-managed-encryption-key=amet. Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS. destination-config.bigquery-destination-config data-freshness=ipsum The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost. single-target-dataset dataset-id=lorem The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference. ..source-hierarchy-datasets.dataset-template dataset-id-prefix=accusam If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _. kms-key-name=gubergren Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information. location=sadipscing Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations. .... destination-connection-profile=at Required. Destination connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} gcs-destination-config file-rotation-interval=sit The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed. file-rotation-mb=81 The maximum file size to be saved in the bucket. json-file-format compression=sit Compression of the loaded JSON file. schema-file-format=magna The schema file format along JSON data files. .. path=et Path inside the Cloud Storage bucket to write data to. ... display-name=rebum. Required. Display name. labels=key=dolor Labels. the value will be associated with the given key last-recovery-time=lorem Output only. If the stream was recovered, the time of the last recovery. Note: This field is currently experimental. name=justo Output only. The stream's name. source-config.mysql-source-config max-concurrent-backfill-tasks=49 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. max-concurrent-cdc-tasks=90 Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. ..oracle-source-config max-concurrent-backfill-tasks=10 Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. max-concurrent-cdc-tasks=58 Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. ..postgresql-source-config max-concurrent-backfill-tasks=88 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. publication=lorem Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects. replication-slot=sanctus Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin. .. source-connection-profile=nonumy Required. Source connection profile resoource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} sql-server-source-config max-concurrent-backfill-tasks=35 Max concurrent backfill tasks. max-concurrent-cdc-tasks=62 Max concurrent CDC tasks. ... state=dolore The state of the stream. update-time=eos Output only. The last update time of the stream. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Update the stream without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. -p validate-only=boolean Optional. Only validate the stream with the changes, without actually updating it. The default is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Patch"},{"location":"projects_locations-streams-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-patch ...","title":"Scopes"},{"location":"projects_locations-streams-patch/#required-scalar-argument","text":"<name> (string) Output only. The stream's name.","title":"Required Scalar Argument"},{"location":"projects_locations-streams-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Stream: create-time: string customer-managed-encryption-key: string destination-config: bigquery-destination-config: data-freshness: string single-target-dataset: dataset-id: string source-hierarchy-datasets: dataset-template: dataset-id-prefix: string kms-key-name: string location: string destination-connection-profile: string gcs-destination-config: file-rotation-interval: string file-rotation-mb: integer json-file-format: compression: string schema-file-format: string path: string display-name: string labels: { string: string } last-recovery-time: string name: string source-config: mysql-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer oracle-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer postgresql-source-config: max-concurrent-backfill-tasks: integer publication: string replication-slot: string source-connection-profile: string sql-server-source-config: max-concurrent-backfill-tasks: integer max-concurrent-cdc-tasks: integer state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=no Output only. The creation time of the stream. customer-managed-encryption-key=amet. Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS. destination-config.bigquery-destination-config data-freshness=ipsum The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost. single-target-dataset dataset-id=lorem The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference. ..source-hierarchy-datasets.dataset-template dataset-id-prefix=accusam If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _. kms-key-name=gubergren Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information. location=sadipscing Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations. .... destination-connection-profile=at Required. Destination connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} gcs-destination-config file-rotation-interval=sit The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed. file-rotation-mb=81 The maximum file size to be saved in the bucket. json-file-format compression=sit Compression of the loaded JSON file. schema-file-format=magna The schema file format along JSON data files. .. path=et Path inside the Cloud Storage bucket to write data to. ... display-name=rebum. Required. Display name. labels=key=dolor Labels. the value will be associated with the given key last-recovery-time=lorem Output only. If the stream was recovered, the time of the last recovery. Note: This field is currently experimental. name=justo Output only. The stream's name. source-config.mysql-source-config max-concurrent-backfill-tasks=49 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. max-concurrent-cdc-tasks=90 Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. ..oracle-source-config max-concurrent-backfill-tasks=10 Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. max-concurrent-cdc-tasks=58 Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used. ..postgresql-source-config max-concurrent-backfill-tasks=88 Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used. publication=lorem Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects. replication-slot=sanctus Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin. .. source-connection-profile=nonumy Required. Source connection profile resoource. Format: projects/{project}/locations/{location}/connectionProfiles/{name} sql-server-source-config max-concurrent-backfill-tasks=35 Max concurrent backfill tasks. max-concurrent-cdc-tasks=62 Max concurrent CDC tasks. ... state=dolore The state of the stream. update-time=eos Output only. The last update time of the stream.","title":"Required Request Value"},{"location":"projects_locations-streams-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p force=boolean Optional. Update the stream without validating it. -p request-id=string Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. -p validate-only=boolean Optional. Only validate the stream with the changes, without actually updating it. The default is false.","title":"Optional Method Properties"},{"location":"projects_locations-streams-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-streams-run/","text":"Use this method to start, resume or recover a stream with a non default CDC strategy. NOTE: This feature is currently experimental. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-run ... Required Scalar Argument <name> (string) Required. Name of the stream resource to start, in the format: projects/{project_id}/locations/{location}/streams/{stream_name} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunStreamRequest: cdc-strategy: specific-start-position: mysql-log-position: log-file: string log-position: integer oracle-scn-position: scn: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdc-strategy.specific-start-position.mysql-log-position log-file=amet. Required. The binary log file name. log-position=17 Optional. The position within the binary log file. Default is head of file. ..oracle-scn-position scn=amet Required. SCN number from where Logs will be read About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Streams Run"},{"location":"projects_locations-streams-run/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: datastream1 --scope <scope> projects locations-streams-run ...","title":"Scopes"},{"location":"projects_locations-streams-run/#required-scalar-argument","text":"<name> (string) Required. Name of the stream resource to start, in the format: projects/{project_id}/locations/{location}/streams/{stream_name}","title":"Required Scalar Argument"},{"location":"projects_locations-streams-run/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunStreamRequest: cdc-strategy: specific-start-position: mysql-log-position: log-file: string log-position: integer oracle-scn-position: scn: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .cdc-strategy.specific-start-position.mysql-log-position log-file=amet. Required. The binary log file name. log-position=17 Optional. The position within the binary log file. Default is head of file. ..oracle-scn-position scn=amet Required. SCN number from where Logs will be read","title":"Required Request Value"},{"location":"projects_locations-streams-run/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-streams-run/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-streams-run/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}