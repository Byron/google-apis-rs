{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The alertcenter1-beta1 command-line interface (CLI) allows to use most features of the Google AlertCenter service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the AlertCenter API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-alertcenter1_beta1-cli Find the source code on github . Usage This documentation was generated from the AlertCenter API at revision 20240304 . The CLI is at version 5.0.4 . alertcenter1-beta1 [options] alerts batch-delete (-r <kv>)... [-p <v>]... [-o <out>] batch-undelete (-r <kv>)... [-p <v>]... [-o <out>] delete <alert-id> [-p <v>]... [-o <out>] feedback-create <alert-id> (-r <kv>)... [-p <v>]... [-o <out>] feedback-list <alert-id> [-p <v>]... [-o <out>] get <alert-id> [-p <v>]... [-o <out>] get-metadata <alert-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] undelete <alert-id> (-r <kv>)... [-p <v>]... [-o <out>] methods get-settings [-p <v>]... [-o <out>] update-settings (-r <kv>)... [-p <v>]... [-o <out>] alertcenter1-beta1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with alertcenter1-beta1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/alertcenter1-beta1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/alertcenter1-beta1-secret.json , assuming that the required alertcenter API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. alertcenter1-beta1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-alertcenter1_beta1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the AlertCenter API at revision 20240304 . The CLI is at version 5.0.4 . alertcenter1-beta1 [options] alerts batch-delete (-r <kv>)... [-p <v>]... [-o <out>] batch-undelete (-r <kv>)... [-p <v>]... [-o <out>] delete <alert-id> [-p <v>]... [-o <out>] feedback-create <alert-id> (-r <kv>)... [-p <v>]... [-o <out>] feedback-list <alert-id> [-p <v>]... [-o <out>] get <alert-id> [-p <v>]... [-o <out>] get-metadata <alert-id> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] undelete <alert-id> (-r <kv>)... [-p <v>]... [-o <out>] methods get-settings [-p <v>]... [-o <out>] update-settings (-r <kv>)... [-p <v>]... [-o <out>] alertcenter1-beta1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with alertcenter1-beta1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/alertcenter1-beta1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/alertcenter1-beta1-secret.json , assuming that the required alertcenter API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. alertcenter1-beta1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"alerts_batch-delete/","text":"Performs batch delete operation on alerts. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts batch-delete ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchDeleteAlertsRequest: alert-id: [string] customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=et Required. The list of alert IDs to delete. Each invocation of this argument appends the given value to the array. customer-id=magna Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Delete"},{"location":"alerts_batch-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts batch-delete ...","title":"Scopes"},{"location":"alerts_batch-delete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchDeleteAlertsRequest: alert-id: [string] customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=et Required. The list of alert IDs to delete. Each invocation of this argument appends the given value to the array. customer-id=magna Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Required Request Value"},{"location":"alerts_batch-delete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"alerts_batch-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_batch-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_batch-undelete/","text":"Performs batch undelete operation on alerts. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts batch-undelete ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUndeleteAlertsRequest: alert-id: [string] customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=no Required. The list of alert IDs to undelete. Each invocation of this argument appends the given value to the array. customer-id=ipsum Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Undelete"},{"location":"alerts_batch-undelete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts batch-undelete ...","title":"Scopes"},{"location":"alerts_batch-undelete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUndeleteAlertsRequest: alert-id: [string] customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=no Required. The list of alert IDs to undelete. Each invocation of this argument appends the given value to the array. customer-id=ipsum Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Required Request Value"},{"location":"alerts_batch-undelete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"alerts_batch-undelete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_batch-undelete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_delete/","text":"Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a NOT_FOUND error. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts delete ... Required Scalar Argument <alert-id> (string) Required. The identifier of the alert to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"alerts_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts delete ...","title":"Scopes"},{"location":"alerts_delete/#required-scalar-argument","text":"<alert-id> (string) Required. The identifier of the alert to delete.","title":"Required Scalar Argument"},{"location":"alerts_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"alerts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_feedback-create/","text":"Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns NOT_FOUND error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts feedback-create ... Required Scalar Argument <alert-id> (string) Required. The identifier of the alert this feedback belongs to. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AlertFeedback: alert-id: string create-time: string customer-id: string email: string feedback-id: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=voluptua. Output only. The alert identifier. create-time=at Output only. The time this feedback was created. customer-id=sanctus Output only. The unique identifier of the Google Workspace account of the customer. email=sed Output only. The email of the user that provided the feedback. feedback-id=amet. Output only. The unique identifier for the feedback. type=takimata Required. The type of the feedback. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Feedback Create"},{"location":"alerts_feedback-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts feedback-create ...","title":"Scopes"},{"location":"alerts_feedback-create/#required-scalar-argument","text":"<alert-id> (string) Required. The identifier of the alert this feedback belongs to.","title":"Required Scalar Argument"},{"location":"alerts_feedback-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AlertFeedback: alert-id: string create-time: string customer-id: string email: string feedback-id: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-id=voluptua. Output only. The alert identifier. create-time=at Output only. The time this feedback was created. customer-id=sanctus Output only. The unique identifier of the Google Workspace account of the customer. email=sed Output only. The email of the user that provided the feedback. feedback-id=amet. Output only. The unique identifier for the feedback. type=takimata Required. The type of the feedback.","title":"Required Request Value"},{"location":"alerts_feedback-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"alerts_feedback-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_feedback-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"alerts_feedback-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_feedback-list/","text":"Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns NOT_FOUND error. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts feedback-list ... Required Scalar Argument <alert-id> (string) Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . -p filter=string Optional. A query string for filtering alert feedback results. For more details, see Query filters and Supported query filter fields . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Feedback List"},{"location":"alerts_feedback-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts feedback-list ...","title":"Scopes"},{"location":"alerts_feedback-list/#required-scalar-argument","text":"<alert-id> (string) Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.","title":"Required Scalar Argument"},{"location":"alerts_feedback-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_feedback-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . -p filter=string Optional. A query string for filtering alert feedback results. For more details, see Query filters and Supported query filter fields .","title":"Optional Method Properties"},{"location":"alerts_feedback-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_get-metadata/","text":"Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns NOT_FOUND error. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts get-metadata ... Required Scalar Argument <alert-id> (string) Required. The identifier of the alert this metadata belongs to. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert metadata is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Metadata"},{"location":"alerts_get-metadata/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts get-metadata ...","title":"Scopes"},{"location":"alerts_get-metadata/#required-scalar-argument","text":"<alert-id> (string) Required. The identifier of the alert this metadata belongs to.","title":"Required Scalar Argument"},{"location":"alerts_get-metadata/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_get-metadata/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert metadata is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"alerts_get-metadata/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_get/","text":"Gets the specified alert. Attempting to get a nonexistent alert returns NOT_FOUND error. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts get ... Required Scalar Argument <alert-id> (string) Required. The identifier of the alert to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"alerts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts get ...","title":"Scopes"},{"location":"alerts_get/#required-scalar-argument","text":"<alert-id> (string) Required. The identifier of the alert to retrieve.","title":"Required Scalar Argument"},{"location":"alerts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"alerts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_list/","text":"Lists the alerts. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . -p filter=string Optional. A query string for filtering alert results. For more details, see Query filters and Supported query filter fields . -p order-by=string Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using order_by=&#34;create_time desc&#34; . Currently, supported sorting are create_time asc , create_time desc , update_time desc -p page-size=integer Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default. -p page-token=string Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"alerts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts list ...","title":"Scopes"},{"location":"alerts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . -p filter=string Optional. A query string for filtering alert results. For more details, see Query filters and Supported query filter fields . -p order-by=string Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using order_by=&#34;create_time desc&#34; . Currently, supported sorting are create_time asc , create_time desc , update_time desc -p page-size=integer Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default. -p page-token=string Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.","title":"Optional Method Properties"},{"location":"alerts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"alerts_undelete/","text":"Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a NOT_FOUND error. Attempting to undelete an alert which has not been marked for deletion has no effect. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts undelete ... Required Scalar Argument <alert-id> (string) Required. The identifier of the alert to undelete. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UndeleteAlertRequest: customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . customer-id=amet. Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Undelete"},{"location":"alerts_undelete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> alerts undelete ...","title":"Scopes"},{"location":"alerts_undelete/#required-scalar-argument","text":"<alert-id> (string) Required. The identifier of the alert to undelete.","title":"Required Scalar Argument"},{"location":"alerts_undelete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UndeleteAlertRequest: customer-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . customer-id=amet. Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Required Request Value"},{"location":"alerts_undelete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"alerts_undelete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"alerts_undelete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"methods_get-settings/","text":"Returns customer-level settings. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> methods get-settings ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The customer_id must/ have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Settings"},{"location":"methods_get-settings/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> methods get-settings ...","title":"Scopes"},{"location":"methods_get-settings/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"methods_get-settings/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The customer_id must/ have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"methods_get-settings/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"methods_update-settings/","text":"Updates the customer-level settings. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> methods update-settings ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Settings: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Settings"},{"location":"methods_update-settings/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.alerts scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.alerts . You can set the scope for this method like this: alertcenter1-beta1 --scope <scope> methods update-settings ...","title":"Scopes"},{"location":"methods_update-settings/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Settings: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"methods_update-settings/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"methods_update-settings/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"methods_update-settings/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-id=string Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The customer_id must have the initial \"C\" stripped (for example, 046psxkn ). Inferred from the caller identity if not provided. Find your customer ID .","title":"Optional Method Properties"},{"location":"methods_update-settings/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}