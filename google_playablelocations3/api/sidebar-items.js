initSidebarItems({"struct":[["GoogleMapsPlayablelocationsV3Impression","Encapsulates impression event details."],["GoogleMapsPlayablelocationsV3LogImpressionsRequest","A request for logging impressions."],["GoogleMapsPlayablelocationsV3LogImpressionsResponse","A response for the LogImpressions method. This method returns no data upon success."],["GoogleMapsPlayablelocationsV3LogPlayerReportsRequest","A request for logging your player's bad location reports."],["GoogleMapsPlayablelocationsV3LogPlayerReportsResponse","A response for the LogPlayerReports method."],["GoogleMapsPlayablelocationsV3PlayerReport","A report submitted by a player about a playable location that is considered inappropriate for use in the game."],["GoogleMapsPlayablelocationsV3SampleAreaFilter","Specifies the area to search for playable locations."],["GoogleMapsPlayablelocationsV3SampleCriterion","Encapsulates a filter criterion for searching for a set of playable locations."],["GoogleMapsPlayablelocationsV3SampleFilter","Specifies the filters to use when searching for playable locations."],["GoogleMapsPlayablelocationsV3SamplePlayableLocation","A geographical point suitable for placing game objects in location-based games."],["GoogleMapsPlayablelocationsV3SamplePlayableLocationList","A list of PlayableLocation objects that satisfies a single Criterion."],["GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest","Life of a query:"],["GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse","Response for the SamplePlayableLocations method."],["GoogleMapsPlayablelocationsV3SampleSpacingOptions","A set of options that specifies the separation between playable locations."],["GoogleMapsUnityClientInfo","Client information."],["GoogleTypeLatLng","An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges."],["MethodLogImpressionCall","Logs new events when playable locations are displayed, and when they are interacted with."],["MethodLogPlayerReportCall","Logs bad playable location reports submitted by players."],["MethodMethods","A builder providing access to all free methods, which are not associated with a particular resource. It is not used directly, but through the `PlayableLocations` hub."],["MethodSamplePlayableLocationCall","Returns a set of playable locations that lie within a specified area, that satisfy optional filter criteria."],["PlayableLocations","Central instance to access all PlayableLocations related resource activities"]]});