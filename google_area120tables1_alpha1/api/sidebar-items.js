initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["Area120Tables","Central instance to access all Area120Tables related resource activities"],["BatchCreateRowsRequest","Request message for TablesService.BatchCreateRows."],["BatchCreateRowsResponse","Response message for TablesService.BatchCreateRows."],["BatchDeleteRowsRequest","Request message for TablesService.BatchDeleteRows"],["BatchUpdateRowsRequest","Request message for TablesService.BatchUpdateRows."],["BatchUpdateRowsResponse","Response message for TablesService.BatchUpdateRows."],["ColumnDescription","Details on a column in the table."],["CreateRowRequest","Request message for TablesService.CreateRow."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["LabeledItem","A single item in a labeled column."],["ListRowsResponse","Response message for TablesService.ListRows."],["ListTablesResponse","Response message for TablesService.ListTables."],["ListWorkspacesResponse","Response message for TablesService.ListWorkspaces."],["LookupDetails","Details about a lookup column whose value comes from the associated relationship."],["RelationshipDetails","Details about a relationship column."],["Row","A single row in a table."],["Table","A single table."],["TableGetCall","Gets a table. Returns NOT_FOUND if the table does not exist."],["TableListCall","Lists tables for the user."],["TableMethods","A builder providing access to all methods supported on table resources. It is not used directly, but through the `Area120Tables` hub."],["TableRowBatchCreateCall","Creates multiple rows."],["TableRowBatchDeleteCall","Deletes multiple rows."],["TableRowBatchUpdateCall","Updates multiple rows."],["TableRowCreateCall","Creates a row."],["TableRowDeleteCall","Deletes a row."],["TableRowGetCall","Gets a row. Returns NOT_FOUND if the row does not exist in the table."],["TableRowListCall","Lists rows in a table. Returns NOT_FOUND if the table does not exist."],["TableRowPatchCall","Updates a row."],["UpdateRowRequest","Request message for TablesService.UpdateRow."],["Workspace","A single workspace."],["WorkspaceGetCall","Gets a workspace. Returns NOT_FOUND if the workspace does not exist."],["WorkspaceListCall","Lists workspaces for the user."],["WorkspaceMethods","A builder providing access to all methods supported on workspace resources. It is not used directly, but through the `Area120Tables` hub."]]});