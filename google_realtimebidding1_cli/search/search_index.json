{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The realtimebidding1 command-line interface (CLI) allows to use most features of the Google Real-time Bidding service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Real-time Bidding API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-realtimebidding1-cli Find the source code on github . Usage This documentation was generated from the Real-time Bidding API at revision 20240305 . The CLI is at version 5.0.4 . realtimebidding1 [options] bidders creatives-list <parent> [-p <v>]... [-o <out>] creatives-watch <parent> (-r <kv>)... [-p <v>]... [-o <out>] endpoints-get <name> [-p <v>]... [-o <out>] endpoints-list <parent> [-p <v>]... [-o <out>] endpoints-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] pretargeting-configs-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-apps <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-publishers <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-sites <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-delete <name> [-p <v>]... [-o <out>] pretargeting-configs-get <name> [-p <v>]... [-o <out>] pretargeting-configs-list <parent> [-p <v>]... [-o <out>] pretargeting-configs-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-apps <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-publishers <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-sites <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-suspend <name> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-batch-approve <parent> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-batch-reject <parent> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-get <name> [-p <v>]... [-o <out>] publisher-connections-list <parent> [-p <v>]... [-o <out>] buyers creatives-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] creatives-get <name> [-p <v>]... [-o <out>] creatives-list <parent> [-p <v>]... [-o <out>] creatives-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] get-remarketing-tag <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] user-lists-close <name> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-get <name> [-p <v>]... [-o <out>] user-lists-get-remarketing-tag <name> [-p <v>]... [-o <out>] user-lists-list <parent> [-p <v>]... [-o <out>] user-lists-open <name> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-update <name> (-r <kv>)... [-p <v>]... [-o <out>] realtimebidding1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with realtimebidding1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/realtimebidding1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/realtimebidding1-secret.json , assuming that the required realtimebidding API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. realtimebidding1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-realtimebidding1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Real-time Bidding API at revision 20240305 . The CLI is at version 5.0.4 . realtimebidding1 [options] bidders creatives-list <parent> [-p <v>]... [-o <out>] creatives-watch <parent> (-r <kv>)... [-p <v>]... [-o <out>] endpoints-get <name> [-p <v>]... [-o <out>] endpoints-list <parent> [-p <v>]... [-o <out>] endpoints-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] pretargeting-configs-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-apps <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-publishers <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-add-targeted-sites <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-delete <name> [-p <v>]... [-o <out>] pretargeting-configs-get <name> [-p <v>]... [-o <out>] pretargeting-configs-list <parent> [-p <v>]... [-o <out>] pretargeting-configs-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-apps <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-publishers <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-remove-targeted-sites <pretargeting-config> (-r <kv>)... [-p <v>]... [-o <out>] pretargeting-configs-suspend <name> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-batch-approve <parent> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-batch-reject <parent> (-r <kv>)... [-p <v>]... [-o <out>] publisher-connections-get <name> [-p <v>]... [-o <out>] publisher-connections-list <parent> [-p <v>]... [-o <out>] buyers creatives-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] creatives-get <name> [-p <v>]... [-o <out>] creatives-list <parent> [-p <v>]... [-o <out>] creatives-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] get-remarketing-tag <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] user-lists-close <name> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-get <name> [-p <v>]... [-o <out>] user-lists-get-remarketing-tag <name> [-p <v>]... [-o <out>] user-lists-list <parent> [-p <v>]... [-o <out>] user-lists-open <name> (-r <kv>)... [-p <v>]... [-o <out>] user-lists-update <name> (-r <kv>)... [-p <v>]... [-o <out>] realtimebidding1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with realtimebidding1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/realtimebidding1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/realtimebidding1-secret.json , assuming that the required realtimebidding API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. realtimebidding1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"bidders_creatives-list/","text":"Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. lastStatusUpdate and creativeServingDecision may be outdated for creatives on sequential pages. We recommend Google Cloud Pub/Sub to view the latest status. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders creatives-list ... Required Scalar Argument <parent> (string) Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either buyers/{buyerAccountId} or bidders/{bidderAccountId} . For buyers/{buyerAccountId} , the buyerAccountId can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer ( 456 ) under bidder account ( 123 ), you would use the pattern: buyers/456 . 3. The ID of the bidder itself. So for listing creatives pertaining to bidder ( 123 ), you would use buyers/123 . If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use bidders/{bidderAccountId} , for example, for all creatives pertaining to bidder ( 123 ), use bidders/123 . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED' -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\". Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives List"},{"location":"bidders_creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders creatives-list ...","title":"Scopes"},{"location":"bidders_creatives-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either buyers/{buyerAccountId} or bidders/{bidderAccountId} . For buyers/{buyerAccountId} , the buyerAccountId can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer ( 456 ) under bidder account ( 123 ), you would use the pattern: buyers/456 . 3. The ID of the bidder itself. So for listing creatives pertaining to bidder ( 123 ), you would use buyers/123 . If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use bidders/{bidderAccountId} , for example, for all creatives pertaining to bidder ( 123 ), use bidders/123 .","title":"Required Scalar Argument"},{"location":"bidders_creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED' -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".","title":"Optional Method Properties"},{"location":"bidders_creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_creatives-watch/","text":"Watches all creatives pertaining to a bidder. It is sufficient to invoke this endpoint once per bidder. A Pub/Sub topic will be created and notifications will be pushed to the topic when any of the bidder's creatives change status. All of the bidder's service accounts will have access to read from the topic. Subsequent invocations of this method will return the existing Pub/Sub configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders creatives-watch ... Required Scalar Argument <parent> (string) Required. To watch all creatives pertaining to the bidder and all its child seat accounts, the bidder must follow the pattern bidders/{bidderAccountId} . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: WatchCreativesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Watch"},{"location":"bidders_creatives-watch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders creatives-watch ...","title":"Scopes"},{"location":"bidders_creatives-watch/#required-scalar-argument","text":"<parent> (string) Required. To watch all creatives pertaining to the bidder and all its child seat accounts, the bidder must follow the pattern bidders/{bidderAccountId} .","title":"Required Scalar Argument"},{"location":"bidders_creatives-watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: WatchCreativesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"bidders_creatives-watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_creatives-watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_creatives-watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_endpoints-get/","text":"Gets a bidder endpoint by its name. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-get ... Required Scalar Argument <name> (string) Required. Name of the bidder endpoint to get. Format: bidders/{bidderAccountId}/endpoints/{endpointId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Endpoints Get"},{"location":"bidders_endpoints-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-get ...","title":"Scopes"},{"location":"bidders_endpoints-get/#required-scalar-argument","text":"<name> (string) Required. Name of the bidder endpoint to get. Format: bidders/{bidderAccountId}/endpoints/{endpointId}","title":"Required Scalar Argument"},{"location":"bidders_endpoints-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_endpoints-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_endpoints-list/","text":"Lists all the bidder's endpoints. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-list ... Required Scalar Argument <parent> (string) Required. Name of the bidder whose endpoints will be listed. Format: bidders/{bidderAccountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of endpoints to return. If unspecified, at most 100 endpoints will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListEndpoints call in ListEndpointsResponse.nextPageToken. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Endpoints List"},{"location":"bidders_endpoints-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-list ...","title":"Scopes"},{"location":"bidders_endpoints-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the bidder whose endpoints will be listed. Format: bidders/{bidderAccountId}","title":"Required Scalar Argument"},{"location":"bidders_endpoints-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_endpoints-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of endpoints to return. If unspecified, at most 100 endpoints will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListEndpoints call in ListEndpointsResponse.nextPageToken.","title":"Optional Method Properties"},{"location":"bidders_endpoints-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_endpoints-patch/","text":"Updates a bidder's endpoint. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-patch ... Required Scalar Argument <name> (string) Output only. Name of the endpoint resource that must follow the pattern bidders/{bidderAccountId}/endpoints/{endpointId} , where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Endpoint: bid-protocol: string maximum-qps: string name: string trading-location: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bid-protocol=et The protocol that the bidder endpoint is using. maximum-qps=magna The maximum number of queries per second allowed to be sent to this server. name=no Output only. Name of the endpoint resource that must follow the pattern bidders/{bidderAccountId}/endpoints/{endpointId} , where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server. trading-location=ipsum The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information. url=voluptua. Output only. The URL that bid requests should be sent to. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Endpoints Patch"},{"location":"bidders_endpoints-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders endpoints-patch ...","title":"Scopes"},{"location":"bidders_endpoints-patch/#required-scalar-argument","text":"<name> (string) Output only. Name of the endpoint resource that must follow the pattern bidders/{bidderAccountId}/endpoints/{endpointId} , where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server.","title":"Required Scalar Argument"},{"location":"bidders_endpoints-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Endpoint: bid-protocol: string maximum-qps: string name: string trading-location: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . bid-protocol=et The protocol that the bidder endpoint is using. maximum-qps=magna The maximum number of queries per second allowed to be sent to this server. name=no Output only. Name of the endpoint resource that must follow the pattern bidders/{bidderAccountId}/endpoints/{endpointId} , where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server. trading-location=ipsum The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information. url=voluptua. Output only. The URL that bid requests should be sent to.","title":"Required Request Value"},{"location":"bidders_endpoints-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_endpoints-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_endpoints-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates.","title":"Optional Method Properties"},{"location":"bidders_endpoints-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_get/","text":"Gets a bidder account by its name. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders get ... Required Scalar Argument <name> (string) Required. Name of the bidder to get. Format: bidders/{bidderAccountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"bidders_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders get ...","title":"Scopes"},{"location":"bidders_get/#required-scalar-argument","text":"<name> (string) Required. Name of the bidder to get. Format: bidders/{bidderAccountId}","title":"Required Scalar Argument"},{"location":"bidders_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_list/","text":"Lists all the bidder accounts that belong to the caller. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of bidders to return. If unspecified, at most 100 bidders will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListBidders call in ListBiddersResponse.nextPageToken. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"bidders_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders list ...","title":"Scopes"},{"location":"bidders_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of bidders to return. If unspecified, at most 100 bidders will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListBidders call in ListBiddersResponse.nextPageToken.","title":"Optional Method Properties"},{"location":"bidders_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-activate/","text":"Activates a pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-activate ... Required Scalar Argument <name> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivatePretargetingConfigRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Activate"},{"location":"bidders_pretargeting-configs-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-activate ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-activate/#required-scalar-argument","text":"<name> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivatePretargetingConfigRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-add-targeted-apps/","text":"Adds targeted apps to the pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-apps ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedAppsRequest: app-ids: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-ids=at A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values. Each invocation of this argument appends the given value to the array. targeting-mode=sanctus Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Add Targeted Apps"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-apps ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedAppsRequest: app-ids: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-ids=at A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values. Each invocation of this argument appends the given value to the array. targeting-mode=sanctus Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-add-targeted-apps/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/","text":"Adds targeted publishers to the pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-publishers ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedPublishersRequest: publisher-ids: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . publisher-ids=sed A list of publisher IDs to target in the pretargeting configuration. These values will be added to the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details. Each invocation of this argument appends the given value to the array. targeting-mode=amet. Required. The targeting mode that should be applied to the list of publisher IDs. If are existing publisher IDs, must be equal to the existing PretargetingConfig.publisherTargeting.targetingMode or a 400 bad request error will be returned. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Add Targeted Publishers"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-publishers ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedPublishersRequest: publisher-ids: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . publisher-ids=sed A list of publisher IDs to target in the pretargeting configuration. These values will be added to the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details. Each invocation of this argument appends the given value to the array. targeting-mode=amet. Required. The targeting mode that should be applied to the list of publisher IDs. If are existing publisher IDs, must be equal to the existing PretargetingConfig.publisherTargeting.targetingMode or a 400 bad request error will be returned.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-add-targeted-publishers/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-add-targeted-sites/","text":"Adds targeted sites to the pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-sites ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedSitesRequest: sites: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . sites=takimata A list of site URLs to target in the pretargeting configuration. These values will be added to the list of targeted URLs in PretargetingConfig.webTargeting.values. Each invocation of this argument appends the given value to the array. targeting-mode=amet. Required. The targeting mode that should be applied to the list of site URLs. If there are existing targeted sites, must be equal to the existing PretargetingConfig.webTargeting.targetingMode or a 400 bad request error will be returned. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Add Targeted Sites"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-add-targeted-sites ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetedSitesRequest: sites: [string] targeting-mode: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . sites=takimata A list of site URLs to target in the pretargeting configuration. These values will be added to the list of targeted URLs in PretargetingConfig.webTargeting.values. Each invocation of this argument appends the given value to the array. targeting-mode=amet. Required. The targeting mode that should be applied to the list of site URLs. If there are existing targeted sites, must be equal to the existing PretargetingConfig.webTargeting.targetingMode or a 400 bad request error will be returned.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-add-targeted-sites/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-create/","text":"Creates a pretargeting configuration. A pretargeting configuration's state (PretargetingConfig.state) is active upon creation, and it will start to affect traffic shortly after. A bidder may create a maximum of 10 pretargeting configurations. Attempts to exceed this maximum results in a 400 bad request error. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-create ... Required Scalar Argument <parent> (string) Required. Name of the bidder to create the pretargeting configuration for. Format: bidders/{bidderAccountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: allowed-user-targeting-modes: [string] app-targeting: mobile-app-category-targeting: excluded-ids: [string] included-ids: [string] mobile-app-targeting: targeting-mode: string values: [string] billing-id: string display-name: string excluded-content-label-ids: [string] geo-targeting: excluded-ids: [string] included-ids: [string] included-environments: [string] included-formats: [string] included-languages: [string] included-mobile-operating-system-ids: [string] included-platforms: [string] included-user-id-types: [string] interstitial-targeting: string invalid-geo-ids: [string] maximum-qps: string minimum-viewability-decile: integer name: string publisher-targeting: targeting-mode: string values: [string] state: string user-list-targeting: excluded-ids: [string] included-ids: [string] vertical-targeting: excluded-ids: [string] included-ids: [string] web-targeting: targeting-mode: string values: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allowed-user-targeting-modes=duo Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow. Each invocation of this argument appends the given value to the array. app-targeting.mobile-app-category-targeting excluded-ids=ipsum The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=gubergren The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..mobile-app-targeting targeting-mode=lorem How the items in this list should be targeted. values=gubergren The values specified. Each invocation of this argument appends the given value to the array. ... billing-id=eos Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids. display-name=dolor The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has. excluded-content-label-ids=ea The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs. Each invocation of this argument appends the given value to the array. geo-targeting excluded-ids=ipsum The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=invidunt The IDs included in a configuration. Each invocation of this argument appends the given value to the array. .. included-environments=amet Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments. Each invocation of this argument appends the given value to the array. included-formats=duo Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format. Each invocation of this argument appends the given value to the array. included-languages=ipsum The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. included-mobile-operating-system-ids=sed The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv Each invocation of this argument appends the given value to the array. included-platforms=ut The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform. Each invocation of this argument appends the given value to the array. included-user-id-types=gubergren User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent. Each invocation of this argument appends the given value to the array. interstitial-targeting=rebum. The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not. invalid-geo-ids=est Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions. Each invocation of this argument appends the given value to the array. maximum-qps=ipsum The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide minimum-viewability-decile=51 The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability. name=est Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id} publisher-targeting targeting-mode=gubergren How the items in this list should be targeted. values=ea The values specified. Each invocation of this argument appends the given value to the array. .. state=dolor Output only. The state of this pretargeting configuration. user-list-targeting excluded-ids=lorem The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=eos The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..vertical-targeting excluded-ids=labore The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=sed The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..web-targeting targeting-mode=duo How the items in this list should be targeted. values=sed The values specified. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Create"},{"location":"bidders_pretargeting-configs-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-create ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-create/#required-scalar-argument","text":"<parent> (string) Required. Name of the bidder to create the pretargeting configuration for. Format: bidders/{bidderAccountId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: allowed-user-targeting-modes: [string] app-targeting: mobile-app-category-targeting: excluded-ids: [string] included-ids: [string] mobile-app-targeting: targeting-mode: string values: [string] billing-id: string display-name: string excluded-content-label-ids: [string] geo-targeting: excluded-ids: [string] included-ids: [string] included-environments: [string] included-formats: [string] included-languages: [string] included-mobile-operating-system-ids: [string] included-platforms: [string] included-user-id-types: [string] interstitial-targeting: string invalid-geo-ids: [string] maximum-qps: string minimum-viewability-decile: integer name: string publisher-targeting: targeting-mode: string values: [string] state: string user-list-targeting: excluded-ids: [string] included-ids: [string] vertical-targeting: excluded-ids: [string] included-ids: [string] web-targeting: targeting-mode: string values: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allowed-user-targeting-modes=duo Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow. Each invocation of this argument appends the given value to the array. app-targeting.mobile-app-category-targeting excluded-ids=ipsum The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=gubergren The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..mobile-app-targeting targeting-mode=lorem How the items in this list should be targeted. values=gubergren The values specified. Each invocation of this argument appends the given value to the array. ... billing-id=eos Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids. display-name=dolor The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has. excluded-content-label-ids=ea The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs. Each invocation of this argument appends the given value to the array. geo-targeting excluded-ids=ipsum The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=invidunt The IDs included in a configuration. Each invocation of this argument appends the given value to the array. .. included-environments=amet Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments. Each invocation of this argument appends the given value to the array. included-formats=duo Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format. Each invocation of this argument appends the given value to the array. included-languages=ipsum The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. included-mobile-operating-system-ids=sed The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv Each invocation of this argument appends the given value to the array. included-platforms=ut The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform. Each invocation of this argument appends the given value to the array. included-user-id-types=gubergren User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent. Each invocation of this argument appends the given value to the array. interstitial-targeting=rebum. The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not. invalid-geo-ids=est Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions. Each invocation of this argument appends the given value to the array. maximum-qps=ipsum The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide minimum-viewability-decile=51 The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability. name=est Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id} publisher-targeting targeting-mode=gubergren How the items in this list should be targeted. values=ea The values specified. Each invocation of this argument appends the given value to the array. .. state=dolor Output only. The state of this pretargeting configuration. user-list-targeting excluded-ids=lorem The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=eos The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..vertical-targeting excluded-ids=labore The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=sed The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..web-targeting targeting-mode=duo How the items in this list should be targeted. values=sed The values specified. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-delete/","text":"Deletes a pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-delete ... Required Scalar Argument <name> (string) Required. The name of the pretargeting configuration to delete. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Delete"},{"location":"bidders_pretargeting-configs-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-delete ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-delete/#required-scalar-argument","text":"<name> (string) Required. The name of the pretargeting configuration to delete. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-get/","text":"Gets a pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-get ... Required Scalar Argument <name> (string) Required. Name of the pretargeting configuration to get. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Get"},{"location":"bidders_pretargeting-configs-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-get ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-get/#required-scalar-argument","text":"<name> (string) Required. Name of the pretargeting configuration to get. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-list/","text":"Lists all pretargeting configurations for a single bidder. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-list ... Required Scalar Argument <parent> (string) Required. Name of the bidder whose pretargeting configurations will be listed. Format: bidders/{bidderAccountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of pretargeting configurations to return. If unspecified, at most 10 pretargeting configurations will be returned. The maximum value is 100; values above 100 will be coerced to 100. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListPretargetingConfigs call in ListPretargetingConfigsResponse.nextPageToken. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs List"},{"location":"bidders_pretargeting-configs-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-list ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the bidder whose pretargeting configurations will be listed. Format: bidders/{bidderAccountId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of pretargeting configurations to return. If unspecified, at most 10 pretargeting configurations will be returned. The maximum value is 100; values above 100 will be coerced to 100. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListPretargetingConfigs call in ListPretargetingConfigsResponse.nextPageToken.","title":"Optional Method Properties"},{"location":"bidders_pretargeting-configs-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-patch/","text":"Updates a pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-patch ... Required Scalar Argument <name> (string) Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: allowed-user-targeting-modes: [string] app-targeting: mobile-app-category-targeting: excluded-ids: [string] included-ids: [string] mobile-app-targeting: targeting-mode: string values: [string] billing-id: string display-name: string excluded-content-label-ids: [string] geo-targeting: excluded-ids: [string] included-ids: [string] included-environments: [string] included-formats: [string] included-languages: [string] included-mobile-operating-system-ids: [string] included-platforms: [string] included-user-id-types: [string] interstitial-targeting: string invalid-geo-ids: [string] maximum-qps: string minimum-viewability-decile: integer name: string publisher-targeting: targeting-mode: string values: [string] state: string user-list-targeting: excluded-ids: [string] included-ids: [string] vertical-targeting: excluded-ids: [string] included-ids: [string] web-targeting: targeting-mode: string values: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allowed-user-targeting-modes=no Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow. Each invocation of this argument appends the given value to the array. app-targeting.mobile-app-category-targeting excluded-ids=stet The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=kasd The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..mobile-app-targeting targeting-mode=et How the items in this list should be targeted. values=sed The values specified. Each invocation of this argument appends the given value to the array. ... billing-id=et Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids. display-name=et The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has. excluded-content-label-ids=vero The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs. Each invocation of this argument appends the given value to the array. geo-targeting excluded-ids=erat The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=sed The IDs included in a configuration. Each invocation of this argument appends the given value to the array. .. included-environments=duo Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments. Each invocation of this argument appends the given value to the array. included-formats=dolore Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format. Each invocation of this argument appends the given value to the array. included-languages=et The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. included-mobile-operating-system-ids=voluptua. The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv Each invocation of this argument appends the given value to the array. included-platforms=amet. The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform. Each invocation of this argument appends the given value to the array. included-user-id-types=consetetur User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent. Each invocation of this argument appends the given value to the array. interstitial-targeting=diam The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not. invalid-geo-ids=dolor Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions. Each invocation of this argument appends the given value to the array. maximum-qps=et The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide minimum-viewability-decile=79 The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability. name=sadipscing Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id} publisher-targeting targeting-mode=stet How the items in this list should be targeted. values=dolor The values specified. Each invocation of this argument appends the given value to the array. .. state=duo Output only. The state of this pretargeting configuration. user-list-targeting excluded-ids=vero The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=vero The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..vertical-targeting excluded-ids=invidunt The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=stet The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..web-targeting targeting-mode=vero How the items in this list should be targeted. values=elitr The values specified. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Patch"},{"location":"bidders_pretargeting-configs-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-patch ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-patch/#required-scalar-argument","text":"<name> (string) Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PretargetingConfig: allowed-user-targeting-modes: [string] app-targeting: mobile-app-category-targeting: excluded-ids: [string] included-ids: [string] mobile-app-targeting: targeting-mode: string values: [string] billing-id: string display-name: string excluded-content-label-ids: [string] geo-targeting: excluded-ids: [string] included-ids: [string] included-environments: [string] included-formats: [string] included-languages: [string] included-mobile-operating-system-ids: [string] included-platforms: [string] included-user-id-types: [string] interstitial-targeting: string invalid-geo-ids: [string] maximum-qps: string minimum-viewability-decile: integer name: string publisher-targeting: targeting-mode: string values: [string] state: string user-list-targeting: excluded-ids: [string] included-ids: [string] vertical-targeting: excluded-ids: [string] included-ids: [string] web-targeting: targeting-mode: string values: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . allowed-user-targeting-modes=no Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow. Each invocation of this argument appends the given value to the array. app-targeting.mobile-app-category-targeting excluded-ids=stet The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=kasd The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..mobile-app-targeting targeting-mode=et How the items in this list should be targeted. values=sed The values specified. Each invocation of this argument appends the given value to the array. ... billing-id=et Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids. display-name=et The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has. excluded-content-label-ids=vero The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs. Each invocation of this argument appends the given value to the array. geo-targeting excluded-ids=erat The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=sed The IDs included in a configuration. Each invocation of this argument appends the given value to the array. .. included-environments=duo Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments. Each invocation of this argument appends the given value to the array. included-formats=dolore Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format. Each invocation of this argument appends the given value to the array. included-languages=et The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes. Each invocation of this argument appends the given value to the array. included-mobile-operating-system-ids=voluptua. The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv Each invocation of this argument appends the given value to the array. included-platforms=amet. The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform. Each invocation of this argument appends the given value to the array. included-user-id-types=consetetur User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent. Each invocation of this argument appends the given value to the array. interstitial-targeting=diam The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not. invalid-geo-ids=dolor Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions. Each invocation of this argument appends the given value to the array. maximum-qps=et The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide minimum-viewability-decile=79 The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability. name=sadipscing Output only. Name of the pretargeting configuration that must follow the pattern bidders/{bidder_account_id}/pretargetingConfigs/{config_id} publisher-targeting targeting-mode=stet How the items in this list should be targeted. values=dolor The values specified. Each invocation of this argument appends the given value to the array. .. state=duo Output only. The state of this pretargeting configuration. user-list-targeting excluded-ids=vero The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=vero The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..vertical-targeting excluded-ids=invidunt The IDs excluded in a configuration. Each invocation of this argument appends the given value to the array. included-ids=stet The IDs included in a configuration. Each invocation of this argument appends the given value to the array. ..web-targeting targeting-mode=vero How the items in this list should be targeted. values=elitr The values specified. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates.","title":"Optional Method Properties"},{"location":"bidders_pretargeting-configs-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/","text":"Removes targeted apps from the pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-apps ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedAppsRequest: app-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-ids=lorem A list of app IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Remove Targeted Apps"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-apps ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedAppsRequest: app-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-ids=lorem A list of app IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-remove-targeted-apps/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/","text":"Removes targeted publishers from the pretargeting config. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-publishers ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedPublishersRequest: publisher-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . publisher-ids=diam A list of publisher IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Remove Targeted Publishers"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-publishers ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedPublishersRequest: publisher-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . publisher-ids=diam A list of publisher IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-remove-targeted-publishers/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/","text":"Removes targeted sites from the pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-sites ... Required Scalar Argument <pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedSitesRequest: sites: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . sites=no A list of site URLs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted URLs in PretargetingConfig.webTargeting.values. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Remove Targeted Sites"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-remove-targeted-sites ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#required-scalar-argument","text":"<pretargeting-config> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RemoveTargetedSitesRequest: sites: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . sites=no A list of site URLs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted URLs in PretargetingConfig.webTargeting.values. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-remove-targeted-sites/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_pretargeting-configs-suspend/","text":"Suspends a pretargeting configuration. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-suspend ... Required Scalar Argument <name> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SuspendPretargetingConfigRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Pretargeting Configs Suspend"},{"location":"bidders_pretargeting-configs-suspend/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders pretargeting-configs-suspend ...","title":"Scopes"},{"location":"bidders_pretargeting-configs-suspend/#required-scalar-argument","text":"<name> (string) Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}","title":"Required Scalar Argument"},{"location":"bidders_pretargeting-configs-suspend/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SuspendPretargetingConfigRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"bidders_pretargeting-configs-suspend/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_pretargeting-configs-suspend/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_pretargeting-configs-suspend/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_publisher-connections-batch-approve/","text":"Batch approves multiple publisher connections. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-batch-approve ... Required Scalar Argument <parent> (string) Required. The bidder for whom publisher connections will be approved. Format: bidders/{bidder} where {bidder} is the account ID of the bidder. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchApprovePublisherConnectionsRequest: names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . names=ipsum Required. The names of the publishers with which connections will be approved. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Connections Batch Approve"},{"location":"bidders_publisher-connections-batch-approve/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-batch-approve ...","title":"Scopes"},{"location":"bidders_publisher-connections-batch-approve/#required-scalar-argument","text":"<parent> (string) Required. The bidder for whom publisher connections will be approved. Format: bidders/{bidder} where {bidder} is the account ID of the bidder.","title":"Required Scalar Argument"},{"location":"bidders_publisher-connections-batch-approve/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchApprovePublisherConnectionsRequest: names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . names=ipsum Required. The names of the publishers with which connections will be approved. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_publisher-connections-batch-approve/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_publisher-connections-batch-approve/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_publisher-connections-batch-approve/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_publisher-connections-batch-reject/","text":"Batch rejects multiple publisher connections. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-batch-reject ... Required Scalar Argument <parent> (string) Required. The bidder for whom publisher connections will be rejected. Format: bidders/{bidder} where {bidder} is the account ID of the bidder. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRejectPublisherConnectionsRequest: names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . names=accusam Required. The names of the publishers with whom connection will be rejected. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Connections Batch Reject"},{"location":"bidders_publisher-connections-batch-reject/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-batch-reject ...","title":"Scopes"},{"location":"bidders_publisher-connections-batch-reject/#required-scalar-argument","text":"<parent> (string) Required. The bidder for whom publisher connections will be rejected. Format: bidders/{bidder} where {bidder} is the account ID of the bidder.","title":"Required Scalar Argument"},{"location":"bidders_publisher-connections-batch-reject/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchRejectPublisherConnectionsRequest: names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . names=accusam Required. The names of the publishers with whom connection will be rejected. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"bidders_publisher-connections-batch-reject/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"bidders_publisher-connections-batch-reject/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_publisher-connections-batch-reject/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_publisher-connections-get/","text":"Gets a publisher connection. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-get ... Required Scalar Argument <name> (string) Required. Name of the publisher whose connection information is to be retrieved. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. See publisherConnection.name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Connections Get"},{"location":"bidders_publisher-connections-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-get ...","title":"Scopes"},{"location":"bidders_publisher-connections-get/#required-scalar-argument","text":"<name> (string) Required. Name of the publisher whose connection information is to be retrieved. In the pattern bidders/{bidder}/publisherConnections/{publisher} where {bidder} is the account ID of the bidder, and {publisher} is the ads.txt/app-ads.txt publisher ID. See publisherConnection.name.","title":"Required Scalar Argument"},{"location":"bidders_publisher-connections-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_publisher-connections-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"bidders_publisher-connections-list/","text":"Lists publisher connections for a given bidder. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-list ... Required Scalar Argument <parent> (string) Required. Name of the bidder for which publishers have initiated connections. The pattern for this resource is bidders/{bidder} where {bidder} represents the account ID of the bidder. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter publisher connections. Connections can be filtered by displayName , publisherPlatform , and biddingState . If no filter is specified, all publisher connections will be returned. Example: 'displayName=\"Great Publisher*\" AND publisherPlatform=ADMOB AND biddingState != PENDING' See https://google.aip.dev/160 for more information about filtering syntax. -p order-by=string Order specification by which results should be sorted. If no sort order is specified, the results will be returned in alphabetic order based on the publisher's publisher code. Results can be sorted by createTime . Example: 'createTime DESC'. -p page-size=integer Requested page size. The server may return fewer results than requested (due to timeout constraint) even if more are available through another call. If unspecified, the server will pick an appropriate default. Acceptable values are 1 to 5000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListPublisherConnectionsResponse.nextPageToken returned from the previous call to the 'ListPublisherConnections' method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Connections List"},{"location":"bidders_publisher-connections-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> bidders publisher-connections-list ...","title":"Scopes"},{"location":"bidders_publisher-connections-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the bidder for which publishers have initiated connections. The pattern for this resource is bidders/{bidder} where {bidder} represents the account ID of the bidder.","title":"Required Scalar Argument"},{"location":"bidders_publisher-connections-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_publisher-connections-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter publisher connections. Connections can be filtered by displayName , publisherPlatform , and biddingState . If no filter is specified, all publisher connections will be returned. Example: 'displayName=\"Great Publisher*\" AND publisherPlatform=ADMOB AND biddingState != PENDING' See https://google.aip.dev/160 for more information about filtering syntax. -p order-by=string Order specification by which results should be sorted. If no sort order is specified, the results will be returned in alphabetic order based on the publisher's publisher code. Results can be sorted by createTime . Example: 'createTime DESC'. -p page-size=integer Requested page size. The server may return fewer results than requested (due to timeout constraint) even if more are available through another call. If unspecified, the server will pick an appropriate default. Acceptable values are 1 to 5000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListPublisherConnectionsResponse.nextPageToken returned from the previous call to the 'ListPublisherConnections' method.","title":"Optional Method Properties"},{"location":"bidders_publisher-connections-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_creatives-create/","text":"Creates a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-create ... Required Scalar Argument <parent> (string) Required. The name of the parent buyer that the new creative belongs to that must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns a creative. For a bidder accessing creatives on behalf of a child seat buyer, {buyerAccountId} should represent the account ID of the child seat buyer. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string advertiser-name: string agency-id: string api-update-time: string creative-format: string creative-id: string creative-serving-decision: ad-technology-providers: detected-gvl-ids: [string] detected-provider-ids: [string] unidentified-provider-domains: [string] china-policy-compliance: status: string deals-policy-compliance: status: string detected-attributes: [string] detected-click-through-urls: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] detected-vendor-ids: [integer] last-status-update: string network-policy-compliance: status: string platform-policy-compliance: status: string russia-policy-compliance: status: string deal-ids: [string] declared-attributes: [string] declared-click-through-urls: [string] declared-restricted-categories: [string] declared-vendor-ids: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] name: string native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number video-url: string video-vast-xml: string render-url: string restricted-categories: [string] version: integer video: video-metadata: duration: string is-valid-vast: boolean is-vpaid: boolean skip-offset: string vast-version: string video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=takimata Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check. ad-choices-destination-url=consetetur The link to AdChoices destination page. This is only supported for native ads. advertiser-name=voluptua. The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method. agency-id=et The agency ID for this creative. api-update-time=erat Output only. The last update timestamp of the creative through the API. creative-format=consetetur Output only. The format of this creative. Can be used to filter the response of the creatives.list method. creative-id=amet. Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes. creative-serving-decision.ad-technology-providers detected-gvl-ids=sed The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors. Each invocation of this argument appends the given value to the array. detected-provider-ids=takimata The detected Google Ad Tech Providers (ATP) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. Each invocation of this argument appends the given value to the array. unidentified-provider-domains=dolores Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids. Each invocation of this argument appends the given value to the array. ..china-policy-compliance status=gubergren Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..deals-policy-compliance status=et Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. .. detected-attributes=accusam Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. detected-click-through-urls=voluptua. The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-domains=dolore The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=dolore The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-product-categories=67 Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=23 Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. detected-vendor-ids=99 IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the allowed_vendor_type field of a bid request does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. last-status-update=ea The last time the creative status was updated. Can be used to filter the response of the creatives.list method. network-policy-compliance status=sadipscing Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..platform-policy-compliance status=lorem Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..russia-policy-compliance status=invidunt Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ... deal-ids=no Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-attributes=est All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. declared-click-through-urls=at The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-restricted-categories=sed All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-vendor-ids=3 IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. html height=66 The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. snippet=tempor The HTML snippet that displays the ad when inserted in the web page. width=69 The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. .. impression-tracking-urls=ipsum The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. name=et Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response. native advertiser-name=sanctus The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=45 Image height in pixels. url=est The URL of the image. width=71 Image width in pixels. .. body=diam A long description of the ad. call-to-action=dolores A label for the button that the user is supposed to click. click-link-url=dolores The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=et The URL to use for click tracking. headline=sed A short title for the ad. image height=90 Image height in pixels. url=et The URL of the image. width=7 Image width in pixels. ..logo height=21 Image height in pixels. url=no The URL of the image. width=10 Image width in pixels. .. price-display-text=at The price of the promoted app including currency info. star-rating=0.439459047858913 The app rating in the app store. Must be in the range [0-5]. video-url=aliquyam The URL to fetch a native video ad. video-vast-xml=dolores The contents of a VAST document for a native video ad. .. render-url=sadipscing Experimental field that can be used during the FLEDGE Origin Trial . The URL to fetch an interest group ad used in TURTLEDOVE on-device auction . This should be unique among all creatives for a given accountId . This URL should be the same as the URL returned by generateBid() . restricted-categories=erat All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. version=19 Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates. video.video-metadata duration=amet The duration of the ad. Can be used to filter the response of the creatives.list method. is-valid-vast=true Is this a valid VAST ad? Can be used to filter the response of the creatives.list method. is-vpaid=false Is this a VPAID ad? Can be used to filter the response of the creatives.list method. skip-offset=consetetur The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method. vast-version=stet The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method. .. video-url=est The URL to fetch a video ad. video-vast-xml=aliquyam The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Create"},{"location":"buyers_creatives-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-create ...","title":"Scopes"},{"location":"buyers_creatives-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent buyer that the new creative belongs to that must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns a creative. For a bidder accessing creatives on behalf of a child seat buyer, {buyerAccountId} should represent the account ID of the child seat buyer.","title":"Required Scalar Argument"},{"location":"buyers_creatives-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string advertiser-name: string agency-id: string api-update-time: string creative-format: string creative-id: string creative-serving-decision: ad-technology-providers: detected-gvl-ids: [string] detected-provider-ids: [string] unidentified-provider-domains: [string] china-policy-compliance: status: string deals-policy-compliance: status: string detected-attributes: [string] detected-click-through-urls: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] detected-vendor-ids: [integer] last-status-update: string network-policy-compliance: status: string platform-policy-compliance: status: string russia-policy-compliance: status: string deal-ids: [string] declared-attributes: [string] declared-click-through-urls: [string] declared-restricted-categories: [string] declared-vendor-ids: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] name: string native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number video-url: string video-vast-xml: string render-url: string restricted-categories: [string] version: integer video: video-metadata: duration: string is-valid-vast: boolean is-vpaid: boolean skip-offset: string vast-version: string video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=takimata Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check. ad-choices-destination-url=consetetur The link to AdChoices destination page. This is only supported for native ads. advertiser-name=voluptua. The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method. agency-id=et The agency ID for this creative. api-update-time=erat Output only. The last update timestamp of the creative through the API. creative-format=consetetur Output only. The format of this creative. Can be used to filter the response of the creatives.list method. creative-id=amet. Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes. creative-serving-decision.ad-technology-providers detected-gvl-ids=sed The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors. Each invocation of this argument appends the given value to the array. detected-provider-ids=takimata The detected Google Ad Tech Providers (ATP) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. Each invocation of this argument appends the given value to the array. unidentified-provider-domains=dolores Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids. Each invocation of this argument appends the given value to the array. ..china-policy-compliance status=gubergren Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..deals-policy-compliance status=et Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. .. detected-attributes=accusam Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. detected-click-through-urls=voluptua. The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-domains=dolore The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=dolore The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-product-categories=67 Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=23 Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. detected-vendor-ids=99 IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the allowed_vendor_type field of a bid request does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. last-status-update=ea The last time the creative status was updated. Can be used to filter the response of the creatives.list method. network-policy-compliance status=sadipscing Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..platform-policy-compliance status=lorem Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..russia-policy-compliance status=invidunt Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ... deal-ids=no Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-attributes=est All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. declared-click-through-urls=at The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-restricted-categories=sed All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-vendor-ids=3 IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. html height=66 The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. snippet=tempor The HTML snippet that displays the ad when inserted in the web page. width=69 The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. .. impression-tracking-urls=ipsum The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. name=et Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response. native advertiser-name=sanctus The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=45 Image height in pixels. url=est The URL of the image. width=71 Image width in pixels. .. body=diam A long description of the ad. call-to-action=dolores A label for the button that the user is supposed to click. click-link-url=dolores The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=et The URL to use for click tracking. headline=sed A short title for the ad. image height=90 Image height in pixels. url=et The URL of the image. width=7 Image width in pixels. ..logo height=21 Image height in pixels. url=no The URL of the image. width=10 Image width in pixels. .. price-display-text=at The price of the promoted app including currency info. star-rating=0.439459047858913 The app rating in the app store. Must be in the range [0-5]. video-url=aliquyam The URL to fetch a native video ad. video-vast-xml=dolores The contents of a VAST document for a native video ad. .. render-url=sadipscing Experimental field that can be used during the FLEDGE Origin Trial . The URL to fetch an interest group ad used in TURTLEDOVE on-device auction . This should be unique among all creatives for a given accountId . This URL should be the same as the URL returned by generateBid() . restricted-categories=erat All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. version=19 Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates. video.video-metadata duration=amet The duration of the ad. Can be used to filter the response of the creatives.list method. is-valid-vast=true Is this a valid VAST ad? Can be used to filter the response of the creatives.list method. is-vpaid=false Is this a VPAID ad? Can be used to filter the response of the creatives.list method. skip-offset=consetetur The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method. vast-version=stet The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method. .. video-url=est The URL to fetch a video ad. video-vast-xml=aliquyam The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.","title":"Required Request Value"},{"location":"buyers_creatives-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_creatives-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_creatives-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_creatives-get/","text":"Gets a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-get ... Required Scalar Argument <name> (string) Required. Name of the creative to retrieve. See creative.name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\". Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Get"},{"location":"buyers_creatives-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-get ...","title":"Scopes"},{"location":"buyers_creatives-get/#required-scalar-argument","text":"<name> (string) Required. Name of the creative to retrieve. See creative.name.","title":"Required Scalar Argument"},{"location":"buyers_creatives-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_creatives-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".","title":"Optional Method Properties"},{"location":"buyers_creatives-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_creatives-list/","text":"Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. lastStatusUpdate and creativeServingDecision may be outdated for creatives on sequential pages. We recommend Google Cloud Pub/Sub to view the latest status. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-list ... Required Scalar Argument <parent> (string) Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either buyers/{buyerAccountId} or bidders/{bidderAccountId} . For buyers/{buyerAccountId} , the buyerAccountId can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer ( 456 ) under bidder account ( 123 ), you would use the pattern: buyers/456 . 3. The ID of the bidder itself. So for listing creatives pertaining to bidder ( 123 ), you would use buyers/123 . If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use bidders/{bidderAccountId} , for example, for all creatives pertaining to bidder ( 123 ), use bidders/123 . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED' -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\". Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives List"},{"location":"buyers_creatives-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-list ...","title":"Scopes"},{"location":"buyers_creatives-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either buyers/{buyerAccountId} or bidders/{bidderAccountId} . For buyers/{buyerAccountId} , the buyerAccountId can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer ( 456 ) under bidder account ( 123 ), you would use the pattern: buyers/456 . 3. The ID of the bidder itself. So for listing creatives pertaining to bidder ( 123 ), you would use buyers/123 . If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use bidders/{bidderAccountId} , for example, for all creatives pertaining to bidder ( 123 ), use bidders/123 .","title":"Required Scalar Argument"},{"location":"buyers_creatives-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_creatives-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED' -p page-size=integer Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available through another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page. -p view=string Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".","title":"Optional Method Properties"},{"location":"buyers_creatives-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_creatives-patch/","text":"Updates a creative. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-patch ... Required Scalar Argument <name> (string) Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string advertiser-name: string agency-id: string api-update-time: string creative-format: string creative-id: string creative-serving-decision: ad-technology-providers: detected-gvl-ids: [string] detected-provider-ids: [string] unidentified-provider-domains: [string] china-policy-compliance: status: string deals-policy-compliance: status: string detected-attributes: [string] detected-click-through-urls: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] detected-vendor-ids: [integer] last-status-update: string network-policy-compliance: status: string platform-policy-compliance: status: string russia-policy-compliance: status: string deal-ids: [string] declared-attributes: [string] declared-click-through-urls: [string] declared-restricted-categories: [string] declared-vendor-ids: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] name: string native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number video-url: string video-vast-xml: string render-url: string restricted-categories: [string] version: integer video: video-metadata: duration: string is-valid-vast: boolean is-vpaid: boolean skip-offset: string vast-version: string video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=elitr Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check. ad-choices-destination-url=duo The link to AdChoices destination page. This is only supported for native ads. advertiser-name=diam The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method. agency-id=est The agency ID for this creative. api-update-time=sit Output only. The last update timestamp of the creative through the API. creative-format=sed Output only. The format of this creative. Can be used to filter the response of the creatives.list method. creative-id=eos Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes. creative-serving-decision.ad-technology-providers detected-gvl-ids=lorem The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors. Each invocation of this argument appends the given value to the array. detected-provider-ids=ea The detected Google Ad Tech Providers (ATP) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. Each invocation of this argument appends the given value to the array. unidentified-provider-domains=stet Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids. Each invocation of this argument appends the given value to the array. ..china-policy-compliance status=dolores Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..deals-policy-compliance status=eos Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. .. detected-attributes=et Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. detected-click-through-urls=sea The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-domains=et The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=at The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-product-categories=17 Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=61 Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. detected-vendor-ids=50 IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the allowed_vendor_type field of a bid request does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. last-status-update=accusam The last time the creative status was updated. Can be used to filter the response of the creatives.list method. network-policy-compliance status=amet Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..platform-policy-compliance status=erat Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..russia-policy-compliance status=dolores Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ... deal-ids=erat Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-attributes=accusam All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. declared-click-through-urls=sea The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-restricted-categories=takimata All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-vendor-ids=50 IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. html height=79 The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. snippet=at The HTML snippet that displays the ad when inserted in the web page. width=97 The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. .. impression-tracking-urls=et The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. name=sit Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response. native advertiser-name=erat The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=91 Image height in pixels. url=nonumy The URL of the image. width=79 Image width in pixels. .. body=gubergren A long description of the ad. call-to-action=justo A label for the button that the user is supposed to click. click-link-url=sea The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=consetetur The URL to use for click tracking. headline=sit A short title for the ad. image height=69 Image height in pixels. url=eos The URL of the image. width=24 Image width in pixels. ..logo height=82 Image height in pixels. url=consetetur The URL of the image. width=39 Image width in pixels. .. price-display-text=dolor The price of the promoted app including currency info. star-rating=0.9429759678190598 The app rating in the app store. Must be in the range [0-5]. video-url=aliquyam The URL to fetch a native video ad. video-vast-xml=no The contents of a VAST document for a native video ad. .. render-url=amet. Experimental field that can be used during the FLEDGE Origin Trial . The URL to fetch an interest group ad used in TURTLEDOVE on-device auction . This should be unique among all creatives for a given accountId . This URL should be the same as the URL returned by generateBid() . restricted-categories=ipsum All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. version=45 Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates. video.video-metadata duration=accusam The duration of the ad. Can be used to filter the response of the creatives.list method. is-valid-vast=true Is this a valid VAST ad? Can be used to filter the response of the creatives.list method. is-vpaid=true Is this a VPAID ad? Can be used to filter the response of the creatives.list method. skip-offset=at The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method. vast-version=sit The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method. .. video-url=duo The URL to fetch a video ad. video-vast-xml=sit The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Creatives Patch"},{"location":"buyers_creatives-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers creatives-patch ...","title":"Scopes"},{"location":"buyers_creatives-patch/#required-scalar-argument","text":"<name> (string) Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response.","title":"Required Scalar Argument"},{"location":"buyers_creatives-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Creative: account-id: string ad-choices-destination-url: string advertiser-name: string agency-id: string api-update-time: string creative-format: string creative-id: string creative-serving-decision: ad-technology-providers: detected-gvl-ids: [string] detected-provider-ids: [string] unidentified-provider-domains: [string] china-policy-compliance: status: string deals-policy-compliance: status: string detected-attributes: [string] detected-click-through-urls: [string] detected-domains: [string] detected-languages: [string] detected-product-categories: [integer] detected-sensitive-categories: [integer] detected-vendor-ids: [integer] last-status-update: string network-policy-compliance: status: string platform-policy-compliance: status: string russia-policy-compliance: status: string deal-ids: [string] declared-attributes: [string] declared-click-through-urls: [string] declared-restricted-categories: [string] declared-vendor-ids: [integer] html: height: integer snippet: string width: integer impression-tracking-urls: [string] name: string native: advertiser-name: string app-icon: height: integer url: string width: integer body: string call-to-action: string click-link-url: string click-tracking-url: string headline: string image: height: integer url: string width: integer logo: height: integer url: string width: integer price-display-text: string star-rating: number video-url: string video-vast-xml: string render-url: string restricted-categories: [string] version: integer video: video-metadata: duration: string is-valid-vast: boolean is-vpaid: boolean skip-offset: string vast-version: string video-url: string video-vast-xml: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=elitr Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check. ad-choices-destination-url=duo The link to AdChoices destination page. This is only supported for native ads. advertiser-name=diam The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method. agency-id=est The agency ID for this creative. api-update-time=sit Output only. The last update timestamp of the creative through the API. creative-format=sed Output only. The format of this creative. Can be used to filter the response of the creatives.list method. creative-id=eos Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes. creative-serving-decision.ad-technology-providers detected-gvl-ids=lorem The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors. Each invocation of this argument appends the given value to the array. detected-provider-ids=ea The detected Google Ad Tech Providers (ATP) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. Each invocation of this argument appends the given value to the array. unidentified-provider-domains=stet Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids. Each invocation of this argument appends the given value to the array. ..china-policy-compliance status=dolores Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..deals-policy-compliance status=eos Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. .. detected-attributes=et Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. detected-click-through-urls=sea The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-domains=et The detected domains for this creative. Each invocation of this argument appends the given value to the array. detected-languages=at The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-product-categories=17 Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. detected-sensitive-categories=61 Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids. Each invocation of this argument appends the given value to the array. detected-vendor-ids=50 IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the allowed_vendor_type field of a bid request does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. last-status-update=accusam The last time the creative status was updated. Can be used to filter the response of the creatives.list method. network-policy-compliance status=amet Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..platform-policy-compliance status=erat Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ..russia-policy-compliance status=dolores Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method. ... deal-ids=erat Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-attributes=accusam All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the excluded_attribute field of a bid request contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction. Each invocation of this argument appends the given value to the array. declared-click-through-urls=sea The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-restricted-categories=takimata All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. declared-vendor-ids=50 IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. Each invocation of this argument appends the given value to the array. html height=79 The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. snippet=at The HTML snippet that displays the ad when inserted in the web page. width=97 The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method. .. impression-tracking-urls=et The set of URLs to be called to record an impression. Each invocation of this argument appends the given value to the array. name=sit Output only. Name of the creative. Follows the pattern buyers/{buyer}/creatives/{creative} , where {buyer} represents the account ID of the buyer who owns the creative, and {creative} is the buyer-specific creative ID that references this creative in the bid response. native advertiser-name=erat The name of the advertiser or sponsor, to be displayed in the ad creative. app-icon height=91 Image height in pixels. url=nonumy The URL of the image. width=79 Image width in pixels. .. body=gubergren A long description of the ad. call-to-action=justo A label for the button that the user is supposed to click. click-link-url=sea The URL that the browser/SDK will load when the user clicks the ad. click-tracking-url=consetetur The URL to use for click tracking. headline=sit A short title for the ad. image height=69 Image height in pixels. url=eos The URL of the image. width=24 Image width in pixels. ..logo height=82 Image height in pixels. url=consetetur The URL of the image. width=39 Image width in pixels. .. price-display-text=dolor The price of the promoted app including currency info. star-rating=0.9429759678190598 The app rating in the app store. Must be in the range [0-5]. video-url=aliquyam The URL to fetch a native video ad. video-vast-xml=no The contents of a VAST document for a native video ad. .. render-url=amet. Experimental field that can be used during the FLEDGE Origin Trial . The URL to fetch an interest group ad used in TURTLEDOVE on-device auction . This should be unique among all creatives for a given accountId . This URL should be the same as the URL returned by generateBid() . restricted-categories=ipsum All restricted categories for the ads that may be shown from this creative. Each invocation of this argument appends the given value to the array. version=45 Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates. video.video-metadata duration=accusam The duration of the ad. Can be used to filter the response of the creatives.list method. is-valid-vast=true Is this a valid VAST ad? Can be used to filter the response of the creatives.list method. is-vpaid=true Is this a VPAID ad? Can be used to filter the response of the creatives.list method. skip-offset=at The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method. vast-version=sit The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method. .. video-url=duo The URL to fetch a video ad. video-vast-xml=sit The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.","title":"Required Request Value"},{"location":"buyers_creatives-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_creatives-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_creatives-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Field mask to use for partial in-place updates.","title":"Optional Method Properties"},{"location":"buyers_creatives-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_get-remarketing-tag/","text":"This has been sunset as of October 2023, and will return an error response if called. For more information, see the release notes: https://developers.google.com/authorized-buyers/apis/relnotes#real-time-bidding-api Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers get-remarketing-tag ... Required Scalar Argument <name> (string) Required. To fetch the remarketing tag for an account, the name must follow the pattern buyers/{accountId} , where {accountId} represents the ID of the buyer that owns the remarketing tag. For a bidder accessing the remarketing tag on behalf of a child seat buyer, {accountId} should represent the ID of the child seat buyer. To fetch the remarketing tag for a specific user list, the name must follow the pattern buyers/{accountId}/userLists/{userListId} . See UserList.name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Remarketing Tag"},{"location":"buyers_get-remarketing-tag/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers get-remarketing-tag ...","title":"Scopes"},{"location":"buyers_get-remarketing-tag/#required-scalar-argument","text":"<name> (string) Required. To fetch the remarketing tag for an account, the name must follow the pattern buyers/{accountId} , where {accountId} represents the ID of the buyer that owns the remarketing tag. For a bidder accessing the remarketing tag on behalf of a child seat buyer, {accountId} should represent the ID of the child seat buyer. To fetch the remarketing tag for a specific user list, the name must follow the pattern buyers/{accountId}/userLists/{userListId} . See UserList.name.","title":"Required Scalar Argument"},{"location":"buyers_get-remarketing-tag/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_get-remarketing-tag/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_get/","text":"Gets a buyer account by its name. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers get ... Required Scalar Argument <name> (string) Required. Name of the buyer to get. Format: buyers/{buyerId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"buyers_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers get ...","title":"Scopes"},{"location":"buyers_get/#required-scalar-argument","text":"<name> (string) Required. Name of the buyer to get. Format: buyers/{buyerId}","title":"Required Scalar Argument"},{"location":"buyers_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_list/","text":"Lists all buyer account information the calling buyer user or service account is permissioned to manage. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of buyers to return. If unspecified, at most 100 buyers will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListBuyers call in ListBuyersResponse.nextPageToken. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"buyers_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers list ...","title":"Scopes"},{"location":"buyers_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of buyers to return. If unspecified, at most 100 buyers will be returned. The maximum value is 500; values above 500 will be coerced to 500. -p page-token=string A token identifying a page of results the server should return. This value is received from a previous ListBuyers call in ListBuyersResponse.nextPageToken.","title":"Optional Method Properties"},{"location":"buyers_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-close/","text":"Changes the status of a user list to CLOSED. This prevents new users from being added to the user list. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-close ... Required Scalar Argument <name> (string) Required. The name of the user list to close. See UserList.name Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CloseUserListRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Close"},{"location":"buyers_user-lists-close/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-close ...","title":"Scopes"},{"location":"buyers_user-lists-close/#required-scalar-argument","text":"<name> (string) Required. The name of the user list to close. See UserList.name","title":"Required Scalar Argument"},{"location":"buyers_user-lists-close/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CloseUserListRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_user-lists-close/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_user-lists-close/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-close/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-create/","text":"Creates a new user list. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-create ... Required Scalar Argument <parent> (string) Required. The name of the parent buyer of the user list to be retrieved, which must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyerAccountId} should represent the account ID of the child seat buyer. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserList: description: string display-name: string membership-duration-days: string name: string status: string url-restriction: end-date: day: integer month: integer year: integer restriction-type: string start-date: day: integer month: integer year: integer url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=magna The description for the user list. display-name=et Required. Display name of the user list. This must be unique across all user lists for a given account. membership-duration-days=rebum. Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive. name=dolor Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list. status=lorem Output only. The status of the user list. A new user list starts out as open. url-restriction.end-date day=30 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=49 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=90 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. restriction-type=nonumy The restriction type for the specified URL. start-date day=58 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=88 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=0 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. url=sanctus Required. The URL to use for applying the restriction on the user list. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Create"},{"location":"buyers_user-lists-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-create ...","title":"Scopes"},{"location":"buyers_user-lists-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent buyer of the user list to be retrieved, which must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyerAccountId} should represent the account ID of the child seat buyer.","title":"Required Scalar Argument"},{"location":"buyers_user-lists-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserList: description: string display-name: string membership-duration-days: string name: string status: string url-restriction: end-date: day: integer month: integer year: integer restriction-type: string start-date: day: integer month: integer year: integer url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=magna The description for the user list. display-name=et Required. Display name of the user list. This must be unique across all user lists for a given account. membership-duration-days=rebum. Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive. name=dolor Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list. status=lorem Output only. The status of the user list. A new user list starts out as open. url-restriction.end-date day=30 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=49 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=90 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. restriction-type=nonumy The restriction type for the specified URL. start-date day=58 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=88 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=0 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. url=sanctus Required. The URL to use for applying the restriction on the user list.","title":"Required Request Value"},{"location":"buyers_user-lists-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_user-lists-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-get-remarketing-tag/","text":"This has been sunset as of October 2023, and will return an error response if called. For more information, see the release notes: https://developers.google.com/authorized-buyers/apis/relnotes#real-time-bidding-api Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-get-remarketing-tag ... Required Scalar Argument <name> (string) Required. To fetch the remarketing tag for an account, the name must follow the pattern buyers/{accountId} , where {accountId} represents the ID of the buyer that owns the remarketing tag. For a bidder accessing the remarketing tag on behalf of a child seat buyer, {accountId} should represent the ID of the child seat buyer. To fetch the remarketing tag for a specific user list, the name must follow the pattern buyers/{accountId}/userLists/{userListId} . See UserList.name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Get Remarketing Tag"},{"location":"buyers_user-lists-get-remarketing-tag/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-get-remarketing-tag ...","title":"Scopes"},{"location":"buyers_user-lists-get-remarketing-tag/#required-scalar-argument","text":"<name> (string) Required. To fetch the remarketing tag for an account, the name must follow the pattern buyers/{accountId} , where {accountId} represents the ID of the buyer that owns the remarketing tag. For a bidder accessing the remarketing tag on behalf of a child seat buyer, {accountId} should represent the ID of the child seat buyer. To fetch the remarketing tag for a specific user list, the name must follow the pattern buyers/{accountId}/userLists/{userListId} . See UserList.name.","title":"Required Scalar Argument"},{"location":"buyers_user-lists-get-remarketing-tag/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-get-remarketing-tag/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-get/","text":"Gets a user list by its name. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-get ... Required Scalar Argument <name> (string) Required. The name of the user list to be retrieved. See UserList.name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Get"},{"location":"buyers_user-lists-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-get ...","title":"Scopes"},{"location":"buyers_user-lists-get/#required-scalar-argument","text":"<name> (string) Required. The name of the user list to be retrieved. See UserList.name.","title":"Required Scalar Argument"},{"location":"buyers_user-lists-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-list/","text":"Lists the user lists visible to the current user. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-list ... Required Scalar Argument <parent> (string) Required. The name of the parent buyer for the user lists to be returned that must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , {buyerAccountId} should represent the account ID of the child seat buyer. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The number of results to return per page. -p page-token=string Continuation page token as received from a previous response. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists List"},{"location":"buyers_user-lists-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-list ...","title":"Scopes"},{"location":"buyers_user-lists-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the parent buyer for the user lists to be returned that must follow the pattern buyers/{buyerAccountId} , where {buyerAccountId} represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , {buyerAccountId} should represent the account ID of the child seat buyer.","title":"Required Scalar Argument"},{"location":"buyers_user-lists-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The number of results to return per page. -p page-token=string Continuation page token as received from a previous response.","title":"Optional Method Properties"},{"location":"buyers_user-lists-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-open/","text":"Changes the status of a user list to OPEN. This allows new users to be added to the user list. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-open ... Required Scalar Argument <name> (string) Required. The name of the user list to open. See UserList.name Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OpenUserListRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Open"},{"location":"buyers_user-lists-open/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-open ...","title":"Scopes"},{"location":"buyers_user-lists-open/#required-scalar-argument","text":"<name> (string) Required. The name of the user list to open. See UserList.name","title":"Required Scalar Argument"},{"location":"buyers_user-lists-open/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OpenUserListRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_user-lists-open/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_user-lists-open/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-open/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_user-lists-update/","text":"Updates the given user list. Only user lists with URLRestrictions can be updated. Scopes You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-update ... Required Scalar Argument <name> (string) Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserList: description: string display-name: string membership-duration-days: string name: string status: string url-restriction: end-date: day: integer month: integer year: integer restriction-type: string start-date: day: integer month: integer year: integer url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=nonumy The description for the user list. display-name=rebum. Required. Display name of the user list. This must be unique across all user lists for a given account. membership-duration-days=tempor Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive. name=dolore Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list. status=eos Output only. The status of the user list. A new user list starts out as open. url-restriction.end-date day=49 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=17 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=4 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. restriction-type=ut The restriction type for the specified URL. start-date day=74 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=48 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=25 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. url=duo Required. The URL to use for applying the restriction on the user list. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"User Lists Update"},{"location":"buyers_user-lists-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/realtime-bidding scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/realtime-bidding . You can set the scope for this method like this: realtimebidding1 --scope <scope> buyers user-lists-update ...","title":"Scopes"},{"location":"buyers_user-lists-update/#required-scalar-argument","text":"<name> (string) Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list.","title":"Required Scalar Argument"},{"location":"buyers_user-lists-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserList: description: string display-name: string membership-duration-days: string name: string status: string url-restriction: end-date: day: integer month: integer year: integer restriction-type: string start-date: day: integer month: integer year: integer url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . description=nonumy The description for the user list. display-name=rebum. Required. Display name of the user list. This must be unique across all user lists for a given account. membership-duration-days=tempor Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive. name=dolore Output only. Name of the user list that must follow the pattern buyers/{buyer}/userLists/{user_list} , where {buyer} represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, {buyer} represents the account ID of the child seat buyer. {user_list} is an int64 identifier assigned by Google to uniquely identify a user list. status=eos Output only. The status of the user list. A new user list starts out as open. url-restriction.end-date day=49 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=17 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=4 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. restriction-type=ut The restriction type for the specified URL. start-date day=74 Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. month=48 Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. year=25 Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. .. url=duo Required. The URL to use for applying the restriction on the user list.","title":"Required Request Value"},{"location":"buyers_user-lists-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_user-lists-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_user-lists-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}