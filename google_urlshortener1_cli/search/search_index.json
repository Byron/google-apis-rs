{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The urlshortener1 command-line interface (CLI) allows to use most features of the Google urlshortener service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the urlshortener API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-urlshortener1-cli Find the source code on github . Usage This documentation was generated from the urlshortener API at revision 20150519 . The CLI is at version 5.0.4 . urlshortener1 [options] url get <short-url> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] urlshortener1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with urlshortener1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/urlshortener1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/urlshortener1-secret.json , assuming that the required urlshortener API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. urlshortener1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-urlshortener1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the urlshortener API at revision 20150519 . The CLI is at version 5.0.4 . urlshortener1 [options] url get <short-url> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] urlshortener1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with urlshortener1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/urlshortener1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/urlshortener1-secret.json , assuming that the required urlshortener API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. urlshortener1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"url_get/","text":"Expands a short URL or gets creation time and analytics. Scopes You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url get ... Required Scalar Argument <short-url> (string) The short URL, including the protocol. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p projection=string Additional information to return. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"url_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url get ...","title":"Scopes"},{"location":"url_get/#required-scalar-argument","text":"<short-url> (string) The short URL, including the protocol.","title":"Required Scalar Argument"},{"location":"url_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"url_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p projection=string Additional information to return.","title":"Optional Method Properties"},{"location":"url_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"url_insert/","text":"Creates a new short URL. Scopes You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Url: analytics: all-time: long-url-clicks: string short-url-clicks: string day: long-url-clicks: string short-url-clicks: string month: long-url-clicks: string short-url-clicks: string two-hours: long-url-clicks: string short-url-clicks: string week: long-url-clicks: string short-url-clicks: string created: string id: string kind: string long-url: string status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .analytics.all-time long-url-clicks=et Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=magna Number of clicks on this short URL. ..day long-url-clicks=no Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=ipsum Number of clicks on this short URL. ..month long-url-clicks=voluptua. Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=at Number of clicks on this short URL. ..two-hours long-url-clicks=sanctus Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=sed Number of clicks on this short URL. ..week long-url-clicks=amet. Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=takimata Number of clicks on this short URL. ... created=amet. Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ format, e.g. \"2010-10-14T19:01:24.944+00:00\". id=duo Short URL, e.g. \"http://goo.gl/l6MS\". kind=ipsum The fixed string \"urlshortener#url\". long-url=gubergren Long URL, e.g. \"http://www.google.com/\". Might not be present if the status is \"REMOVED\". status=lorem Status of the target URL. Possible values: \"OK\", \"MALWARE\", \"PHISHING\", or \"REMOVED\". A URL might be marked \"REMOVED\" if it was flagged as spam, for example. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"url_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url insert ...","title":"Scopes"},{"location":"url_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Url: analytics: all-time: long-url-clicks: string short-url-clicks: string day: long-url-clicks: string short-url-clicks: string month: long-url-clicks: string short-url-clicks: string two-hours: long-url-clicks: string short-url-clicks: string week: long-url-clicks: string short-url-clicks: string created: string id: string kind: string long-url: string status: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .analytics.all-time long-url-clicks=et Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=magna Number of clicks on this short URL. ..day long-url-clicks=no Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=ipsum Number of clicks on this short URL. ..month long-url-clicks=voluptua. Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=at Number of clicks on this short URL. ..two-hours long-url-clicks=sanctus Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=sed Number of clicks on this short URL. ..week long-url-clicks=amet. Number of clicks on all goo.gl short URLs pointing to this long URL. short-url-clicks=takimata Number of clicks on this short URL. ... created=amet. Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ format, e.g. \"2010-10-14T19:01:24.944+00:00\". id=duo Short URL, e.g. \"http://goo.gl/l6MS\". kind=ipsum The fixed string \"urlshortener#url\". long-url=gubergren Long URL, e.g. \"http://www.google.com/\". Might not be present if the status is \"REMOVED\". status=lorem Status of the target URL. Possible values: \"OK\", \"MALWARE\", \"PHISHING\", or \"REMOVED\". A URL might be marked \"REMOVED\" if it was flagged as spam, for example.","title":"Required Request Value"},{"location":"url_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"url_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"url_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"url_list/","text":"Retrieves a list of URLs shortened by a user. Scopes You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p projection=string Additional information to return. -p start-token=string Token for requesting successive pages of results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"url_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/urlshortener scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/urlshortener . You can set the scope for this method like this: urlshortener1 --scope <scope> url list ...","title":"Scopes"},{"location":"url_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"url_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p projection=string Additional information to return. -p start-token=string Token for requesting successive pages of results.","title":"Optional Method Properties"},{"location":"url_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}