initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["AuditConfig","Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs."],["AuditLogConfig","Provides the configuration for logging a type of permissions. Example:"],["Binding","Associates `members` with a `role`."],["CloudAuditOptions","Write a Cloud Audit log"],["CloudKMS","Central instance to access all CloudKMS related resource activities"],["Condition","A condition to be met."],["CounterOptions","Options for counters"],["CryptoKey","A CryptoKey represents a logical key that can be used for cryptographic operations."],["CryptoKeyVersion","A CryptoKeyVersion represents an individual cryptographic key, and the associated key material."],["DataAccessOptions","Write a Data Access (Gin) log"],["DecryptRequest","Request message for KeyManagementService.Decrypt."],["DecryptResponse","Response message for KeyManagementService.Decrypt."],["DestroyCryptoKeyVersionRequest","Request message for KeyManagementService.DestroyCryptoKeyVersion."],["EncryptRequest","Request message for KeyManagementService.Encrypt."],["EncryptResponse","Response message for KeyManagementService.Encrypt."],["KeyRing","A KeyRing is a toplevel logical grouping of CryptoKeys."],["ListCryptoKeyVersionsResponse","Response message for KeyManagementService.ListCryptoKeyVersions."],["ListCryptoKeysResponse","Response message for KeyManagementService.ListCryptoKeys."],["ListKeyRingsResponse","Response message for KeyManagementService.ListKeyRings."],["ListLocationsResponse","The response message for Locations.ListLocations."],["Location","A resource that represents Google Cloud Platform location."],["LogConfig","Specifies what kind of log the caller must write"],["Policy","Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources."],["ProjectLocationGetCall","Get information about a location."],["ProjectLocationKeyRingCreateCall","Create a new KeyRing in a given Project and Location."],["ProjectLocationKeyRingCryptoKeyCreateCall","Create a new CryptoKey within a KeyRing."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionCreateCall","Create a new CryptoKeyVersion in a CryptoKey."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionDestroyCall","Schedule a CryptoKeyVersion for destruction."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionGetCall","Returns metadata for a given CryptoKeyVersion."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionListCall","Lists CryptoKeyVersions."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionPatchCall","Update a CryptoKeyVersion's metadata."],["ProjectLocationKeyRingCryptoKeyCryptoKeyVersionRestoreCall","Restore a CryptoKeyVersion in the DESTROY_SCHEDULED, state."],["ProjectLocationKeyRingCryptoKeyDecryptCall","Decrypt data that was protected by Encrypt."],["ProjectLocationKeyRingCryptoKeyEncryptCall","Encrypt data, so that it can only be recovered by a call to Decrypt."],["ProjectLocationKeyRingCryptoKeyGetCall","Returns metadata for a given CryptoKey, as well as its primary CryptoKeyVersion."],["ProjectLocationKeyRingCryptoKeyGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectLocationKeyRingCryptoKeyListCall","Lists CryptoKeys."],["ProjectLocationKeyRingCryptoKeyPatchCall","Update a CryptoKey."],["ProjectLocationKeyRingCryptoKeySetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectLocationKeyRingCryptoKeyTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectLocationKeyRingCryptoKeyUpdatePrimaryVersionCall","Update the version of a CryptoKey that will be used in Encrypt"],["ProjectLocationKeyRingGetCall","Returns metadata for a given KeyRing."],["ProjectLocationKeyRingGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectLocationKeyRingListCall","Lists KeyRings."],["ProjectLocationKeyRingSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectLocationKeyRingTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectLocationListCall","Lists information about the supported locations for this service."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `CloudKMS` hub."],["RestoreCryptoKeyVersionRequest","Request message for KeyManagementService.RestoreCryptoKeyVersion."],["Rule","A rule to be applied in a Policy."],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."],["UpdateCryptoKeyPrimaryVersionRequest","Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion."]]});