initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["AllowedIpRange","Allowed IP range with user-provided description."],["CloudComposer","Central instance to access all CloudComposer related resource activities"],["DatabaseConfig","The configuration of Cloud SQL instance that is used by the Apache Airflow software."],["Date","Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["EncryptionConfig","The encryption options for the Cloud Composer environment and its dependencies."],["Environment","An environment for running orchestration tasks."],["EnvironmentConfig","Configuration information for an environment."],["IPAllocationPolicy","Configuration for controlling how IPs are allocated in the GKE cluster running the Apache Airflow software."],["ImageVersion","ImageVersion information"],["ListEnvironmentsResponse","The environments in a project and location."],["ListImageVersionsResponse","The ImageVersions in a project and location."],["ListOperationsResponse","The response message for Operations.ListOperations."],["NodeConfig","The configuration information for the Kubernetes Engine nodes running the Apache Airflow software."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["PrivateClusterConfig","Configuration options for the private GKE cluster in a Cloud Composer environment."],["PrivateEnvironmentConfig","The configuration information for configuring a Private IP Cloud Composer environment."],["ProjectLocationEnvironmentCreateCall","Create a new environment."],["ProjectLocationEnvironmentDeleteCall","Delete an environment."],["ProjectLocationEnvironmentGetCall","Get an existing environment."],["ProjectLocationEnvironmentListCall","List environments."],["ProjectLocationEnvironmentPatchCall","Update an environment."],["ProjectLocationImageVersionListCall","List ImageVersions for provided location."],["ProjectLocationOperationDeleteCall","Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."],["ProjectLocationOperationGetCall","Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."],["ProjectLocationOperationListCall","Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `CloudComposer` hub."],["SoftwareConfig","Specifies the selection and configuration of software inside the environment."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide."],["WebServerConfig","The configuration settings for the Airflow web server App Engine instance."],["WebServerNetworkAccessControl","Network-level access control policy for the Airflow web server."]]});