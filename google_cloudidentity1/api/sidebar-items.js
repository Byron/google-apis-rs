initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["CheckTransitiveMembershipResponse","The response message for MembershipsService.CheckTransitiveMembership."],["CloudIdentity","Central instance to access all CloudIdentity related resource activities"],["DeviceCancelWipeCall","Cancels an unfinished device wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped. This operation is possible when the device is in a \"pending wipe\" state. The device enters the \"pending wipe\" state when a wipe device command is issued, but has not yet been sent to the device. The cancel wipe will fail if the wipe command has already been issued to the device."],["DeviceCreateCall","Creates a device. Only company-owned device may be created. Note: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium"],["DeviceDeleteCall","Deletes the specified device."],["DeviceDeviceUserApproveCall","Approves device to access user data."],["DeviceDeviceUserBlockCall","Blocks device from accessing user data"],["DeviceDeviceUserCancelWipeCall","Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped."],["DeviceDeviceUserClientStateGetCall","Gets the client state for the device user"],["DeviceDeviceUserClientStateListCall","Lists the client states for the given search query."],["DeviceDeviceUserClientStatePatchCall","Updates the client state for the device user Note: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium"],["DeviceDeviceUserDeleteCall","Deletes the specified DeviceUser. This also revokes the user's access to device data."],["DeviceDeviceUserGetCall","Retrieves the specified DeviceUser"],["DeviceDeviceUserListCall","Lists/Searches DeviceUsers."],["DeviceDeviceUserLookupCall","Looks up resource names of the DeviceUsers associated with the caller's credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller's credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the 'android_id' field is required. - Desktop: Specifying the 'raw_resource_id' field is required."],["DeviceDeviceUserWipeCall","Wipes the user's account on a device. Other data on the device that is not associated with the user's work account is not affected. For example, if a Gmail app is installed on a device that is used for personal and work purposes, and the user is logged in to the Gmail app with their personal account as well as their work account, wiping the \"deviceUser\" by their work administrator will not affect their personal account within Gmail or other apps such as Photos."],["DeviceGetCall","Retrieves the specified device."],["DeviceListCall","Lists/Searches devices."],["DeviceMethods","A builder providing access to all methods supported on device resources. It is not used directly, but through the `CloudIdentity` hub."],["DeviceWipeCall","Wipes all data on the specified device."],["DynamicGroupMetadata","Dynamic group metadata like queries and status."],["DynamicGroupQuery","Defines a query on a resource."],["DynamicGroupStatus","The current status of a dynamic group along with timestamp."],["EntityKey","A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."],["ExpiryDetail","The `MembershipRole` expiry details."],["GoogleAppsCloudidentityDevicesV1AndroidAttributes","Resource representing the Android specific attributes of a Device."],["GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest","Request message for approving the device to access user data."],["GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest","Request message for blocking account on device."],["GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest","Request message for cancelling an unfinished device wipe."],["GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest","Request message for cancelling an unfinished user account wipe."],["GoogleAppsCloudidentityDevicesV1ClientState","Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users"],["GoogleAppsCloudidentityDevicesV1CustomAttributeValue","Additional custom attribute values may be one of these types"],["GoogleAppsCloudidentityDevicesV1Device","A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user."],["GoogleAppsCloudidentityDevicesV1DeviceUser","Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device"],["GoogleAppsCloudidentityDevicesV1ListClientStatesResponse","Response message that is returned in ListClientStates."],["GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse","Response message that is returned from the ListDeviceUsers method."],["GoogleAppsCloudidentityDevicesV1ListDevicesResponse","Response message that is returned from the ListDevices method."],["GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse","Response containing resource names of the DeviceUsers associated with the caller's credentials."],["GoogleAppsCloudidentityDevicesV1WipeDeviceRequest","Request message for wiping all data on the device."],["GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest","Request message for starting an account wipe on device."],["Group","A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account."],["GroupCreateCall","Creates a Group."],["GroupDeleteCall","Deletes a `Group`."],["GroupGetCall","Retrieves a `Group`."],["GroupListCall","Lists the `Group`s under a customer or namespace."],["GroupLookupCall","Looks up the resource name of a `Group` by its `EntityKey`."],["GroupMembershipCheckTransitiveMembershipCall","Check a potential member for membership in a group. Note: This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group."],["GroupMembershipCreateCall","Creates a `Membership`."],["GroupMembershipDeleteCall","Deletes a `Membership`."],["GroupMembershipGetCall","Retrieves a `Membership`."],["GroupMembershipGetMembershipGraphCall","Get a membership graph of just a member or both a member and a group. Note: This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member."],["GroupMembershipListCall","Lists the `Membership`s within a `Group`."],["GroupMembershipLookupCall","Looks up the resource name of a `Membership` by its `EntityKey`."],["GroupMembershipModifyMembershipRoleCall","Modifies the `MembershipRole`s of a `Membership`."],["GroupMembershipSearchTransitiveGroupCall","Search transitive groups of a member. Note: This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups."],["GroupMembershipSearchTransitiveMembershipCall","Search transitive memberships of a group. Note: This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships."],["GroupMethods","A builder providing access to all methods supported on group resources. It is not used directly, but through the `CloudIdentity` hub."],["GroupPatchCall","Updates a `Group`."],["GroupRelation","Message representing a transitive group of a user or a group."],["GroupSearchCall","Searches for `Group`s matching a specified query."],["ListGroupsResponse","Response message for ListGroups operation."],["ListMembershipsResponse","The response message for MembershipsService.ListMemberships."],["LookupGroupNameResponse","The response message for GroupsService.LookupGroupName."],["LookupMembershipNameResponse","The response message for MembershipsService.LookupMembershipName."],["MemberRelation","Message representing a transitive membership of a group."],["Membership","A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \"member\"."],["MembershipRole","A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."],["ModifyMembershipRolesRequest","The request message for MembershipsService.ModifyMembershipRoles."],["ModifyMembershipRolesResponse","The response message for MembershipsService.ModifyMembershipRoles."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["SearchGroupsResponse","The response message for GroupsService.SearchGroups."],["SearchTransitiveGroupsResponse","The response message for MembershipsService.SearchTransitiveGroups."],["SearchTransitiveMembershipsResponse","The response message for MembershipsService.SearchTransitiveMemberships."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide."],["TransitiveMembershipRole","Message representing the role of a TransitiveMembership."],["UpdateMembershipRolesParams","The details of an update to a `MembershipRole`."]]});