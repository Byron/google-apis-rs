{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The reseller1-sandbox command-line interface (CLI) allows to use most features of the Google reseller service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the reseller API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-reseller1_sandbox-cli Find the source code on github . Usage This documentation was generated from the reseller API at revision 20160329 . The CLI is at version 5.0.4 . reseller1-sandbox [options] customers get <customer-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] update <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions activate <customer-id> <subscription-id> [-p <v>]... [-o <out>] change-plan <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] change-renewal-settings <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] change-seats <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] delete <customer-id> <subscription-id> <deletion-type> [-p <v>]... get <customer-id> <subscription-id> [-p <v>]... [-o <out>] insert <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] start-paid-service <customer-id> <subscription-id> [-p <v>]... [-o <out>] suspend <customer-id> <subscription-id> [-p <v>]... [-o <out>] reseller1-sandbox --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with reseller1-sandbox- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/reseller1-sandbox-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/reseller1-sandbox-secret.json , assuming that the required reseller API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. reseller1-sandbox --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-reseller1_sandbox-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the reseller API at revision 20160329 . The CLI is at version 5.0.4 . reseller1-sandbox [options] customers get <customer-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] update <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions activate <customer-id> <subscription-id> [-p <v>]... [-o <out>] change-plan <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] change-renewal-settings <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] change-seats <customer-id> <subscription-id> (-r <kv>)... [-p <v>]... [-o <out>] delete <customer-id> <subscription-id> <deletion-type> [-p <v>]... get <customer-id> <subscription-id> [-p <v>]... [-o <out>] insert <customer-id> (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] start-paid-service <customer-id> <subscription-id> [-p <v>]... [-o <out>] suspend <customer-id> <subscription-id> [-p <v>]... [-o <out>] reseller1-sandbox --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with reseller1-sandbox- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/reseller1-sandbox-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/reseller1-sandbox-secret.json , assuming that the required reseller API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. reseller1-sandbox --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"customers_get/","text":"Gets a customer resource if one exists and is owned by the reseller. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers get ... Required Scalar Argument <customer-id> (string) Id of the Customer Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"customers_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers get ...","title":"Scopes"},{"location":"customers_get/#required-scalar-argument","text":"<customer-id> (string) Id of the Customer","title":"Required Scalar Argument"},{"location":"customers_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"customers_insert/","text":"Creates a customer resource if one does not already exist. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=et The alternate email of the customer. customer-domain=magna The domain name of the customer. customer-domain-verified=true Whether the customer's primary domain has been verified. customer-id=voluptua. The id of the customer. kind=at Identifies the resource as a customer. phone-number=sanctus The phone number of the customer. postal-address address-line1=sed Address line 1 of the address. address-line2=amet. Address line 2 of the address. address-line3=takimata Address line 3 of the address. contact-name=amet. Name of the contact person. country-code=duo ISO 3166 country code. kind=ipsum Identifies the resource as a customer address. locality=gubergren Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=lorem Name of the organization. postal-code=gubergren The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=eos Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=dolor Ui url for customer resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed for inserting a customer for which domain already exists. Can be generated at https://admin.google.com/TransferToken. Optional. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Insert"},{"location":"customers_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers insert ...","title":"Scopes"},{"location":"customers_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=et The alternate email of the customer. customer-domain=magna The domain name of the customer. customer-domain-verified=true Whether the customer's primary domain has been verified. customer-id=voluptua. The id of the customer. kind=at Identifies the resource as a customer. phone-number=sanctus The phone number of the customer. postal-address address-line1=sed Address line 1 of the address. address-line2=amet. Address line 2 of the address. address-line3=takimata Address line 3 of the address. contact-name=amet. Name of the contact person. country-code=duo ISO 3166 country code. kind=ipsum Identifies the resource as a customer address. locality=gubergren Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=lorem Name of the organization. postal-code=gubergren The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=eos Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=dolor Ui url for customer resource.","title":"Required Request Value"},{"location":"customers_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed for inserting a customer for which domain already exists. Can be generated at https://admin.google.com/TransferToken. Optional.","title":"Optional Method Properties"},{"location":"customers_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"customers_patch/","text":"Update a customer resource if one it exists and is owned by the reseller. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers patch ... Required Scalar Argument <customer-id> (string) Id of the Customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=ea The alternate email of the customer. customer-domain=ipsum The domain name of the customer. customer-domain-verified=false Whether the customer's primary domain has been verified. customer-id=amet The id of the customer. kind=duo Identifies the resource as a customer. phone-number=ipsum The phone number of the customer. postal-address address-line1=sed Address line 1 of the address. address-line2=ut Address line 2 of the address. address-line3=gubergren Address line 3 of the address. contact-name=rebum. Name of the contact person. country-code=est ISO 3166 country code. kind=ipsum Identifies the resource as a customer address. locality=ipsum Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=est Name of the organization. postal-code=gubergren The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=ea Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=dolor Ui url for customer resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Patch"},{"location":"customers_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers patch ...","title":"Scopes"},{"location":"customers_patch/#required-scalar-argument","text":"<customer-id> (string) Id of the Customer","title":"Required Scalar Argument"},{"location":"customers_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=ea The alternate email of the customer. customer-domain=ipsum The domain name of the customer. customer-domain-verified=false Whether the customer's primary domain has been verified. customer-id=amet The id of the customer. kind=duo Identifies the resource as a customer. phone-number=ipsum The phone number of the customer. postal-address address-line1=sed Address line 1 of the address. address-line2=ut Address line 2 of the address. address-line3=gubergren Address line 3 of the address. contact-name=rebum. Name of the contact person. country-code=est ISO 3166 country code. kind=ipsum Identifies the resource as a customer address. locality=ipsum Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=est Name of the organization. postal-code=gubergren The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=ea Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=dolor Ui url for customer resource.","title":"Required Request Value"},{"location":"customers_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"customers_update/","text":"Update a customer resource if one it exists and is owned by the reseller. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers update ... Required Scalar Argument <customer-id> (string) Id of the Customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=lorem The alternate email of the customer. customer-domain=eos The domain name of the customer. customer-domain-verified=false Whether the customer's primary domain has been verified. customer-id=sed The id of the customer. kind=duo Identifies the resource as a customer. phone-number=sed The phone number of the customer. postal-address address-line1=no Address line 1 of the address. address-line2=stet Address line 2 of the address. address-line3=kasd Address line 3 of the address. contact-name=et Name of the contact person. country-code=sed ISO 3166 country code. kind=et Identifies the resource as a customer address. locality=et Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=vero Name of the organization. postal-code=erat The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=sed Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=duo Ui url for customer resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Update"},{"location":"customers_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> customers update ...","title":"Scopes"},{"location":"customers_update/#required-scalar-argument","text":"<customer-id> (string) Id of the Customer","title":"Required Scalar Argument"},{"location":"customers_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Customer: alternate-email: string customer-domain: string customer-domain-verified: boolean customer-id: string kind: string phone-number: string postal-address: address-line1: string address-line2: string address-line3: string contact-name: string country-code: string kind: string locality: string organization-name: string postal-code: string region: string resource-ui-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alternate-email=lorem The alternate email of the customer. customer-domain=eos The domain name of the customer. customer-domain-verified=false Whether the customer's primary domain has been verified. customer-id=sed The id of the customer. kind=duo Identifies the resource as a customer. phone-number=sed The phone number of the customer. postal-address address-line1=no Address line 1 of the address. address-line2=stet Address line 2 of the address. address-line3=kasd Address line 3 of the address. contact-name=et Name of the contact person. country-code=sed ISO 3166 country code. kind=et Identifies the resource as a customer address. locality=et Name of the locality. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. organization-name=vero Name of the organization. postal-code=erat The postal code. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. region=sed Name of the region. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element. .. resource-ui-url=duo Ui url for customer resource.","title":"Required Request Value"},{"location":"customers_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"customers_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"customers_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_activate/","text":"Activates a subscription previously suspended by the reseller Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions activate ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Activate"},{"location":"subscriptions_activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions activate ...","title":"Scopes"},{"location":"subscriptions_activate/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_change-plan/","text":"Changes the plan of a subscription Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-plan ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChangePlanRequest: deal-code: string kind: string plan-name: string purchase-order-id: string seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deal-code=dolore External name of the deal code applicable for the subscription. This field is optional. If missing, the deal price plan won't be used. kind=et Identifies the resource as a subscription change plan request. plan-name=voluptua. Name of the plan to change to. purchase-order-id=amet. Purchase order id for your order tracking purposes. seats kind=consetetur Identifies the resource as a subscription change plan request. licensed-number-of-seats=9 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=52 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=83 Number of seats to purchase. This is applicable only for a commitment plan. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Change Plan"},{"location":"subscriptions_change-plan/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-plan ...","title":"Scopes"},{"location":"subscriptions_change-plan/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_change-plan/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ChangePlanRequest: deal-code: string kind: string plan-name: string purchase-order-id: string seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deal-code=dolore External name of the deal code applicable for the subscription. This field is optional. If missing, the deal price plan won't be used. kind=et Identifies the resource as a subscription change plan request. plan-name=voluptua. Name of the plan to change to. purchase-order-id=amet. Purchase order id for your order tracking purposes. seats kind=consetetur Identifies the resource as a subscription change plan request. licensed-number-of-seats=9 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=52 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=83 Number of seats to purchase. This is applicable only for a commitment plan.","title":"Required Request Value"},{"location":"subscriptions_change-plan/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_change-plan/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_change-plan/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_change-renewal-settings/","text":"Changes the renewal settings of a subscription Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-renewal-settings ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RenewalSettings: kind: string renewal-type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=et Identifies the resource as a subscription renewal setting. renewal-type=sadipscing Subscription renewal type. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Change Renewal Settings"},{"location":"subscriptions_change-renewal-settings/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-renewal-settings ...","title":"Scopes"},{"location":"subscriptions_change-renewal-settings/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_change-renewal-settings/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RenewalSettings: kind: string renewal-type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=et Identifies the resource as a subscription renewal setting. renewal-type=sadipscing Subscription renewal type.","title":"Required Request Value"},{"location":"subscriptions_change-renewal-settings/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_change-renewal-settings/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_change-renewal-settings/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_change-seats/","text":"Changes the seats configuration of a subscription Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-seats ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=stet Identifies the resource as a subscription change plan request. licensed-number-of-seats=2 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=81 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=25 Number of seats to purchase. This is applicable only for a commitment plan. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Change Seats"},{"location":"subscriptions_change-seats/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions change-seats ...","title":"Scopes"},{"location":"subscriptions_change-seats/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_change-seats/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=stet Identifies the resource as a subscription change plan request. licensed-number-of-seats=2 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=81 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=25 Number of seats to purchase. This is applicable only for a commitment plan.","title":"Required Request Value"},{"location":"subscriptions_change-seats/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_change-seats/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_change-seats/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_delete/","text":"Cancels/Downgrades a subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions delete ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer <deletion-type> (string) Whether the subscription is to be fully cancelled or downgraded Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Delete"},{"location":"subscriptions_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions delete ...","title":"Scopes"},{"location":"subscriptions_delete/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer <deletion-type> (string) Whether the subscription is to be fully cancelled or downgraded","title":"Required Scalar Arguments"},{"location":"subscriptions_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_get/","text":"Gets a subscription of the customer. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions get ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Get"},{"location":"subscriptions_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions get ...","title":"Scopes"},{"location":"subscriptions_get/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_insert/","text":"Creates/Transfers a subscription for the customer. Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions insert ... Required Scalar Argument <customer-id> (string) Id of the Customer Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: billing-method: string creation-time: string customer-domain: string customer-id: string deal-code: string kind: string plan: commitment-interval: end-time: string start-time: string is-commitment-plan: boolean plan-name: string purchase-order-id: string renewal-settings: kind: string renewal-type: string resource-ui-url: string seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer sku-id: string status: string subscription-id: string suspension-reasons: [string] transfer-info: minimum-transferable-seats: integer transferability-expiration-time: string trial-settings: is-in-trial: boolean trial-end-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-method=vero Billing method of this subscription. creation-time=invidunt Creation time of this subscription in milliseconds since Unix epoch. customer-domain=stet Primary domain name of the customer customer-id=vero The id of the customer to whom the subscription belongs. deal-code=elitr External name of the deal, if this subscription was provisioned under one. Otherwise this field will be empty. kind=lorem Identifies the resource as a Subscription. plan.commitment-interval end-time=diam End time of the commitment interval in milliseconds since Unix epoch. start-time=no Start time of the commitment interval in milliseconds since Unix epoch. .. is-commitment-plan=false Whether the plan is a commitment plan or not. plan-name=accusam The plan name of this subscription's plan. .. purchase-order-id=takimata Purchase order id for your order tracking purposes. renewal-settings kind=consetetur Identifies the resource as a subscription renewal setting. renewal-type=voluptua. Subscription renewal type. .. resource-ui-url=et Ui url for subscription resource. seats kind=erat Identifies the resource as a subscription change plan request. licensed-number-of-seats=5 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=99 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=71 Number of seats to purchase. This is applicable only for a commitment plan. .. sku-id=takimata Name of the sku for which this subscription is purchased. status=dolores Status of the subscription. subscription-id=gubergren The id of the subscription. suspension-reasons=et Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's STATUS is SUSPENDED until all pending suspensions are removed. Possible options include: PENDING_TOS_ACCEPTANCE - The customer has not logged in and accepted the Google Apps Resold Terms of Services. RENEWAL_WITH_TYPE_CANCEL - The customer's commitment ended and their service was cancelled at the end of their term. RESELLER_INITIATED - A manual suspension invoked by a Reseller. TRIAL_ENDED - The customer's trial expired without a plan selected. OTHER - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). Each invocation of this argument appends the given value to the array. transfer-info minimum-transferable-seats=78 No description provided. transferability-expiration-time=voluptua. Time when transfer token or intent to transfer will expire. ..trial-settings is-in-trial=false Whether the subscription is in trial. trial-end-time=amet. End time of the trial in milliseconds since Unix epoch. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed for transferring a subscription. Can be generated at https://www.google.com/a/cpanel/customer-domain/TransferToken. Optional. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Insert"},{"location":"subscriptions_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions insert ...","title":"Scopes"},{"location":"subscriptions_insert/#required-scalar-argument","text":"<customer-id> (string) Id of the Customer","title":"Required Scalar Argument"},{"location":"subscriptions_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: billing-method: string creation-time: string customer-domain: string customer-id: string deal-code: string kind: string plan: commitment-interval: end-time: string start-time: string is-commitment-plan: boolean plan-name: string purchase-order-id: string renewal-settings: kind: string renewal-type: string resource-ui-url: string seats: kind: string licensed-number-of-seats: integer maximum-number-of-seats: integer number-of-seats: integer sku-id: string status: string subscription-id: string suspension-reasons: [string] transfer-info: minimum-transferable-seats: integer transferability-expiration-time: string trial-settings: is-in-trial: boolean trial-end-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billing-method=vero Billing method of this subscription. creation-time=invidunt Creation time of this subscription in milliseconds since Unix epoch. customer-domain=stet Primary domain name of the customer customer-id=vero The id of the customer to whom the subscription belongs. deal-code=elitr External name of the deal, if this subscription was provisioned under one. Otherwise this field will be empty. kind=lorem Identifies the resource as a Subscription. plan.commitment-interval end-time=diam End time of the commitment interval in milliseconds since Unix epoch. start-time=no Start time of the commitment interval in milliseconds since Unix epoch. .. is-commitment-plan=false Whether the plan is a commitment plan or not. plan-name=accusam The plan name of this subscription's plan. .. purchase-order-id=takimata Purchase order id for your order tracking purposes. renewal-settings kind=consetetur Identifies the resource as a subscription renewal setting. renewal-type=voluptua. Subscription renewal type. .. resource-ui-url=et Ui url for subscription resource. seats kind=erat Identifies the resource as a subscription change plan request. licensed-number-of-seats=5 Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage. maximum-number-of-seats=99 Maximum number of seats that can be purchased. This needs to be provided only for a non-commitment plan. For a commitment plan it is decided by the contract. number-of-seats=71 Number of seats to purchase. This is applicable only for a commitment plan. .. sku-id=takimata Name of the sku for which this subscription is purchased. status=dolores Status of the subscription. subscription-id=gubergren The id of the subscription. suspension-reasons=et Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's STATUS is SUSPENDED until all pending suspensions are removed. Possible options include: PENDING_TOS_ACCEPTANCE - The customer has not logged in and accepted the Google Apps Resold Terms of Services. RENEWAL_WITH_TYPE_CANCEL - The customer's commitment ended and their service was cancelled at the end of their term. RESELLER_INITIATED - A manual suspension invoked by a Reseller. TRIAL_ENDED - The customer's trial expired without a plan selected. OTHER - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). Each invocation of this argument appends the given value to the array. transfer-info minimum-transferable-seats=78 No description provided. transferability-expiration-time=voluptua. Time when transfer token or intent to transfer will expire. ..trial-settings is-in-trial=false Whether the subscription is in trial. trial-end-time=amet. End time of the trial in milliseconds since Unix epoch.","title":"Required Request Value"},{"location":"subscriptions_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"subscriptions_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed for transferring a subscription. Can be generated at https://www.google.com/a/cpanel/customer-domain/TransferToken. Optional.","title":"Optional Method Properties"},{"location":"subscriptions_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_list/","text":"Lists subscriptions of a reseller, optionally filtered by a customer name prefix. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed if the customer is not a resold customer of this reseller. Can be generated at https://www.google.com/a/cpanel/customer-domain/TransferToken.Optional. -p customer-id=string Id of the Customer -p customer-name-prefix=string Prefix of the customer's domain name by which the subscriptions should be filtered. Optional -p max-results=integer Maximum number of results to return -p page-token=string Token to specify next page in the list Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"List"},{"location":"subscriptions_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/apps.order https://www.googleapis.com/auth/apps.order.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order.readonly . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions list ...","title":"Scopes"},{"location":"subscriptions_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p customer-auth-token=string An auth token needed if the customer is not a resold customer of this reseller. Can be generated at https://www.google.com/a/cpanel/customer-domain/TransferToken.Optional. -p customer-id=string Id of the Customer -p customer-name-prefix=string Prefix of the customer's domain name by which the subscriptions should be filtered. Optional -p max-results=integer Maximum number of results to return -p page-token=string Token to specify next page in the list","title":"Optional Method Properties"},{"location":"subscriptions_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_start-paid-service/","text":"Starts paid service of a trial subscription Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions start-paid-service ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Start Paid Service"},{"location":"subscriptions_start-paid-service/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions start-paid-service ...","title":"Scopes"},{"location":"subscriptions_start-paid-service/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_start-paid-service/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_start-paid-service/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"},{"location":"subscriptions_suspend/","text":"Suspends an active subscription Scopes You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions suspend ... Required Scalar Arguments <customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Suspend"},{"location":"subscriptions_suspend/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/apps.order scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/apps.order . You can set the scope for this method like this: reseller1-sandbox --scope <scope> subscriptions suspend ...","title":"Scopes"},{"location":"subscriptions_suspend/#required-scalar-arguments","text":"<customer-id> (string) Id of the Customer <subscription-id> (string) Id of the subscription, which is unique for a customer","title":"Required Scalar Arguments"},{"location":"subscriptions_suspend/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"subscriptions_suspend/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. -p user-ip=string IP address of the site where the request originates. Use this if you want to enforce per-user limits.","title":"Optional General Properties"}]}