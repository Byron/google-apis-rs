{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The factchecktools1-alpha1 command-line interface (CLI) allows to use most features of the Google Fact Check Tools service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Fact Check Tools API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-factchecktools1_alpha1-cli Find the source code on github . Usage This documentation was generated from the Fact Check Tools API at revision 20240303 . The CLI is at version 5.0.4 . factchecktools1-alpha1 [options] claims search [-p <v>]... [-o <out>] pages create (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update <name> (-r <kv>)... [-p <v>]... [-o <out>] factchecktools1-alpha1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with factchecktools1-alpha1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/factchecktools1-alpha1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/factchecktools1-alpha1-secret.json , assuming that the required factchecktools API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. factchecktools1-alpha1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-factchecktools1_alpha1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Fact Check Tools API at revision 20240303 . The CLI is at version 5.0.4 . factchecktools1-alpha1 [options] claims search [-p <v>]... [-o <out>] pages create (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] update <name> (-r <kv>)... [-p <v>]... [-o <out>] factchecktools1-alpha1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with factchecktools1-alpha1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/factchecktools1-alpha1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/factchecktools1-alpha1-secret.json , assuming that the required factchecktools API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. factchecktools1-alpha1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"claims_search/","text":"Search through fact-checked claims. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p language-code=string The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". Can be used to restrict results by language, though we do not currently consider the region. -p max-age-days=integer The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. -p offset=integer An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if page_token is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. -p page-size=integer The pagination size. We will return up to that many results. Defaults to 10 if not set. -p page-token=string The pagination token. You may provide the next_page_token returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. -p query=string Textual query string. Required unless review_publisher_site_filter is specified. -p review-publisher-site-filter=string The review publisher site to filter results by, e.g. nytimes.com. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Search"},{"location":"claims_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"claims_search/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p language-code=string The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". Can be used to restrict results by language, though we do not currently consider the region. -p max-age-days=integer The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. -p offset=integer An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if page_token is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. -p page-size=integer The pagination size. We will return up to that many results. Defaults to 10 if not set. -p page-token=string The pagination token. You may provide the next_page_token returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. -p query=string Textual query string. Required unless review_publisher_site_filter is specified. -p review-publisher-site-filter=string The review publisher site to filter results by, e.g. nytimes.com.","title":"Optional Method Properties"},{"location":"claims_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_create/","text":"Create ClaimReview markup on a page. Scopes You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages create ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage: claim-review-author: image-url: string name: string name: string page-url: string publish-date: string version-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .claim-review-author image-url=et Corresponds to ClaimReview.author.image . name=magna Name of the organization that is publishing the fact check. Corresponds to ClaimReview.author.name . .. name=no The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user. page-url=ipsum The URL of the page associated with this ClaimReview markup. While every individual ClaimReview has its own URL field, semantically this is a page-level field, and each ClaimReview on this page will use this value unless individually overridden. Corresponds to ClaimReview.url publish-date=voluptua. The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each ClaimReview on this page will contain the same value. Corresponds to ClaimReview.datePublished version-id=at The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create"},{"location":"pages_create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages create ...","title":"Scopes"},{"location":"pages_create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage: claim-review-author: image-url: string name: string name: string page-url: string publish-date: string version-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .claim-review-author image-url=et Corresponds to ClaimReview.author.image . name=magna Name of the organization that is publishing the fact check. Corresponds to ClaimReview.author.name . .. name=no The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user. page-url=ipsum The URL of the page associated with this ClaimReview markup. While every individual ClaimReview has its own URL field, semantically this is a page-level field, and each ClaimReview on this page will use this value unless individually overridden. Corresponds to ClaimReview.url publish-date=voluptua. The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each ClaimReview on this page will contain the same value. Corresponds to ClaimReview.datePublished version-id=at The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user.","title":"Required Request Value"},{"location":"pages_create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pages_create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_delete/","text":"Delete all ClaimReview markup on a page. Scopes You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages delete ... Required Scalar Argument <name> (string) The name of the resource to delete, in the form of pages/{page_id} . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"pages_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages delete ...","title":"Scopes"},{"location":"pages_delete/#required-scalar-argument","text":"<name> (string) The name of the resource to delete, in the form of pages/{page_id} .","title":"Required Scalar Argument"},{"location":"pages_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_get/","text":"Get all ClaimReview markup on a page. Scopes You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages get ... Required Scalar Argument <name> (string) The name of the resource to get, in the form of pages/{page_id} . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"pages_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages get ...","title":"Scopes"},{"location":"pages_get/#required-scalar-argument","text":"<name> (string) The name of the resource to get, in the form of pages/{page_id} .","title":"Required Scalar Argument"},{"location":"pages_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_list/","text":"List the ClaimReview markup pages for a specific URL or for an organization. Scopes You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p offset=integer An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if page_token is unset, and if the request is not for a specific URL. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. -p organization=string The organization for which we want to fetch markups for. For instance, \"site.com\". Cannot be specified along with an URL. -p page-size=integer The pagination size. We will return up to that many results. Defaults to 10 if not set. Has no effect if a URL is requested. -p page-token=string The pagination token. You may provide the next_page_token returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. -p url=string The URL from which to get ClaimReview markup. There will be at most one result. If markup is associated with a more canonical version of the URL provided, we will return that URL instead. Cannot be specified along with an organization. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"pages_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages list ...","title":"Scopes"},{"location":"pages_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p offset=integer An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if page_token is unset, and if the request is not for a specific URL. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. -p organization=string The organization for which we want to fetch markups for. For instance, \"site.com\". Cannot be specified along with an URL. -p page-size=integer The pagination size. We will return up to that many results. Defaults to 10 if not set. Has no effect if a URL is requested. -p page-token=string The pagination token. You may provide the next_page_token returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. -p url=string The URL from which to get ClaimReview markup. There will be at most one result. If markup is associated with a more canonical version of the URL provided, we will return that URL instead. Cannot be specified along with an organization.","title":"Optional Method Properties"},{"location":"pages_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pages_update/","text":"Update for all ClaimReview markup on a page Note that this is a full update. To retain the existing ClaimReview markup on a page, first perform a Get operation, then modify the returned markup, and finally call Update with the entire ClaimReview markup as the body. Scopes You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages update ... Required Scalar Argument <name> (string) The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage: claim-review-author: image-url: string name: string name: string page-url: string publish-date: string version-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .claim-review-author image-url=sanctus Corresponds to ClaimReview.author.image . name=sed Name of the organization that is publishing the fact check. Corresponds to ClaimReview.author.name . .. name=amet. The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user. page-url=takimata The URL of the page associated with this ClaimReview markup. While every individual ClaimReview has its own URL field, semantically this is a page-level field, and each ClaimReview on this page will use this value unless individually overridden. Corresponds to ClaimReview.url publish-date=amet. The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each ClaimReview on this page will contain the same value. Corresponds to ClaimReview.datePublished version-id=duo The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"pages_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/userinfo.email scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/userinfo.email . You can set the scope for this method like this: factchecktools1-alpha1 --scope <scope> pages update ...","title":"Scopes"},{"location":"pages_update/#required-scalar-argument","text":"<name> (string) The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user.","title":"Required Scalar Argument"},{"location":"pages_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage: claim-review-author: image-url: string name: string name: string page-url: string publish-date: string version-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .claim-review-author image-url=sanctus Corresponds to ClaimReview.author.image . name=sed Name of the organization that is publishing the fact check. Corresponds to ClaimReview.author.name . .. name=amet. The name of this ClaimReview markup page resource, in the form of pages/{page_id} . Except for update requests, this field is output-only and should not be set by the user. page-url=takimata The URL of the page associated with this ClaimReview markup. While every individual ClaimReview has its own URL field, semantically this is a page-level field, and each ClaimReview on this page will use this value unless individually overridden. Corresponds to ClaimReview.url publish-date=amet. The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each ClaimReview on this page will contain the same value. Corresponds to ClaimReview.datePublished version-id=duo The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user.","title":"Required Request Value"},{"location":"pages_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pages_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pages_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}