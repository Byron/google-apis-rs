initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["DatabaseInstance","Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start."],["DisableDatabaseInstanceRequest","The request sent to the DisableDatabaseInstance method."],["FirebaseRealtimeDatabase","Central instance to access all FirebaseRealtimeDatabase related resource activities"],["ListDatabaseInstancesResponse","The response from the ListDatabaseInstances method."],["ProjectLocationInstanceCreateCall","Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems."],["ProjectLocationInstanceDeleteCall","Marks a DatabaseInstance to be deleted. The DatabaseInstance will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state."],["ProjectLocationInstanceDisableCall","Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console."],["ProjectLocationInstanceGetCall","Gets the DatabaseInstance identified by the specified resource name."],["ProjectLocationInstanceListCall","Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads."],["ProjectLocationInstanceReenableCall","Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `FirebaseRealtimeDatabase` hub."],["ReenableDatabaseInstanceRequest","The request sent to the ReenableDatabaseInstance method."]]});