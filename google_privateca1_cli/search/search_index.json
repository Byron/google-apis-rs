{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The privateca1 command-line interface (CLI) allows to use most features of the Google Certificate Authority Service service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Certificate Authority Service API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-privateca1-cli Find the source code on github . Usage This documentation was generated from the Certificate Authority Service API at revision 20240221 . The CLI is at version 5.0.4 . privateca1 [options] projects locations-ca-pools-certificate-authorities-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-delete <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-disable <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-enable <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-fetch <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-undelete <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificates-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificates-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-revoke <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-delete <name> [-p <v>]... [-o <out>] locations-ca-pools-fetch-ca-certs <ca-pool> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-get <name> [-p <v>]... [-o <out>] locations-ca-pools-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-ca-pools-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-delete <name> [-p <v>]... [-o <out>] locations-certificate-templates-get <name> [-p <v>]... [-o <out>] locations-certificate-templates-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-certificate-templates-list <parent> [-p <v>]... [-o <out>] locations-certificate-templates-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-list <name> [-p <v>]... [-o <out>] locations-operations-cancel <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] privateca1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with privateca1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/privateca1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/privateca1-secret.json , assuming that the required privateca API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. privateca1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-privateca1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Certificate Authority Service API at revision 20240221 . The CLI is at version 5.0.4 . privateca1 [options] projects locations-ca-pools-certificate-authorities-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-delete <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-disable <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-enable <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-fetch <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificate-authorities-undelete <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-get <name> [-p <v>]... [-o <out>] locations-ca-pools-certificates-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-certificates-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-certificates-revoke <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-delete <name> [-p <v>]... [-o <out>] locations-ca-pools-fetch-ca-certs <ca-pool> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-get <name> [-p <v>]... [-o <out>] locations-ca-pools-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-ca-pools-list <parent> [-p <v>]... [-o <out>] locations-ca-pools-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-ca-pools-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-delete <name> [-p <v>]... [-o <out>] locations-certificate-templates-get <name> [-p <v>]... [-o <out>] locations-certificate-templates-get-iam-policy <resource> [-p <v>]... [-o <out>] locations-certificate-templates-list <parent> [-p <v>]... [-o <out>] locations-certificate-templates-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-set-iam-policy <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-certificate-templates-test-iam-permissions <resource> (-r <kv>)... [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-list <name> [-p <v>]... [-o <out>] locations-operations-cancel <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-operations-delete <name> [-p <v>]... [-o <out>] locations-operations-get <name> [-p <v>]... [-o <out>] locations-operations-list <name> [-p <v>]... [-o <out>] privateca1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with privateca1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/privateca1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/privateca1-secret.json , assuming that the required privateca API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. privateca1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/","text":"Activate a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-activate ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateCertificateAuthorityRequest: pem-ca-certificate: string request-id: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . pem-ca-certificate=et Required. The signed CA certificate issued from FetchCertificateAuthorityCsrResponse.pem_csr. request-id=magna Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). subordinate-config certificate-authority=no Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=ipsum Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Activate"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-activate ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateCertificateAuthorityRequest: pem-ca-certificate: string request-id: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . pem-ca-certificate=et Required. The signed CA certificate issued from FetchCertificateAuthorityCsrResponse.pem_csr. request-id=magna Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). subordinate-config certificate-authority=no Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=ipsum Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/","text":"Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists Get Iam Policy"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation .","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get/","text":"Returns a CertificateRevocationList. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-get ... Required Scalar Argument <name> (string) Required. The name of the CertificateRevocationList to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists Get"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-get ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get/#required-scalar-argument","text":"<name> (string) Required. The name of the CertificateRevocationList to get.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/","text":"Lists CertificateRevocationLists. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-list ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the CertificateRevocationLists, in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateRevocationLists to include in the response. Further CertificateRevocationLists can subsequently be obtained by including the ListCertificateRevocationListsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateRevocationListsResponse.next_page_token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists List"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-list ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the CertificateRevocationLists, in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateRevocationLists to include in the response. Further CertificateRevocationLists can subsequently be obtained by including the ListCertificateRevocationListsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateRevocationListsResponse.next_page_token.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/","text":"Update a CertificateRevocationList. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch ... Required Scalar Argument <name> (string) Output only. The resource name for this CertificateRevocationList in the format projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateRevocationList: access-url: string create-time: string labels: { string: string } name: string pem-crl: string revision-id: string sequence-number: string state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-url=voluptua. Output only. The location where 'pem_crl' can be accessed. create-time=at Output only. The time at which this CertificateRevocationList was created. labels=key=sanctus Optional. Labels with user-defined metadata. the value will be associated with the given key name=sed Output only. The resource name for this CertificateRevocationList in the format projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/* . pem-crl=amet. Output only. The PEM-encoded X.509 CRL. revision-id=takimata Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string. sequence-number=amet. Output only. The CRL sequence number that appears in pem_crl. state=duo Output only. The State for this CertificateRevocationList. update-time=ipsum Output only. The time at which this CertificateRevocationList was updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists Patch"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name for this CertificateRevocationList in the format projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateRevocationList: access-url: string create-time: string labels: { string: string } name: string pem-crl: string revision-id: string sequence-number: string state: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-url=voluptua. Output only. The location where 'pem_crl' can be accessed. create-time=at Output only. The time at which this CertificateRevocationList was created. labels=key=sanctus Optional. Labels with user-defined metadata. the value will be associated with the given key name=sed Output only. The resource name for this CertificateRevocationList in the format projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/* . pem-crl=amet. Output only. The PEM-encoded X.509 CRL. revision-id=takimata Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string. sequence-number=amet. Output only. The CRL sequence number that appears in pem_crl. state=duo Output only. The State for this CertificateRevocationList. update-time=ipsum Output only. The time at which this CertificateRevocationList was updated.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/","text":"Sets the access control policy on the specified resource. Replaces any existing policy. Can return NOT_FOUND , INVALID_ARGUMENT , and PERMISSION_DENIED errors. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=gubergren etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=50 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=gubergren OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34; About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists Set Iam Policy"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=gubergren etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=50 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=gubergren OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34;","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-set-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/","text":"Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=eos The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Certificate Revocation Lists Test Iam Permissions"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=eos The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-certificate-revocation-lists-test-iam-permissions/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-create/","text":"Create a new CertificateAuthority in a given Project and Location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-create ... Required Scalar Argument <parent> (string) Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format projects/*/locations/*/caPools/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateAuthority: access-urls: ca-certificate-access-url: string crl-access-urls: [string] config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string delete-time: string expire-time: string gcs-bucket: string key-spec: algorithm: string cloud-kms-key-version: string labels: { string: string } lifetime: string name: string pem-ca-certificates: [string] state: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] tier: string type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .access-urls ca-certificate-access-url=dolor The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated. crl-access-urls=ea The URLs where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated. Each invocation of this argument appends the given value to the array. ..config.public-key format=ipsum Required. The format of the public key. key=invidunt Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=amet The \"common name\" of the subject. country-code=duo The country code of the subject. locality=ipsum The locality or city of the subject. organization=sed The organization of the subject. organizational-unit=ut The organizational_unit of the subject. postal-code=gubergren The postal code of the subject. province=rebum. The province, territory, or regional state of the subject. street-address=est The street address of the subject. ..subject-alt-name dns-names=ipsum Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=ipsum Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=est Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=gubergren Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=ea Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=dolor Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=76 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=invidunt Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=stet Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=vero Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=elitr Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=lorem Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=diam Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=no Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=ipsum Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=accusam Output only. The time at which this CertificateAuthority was created. delete-time=takimata Output only. The time at which this CertificateAuthority was soft deleted, if it is in the DELETED state. expire-time=consetetur Output only. The time at which this CertificateAuthority will be permanently purged, if it is in the DELETED state. gcs-bucket=voluptua. Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs:// ) or suffixes (such as .googleapis.com ). For example, to use a bucket named my-bucket , you would simply specify my-bucket . If not specified, a managed bucket will be created. key-spec algorithm=et The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM . cloud-kms-key-version=erat The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/* . This option enables full flexibility in the key's capabilities and properties. .. labels=key=consetetur Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=amet. Required. Immutable. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. name=sed Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-ca-certificates=takimata Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate. Each invocation of this argument appends the given value to the array. state=dolores Output only. The State for this CertificateAuthority. subordinate-config certificate-authority=gubergren Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=et Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. ... tier=accusam Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority. type=voluptua. Required. Immutable. The Type of this CertificateAuthority. update-time=dolore Output only. The time at which this CertificateAuthority was last updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-authority-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Create"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-create ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateAuthority: access-urls: ca-certificate-access-url: string crl-access-urls: [string] config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string delete-time: string expire-time: string gcs-bucket: string key-spec: algorithm: string cloud-kms-key-version: string labels: { string: string } lifetime: string name: string pem-ca-certificates: [string] state: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] tier: string type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .access-urls ca-certificate-access-url=dolor The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated. crl-access-urls=ea The URLs where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated. Each invocation of this argument appends the given value to the array. ..config.public-key format=ipsum Required. The format of the public key. key=invidunt Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=amet The \"common name\" of the subject. country-code=duo The country code of the subject. locality=ipsum The locality or city of the subject. organization=sed The organization of the subject. organizational-unit=ut The organizational_unit of the subject. postal-code=gubergren The postal code of the subject. province=rebum. The province, territory, or regional state of the subject. street-address=est The street address of the subject. ..subject-alt-name dns-names=ipsum Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=ipsum Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=est Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=gubergren Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=ea Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=dolor Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=76 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=invidunt Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=stet Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=vero Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=elitr Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=lorem Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=diam Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=no Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=ipsum Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=accusam Output only. The time at which this CertificateAuthority was created. delete-time=takimata Output only. The time at which this CertificateAuthority was soft deleted, if it is in the DELETED state. expire-time=consetetur Output only. The time at which this CertificateAuthority will be permanently purged, if it is in the DELETED state. gcs-bucket=voluptua. Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs:// ) or suffixes (such as .googleapis.com ). For example, to use a bucket named my-bucket , you would simply specify my-bucket . If not specified, a managed bucket will be created. key-spec algorithm=et The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM . cloud-kms-key-version=erat The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/* . This option enables full flexibility in the key's capabilities and properties. .. labels=key=consetetur Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=amet. Required. Immutable. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. name=sed Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-ca-certificates=takimata Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate. Each invocation of this argument appends the given value to the array. state=dolores Output only. The State for this CertificateAuthority. subordinate-config certificate-authority=gubergren Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=et Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. ... tier=accusam Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority. type=voluptua. Required. Immutable. The Type of this CertificateAuthority. update-time=dolore Output only. The time at which this CertificateAuthority was last updated.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-authority-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/","text":"Delete a CertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-delete ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ignore-active-certificates=boolean Optional. This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs. -p ignore-dependent-resources=boolean Optional. This field allows this ca to be deleted even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p skip-grace-period=boolean Optional. If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Delete"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-delete ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ignore-active-certificates=boolean Optional. This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs. -p ignore-dependent-resources=boolean Optional. This field allows this ca to be deleted even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p skip-grace-period=boolean Optional. If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/","text":"Disable a CertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-disable ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DisableCertificateAuthorityRequest: ignore-dependent-resources: boolean request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ignore-dependent-resources=false Optional. This field allows this CA to be disabled even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates. request-id=amet. Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Disable"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-disable ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DisableCertificateAuthorityRequest: ignore-dependent-resources: boolean request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ignore-dependent-resources=false Optional. This field allows this CA to be disabled even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates. request-id=amet. Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-disable/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/","text":"Enable a CertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-enable ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: EnableCertificateAuthorityRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=ea Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Enable"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-enable ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: EnableCertificateAuthorityRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=ea Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-enable/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-fetch/","text":"Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-fetch ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Fetch"},{"location":"projects_locations-ca-pools-certificate-authorities-fetch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-fetch ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-fetch/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-fetch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-fetch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-get/","text":"Returns a CertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-get ... Required Scalar Argument <name> (string) Required. The name of the CertificateAuthority to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Get"},{"location":"projects_locations-ca-pools-certificate-authorities-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-get ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-get/#required-scalar-argument","text":"<name> (string) Required. The name of the CertificateAuthority to get.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-list/","text":"Lists CertificateAuthorities. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-list ... Required Scalar Argument <parent> (string) Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format projects/*/locations/*/caPools/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateAuthorities to include in the response. Further CertificateAuthorities can subsequently be obtained by including the ListCertificateAuthoritiesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateAuthoritiesResponse.next_page_token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities List"},{"location":"projects_locations-ca-pools-certificate-authorities-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-list ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-list/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateAuthorities to include in the response. Further CertificateAuthorities can subsequently be obtained by including the ListCertificateAuthoritiesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateAuthoritiesResponse.next_page_token.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/","text":"Update a CertificateAuthority. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-patch ... Required Scalar Argument <name> (string) Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateAuthority: access-urls: ca-certificate-access-url: string crl-access-urls: [string] config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string delete-time: string expire-time: string gcs-bucket: string key-spec: algorithm: string cloud-kms-key-version: string labels: { string: string } lifetime: string name: string pem-ca-certificates: [string] state: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] tier: string type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .access-urls ca-certificate-access-url=sadipscing The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated. crl-access-urls=lorem The URLs where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated. Each invocation of this argument appends the given value to the array. ..config.public-key format=invidunt Required. The format of the public key. key=no Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=est The \"common name\" of the subject. country-code=at The country code of the subject. locality=sed The locality or city of the subject. organization=sit The organization of the subject. organizational-unit=et The organizational_unit of the subject. postal-code=tempor The postal code of the subject. province=aliquyam The province, territory, or regional state of the subject. street-address=ipsum The street address of the subject. ..subject-alt-name dns-names=et Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=sanctus Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=lorem Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=est Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=sed Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=diam Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=33 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=est Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=aliquyam Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=elitr Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=duo Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=diam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=est Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sed Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=eos Output only. The time at which this CertificateAuthority was created. delete-time=lorem Output only. The time at which this CertificateAuthority was soft deleted, if it is in the DELETED state. expire-time=ea Output only. The time at which this CertificateAuthority will be permanently purged, if it is in the DELETED state. gcs-bucket=stet Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs:// ) or suffixes (such as .googleapis.com ). For example, to use a bucket named my-bucket , you would simply specify my-bucket . If not specified, a managed bucket will be created. key-spec algorithm=dolores The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM . cloud-kms-key-version=eos The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/* . This option enables full flexibility in the key's capabilities and properties. .. labels=key=et Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=sea Required. Immutable. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. name=et Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-ca-certificates=at Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate. Each invocation of this argument appends the given value to the array. state=dolore Output only. The State for this CertificateAuthority. subordinate-config certificate-authority=eirmod Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=lorem Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. ... tier=accusam Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority. type=amet Required. Immutable. The Type of this CertificateAuthority. update-time=erat Output only. The time at which this CertificateAuthority was last updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Patch"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-patch ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateAuthority: access-urls: ca-certificate-access-url: string crl-access-urls: [string] config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string delete-time: string expire-time: string gcs-bucket: string key-spec: algorithm: string cloud-kms-key-version: string labels: { string: string } lifetime: string name: string pem-ca-certificates: [string] state: string subordinate-config: certificate-authority: string pem-issuer-chain: pem-certificates: [string] tier: string type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .access-urls ca-certificate-access-url=sadipscing The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated. crl-access-urls=lorem The URLs where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated. Each invocation of this argument appends the given value to the array. ..config.public-key format=invidunt Required. The format of the public key. key=no Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=est The \"common name\" of the subject. country-code=at The country code of the subject. locality=sed The locality or city of the subject. organization=sit The organization of the subject. organizational-unit=et The organizational_unit of the subject. postal-code=tempor The postal code of the subject. province=aliquyam The province, territory, or regional state of the subject. street-address=ipsum The street address of the subject. ..subject-alt-name dns-names=et Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=sanctus Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=lorem Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=est Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=sed Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=diam Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=33 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=est Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=aliquyam Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=elitr Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=duo Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=diam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=est Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sed Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=eos Output only. The time at which this CertificateAuthority was created. delete-time=lorem Output only. The time at which this CertificateAuthority was soft deleted, if it is in the DELETED state. expire-time=ea Output only. The time at which this CertificateAuthority will be permanently purged, if it is in the DELETED state. gcs-bucket=stet Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs:// ) or suffixes (such as .googleapis.com ). For example, to use a bucket named my-bucket , you would simply specify my-bucket . If not specified, a managed bucket will be created. key-spec algorithm=dolores The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM . cloud-kms-key-version=eos The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/* . This option enables full flexibility in the key's capabilities and properties. .. labels=key=et Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=sea Required. Immutable. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. name=et Output only. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-ca-certificates=at Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate. Each invocation of this argument appends the given value to the array. state=dolore Output only. The State for this CertificateAuthority. subordinate-config certificate-authority=eirmod Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . pem-issuer-chain pem-certificates=lorem Required. Expected to be in leaf-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. ... tier=accusam Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority. type=amet Required. Immutable. The Type of this CertificateAuthority. update-time=erat Output only. The time at which this CertificateAuthority was last updated.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/","text":"Undelete a CertificateAuthority that has been deleted. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-undelete ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UndeleteCertificateAuthorityRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=dolores Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificate Authorities Undelete"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificate-authorities-undelete ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UndeleteCertificateAuthorityRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=dolores Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificate-authorities-undelete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificates-create/","text":"Create a new Certificate in a given Project, Location from a particular CaPool. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-create ... Required Scalar Argument <parent> (string) Required. The resource name of the CaPool associated with the Certificate, in the format projects/*/locations/*/caPools/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Certificate: certificate-description: aia-issuing-certificate-urls: [string] authority-key-id: key-id: string cert-fingerprint: sha256-hash: string crl-distribution-points: [string] public-key: format: string key: string subject-description: hex-serial-number: string lifetime: string not-after-time: string not-before-time: string subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-description: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] certificate-template: string config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string issuer-certificate-authority: string labels: { string: string } lifetime: string name: string pem-certificate: string pem-certificate-chain: [string] pem-csr: string revocation-details: revocation-state: string revocation-time: string subject-mode: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .certificate-description aia-issuing-certificate-urls=erat Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. authority-key-id key-id=accusam Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..cert-fingerprint sha256-hash=sea The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate. .. crl-distribution-points=takimata Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13 Each invocation of this argument appends the given value to the array. public-key format=lorem Required. The format of the public key. key=et Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-description hex-serial-number=at The serial number encoded in lowercase hexadecimal. lifetime=dolor For convenience, the actual lifetime of an issued certificate. not-after-time=et The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second. not-before-time=sit The time at which the certificate becomes valid. subject common-name=erat The \"common name\" of the subject. country-code=sea The country code of the subject. locality=nonumy The locality or city of the subject. organization=et The organization of the subject. organizational-unit=gubergren The organizational_unit of the subject. postal-code=justo The postal code of the subject. province=sea The province, territory, or regional state of the subject. street-address=consetetur The street address of the subject. ..subject-alt-name dns-names=sit Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=aliquyam Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=eos Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=at Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=dolores Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-description aia-ocsp-servers=consetetur Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=97 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=nonumy Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=rebum. Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=tempor Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolore Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=eos Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=amet. Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=dolore Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=amet Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... certificate-template=ut Immutable. The resource name for a CertificateTemplate used to issue this certificate, in the format projects/*/locations/*/certificateTemplates/* . If this is specified, the caller must have the necessary permission to use this template. If this is omitted, no template will be used. This template must be in the same location as the Certificate. config.public-key format=at Required. The format of the public key. key=sit Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=vero The \"common name\" of the subject. country-code=duo The country code of the subject. locality=sadipscing The locality or city of the subject. organization=ut The organization of the subject. organizational-unit=rebum. The organizational_unit of the subject. postal-code=duo The postal code of the subject. province=kasd The province, territory, or regional state of the subject. street-address=sadipscing The street address of the subject. ..subject-alt-name dns-names=tempor Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=sea Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=et Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=lorem Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=magna Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=takimata Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=74 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=true The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=justo Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=ipsum Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=accusam Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolores Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=consetetur Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=no Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=justo Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sadipscing Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=diam Output only. The time at which this Certificate was created. issuer-certificate-authority=sea Output only. The resource name of the issuing CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . labels=key=ipsum Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=stet Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain. name=gubergren Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . pem-certificate=ipsum Output only. The pem-encoded, signed X.509 certificate. pem-certificate-chain=no Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. pem-csr=sit Immutable. A pem-encoded X.509 certificate signing request (CSR). revocation-details revocation-state=kasd Indicates why a Certificate was revoked. revocation-time=amet The time at which this Certificate was revoked. .. subject-mode=lorem Immutable. Specifies how the Certificate's identity fields are to be decided. If this is omitted, the DEFAULT subject mode will be used. update-time=justo Output only. The time at which this Certificate was updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-id=string Optional. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} . This field is required when using a CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is optional and its value is ignored otherwise. -p issuing-certificate-authority-id=string Optional. The resource ID of the CertificateAuthority that should issue the certificate. This optional field will ignore the load-balancing scheme of the Pool and directly issue the certificate from the CA with the specified ID, contained in the same CaPool referenced by parent . Per-CA quota rules apply. If left empty, a CertificateAuthority will be chosen from the CaPool by the service. For example, to issue a Certificate from a Certificate Authority with resource name \"projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca\", you can set the parent to \"projects/my-project/locations/us-central1/caPools/my-pool\" and the issuing_certificate_authority_id to \"my-ca\". -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p validate-only=boolean Optional. If this is true, no Certificate resource will be persisted regardless of the CaPool's tier, and the returned Certificate will not contain the pem_certificate field. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificates Create"},{"location":"projects_locations-ca-pools-certificates-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-create ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificates-create/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the CaPool associated with the Certificate, in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificates-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Certificate: certificate-description: aia-issuing-certificate-urls: [string] authority-key-id: key-id: string cert-fingerprint: sha256-hash: string crl-distribution-points: [string] public-key: format: string key: string subject-description: hex-serial-number: string lifetime: string not-after-time: string not-before-time: string subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-description: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] certificate-template: string config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string issuer-certificate-authority: string labels: { string: string } lifetime: string name: string pem-certificate: string pem-certificate-chain: [string] pem-csr: string revocation-details: revocation-state: string revocation-time: string subject-mode: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .certificate-description aia-issuing-certificate-urls=erat Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. authority-key-id key-id=accusam Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..cert-fingerprint sha256-hash=sea The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate. .. crl-distribution-points=takimata Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13 Each invocation of this argument appends the given value to the array. public-key format=lorem Required. The format of the public key. key=et Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-description hex-serial-number=at The serial number encoded in lowercase hexadecimal. lifetime=dolor For convenience, the actual lifetime of an issued certificate. not-after-time=et The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second. not-before-time=sit The time at which the certificate becomes valid. subject common-name=erat The \"common name\" of the subject. country-code=sea The country code of the subject. locality=nonumy The locality or city of the subject. organization=et The organization of the subject. organizational-unit=gubergren The organizational_unit of the subject. postal-code=justo The postal code of the subject. province=sea The province, territory, or regional state of the subject. street-address=consetetur The street address of the subject. ..subject-alt-name dns-names=sit Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=aliquyam Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=eos Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=at Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=dolores Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-description aia-ocsp-servers=consetetur Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=97 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=nonumy Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=rebum. Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=tempor Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolore Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=eos Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=amet. Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=dolore Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=amet Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... certificate-template=ut Immutable. The resource name for a CertificateTemplate used to issue this certificate, in the format projects/*/locations/*/certificateTemplates/* . If this is specified, the caller must have the necessary permission to use this template. If this is omitted, no template will be used. This template must be in the same location as the Certificate. config.public-key format=at Required. The format of the public key. key=sit Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=vero The \"common name\" of the subject. country-code=duo The country code of the subject. locality=sadipscing The locality or city of the subject. organization=ut The organization of the subject. organizational-unit=rebum. The organizational_unit of the subject. postal-code=duo The postal code of the subject. province=kasd The province, territory, or regional state of the subject. street-address=sadipscing The street address of the subject. ..subject-alt-name dns-names=tempor Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=sea Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=et Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=lorem Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=magna Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=takimata Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=74 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=true The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=justo Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=ipsum Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=accusam Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolores Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=consetetur Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=no Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=justo Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sadipscing Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=diam Output only. The time at which this Certificate was created. issuer-certificate-authority=sea Output only. The resource name of the issuing CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . labels=key=ipsum Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=stet Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain. name=gubergren Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . pem-certificate=ipsum Output only. The pem-encoded, signed X.509 certificate. pem-certificate-chain=no Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. pem-csr=sit Immutable. A pem-encoded X.509 certificate signing request (CSR). revocation-details revocation-state=kasd Indicates why a Certificate was revoked. revocation-time=amet The time at which this Certificate was revoked. .. subject-mode=lorem Immutable. Specifies how the Certificate's identity fields are to be decided. If this is omitted, the DEFAULT subject mode will be used. update-time=justo Output only. The time at which this Certificate was updated.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificates-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificates-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificates-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-id=string Optional. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} . This field is required when using a CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is optional and its value is ignored otherwise. -p issuing-certificate-authority-id=string Optional. The resource ID of the CertificateAuthority that should issue the certificate. This optional field will ignore the load-balancing scheme of the Pool and directly issue the certificate from the CA with the specified ID, contained in the same CaPool referenced by parent . Per-CA quota rules apply. If left empty, a CertificateAuthority will be chosen from the CaPool by the service. For example, to issue a Certificate from a Certificate Authority with resource name \"projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca\", you can set the parent to \"projects/my-project/locations/us-central1/caPools/my-pool\" and the issuing_certificate_authority_id to \"my-ca\". -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p validate-only=boolean Optional. If this is true, no Certificate resource will be persisted regardless of the CaPool's tier, and the returned Certificate will not contain the pem_certificate field.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificates-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificates-get/","text":"Returns a Certificate. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-get ... Required Scalar Argument <name> (string) Required. The name of the Certificate to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificates Get"},{"location":"projects_locations-ca-pools-certificates-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-get ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificates-get/#required-scalar-argument","text":"<name> (string) Required. The name of the Certificate to get.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificates-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificates-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificates-list/","text":"Lists Certificates. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-list ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the Certificates, in the format projects/*/locations/*/caPools/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. For details on supported filters and syntax, see Certificates Filtering documentation . -p order-by=string Optional. Specify how the results should be sorted. For details on supported fields and syntax, see Certificates Sorting documentation . -p page-size=integer Optional. Limit on the number of Certificates to include in the response. Further Certificates can subsequently be obtained by including the ListCertificatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificatesResponse.next_page_token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificates List"},{"location":"projects_locations-ca-pools-certificates-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-list ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificates-list/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the Certificates, in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificates-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificates-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. For details on supported filters and syntax, see Certificates Filtering documentation . -p order-by=string Optional. Specify how the results should be sorted. For details on supported fields and syntax, see Certificates Sorting documentation . -p page-size=integer Optional. Limit on the number of Certificates to include in the response. Further Certificates can subsequently be obtained by including the ListCertificatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificatesResponse.next_page_token.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificates-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificates-patch/","text":"Update a Certificate. Currently, the only field you can update is the labels field. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-patch ... Required Scalar Argument <name> (string) Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Certificate: certificate-description: aia-issuing-certificate-urls: [string] authority-key-id: key-id: string cert-fingerprint: sha256-hash: string crl-distribution-points: [string] public-key: format: string key: string subject-description: hex-serial-number: string lifetime: string not-after-time: string not-before-time: string subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-description: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] certificate-template: string config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string issuer-certificate-authority: string labels: { string: string } lifetime: string name: string pem-certificate: string pem-certificate-chain: [string] pem-csr: string revocation-details: revocation-state: string revocation-time: string subject-mode: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .certificate-description aia-issuing-certificate-urls=invidunt Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. authority-key-id key-id=sed Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..cert-fingerprint sha256-hash=nonumy The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate. .. crl-distribution-points=sea Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13 Each invocation of this argument appends the given value to the array. public-key format=ipsum Required. The format of the public key. key=kasd Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-description hex-serial-number=justo The serial number encoded in lowercase hexadecimal. lifetime=ea For convenience, the actual lifetime of an issued certificate. not-after-time=at The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second. not-before-time=erat The time at which the certificate becomes valid. subject common-name=clita The \"common name\" of the subject. country-code=vero The country code of the subject. locality=invidunt The locality or city of the subject. organization=nonumy The organization of the subject. organizational-unit=erat The organizational_unit of the subject. postal-code=erat The postal code of the subject. province=dolores The province, territory, or regional state of the subject. street-address=ipsum The street address of the subject. ..subject-alt-name dns-names=voluptua. Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=eos Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=duo Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=elitr Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=consetetur Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-description aia-ocsp-servers=et Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=42 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=false Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=rebum. Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=et Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=sed Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=stet Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=aliquyam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=kasd Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=lorem Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sit Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... certificate-template=kasd Immutable. The resource name for a CertificateTemplate used to issue this certificate, in the format projects/*/locations/*/certificateTemplates/* . If this is specified, the caller must have the necessary permission to use this template. If this is omitted, no template will be used. This template must be in the same location as the Certificate. config.public-key format=tempor Required. The format of the public key. key=dolor Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=amet The \"common name\" of the subject. country-code=sit The country code of the subject. locality=rebum. The locality or city of the subject. organization=sea The organization of the subject. organizational-unit=ipsum The organizational_unit of the subject. postal-code=ipsum The postal code of the subject. province=et The province, territory, or regional state of the subject. street-address=elitr The street address of the subject. ..subject-alt-name dns-names=eirmod Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=dolor Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=sadipscing Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=dolor Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=dolor Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=consetetur Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=50 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=true The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=consetetur Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=dolor Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=aliquyam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=ipsum Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=gubergren Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=invidunt Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=sea Output only. The time at which this Certificate was created. issuer-certificate-authority=duo Output only. The resource name of the issuing CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . labels=key=sea Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=stet Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain. name=sadipscing Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . pem-certificate=no Output only. The pem-encoded, signed X.509 certificate. pem-certificate-chain=tempor Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. pem-csr=ipsum Immutable. A pem-encoded X.509 certificate signing request (CSR). revocation-details revocation-state=sea Indicates why a Certificate was revoked. revocation-time=sit The time at which this Certificate was revoked. .. subject-mode=amet. Immutable. Specifies how the Certificate's identity fields are to be decided. If this is omitted, the DEFAULT subject mode will be used. update-time=ipsum Output only. The time at which this Certificate was updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificates Patch"},{"location":"projects_locations-ca-pools-certificates-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-patch ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificates-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificates-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Certificate: certificate-description: aia-issuing-certificate-urls: [string] authority-key-id: key-id: string cert-fingerprint: sha256-hash: string crl-distribution-points: [string] public-key: format: string key: string subject-description: hex-serial-number: string lifetime: string not-after-time: string not-before-time: string subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-description: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] certificate-template: string config: public-key: format: string key: string subject-config: subject: common-name: string country-code: string locality: string organization: string organizational-unit: string postal-code: string province: string street-address: string subject-alt-name: dns-names: [string] email-addresses: [string] ip-addresses: [string] uris: [string] subject-key-id: key-id: string x509-config: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] create-time: string issuer-certificate-authority: string labels: { string: string } lifetime: string name: string pem-certificate: string pem-certificate-chain: [string] pem-csr: string revocation-details: revocation-state: string revocation-time: string subject-mode: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .certificate-description aia-issuing-certificate-urls=invidunt Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. authority-key-id key-id=sed Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..cert-fingerprint sha256-hash=nonumy The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate. .. crl-distribution-points=sea Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13 Each invocation of this argument appends the given value to the array. public-key format=ipsum Required. The format of the public key. key=kasd Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-description hex-serial-number=justo The serial number encoded in lowercase hexadecimal. lifetime=ea For convenience, the actual lifetime of an issued certificate. not-after-time=at The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second. not-before-time=erat The time at which the certificate becomes valid. subject common-name=clita The \"common name\" of the subject. country-code=vero The country code of the subject. locality=invidunt The locality or city of the subject. organization=nonumy The organization of the subject. organizational-unit=erat The organizational_unit of the subject. postal-code=erat The postal code of the subject. province=dolores The province, territory, or regional state of the subject. street-address=ipsum The street address of the subject. ..subject-alt-name dns-names=voluptua. Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=eos Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=duo Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=elitr Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=consetetur Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-description aia-ocsp-servers=et Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=42 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=false Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=rebum. Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=et Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=sed Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=stet Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=aliquyam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=kasd Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=lorem Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sit Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... certificate-template=kasd Immutable. The resource name for a CertificateTemplate used to issue this certificate, in the format projects/*/locations/*/certificateTemplates/* . If this is specified, the caller must have the necessary permission to use this template. If this is omitted, no template will be used. This template must be in the same location as the Certificate. config.public-key format=tempor Required. The format of the public key. key=dolor Required. A public key. The padding and encoding must match with the KeyFormat value specified for the format field. ..subject-config.subject common-name=amet The \"common name\" of the subject. country-code=sit The country code of the subject. locality=rebum. The locality or city of the subject. organization=sea The organization of the subject. organizational-unit=ipsum The organizational_unit of the subject. postal-code=ipsum The postal code of the subject. province=et The province, territory, or regional state of the subject. street-address=elitr The street address of the subject. ..subject-alt-name dns-names=eirmod Contains only valid, fully-qualified host names. Each invocation of this argument appends the given value to the array. email-addresses=dolor Contains only valid RFC 2822 E-mail addresses. Each invocation of this argument appends the given value to the array. ip-addresses=sadipscing Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses. Each invocation of this argument appends the given value to the array. uris=dolor Contains only valid RFC 3986 URIs. Each invocation of this argument appends the given value to the array. ...subject-key-id key-id=dolor Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key. ..x509-config aia-ocsp-servers=consetetur Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=50 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=true The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=consetetur Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=dolor Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=aliquyam Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=ipsum Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=gubergren Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=invidunt Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. .... create-time=sea Output only. The time at which this Certificate was created. issuer-certificate-authority=duo Output only. The resource name of the issuing CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/* . labels=key=sea Optional. Labels with user-defined metadata. the value will be associated with the given key lifetime=stet Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain. name=sadipscing Output only. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . pem-certificate=no Output only. The pem-encoded, signed X.509 certificate. pem-certificate-chain=tempor Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246. Each invocation of this argument appends the given value to the array. pem-csr=ipsum Immutable. A pem-encoded X.509 certificate signing request (CSR). revocation-details revocation-state=sea Indicates why a Certificate was revoked. revocation-time=sit The time at which this Certificate was revoked. .. subject-mode=amet. Immutable. Specifies how the Certificate's identity fields are to be decided. If this is omitted, the DEFAULT subject mode will be used. update-time=ipsum Output only. The time at which this Certificate was updated.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificates-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificates-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificates-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-certificates-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-certificates-revoke/","text":"Revoke a Certificate. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-revoke ... Required Scalar Argument <name> (string) Required. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RevokeCertificateRequest: reason: string request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=at Required. The RevocationReason for revoking this certificate. request-id=vero Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Certificates Revoke"},{"location":"projects_locations-ca-pools-certificates-revoke/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-certificates-revoke ...","title":"Scopes"},{"location":"projects_locations-ca-pools-certificates-revoke/#required-scalar-argument","text":"<name> (string) Required. The resource name for this Certificate in the format projects/*/locations/*/caPools/*/certificates/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-certificates-revoke/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RevokeCertificateRequest: reason: string request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=at Required. The RevocationReason for revoking this certificate. request-id=vero Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Required Request Value"},{"location":"projects_locations-ca-pools-certificates-revoke/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-certificates-revoke/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-certificates-revoke/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-create/","text":"Create a CaPool. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-create ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the CaPool, in the format projects/*/locations/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CaPool: issuance-policy: allowed-issuance-modes: allow-config-based-issuance: boolean allow-csr-based-issuance: boolean baseline-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string maximum-lifetime: string passthrough-extensions: known-extensions: [string] labels: { string: string } name: string publishing-options: encoding-format: string publish-ca-cert: boolean publish-crl: boolean tier: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .issuance-policy.allowed-issuance-modes allow-config-based-issuance=true Optional. When true, allows callers to create Certificates by specifying a CertificateConfig. allow-csr-based-issuance=false Optional. When true, allows callers to create Certificates by specifying a CSR. ..baseline-values aia-ocsp-servers=invidunt Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=false Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=89 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=lorem Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=dolor Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=magna Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=magna Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=invidunt Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=et Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=et Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ...identity-constraints allow-subject-alt-names-passthrough=true Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=false Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=dolore Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=vero Textual representation of an expression in Common Expression Language syntax. location=ea Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=et Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... maximum-lifetime=amet. Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. passthrough-extensions known-extensions=eirmod Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ... labels=key=sanctus Optional. Labels with user-defined metadata. the value will be associated with the given key name=sed Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . publishing-options encoding-format=dolor Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs. If this is omitted, CA certificates and CRLs will be published in PEM. publish-ca-cert=false Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL in the \"Authority Information Access\" X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding X.509 extension will not be written in issued certificates. publish-crl=false Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the \"CRL Distribution Points\" X.509 extension in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked. .. tier=eos Required. Immutable. The Tier of this CaPool. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ca-pool-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Create"},{"location":"projects_locations-ca-pools-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-create ...","title":"Scopes"},{"location":"projects_locations-ca-pools-create/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the CaPool, in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CaPool: issuance-policy: allowed-issuance-modes: allow-config-based-issuance: boolean allow-csr-based-issuance: boolean baseline-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string maximum-lifetime: string passthrough-extensions: known-extensions: [string] labels: { string: string } name: string publishing-options: encoding-format: string publish-ca-cert: boolean publish-crl: boolean tier: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .issuance-policy.allowed-issuance-modes allow-config-based-issuance=true Optional. When true, allows callers to create Certificates by specifying a CertificateConfig. allow-csr-based-issuance=false Optional. When true, allows callers to create Certificates by specifying a CSR. ..baseline-values aia-ocsp-servers=invidunt Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=false Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=89 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=false The key may be used to sign certificates. content-commitment=true The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=true The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=lorem Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=dolor Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=magna Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=magna Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=invidunt Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=et Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=et Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ...identity-constraints allow-subject-alt-names-passthrough=true Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=false Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=dolore Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=vero Textual representation of an expression in Common Expression Language syntax. location=ea Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=et Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... maximum-lifetime=amet. Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. passthrough-extensions known-extensions=eirmod Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ... labels=key=sanctus Optional. Labels with user-defined metadata. the value will be associated with the given key name=sed Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . publishing-options encoding-format=dolor Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs. If this is omitted, CA certificates and CRLs will be published in PEM. publish-ca-cert=false Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL in the \"Authority Information Access\" X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding X.509 extension will not be written in issued certificates. publish-crl=false Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the \"CRL Distribution Points\" X.509 extension in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked. .. tier=eos Required. Immutable. The Tier of this CaPool.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ca-pool-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-delete/","text":"Delete a CaPool. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-delete ... Required Scalar Argument <name> (string) Required. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ignore-dependent-resources=boolean Optional. This field allows this pool to be deleted even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the pool will no longer be able to issue certificates. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Delete"},{"location":"projects_locations-ca-pools-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-delete ...","title":"Scopes"},{"location":"projects_locations-ca-pools-delete/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CaPool in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ignore-dependent-resources=boolean Optional. This field allows this pool to be deleted even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the pool will no longer be able to issue certificates. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-fetch-ca-certs/","text":"FetchCaCerts returns the current trust anchor for the CaPool. This will include CA certificate chains for all Certificate Authorities in the ENABLED, DISABLED, or STAGED states. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-fetch-ca-certs ... Required Scalar Argument <ca-pool> (string) Required. The resource name for the CaPool in the format projects/*/locations/*/caPools/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FetchCaCertsRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=nonumy Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Fetch Ca Certs"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-fetch-ca-certs ...","title":"Scopes"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#required-scalar-argument","text":"<ca-pool> (string) Required. The resource name for the CaPool in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FetchCaCertsRequest: request-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . request-id=nonumy Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Required Request Value"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-fetch-ca-certs/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-get-iam-policy/","text":"Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-get-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Get Iam Policy"},{"location":"projects_locations-ca-pools-get-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-get-iam-policy ...","title":"Scopes"},{"location":"projects_locations-ca-pools-get-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-get-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-get-iam-policy/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation .","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-get-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-get/","text":"Returns a CaPool. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-get ... Required Scalar Argument <name> (string) Required. The name of the CaPool to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Get"},{"location":"projects_locations-ca-pools-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-get ...","title":"Scopes"},{"location":"projects_locations-ca-pools-get/#required-scalar-argument","text":"<name> (string) Required. The name of the CaPool to get.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-list/","text":"Lists CaPools. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-list ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the CaPools, in the format projects/*/locations/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CaPools to include in the response. Further CaPools can subsequently be obtained by including the ListCaPoolsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCaPoolsResponse.next_page_token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools List"},{"location":"projects_locations-ca-pools-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-list ...","title":"Scopes"},{"location":"projects_locations-ca-pools-list/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the CaPools, in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CaPools to include in the response. Further CaPools can subsequently be obtained by including the ListCaPoolsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCaPoolsResponse.next_page_token.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-patch/","text":"Update a CaPool. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-patch ... Required Scalar Argument <name> (string) Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CaPool: issuance-policy: allowed-issuance-modes: allow-config-based-issuance: boolean allow-csr-based-issuance: boolean baseline-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string maximum-lifetime: string passthrough-extensions: known-extensions: [string] labels: { string: string } name: string publishing-options: encoding-format: string publish-ca-cert: boolean publish-crl: boolean tier: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .issuance-policy.allowed-issuance-modes allow-config-based-issuance=true Optional. When true, allows callers to create Certificates by specifying a CertificateConfig. allow-csr-based-issuance=false Optional. When true, allows callers to create Certificates by specifying a CSR. ..baseline-values aia-ocsp-servers=stet Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=61 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=sanctus Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=labore Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=dolore Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=voluptua. Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sanctus Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ...identity-constraints allow-subject-alt-names-passthrough=true Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=false Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=vero Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=voluptua. Textual representation of an expression in Common Expression Language syntax. location=sea Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=ipsum Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... maximum-lifetime=sea Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. passthrough-extensions known-extensions=et Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ... labels=key=gubergren Optional. Labels with user-defined metadata. the value will be associated with the given key name=dolore Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . publishing-options encoding-format=ea Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs. If this is omitted, CA certificates and CRLs will be published in PEM. publish-ca-cert=false Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL in the \"Authority Information Access\" X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding X.509 extension will not be written in issued certificates. publish-crl=false Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the \"CRL Distribution Points\" X.509 extension in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked. .. tier=tempor Required. Immutable. The Tier of this CaPool. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Patch"},{"location":"projects_locations-ca-pools-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-patch ...","title":"Scopes"},{"location":"projects_locations-ca-pools-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* .","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CaPool: issuance-policy: allowed-issuance-modes: allow-config-based-issuance: boolean allow-csr-based-issuance: boolean baseline-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string maximum-lifetime: string passthrough-extensions: known-extensions: [string] labels: { string: string } name: string publishing-options: encoding-format: string publish-ca-cert: boolean publish-crl: boolean tier: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .issuance-policy.allowed-issuance-modes allow-config-based-issuance=true Optional. When true, allows callers to create Certificates by specifying a CertificateConfig. allow-csr-based-issuance=false Optional. When true, allows callers to create Certificates by specifying a CSR. ..baseline-values aia-ocsp-servers=stet Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=61 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=false The key may be used for digital signatures. encipher-only=false The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=false Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=true Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=sanctus Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=labore Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=dolore Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=voluptua. Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sanctus Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ...identity-constraints allow-subject-alt-names-passthrough=true Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=false Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=vero Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=voluptua. Textual representation of an expression in Common Expression Language syntax. location=sea Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=ipsum Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... maximum-lifetime=sea Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. passthrough-extensions known-extensions=et Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ... labels=key=gubergren Optional. Labels with user-defined metadata. the value will be associated with the given key name=dolore Output only. The resource name for this CaPool in the format projects/*/locations/*/caPools/* . publishing-options encoding-format=ea Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs. If this is omitted, CA certificates and CRLs will be published in PEM. publish-ca-cert=false Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL in the \"Authority Information Access\" X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding X.509 extension will not be written in issued certificates. publish-crl=false Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the \"CRL Distribution Points\" X.509 extension in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked. .. tier=tempor Required. Immutable. The Tier of this CaPool.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request.","title":"Optional Method Properties"},{"location":"projects_locations-ca-pools-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-set-iam-policy/","text":"Sets the access control policy on the specified resource. Replaces any existing policy. Can return NOT_FOUND , INVALID_ARGUMENT , and PERMISSION_DENIED errors. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-set-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=clita etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=71 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=no OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34; About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Set Iam Policy"},{"location":"projects_locations-ca-pools-set-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-set-iam-policy ...","title":"Scopes"},{"location":"projects_locations-ca-pools-set-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-set-iam-policy/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=clita etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=71 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=no OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34;","title":"Required Request Value"},{"location":"projects_locations-ca-pools-set-iam-policy/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-set-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-set-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-ca-pools-test-iam-permissions/","text":"Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-test-iam-permissions ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=stet The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Ca Pools Test Iam Permissions"},{"location":"projects_locations-ca-pools-test-iam-permissions/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-ca-pools-test-iam-permissions ...","title":"Scopes"},{"location":"projects_locations-ca-pools-test-iam-permissions/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-ca-pools-test-iam-permissions/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=stet The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"projects_locations-ca-pools-test-iam-permissions/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-ca-pools-test-iam-permissions/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-ca-pools-test-iam-permissions/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-create/","text":"Create a new CertificateTemplate in a given Project and Location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-create ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the CertificateTemplate, in the format projects/*/locations/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateTemplate: create-time: string description: string identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string labels: { string: string } maximum-lifetime: string name: string passthrough-extensions: known-extensions: [string] predefined-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=sea Output only. The time at which this CertificateTemplate was created. description=clita Optional. A human-readable description of scenarios this template is intended for. identity-constraints allow-subject-alt-names-passthrough=false Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=true Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=sit Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=sea Textual representation of an expression in Common Expression Language syntax. location=sanctus Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=kasd Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... labels=key=eirmod Optional. Labels with user-defined metadata. the value will be associated with the given key maximum-lifetime=dolores Optional. The maximum lifetime allowed for issued Certificates that use this template. If the issuing CaPool's IssuancePolicy specifies a maximum_lifetime the minimum of the two durations will be the maximum lifetime for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. name=aliquyam Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . passthrough-extensions known-extensions=dolor Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ..predefined-values aia-ocsp-servers=vero Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=68 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=false Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=est Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=gubergren Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=eos Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolore Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=tempor Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=stet Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=accusam Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=et Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ... update-time=dolor Output only. The time at which this CertificateTemplate was updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-template-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Create"},{"location":"projects_locations-certificate-templates-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-create ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-create/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the CertificateTemplate, in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateTemplate: create-time: string description: string identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string labels: { string: string } maximum-lifetime: string name: string passthrough-extensions: known-extensions: [string] predefined-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=sea Output only. The time at which this CertificateTemplate was created. description=clita Optional. A human-readable description of scenarios this template is intended for. identity-constraints allow-subject-alt-names-passthrough=false Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=true Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=sit Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=sea Textual representation of an expression in Common Expression Language syntax. location=sanctus Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=kasd Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... labels=key=eirmod Optional. Labels with user-defined metadata. the value will be associated with the given key maximum-lifetime=dolores Optional. The maximum lifetime allowed for issued Certificates that use this template. If the issuing CaPool's IssuancePolicy specifies a maximum_lifetime the minimum of the two durations will be the maximum lifetime for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. name=aliquyam Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . passthrough-extensions known-extensions=dolor Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ..predefined-values aia-ocsp-servers=vero Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=68 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=true The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=true The key may be used in a key agreement protocol. key-encipherment=true The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=false Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=false Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=true Indicates whether or not the name constraints are marked critical. excluded-dns-names=est Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=gubergren Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=eos Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=dolore Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=tempor Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=stet Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=accusam Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=et Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ... update-time=dolor Output only. The time at which this CertificateTemplate was updated.","title":"Required Request Value"},{"location":"projects_locations-certificate-templates-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-certificate-templates-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p certificate-template-id=string Required. It must be unique within a location and match the regular expression [a-zA-Z0-9_-]{1,63} -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-certificate-templates-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-delete/","text":"DeleteCertificateTemplate deletes a CertificateTemplate. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-delete ... Required Scalar Argument <name> (string) Required. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Delete"},{"location":"projects_locations-certificate-templates-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-delete ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-delete/#required-scalar-argument","text":"<name> (string) Required. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* .","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).","title":"Optional Method Properties"},{"location":"projects_locations-certificate-templates-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-get-iam-policy/","text":"Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-get-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Get Iam Policy"},{"location":"projects_locations-certificate-templates-get-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-get-iam-policy ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-get-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-get-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-get-iam-policy/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p options-requested-policy-version=integer Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the IAM documentation .","title":"Optional Method Properties"},{"location":"projects_locations-certificate-templates-get-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-get/","text":"Returns a CertificateTemplate. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-get ... Required Scalar Argument <name> (string) Required. The name of the CertificateTemplate to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Get"},{"location":"projects_locations-certificate-templates-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-get ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-get/#required-scalar-argument","text":"<name> (string) Required. The name of the CertificateTemplate to get.","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-list/","text":"Lists CertificateTemplates. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-list ... Required Scalar Argument <parent> (string) Required. The resource name of the location associated with the CertificateTemplates, in the format projects/*/locations/* . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateTemplates to include in the response. Further CertificateTemplates can subsequently be obtained by including the ListCertificateTemplatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateTemplatesResponse.next_page_token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates List"},{"location":"projects_locations-certificate-templates-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-list ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-list/#required-scalar-argument","text":"<parent> (string) Required. The resource name of the location associated with the CertificateTemplates, in the format projects/*/locations/* .","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional. Only include resources that match the filter in the response. -p order-by=string Optional. Specify how the results should be sorted. -p page-size=integer Optional. Limit on the number of CertificateTemplates to include in the response. Further CertificateTemplates can subsequently be obtained by including the ListCertificateTemplatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default. -p page-token=string Optional. Pagination token, returned earlier via ListCertificateTemplatesResponse.next_page_token.","title":"Optional Method Properties"},{"location":"projects_locations-certificate-templates-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-patch/","text":"Update a CertificateTemplate. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-patch ... Required Scalar Argument <name> (string) Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateTemplate: create-time: string description: string identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string labels: { string: string } maximum-lifetime: string name: string passthrough-extensions: known-extensions: [string] predefined-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=diam Output only. The time at which this CertificateTemplate was created. description=elitr Optional. A human-readable description of scenarios this template is intended for. identity-constraints allow-subject-alt-names-passthrough=false Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=true Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=sit Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=lorem Textual representation of an expression in Common Expression Language syntax. location=amet. Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=diam Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... labels=key=diam Optional. Labels with user-defined metadata. the value will be associated with the given key maximum-lifetime=et Optional. The maximum lifetime allowed for issued Certificates that use this template. If the issuing CaPool's IssuancePolicy specifies a maximum_lifetime the minimum of the two durations will be the maximum lifetime for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. name=takimata Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . passthrough-extensions known-extensions=et Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ..predefined-values aia-ocsp-servers=dolores Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=91 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=amet. Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=takimata Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet. Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=labore Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=sed Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sit Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ... update-time=invidunt Output only. The time at which this CertificateTemplate was updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Patch"},{"location":"projects_locations-certificate-templates-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-patch ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* .","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CertificateTemplate: create-time: string description: string identity-constraints: allow-subject-alt-names-passthrough: boolean allow-subject-passthrough: boolean cel-expression: description: string expression: string location: string title: string labels: { string: string } maximum-lifetime: string name: string passthrough-extensions: known-extensions: [string] predefined-values: aia-ocsp-servers: [string] ca-options: is-ca: boolean max-issuer-path-length: integer key-usage: base-key-usage: cert-sign: boolean content-commitment: boolean crl-sign: boolean data-encipherment: boolean decipher-only: boolean digital-signature: boolean encipher-only: boolean key-agreement: boolean key-encipherment: boolean extended-key-usage: client-auth: boolean code-signing: boolean email-protection: boolean ocsp-signing: boolean server-auth: boolean time-stamping: boolean name-constraints: critical: boolean excluded-dns-names: [string] excluded-email-addresses: [string] excluded-ip-ranges: [string] excluded-uris: [string] permitted-dns-names: [string] permitted-email-addresses: [string] permitted-ip-ranges: [string] permitted-uris: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=diam Output only. The time at which this CertificateTemplate was created. description=elitr Optional. A human-readable description of scenarios this template is intended for. identity-constraints allow-subject-alt-names-passthrough=false Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded. allow-subject-passthrough=true Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded. cel-expression description=sit Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. expression=lorem Textual representation of an expression in Common Expression Language syntax. location=amet. Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. title=diam Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. ... labels=key=diam Optional. Labels with user-defined metadata. the value will be associated with the given key maximum-lifetime=et Optional. The maximum lifetime allowed for issued Certificates that use this template. If the issuing CaPool's IssuancePolicy specifies a maximum_lifetime the minimum of the two durations will be the maximum lifetime for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it. name=takimata Output only. The resource name for this CertificateTemplate in the format projects/*/locations/*/certificateTemplates/* . passthrough-extensions known-extensions=et Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions. Each invocation of this argument appends the given value to the array. ..predefined-values aia-ocsp-servers=dolores Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate. Each invocation of this argument appends the given value to the array. ca-options is-ca=true Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate. max-issuer-path-length=91 Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate. ..key-usage.base-key-usage cert-sign=true The key may be used to sign certificates. content-commitment=false The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\". crl-sign=false The key may be used sign certificate revocation lists. data-encipherment=false The key may be used to encipher data. decipher-only=false The key may be used to decipher only. digital-signature=true The key may be used for digital signatures. encipher-only=true The key may be used to encipher only. key-agreement=false The key may be used in a key agreement protocol. key-encipherment=false The key may be used to encipher other keys. ..extended-key-usage client-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS. code-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\". email-protection=true Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\". ocsp-signing=true Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\". server-auth=false Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS. time-stamping=true Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\". ...name-constraints critical=false Indicates whether or not the name constraints are marked critical. excluded-dns-names=amet. Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. excluded-email-addresses=takimata Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. excluded-ip-ranges=amet. Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. excluded-uris=et Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. permitted-dns-names=labore Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com , www.example.com , www.sub.example.com would satisfy example.com while example1.com does not. Each invocation of this argument appends the given value to the array. permitted-email-addresses=sed Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com ) to indicate all email addresses in that domain. Each invocation of this argument appends the given value to the array. permitted-ip-ranges=sit Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses. Each invocation of this argument appends the given value to the array. permitted-uris=sit Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com ) Each invocation of this argument appends the given value to the array. ... update-time=invidunt Output only. The time at which this CertificateTemplate was updated.","title":"Required Request Value"},{"location":"projects_locations-certificate-templates-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-certificate-templates-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). -p update-mask=string Required. A list of fields to be updated in this request.","title":"Optional Method Properties"},{"location":"projects_locations-certificate-templates-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-set-iam-policy/","text":"Sets the access control policy on the specified resource. Replaces any existing policy. Can return NOT_FOUND , INVALID_ARGUMENT , and PERMISSION_DENIED errors. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-set-iam-policy ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=elitr etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=73 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=justo OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34; About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Set Iam Policy"},{"location":"projects_locations-certificate-templates-set-iam-policy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-set-iam-policy ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-set-iam-policy/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy is being specified. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-set-iam-policy/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetIamPolicyRequest: policy: etag: string version: integer update-mask: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .policy etag=elitr etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy , and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy. Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. version=73 Specifies the format of the policy. Valid values are 0 , 1 , and 3 . Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version 3 . This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy . If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the IAM documentation . .. update-mask=justo OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: paths: &#34;bindings, etag&#34;","title":"Required Request Value"},{"location":"projects_locations-certificate-templates-set-iam-policy/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-certificate-templates-set-iam-policy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-set-iam-policy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-certificate-templates-test-iam-permissions/","text":"Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-test-iam-permissions ... Required Scalar Argument <resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=amet. The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Certificate Templates Test Iam Permissions"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-certificate-templates-test-iam-permissions ...","title":"Scopes"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#required-scalar-argument","text":"<resource> (string) REQUIRED: The resource for which the policy detail is being requested. See Resource names for the appropriate value for this field.","title":"Required Scalar Argument"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TestIamPermissionsRequest: permissions: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . permissions=amet. The set of permissions to check for the resource . Permissions with wildcards (such as * or storage.* ) are not allowed. For more information see IAM Overview . Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-certificate-templates-test-iam-permissions/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-get/","text":"Gets information about a location. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-get ... Required Scalar Argument <name> (string) Resource name for the location. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Get"},{"location":"projects_locations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-get ...","title":"Scopes"},{"location":"projects_locations-get/#required-scalar-argument","text":"<name> (string) Resource name for the location.","title":"Required Scalar Argument"},{"location":"projects_locations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-list/","text":"Lists information about the supported locations for this service. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-list ... Required Scalar Argument <name> (string) The resource that owns the locations collection, if applicable. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter to narrow down results to a preferred subset. The filtering language accepts strings like &#34;displayName=tokyo&#34; , and is documented in more detail in AIP-160 . -p page-size=integer The maximum number of results to return. If not set, the service selects a default. -p page-token=string A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations List"},{"location":"projects_locations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-list ...","title":"Scopes"},{"location":"projects_locations-list/#required-scalar-argument","text":"<name> (string) The resource that owns the locations collection, if applicable.","title":"Required Scalar Argument"},{"location":"projects_locations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter to narrow down results to a preferred subset. The filtering language accepts strings like &#34;displayName=tokyo&#34; , and is documented in more detail in AIP-160 . -p page-size=integer The maximum number of results to return. If not set, the service selects a default. -p page-token=string A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.","title":"Optional Method Properties"},{"location":"projects_locations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-cancel/","text":"Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED . Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-cancel ... Required Scalar Argument <name> (string) The name of the operation resource to be cancelled. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelOperationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Cancel"},{"location":"projects_locations-operations-cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-cancel ...","title":"Scopes"},{"location":"projects_locations-operations-cancel/#required-scalar-argument","text":"<name> (string) The name of the operation resource to be cancelled.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-cancel/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelOperationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"projects_locations-operations-cancel/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_locations-operations-cancel/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-delete/","text":"Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-delete ... Required Scalar Argument <name> (string) The name of the operation resource to be deleted. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Delete"},{"location":"projects_locations-operations-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-delete ...","title":"Scopes"},{"location":"projects_locations-operations-delete/#required-scalar-argument","text":"<name> (string) The name of the operation resource to be deleted.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-get/","text":"Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-get ... Required Scalar Argument <name> (string) The name of the operation resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations Get"},{"location":"projects_locations-operations-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-get ...","title":"Scopes"},{"location":"projects_locations-operations-get/#required-scalar-argument","text":"<name> (string) The name of the operation resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_locations-operations-list/","text":"Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-list ... Required Scalar Argument <name> (string) The name of the operation's parent resource. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Operations List"},{"location":"projects_locations-operations-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: privateca1 --scope <scope> projects locations-operations-list ...","title":"Scopes"},{"location":"projects_locations-operations-list/#required-scalar-argument","text":"<name> (string) The name of the operation's parent resource.","title":"Required Scalar Argument"},{"location":"projects_locations-operations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_locations-operations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string The standard list filter. -p page-size=integer The standard list page size. -p page-token=string The standard list page token.","title":"Optional Method Properties"},{"location":"projects_locations-operations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}