{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The authorizedbuyersmarketplace1 command-line interface (CLI) allows to use most features of the Google Authorized Buyers Marketplace service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Authorized Buyers Marketplace API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-authorizedbuyersmarketplace1-cli Find the source code on github . Usage This documentation was generated from the Authorized Buyers Marketplace API at revision 20240305 . The CLI is at version 5.0.4 . authorizedbuyersmarketplace1 [options] bidders finalized-deals-list <parent> [-p <v>]... [-o <out>] buyers auction-packages-get <name> [-p <v>]... [-o <out>] auction-packages-list <parent> [-p <v>]... [-o <out>] auction-packages-subscribe <name> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-subscribe-clients <auction-package> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-unsubscribe <name> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-unsubscribe-clients <auction-package> (-r <kv>)... [-p <v>]... [-o <out>] clients-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] clients-deactivate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-get <name> [-p <v>]... [-o <out>] clients-list <parent> [-p <v>]... [-o <out>] clients-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-deactivate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-delete <name> [-p <v>]... [-o <out>] clients-users-get <name> [-p <v>]... [-o <out>] clients-users-list <parent> [-p <v>]... [-o <out>] finalized-deals-add-creative <deal> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-get <name> [-p <v>]... [-o <out>] finalized-deals-list <parent> [-p <v>]... [-o <out>] finalized-deals-pause <name> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-resume <name> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-set-ready-to-serve <deal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-accept <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-add-note <proposal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-cancel-negotiation <proposal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-deals-batch-update <parent> (-r <kv>)... [-p <v>]... [-o <out>] proposals-deals-get <name> [-p <v>]... [-o <out>] proposals-deals-list <parent> [-p <v>]... [-o <out>] proposals-deals-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-get <name> [-p <v>]... [-o <out>] proposals-list <parent> [-p <v>]... [-o <out>] proposals-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-send-rfp <buyer> (-r <kv>)... [-p <v>]... [-o <out>] publisher-profiles-get <name> [-p <v>]... [-o <out>] publisher-profiles-list <parent> [-p <v>]... [-o <out>] authorizedbuyersmarketplace1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with authorizedbuyersmarketplace1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/authorizedbuyersmarketplace1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/authorizedbuyersmarketplace1-secret.json , assuming that the required authorizedbuyersmarketplace API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. authorizedbuyersmarketplace1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-authorizedbuyersmarketplace1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Authorized Buyers Marketplace API at revision 20240305 . The CLI is at version 5.0.4 . authorizedbuyersmarketplace1 [options] bidders finalized-deals-list <parent> [-p <v>]... [-o <out>] buyers auction-packages-get <name> [-p <v>]... [-o <out>] auction-packages-list <parent> [-p <v>]... [-o <out>] auction-packages-subscribe <name> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-subscribe-clients <auction-package> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-unsubscribe <name> (-r <kv>)... [-p <v>]... [-o <out>] auction-packages-unsubscribe-clients <auction-package> (-r <kv>)... [-p <v>]... [-o <out>] clients-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] clients-deactivate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-get <name> [-p <v>]... [-o <out>] clients-list <parent> [-p <v>]... [-o <out>] clients-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-activate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-deactivate <name> (-r <kv>)... [-p <v>]... [-o <out>] clients-users-delete <name> [-p <v>]... [-o <out>] clients-users-get <name> [-p <v>]... [-o <out>] clients-users-list <parent> [-p <v>]... [-o <out>] finalized-deals-add-creative <deal> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-get <name> [-p <v>]... [-o <out>] finalized-deals-list <parent> [-p <v>]... [-o <out>] finalized-deals-pause <name> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-resume <name> (-r <kv>)... [-p <v>]... [-o <out>] finalized-deals-set-ready-to-serve <deal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-accept <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-add-note <proposal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-cancel-negotiation <proposal> (-r <kv>)... [-p <v>]... [-o <out>] proposals-deals-batch-update <parent> (-r <kv>)... [-p <v>]... [-o <out>] proposals-deals-get <name> [-p <v>]... [-o <out>] proposals-deals-list <parent> [-p <v>]... [-o <out>] proposals-deals-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-get <name> [-p <v>]... [-o <out>] proposals-list <parent> [-p <v>]... [-o <out>] proposals-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] proposals-send-rfp <buyer> (-r <kv>)... [-p <v>]... [-o <out>] publisher-profiles-get <name> [-p <v>]... [-o <out>] publisher-profiles-list <parent> [-p <v>]... [-o <out>] authorizedbuyersmarketplace1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with authorizedbuyersmarketplace1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/authorizedbuyersmarketplace1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/authorizedbuyersmarketplace1-secret.json , assuming that the required authorizedbuyersmarketplace API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. authorizedbuyersmarketplace1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"bidders_finalized-deals-list/","text":"Lists finalized deals. Use the URL path \"/v1/buyers/{accountId}/finalizedDeals\" to list finalized deals for the current buyer and its clients. Bidders can use the URL path \"/v1/bidders/{accountId}/finalizedDeals\" to list finalized deals for the bidder, its buyers and all their clients. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> bidders finalized-deals-list ... Required Scalar Argument <parent> (string) Required. The buyer to list the finalized deals for, in the format: buyers/{accountId} . When used to list finalized deals for a bidder, its buyers and clients, in the format bidders/{accountId} . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus -p order-by=string An optional query string to sort finalized deals using the Cloud API sorting syntax . If no sort order is specified, results will be returned in an arbitrary order. Supported columns for sorting are: * deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth Example: 'deal.displayName, deal.updateTime desc' -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListFinalizedDealsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals List"},{"location":"bidders_finalized-deals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> bidders finalized-deals-list ...","title":"Scopes"},{"location":"bidders_finalized-deals-list/#required-scalar-argument","text":"<parent> (string) Required. The buyer to list the finalized deals for, in the format: buyers/{accountId} . When used to list finalized deals for a bidder, its buyers and clients, in the format bidders/{accountId} .","title":"Required Scalar Argument"},{"location":"bidders_finalized-deals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"bidders_finalized-deals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus -p order-by=string An optional query string to sort finalized deals using the Cloud API sorting syntax . If no sort order is specified, results will be returned in an arbitrary order. Supported columns for sorting are: * deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth Example: 'deal.displayName, deal.updateTime desc' -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListFinalizedDealsResponse.","title":"Optional Method Properties"},{"location":"bidders_finalized-deals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-get/","text":"Gets an auction package given its name. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-get ... Required Scalar Argument <name> (string) Required. Name of auction package to get. Format: buyers/{accountId}/auctionPackages/{auctionPackageId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages Get"},{"location":"buyers_auction-packages-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-get ...","title":"Scopes"},{"location":"buyers_auction-packages-get/#required-scalar-argument","text":"<name> (string) Required. Name of auction package to get. Format: buyers/{accountId}/auctionPackages/{auctionPackageId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-list/","text":"List the auction packages subscribed by a buyer and its clients. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-list ... Required Scalar Argument <parent> (string) Required. Name of the parent buyer that can access the auction package. Format: buyers/{accountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. Max allowed page size is 500. -p page-token=string The page token as returned. ListAuctionPackagesResponse.nextPageToken Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages List"},{"location":"buyers_auction-packages-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-list ...","title":"Scopes"},{"location":"buyers_auction-packages-list/#required-scalar-argument","text":"<parent> (string) Required. Name of the parent buyer that can access the auction package. Format: buyers/{accountId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. Max allowed page size is 500. -p page-token=string The page token as returned. ListAuctionPackagesResponse.nextPageToken","title":"Optional Method Properties"},{"location":"buyers_auction-packages-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-subscribe-clients/","text":"Subscribe the specified clients of the buyer to the auction package. If a client in the list does not belong to the buyer, an error response will be returned, and all of the following clients in the list will not be subscribed. Subscribing an already subscribed client will have no effect. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-subscribe-clients ... Required Scalar Argument <auction-package> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscribeClientsRequest: clients: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . clients=et Optional. A list of client buyers to subscribe to the auction package, with client buyer in the format buyers/{accountId}/clients/{clientAccountId} . The current buyer will be subscribed to the auction package regardless of the list contents if not already. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages Subscribe Clients"},{"location":"buyers_auction-packages-subscribe-clients/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-subscribe-clients ...","title":"Scopes"},{"location":"buyers_auction-packages-subscribe-clients/#required-scalar-argument","text":"<auction-package> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-subscribe-clients/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscribeClientsRequest: clients: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . clients=et Optional. A list of client buyers to subscribe to the auction package, with client buyer in the format buyers/{accountId}/clients/{clientAccountId} . The current buyer will be subscribed to the auction package regardless of the list contents if not already. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"buyers_auction-packages-subscribe-clients/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_auction-packages-subscribe-clients/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-subscribe-clients/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-subscribe/","text":"Subscribe to the auction package for the specified buyer. Once subscribed, the bidder will receive a call out for inventory matching the auction package targeting criteria with the auction package deal ID and the specified buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-subscribe ... Required Scalar Argument <name> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscribeAuctionPackageRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages Subscribe"},{"location":"buyers_auction-packages-subscribe/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-subscribe ...","title":"Scopes"},{"location":"buyers_auction-packages-subscribe/#required-scalar-argument","text":"<name> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-subscribe/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscribeAuctionPackageRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_auction-packages-subscribe/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_auction-packages-subscribe/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-subscribe/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-unsubscribe-clients/","text":"Unsubscribe from the auction package for the specified clients of the buyer. Unsubscribing a client that is not subscribed will have no effect. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-unsubscribe-clients ... Required Scalar Argument <auction-package> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UnsubscribeClientsRequest: clients: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . clients=magna Optional. A list of client buyers to unsubscribe from the auction package, with client buyer in the format buyers/{accountId}/clients/{clientAccountId} . Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages Unsubscribe Clients"},{"location":"buyers_auction-packages-unsubscribe-clients/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-unsubscribe-clients ...","title":"Scopes"},{"location":"buyers_auction-packages-unsubscribe-clients/#required-scalar-argument","text":"<auction-package> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-unsubscribe-clients/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UnsubscribeClientsRequest: clients: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . clients=magna Optional. A list of client buyers to unsubscribe from the auction package, with client buyer in the format buyers/{accountId}/clients/{clientAccountId} . Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"buyers_auction-packages-unsubscribe-clients/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_auction-packages-unsubscribe-clients/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-unsubscribe-clients/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_auction-packages-unsubscribe/","text":"Unsubscribe from the auction package for the specified buyer. Once unsubscribed, the bidder will no longer receive a call out for the auction package deal ID and the specified buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-unsubscribe ... Required Scalar Argument <name> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UnsubscribeAuctionPackageRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Auction Packages Unsubscribe"},{"location":"buyers_auction-packages-unsubscribe/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers auction-packages-unsubscribe ...","title":"Scopes"},{"location":"buyers_auction-packages-unsubscribe/#required-scalar-argument","text":"<name> (string) Required. Name of the auction package. Format: buyers/{accountId}/auctionPackages/{auctionPackageId}","title":"Required Scalar Argument"},{"location":"buyers_auction-packages-unsubscribe/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UnsubscribeAuctionPackageRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_auction-packages-unsubscribe/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_auction-packages-unsubscribe/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_auction-packages-unsubscribe/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-activate/","text":"Activates an existing client. The state of the client will be updated to \"ACTIVE\". This method has no effect if the client is already in \"ACTIVE\" state. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-activate ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateClientRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Activate"},{"location":"buyers_clients-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-activate ...","title":"Scopes"},{"location":"buyers_clients-activate/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateClientRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_clients-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-create/","text":"Creates a new client. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-create ... Required Scalar Argument <parent> (string) Required. The name of the buyer. Format: buyers/{accountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: display-name: string name: string partner-client-id: string role: string seller-visible: boolean state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=no Required. Display name shown to publishers. Must be unique for clients without partnerClientId specified. Maximum length of 255 characters is allowed. name=ipsum Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId} partner-client-id=voluptua. Arbitrary unique identifier provided by the buyer. This field can be used to associate a client with an identifier in the namespace of the buyer, lookup clients by that identifier and verify whether an Authorized Buyers account of the client already exists. If present, must be unique across all the clients. role=at Required. The role assigned to the client. Each role implies a set of permissions granted to the client. seller-visible=false Whether the client will be visible to sellers. state=amet. Output only. The state of the client. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Create"},{"location":"buyers_clients-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-create ...","title":"Scopes"},{"location":"buyers_clients-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the buyer. Format: buyers/{accountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: display-name: string name: string partner-client-id: string role: string seller-visible: boolean state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=no Required. Display name shown to publishers. Must be unique for clients without partnerClientId specified. Maximum length of 255 characters is allowed. name=ipsum Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId} partner-client-id=voluptua. Arbitrary unique identifier provided by the buyer. This field can be used to associate a client with an identifier in the namespace of the buyer, lookup clients by that identifier and verify whether an Authorized Buyers account of the client already exists. If present, must be unique across all the clients. role=at Required. The role assigned to the client. Each role implies a set of permissions granted to the client. seller-visible=false Whether the client will be visible to sellers. state=amet. Output only. The state of the client.","title":"Required Request Value"},{"location":"buyers_clients-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-deactivate/","text":"Deactivates an existing client. The state of the client will be updated to \"INACTIVE\". This method has no effect if the client is already in \"INACTIVE\" state. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-deactivate ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateClientRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Deactivate"},{"location":"buyers_clients-deactivate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-deactivate ...","title":"Scopes"},{"location":"buyers_clients-deactivate/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-deactivate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateClientRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_clients-deactivate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-deactivate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-deactivate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-get/","text":"Gets a client with a given resource name. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-get ... Required Scalar Argument <name> (string) Required. Format: buyers/{accountId}/clients/{clientAccountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Get"},{"location":"buyers_clients-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-get ...","title":"Scopes"},{"location":"buyers_clients-get/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{accountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-list/","text":"Lists all the clients for the current buyer. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-list ... Required Scalar Argument <parent> (string) Required. The name of the buyer. Format: buyers/{accountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string using the Filtering Syntax Supported fields for filtering are: * partnerClientId Use this field to filter the clients by the partnerClientId. For example, if the partnerClientId of the client is \"1234\", the value of this field should be partnerClientId = &#34;1234&#34; , in order to get only the client whose partnerClientId is \"1234\" in the response. -p page-size=integer Requested page size. If left blank, a default page size of 500 will be applied. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientsResponse.nextPageToken returned from the previous call to the list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients List"},{"location":"buyers_clients-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-list ...","title":"Scopes"},{"location":"buyers_clients-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the buyer. Format: buyers/{accountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Query string using the Filtering Syntax Supported fields for filtering are: * partnerClientId Use this field to filter the clients by the partnerClientId. For example, if the partnerClientId of the client is \"1234\", the value of this field should be partnerClientId = &#34;1234&#34; , in order to get only the client whose partnerClientId is \"1234\" in the response. -p page-size=integer Requested page size. If left blank, a default page size of 500 will be applied. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientsResponse.nextPageToken returned from the previous call to the list method.","title":"Optional Method Properties"},{"location":"buyers_clients-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-patch/","text":"Updates an existing client. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-patch ... Required Scalar Argument <name> (string) Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: display-name: string name: string partner-client-id: string role: string seller-visible: boolean state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=takimata Required. Display name shown to publishers. Must be unique for clients without partnerClientId specified. Maximum length of 255 characters is allowed. name=amet. Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId} partner-client-id=duo Arbitrary unique identifier provided by the buyer. This field can be used to associate a client with an identifier in the namespace of the buyer, lookup clients by that identifier and verify whether an Authorized Buyers account of the client already exists. If present, must be unique across all the clients. role=ipsum Required. The role assigned to the client. Each role implies a set of permissions granted to the client. seller-visible=true Whether the client will be visible to sellers. state=lorem Output only. The state of the client. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Patch"},{"location":"buyers_clients-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-patch ...","title":"Scopes"},{"location":"buyers_clients-patch/#required-scalar-argument","text":"<name> (string) Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Client: display-name: string name: string partner-client-id: string role: string seller-visible: boolean state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . display-name=takimata Required. Display name shown to publishers. Must be unique for clients without partnerClientId specified. Maximum length of 255 characters is allowed. name=amet. Output only. The resource name of the client. Format: buyers/{accountId}/clients/{clientAccountId} partner-client-id=duo Arbitrary unique identifier provided by the buyer. This field can be used to associate a client with an identifier in the namespace of the buyer, lookup clients by that identifier and verify whether an Authorized Buyers account of the client already exists. If present, must be unique across all the clients. role=ipsum Required. The role assigned to the client. Each role implies a set of permissions granted to the client. seller-visible=true Whether the client will be visible to sellers. state=lorem Output only. The state of the client.","title":"Required Request Value"},{"location":"buyers_clients-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.","title":"Optional Method Properties"},{"location":"buyers_clients-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-activate/","text":"Activates an existing client user. The state of the client user will be updated from \"INACTIVE\" to \"ACTIVE\". This method has no effect if the client user is already in \"ACTIVE\" state. An error will be returned if the client user to activate is still in \"INVITED\" state. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-activate ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateClientUserRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Activate"},{"location":"buyers_clients-users-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-activate ...","title":"Scopes"},{"location":"buyers_clients-users-activate/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateClientUserRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_clients-users-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-users-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-create/","text":"Creates a new client user in \"INVITED\" state. An email invitation will be sent to the new user, once accepted the user will become active. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-create ... Required Scalar Argument <parent> (string) Required. The name of the client. Format: buyers/{accountId}/clients/{clientAccountId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUser: email: string name: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=gubergren Required. The client user's email address that has to be unique across all users for the same client. name=eos Output only. The resource name of the client user. Format: buyers/{accountId}/clients/{clientAccountId}/users/{userId} state=dolor Output only. The state of the client user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Create"},{"location":"buyers_clients-users-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-create ...","title":"Scopes"},{"location":"buyers_clients-users-create/#required-scalar-argument","text":"<parent> (string) Required. The name of the client. Format: buyers/{accountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClientUser: email: string name: string state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . email=gubergren Required. The client user's email address that has to be unique across all users for the same client. name=eos Output only. The resource name of the client user. Format: buyers/{accountId}/clients/{clientAccountId}/users/{userId} state=dolor Output only. The state of the client user.","title":"Required Request Value"},{"location":"buyers_clients-users-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-users-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-deactivate/","text":"Deactivates an existing client user. The state of the client user will be updated from \"ACTIVE\" to \"INACTIVE\". This method has no effect if the client user is already in \"INACTIVE\" state. An error will be returned if the client user to deactivate is still in \"INVITED\" state. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-deactivate ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateClientUserRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Deactivate"},{"location":"buyers_clients-users-deactivate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-deactivate ...","title":"Scopes"},{"location":"buyers_clients-users-deactivate/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-deactivate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateClientUserRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_clients-users-deactivate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_clients-users-deactivate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-deactivate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-delete/","text":"Deletes an existing client user. The client user will lose access to the Authorized Buyers UI. Note that if a client user is deleted, the user's access to the UI can't be restored unless a new client user is created and activated. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-delete ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Delete"},{"location":"buyers_clients-users-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-delete ...","title":"Scopes"},{"location":"buyers_clients-users-delete/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-get/","text":"Retrieves an existing client user. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-get ... Required Scalar Argument <name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users Get"},{"location":"buyers_clients-users-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-get ...","title":"Scopes"},{"location":"buyers_clients-users-get/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_clients-users-list/","text":"Lists all client users for a specified client. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-list ... Required Scalar Argument <parent> (string) Required. The name of the client. Format: buyers/{buyerAccountId}/clients/{clientAccountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. If left blank, a default page size of 500 will be applied. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUsersResponse.nextPageToken returned from the previous call to the list method. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Clients Users List"},{"location":"buyers_clients-users-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers clients-users-list ...","title":"Scopes"},{"location":"buyers_clients-users-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the client. Format: buyers/{buyerAccountId}/clients/{clientAccountId}","title":"Required Scalar Argument"},{"location":"buyers_clients-users-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_clients-users-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. If left blank, a default page size of 500 will be applied. -p page-token=string A token identifying a page of results the server should return. Typically, this is the value of ListClientUsersResponse.nextPageToken returned from the previous call to the list method.","title":"Optional Method Properties"},{"location":"buyers_clients-users-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-add-creative/","text":"Add creative to be used in the bidding process for a finalized deal. For programmatic guaranteed deals, it's recommended that you associate at least one approved creative with the deal before calling SetReadyToServe, to help reduce the number of bid responses filtered because they don't contain approved creatives. Creatives successfully added to a deal can be found in the Realtime-bidding Creatives API creative.deal_ids. This method only applies to programmatic guaranteed deals. Maximum number of 1000 creatives can be added to a finalized deal. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-add-creative ... Required Scalar Argument <deal> (string) Required. Name of the finalized deal in the format of: buyers/{accountId}/finalizedDeals/{dealId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddCreativeRequest: creative: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . creative=ea Name of the creative to add to the finalized deal, in the format buyers/{buyerAccountId}/creatives/{creativeId} . See creative.name. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals Add Creative"},{"location":"buyers_finalized-deals-add-creative/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-add-creative ...","title":"Scopes"},{"location":"buyers_finalized-deals-add-creative/#required-scalar-argument","text":"<deal> (string) Required. Name of the finalized deal in the format of: buyers/{accountId}/finalizedDeals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-add-creative/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddCreativeRequest: creative: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . creative=ea Name of the creative to add to the finalized deal, in the format buyers/{buyerAccountId}/creatives/{creativeId} . See creative.name.","title":"Required Request Value"},{"location":"buyers_finalized-deals-add-creative/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_finalized-deals-add-creative/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-add-creative/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-get/","text":"Gets a finalized deal given its name. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-get ... Required Scalar Argument <name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals Get"},{"location":"buyers_finalized-deals-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-get ...","title":"Scopes"},{"location":"buyers_finalized-deals-get/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-list/","text":"Lists finalized deals. Use the URL path \"/v1/buyers/{accountId}/finalizedDeals\" to list finalized deals for the current buyer and its clients. Bidders can use the URL path \"/v1/bidders/{accountId}/finalizedDeals\" to list finalized deals for the bidder, its buyers and all their clients. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-list ... Required Scalar Argument <parent> (string) Required. The buyer to list the finalized deals for, in the format: buyers/{accountId} . When used to list finalized deals for a bidder, its buyers and clients, in the format bidders/{accountId} . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus -p order-by=string An optional query string to sort finalized deals using the Cloud API sorting syntax . If no sort order is specified, results will be returned in an arbitrary order. Supported columns for sorting are: * deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth Example: 'deal.displayName, deal.updateTime desc' -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListFinalizedDealsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals List"},{"location":"buyers_finalized-deals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-list ...","title":"Scopes"},{"location":"buyers_finalized-deals-list/#required-scalar-argument","text":"<parent> (string) Required. The buyer to list the finalized deals for, in the format: buyers/{accountId} . When used to list finalized deals for a bidder, its buyers and clients, in the format bidders/{accountId} .","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus -p order-by=string An optional query string to sort finalized deals using the Cloud API sorting syntax . If no sort order is specified, results will be returned in an arbitrary order. Supported columns for sorting are: * deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth Example: 'deal.displayName, deal.updateTime desc' -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListFinalizedDealsResponse.","title":"Optional Method Properties"},{"location":"buyers_finalized-deals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-pause/","text":"Pauses serving of the given finalized deal. This call only pauses the serving status, and does not affect other fields of the finalized deal. Calling this method for an already paused deal has no effect. This method only applies to programmatic guaranteed deals. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-pause ... Required Scalar Argument <name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseFinalizedDealRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=ipsum The reason to pause the finalized deal, will be displayed to the seller. Maximum length is 1000 characters. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals Pause"},{"location":"buyers_finalized-deals-pause/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-pause ...","title":"Scopes"},{"location":"buyers_finalized-deals-pause/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-pause/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PauseFinalizedDealRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=ipsum The reason to pause the finalized deal, will be displayed to the seller. Maximum length is 1000 characters.","title":"Required Request Value"},{"location":"buyers_finalized-deals-pause/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_finalized-deals-pause/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-pause/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-resume/","text":"Resumes serving of the given finalized deal. Calling this method for an running deal has no effect. If a deal is initially paused by the seller, calling this method will not resume serving of the deal until the seller also resumes the deal. This method only applies to programmatic guaranteed deals. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-resume ... Required Scalar Argument <name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeFinalizedDealRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals Resume"},{"location":"buyers_finalized-deals-resume/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-resume ...","title":"Scopes"},{"location":"buyers_finalized-deals-resume/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-resume/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResumeFinalizedDealRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_finalized-deals-resume/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_finalized-deals-resume/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-resume/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_finalized-deals-set-ready-to-serve/","text":"Sets the given finalized deal as ready to serve. By default, deals are set as ready to serve as soon as they're finalized. If you want to opt out of the default behavior, and manually indicate that deals are ready to serve, ask your Technical Account Manager to add you to the allowlist. If you choose to use this method, finalized deals belonging to the bidder and its child seats don't start serving until after you call setReadyToServe , and after the deals become active. For example, you can use this method to delay receiving bid requests until your creative is ready. This method only applies to programmatic guaranteed deals. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-set-ready-to-serve ... Required Scalar Argument <deal> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetReadyToServeRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Finalized Deals Set Ready To Serve"},{"location":"buyers_finalized-deals-set-ready-to-serve/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers finalized-deals-set-ready-to-serve ...","title":"Scopes"},{"location":"buyers_finalized-deals-set-ready-to-serve/#required-scalar-argument","text":"<deal> (string) Required. Format: buyers/{accountId}/finalizedDeals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_finalized-deals-set-ready-to-serve/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SetReadyToServeRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_finalized-deals-set-ready-to-serve/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_finalized-deals-set-ready-to-serve/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_finalized-deals-set-ready-to-serve/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-accept/","text":"Accepts the proposal at the given revision number. If the revision number in the request is behind the latest from the server, an error message will be returned. This call updates the Proposal.state from BUYER_ACCEPTANCE_REQUESTED to FINALIZED ; it has no side effect if the Proposal.state is already FINALIZED and throws exception if the Proposal.state is not either BUYER_ACCEPTANCE_REQUESTED or FINALIZED . Accepting a proposal means the buyer understands and accepts the Proposal.terms_and_conditions proposed by the seller. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-accept ... Required Scalar Argument <name> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptProposalRequest: proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision=invidunt The last known client revision number of the proposal. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Accept"},{"location":"buyers_proposals-accept/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-accept ...","title":"Scopes"},{"location":"buyers_proposals-accept/#required-scalar-argument","text":"<name> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-accept/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptProposalRequest: proposal-revision: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . proposal-revision=invidunt The last known client revision number of the proposal.","title":"Required Request Value"},{"location":"buyers_proposals-accept/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-accept/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-accept/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-add-note/","text":"Creates a note for this proposal and sends to the seller. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-add-note ... Required Scalar Argument <proposal> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddNoteRequest: note: create-time: string creator-role: string note: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .note create-time=amet Output only. When this note was created. creator-role=duo Output only. The role who created the note. note=ipsum The text of the note. Maximum length is 1024 characters. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Add Note"},{"location":"buyers_proposals-add-note/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-add-note ...","title":"Scopes"},{"location":"buyers_proposals-add-note/#required-scalar-argument","text":"<proposal> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-add-note/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddNoteRequest: note: create-time: string creator-role: string note: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .note create-time=amet Output only. When this note was created. creator-role=duo Output only. The role who created the note. note=ipsum The text of the note. Maximum length is 1024 characters.","title":"Required Request Value"},{"location":"buyers_proposals-add-note/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-add-note/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-add-note/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-cancel-negotiation/","text":"Cancels an ongoing negotiation on a proposal. This does not cancel or end serving for the deals if the proposal has been finalized. If the proposal has not been finalized before, calling this method will set the Proposal.state to TERMINATED and increment the Proposal.proposal_revision. If the proposal has been finalized before and is under renegotiation now, calling this method will reset the Proposal.state to FINALIZED and increment the Proposal.proposal_revision. This method does not support private auction proposals whose Proposal.deal_type is 'PRIVATE_AUCTION'. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-cancel-negotiation ... Required Scalar Argument <proposal> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelNegotiationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Cancel Negotiation"},{"location":"buyers_proposals-cancel-negotiation/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-cancel-negotiation ...","title":"Scopes"},{"location":"buyers_proposals-cancel-negotiation/#required-scalar-argument","text":"<proposal> (string) Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-cancel-negotiation/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelNegotiationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_proposals-cancel-negotiation/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-cancel-negotiation/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-cancel-negotiation/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-deals-batch-update/","text":"Batch updates multiple deals in the same proposal. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-batch-update ... Required Scalar Argument <parent> (string) Required. The name of the proposal containing the deals to batch update. Format: buyers/{accountId}/proposals/{proposalId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateDealsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Deals Batch Update"},{"location":"buyers_proposals-deals-batch-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-batch-update ...","title":"Scopes"},{"location":"buyers_proposals-deals-batch-update/#required-scalar-argument","text":"<parent> (string) Required. The name of the proposal containing the deals to batch update. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-deals-batch-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateDealsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"buyers_proposals-deals-batch-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-deals-batch-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-deals-batch-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-deals-get/","text":"Gets a deal given its name. The deal is returned at its head revision. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-get ... Required Scalar Argument <name> (string) Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Deals Get"},{"location":"buyers_proposals-deals-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-get ...","title":"Scopes"},{"location":"buyers_proposals-deals-get/#required-scalar-argument","text":"<name> (string) Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-deals-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-deals-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-deals-list/","text":"Lists all deals in a proposal. To retrieve only the finalized revision deals regardless if a deal is being renegotiated, see the FinalizedDeals resource. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-list ... Required Scalar Argument <parent> (string) Required. The name of the proposal containing the deals to retrieve. Format: buyers/{accountId}/proposals/{proposalId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListDealsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Deals List"},{"location":"buyers_proposals-deals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-list ...","title":"Scopes"},{"location":"buyers_proposals-deals-list/#required-scalar-argument","text":"<parent> (string) Required. The name of the proposal containing the deals to retrieve. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-deals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-deals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from ListDealsResponse.","title":"Optional Method Properties"},{"location":"buyers_proposals-deals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-deals-patch/","text":"Updates the given deal at the buyer known revision number. If the server revision has advanced since the passed-in proposal.proposal_revision an ABORTED error message will be returned. The revision number is incremented by the server whenever the proposal or its constituent deals are updated. Note: The revision number is kept at a proposal level. The buyer of the API is expected to keep track of the revision number after the last update operation and send it in as part of the next update request. This way, if there are further changes on the server (for example, seller making new updates), then the server can detect conflicts and reject the proposed changes. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-patch ... Required Scalar Argument <name> (string) Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deal: billed-buyer: string buyer: string client: string create-time: string creative-requirements: creative-format: string creative-pre-approval-policy: string creative-safe-frame-compatibility: string max-ad-duration-ms: string programmatic-creative-source: string skippable-ad-type: string deal-type: string delivery-control: companion-delivery-type: string creative-rotation-type: string delivery-rate-type: string roadblocking-type: string description: string display-name: string eligible-seat-ids: [string] estimated-gross-spend: currency-code: string nanos: integer units: string flight-end-time: string flight-start-time: string media-planner: account-id: string name: string preferred-deal-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string private-auction-terms: floor-price: amount: currency-code: string nanos: integer units: string type: string open-auction-allowed: boolean programmatic-guaranteed-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string guaranteed-looks: string impression-cap: string minimum-daily-looks: string percent-share-of-voice: string reservation-type: string proposal-revision: string publisher-profile: string seller-time-zone: id: string version: string targeting: daypart-targeting: time-zone-type: string geo-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] inventory-type-targeting: inventory-types: [string] placement-targeting: mobile-application-targeting: first-party-targeting: excluded-app-ids: [string] targeted-app-ids: [string] uri-targeting: excluded-uris: [string] targeted-uris: [string] technology-targeting: device-capability-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] device-category-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] operating-system-targeting: operating-system-criteria: excluded-criteria-ids: [string] targeted-criteria-ids: [string] operating-system-version-criteria: excluded-criteria-ids: [string] targeted-criteria-ids: [string] user-list-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] video-targeting: excluded-position-types: [string] targeted-position-types: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billed-buyer=sed Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer; when the deal belongs to a media planner account, this field will be empty. Format : buyers/{buyerAccountId} buyer=ut Output only. Refers to a buyer in Real-time Bidding API's Buyer resource. Format: buyers/{buyerAccountId} client=gubergren Output only. Refers to a Client. Format: buyers/{buyerAccountId}/clients/{clientAccountid} create-time=rebum. Output only. The time of the deal creation. creative-requirements creative-format=est Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals. creative-pre-approval-policy=ipsum Output only. Specifies the creative pre-approval policy. creative-safe-frame-compatibility=ipsum Output only. Specifies whether the creative is safeFrame compatible. max-ad-duration-ms=est Output only. The max duration of the video creative in milliseconds. only applicable for deals with video creatives. programmatic-creative-source=gubergren Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer. skippable-ad-type=ea Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives. .. deal-type=dolor Output only. Type of deal. delivery-control companion-delivery-type=lorem Output only. Specifies roadblocking in a main companion lineitem. creative-rotation-type=eos Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available. delivery-rate-type=labore Output only. Specifies how the impression delivery will be paced. roadblocking-type=sed Output only. Specifies the roadblocking type in display creatives. .. description=duo Output only. Free text description for the deal terms. display-name=sed Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal. eligible-seat-ids=no Output only. If set, this field contains the list of DSP specific seat ids set by media planners that are eligible to transact on this deal. The seat ID is in the calling DSP's namespace. Each invocation of this argument appends the given value to the array. estimated-gross-spend currency-code=stet The three-letter currency code defined in ISO 4217. nanos=88 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=et The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. flight-end-time=sed Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals. flight-start-time=et Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds. media-planner account-id=et Output only. Account ID of the media planner. .. name=vero Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} preferred-deal-terms.fixed-price.amount currency-code=erat The three-letter currency code defined in ISO 4217. nanos=8 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=duo The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=dolore The pricing type for the deal. ...private-auction-terms.floor-price.amount currency-code=et The three-letter currency code defined in ISO 4217. nanos=73 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=amet. The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=consetetur The pricing type for the deal. .. open-auction-allowed=false Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction. ..programmatic-guaranteed-terms.fixed-price.amount currency-code=dolor The three-letter currency code defined in ISO 4217. nanos=83 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=et The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sadipscing The pricing type for the deal. .. guaranteed-looks=stet Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored. impression-cap=dolor The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached. minimum-daily-looks=duo Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks. percent-share-of-voice=vero For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100. reservation-type=vero The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD. .. proposal-revision=invidunt Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. publisher-profile=stet Immutable. Reference to the seller on the deal. Format: buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId} seller-time-zone id=vero IANA Time Zone Database time zone, e.g. \"America/New_York\". version=elitr Optional. IANA Time Zone Database version number, e.g. \"2019a\". ..targeting.daypart-targeting time-zone-type=lorem The time zone type of the day parts ..geo-targeting excluded-criteria-ids=diam A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=no A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..inventory-type-targeting inventory-types=ipsum The list of targeted inventory types for the bid request. Each invocation of this argument appends the given value to the array. ..placement-targeting.mobile-application-targeting.first-party-targeting excluded-app-ids=accusam A list of application IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-app-ids=takimata A list of application IDs to be included. Each invocation of this argument appends the given value to the array. ...uri-targeting excluded-uris=consetetur A list of URLs to be excluded. Each invocation of this argument appends the given value to the array. targeted-uris=voluptua. A list of URLs to be included. Each invocation of this argument appends the given value to the array. ...technology-targeting.device-capability-targeting excluded-criteria-ids=et A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=erat A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..device-category-targeting excluded-criteria-ids=consetetur A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=amet. A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..operating-system-targeting.operating-system-criteria excluded-criteria-ids=sed A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=takimata A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..operating-system-version-criteria excluded-criteria-ids=dolores A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=gubergren A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ....user-list-targeting excluded-criteria-ids=et A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=accusam A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..video-targeting excluded-position-types=voluptua. A list of video positions to be excluded. When this field is populated, the targeted_position_types field must be empty. Each invocation of this argument appends the given value to the array. targeted-position-types=dolore A list of video positions to be included. When this field is populated, the excluded_position_types field must be empty. Each invocation of this argument appends the given value to the array. ... update-time=dolore Output only. The time when the deal was last updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Deals Patch"},{"location":"buyers_proposals-deals-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-deals-patch ...","title":"Scopes"},{"location":"buyers_proposals-deals-patch/#required-scalar-argument","text":"<name> (string) Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-deals-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Deal: billed-buyer: string buyer: string client: string create-time: string creative-requirements: creative-format: string creative-pre-approval-policy: string creative-safe-frame-compatibility: string max-ad-duration-ms: string programmatic-creative-source: string skippable-ad-type: string deal-type: string delivery-control: companion-delivery-type: string creative-rotation-type: string delivery-rate-type: string roadblocking-type: string description: string display-name: string eligible-seat-ids: [string] estimated-gross-spend: currency-code: string nanos: integer units: string flight-end-time: string flight-start-time: string media-planner: account-id: string name: string preferred-deal-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string private-auction-terms: floor-price: amount: currency-code: string nanos: integer units: string type: string open-auction-allowed: boolean programmatic-guaranteed-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string guaranteed-looks: string impression-cap: string minimum-daily-looks: string percent-share-of-voice: string reservation-type: string proposal-revision: string publisher-profile: string seller-time-zone: id: string version: string targeting: daypart-targeting: time-zone-type: string geo-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] inventory-type-targeting: inventory-types: [string] placement-targeting: mobile-application-targeting: first-party-targeting: excluded-app-ids: [string] targeted-app-ids: [string] uri-targeting: excluded-uris: [string] targeted-uris: [string] technology-targeting: device-capability-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] device-category-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] operating-system-targeting: operating-system-criteria: excluded-criteria-ids: [string] targeted-criteria-ids: [string] operating-system-version-criteria: excluded-criteria-ids: [string] targeted-criteria-ids: [string] user-list-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] video-targeting: excluded-position-types: [string] targeted-position-types: [string] update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billed-buyer=sed Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer; when the deal belongs to a media planner account, this field will be empty. Format : buyers/{buyerAccountId} buyer=ut Output only. Refers to a buyer in Real-time Bidding API's Buyer resource. Format: buyers/{buyerAccountId} client=gubergren Output only. Refers to a Client. Format: buyers/{buyerAccountId}/clients/{clientAccountid} create-time=rebum. Output only. The time of the deal creation. creative-requirements creative-format=est Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals. creative-pre-approval-policy=ipsum Output only. Specifies the creative pre-approval policy. creative-safe-frame-compatibility=ipsum Output only. Specifies whether the creative is safeFrame compatible. max-ad-duration-ms=est Output only. The max duration of the video creative in milliseconds. only applicable for deals with video creatives. programmatic-creative-source=gubergren Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer. skippable-ad-type=ea Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives. .. deal-type=dolor Output only. Type of deal. delivery-control companion-delivery-type=lorem Output only. Specifies roadblocking in a main companion lineitem. creative-rotation-type=eos Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available. delivery-rate-type=labore Output only. Specifies how the impression delivery will be paced. roadblocking-type=sed Output only. Specifies the roadblocking type in display creatives. .. description=duo Output only. Free text description for the deal terms. display-name=sed Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal. eligible-seat-ids=no Output only. If set, this field contains the list of DSP specific seat ids set by media planners that are eligible to transact on this deal. The seat ID is in the calling DSP's namespace. Each invocation of this argument appends the given value to the array. estimated-gross-spend currency-code=stet The three-letter currency code defined in ISO 4217. nanos=88 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=et The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. flight-end-time=sed Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals. flight-start-time=et Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds. media-planner account-id=et Output only. Account ID of the media planner. .. name=vero Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} preferred-deal-terms.fixed-price.amount currency-code=erat The three-letter currency code defined in ISO 4217. nanos=8 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=duo The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=dolore The pricing type for the deal. ...private-auction-terms.floor-price.amount currency-code=et The three-letter currency code defined in ISO 4217. nanos=73 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=amet. The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=consetetur The pricing type for the deal. .. open-auction-allowed=false Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction. ..programmatic-guaranteed-terms.fixed-price.amount currency-code=dolor The three-letter currency code defined in ISO 4217. nanos=83 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=et The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sadipscing The pricing type for the deal. .. guaranteed-looks=stet Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored. impression-cap=dolor The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached. minimum-daily-looks=duo Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks. percent-share-of-voice=vero For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100. reservation-type=vero The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD. .. proposal-revision=invidunt Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. publisher-profile=stet Immutable. Reference to the seller on the deal. Format: buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId} seller-time-zone id=vero IANA Time Zone Database time zone, e.g. \"America/New_York\". version=elitr Optional. IANA Time Zone Database version number, e.g. \"2019a\". ..targeting.daypart-targeting time-zone-type=lorem The time zone type of the day parts ..geo-targeting excluded-criteria-ids=diam A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=no A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..inventory-type-targeting inventory-types=ipsum The list of targeted inventory types for the bid request. Each invocation of this argument appends the given value to the array. ..placement-targeting.mobile-application-targeting.first-party-targeting excluded-app-ids=accusam A list of application IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-app-ids=takimata A list of application IDs to be included. Each invocation of this argument appends the given value to the array. ...uri-targeting excluded-uris=consetetur A list of URLs to be excluded. Each invocation of this argument appends the given value to the array. targeted-uris=voluptua. A list of URLs to be included. Each invocation of this argument appends the given value to the array. ...technology-targeting.device-capability-targeting excluded-criteria-ids=et A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=erat A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..device-category-targeting excluded-criteria-ids=consetetur A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=amet. A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..operating-system-targeting.operating-system-criteria excluded-criteria-ids=sed A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=takimata A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..operating-system-version-criteria excluded-criteria-ids=dolores A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=gubergren A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ....user-list-targeting excluded-criteria-ids=et A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=accusam A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. ..video-targeting excluded-position-types=voluptua. A list of video positions to be excluded. When this field is populated, the targeted_position_types field must be empty. Each invocation of this argument appends the given value to the array. targeted-position-types=dolore A list of video positions to be included. When this field is populated, the excluded_position_types field must be empty. Each invocation of this argument appends the given value to the array. ... update-time=dolore Output only. The time when the deal was last updated.","title":"Required Request Value"},{"location":"buyers_proposals-deals-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-deals-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-deals-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.","title":"Optional Method Properties"},{"location":"buyers_proposals-deals-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-get/","text":"Gets a proposal using its resource name. The proposal is returned at the latest revision. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-get ... Required Scalar Argument <name> (string) Required. Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Get"},{"location":"buyers_proposals-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-get ...","title":"Scopes"},{"location":"buyers_proposals-get/#required-scalar-argument","text":"<name> (string) Required. Name of the proposal. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-list/","text":"Lists proposals. A filter expression using Cloud API list filtering syntax may be specified to filter the results. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-list ... Required Scalar Argument <parent> (string) Required. Parent that owns the collection of proposals Format: buyers/{accountId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * displayName * dealType * updateTime * state -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will put a size of 500. -p page-token=string The page token as returned from ListProposalsResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals List"},{"location":"buyers_proposals-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-list ...","title":"Scopes"},{"location":"buyers_proposals-list/#required-scalar-argument","text":"<parent> (string) Required. Parent that owns the collection of proposals Format: buyers/{accountId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the Cloud API list filtering syntax Supported columns for filtering are: * displayName * dealType * updateTime * state -p page-size=integer Requested page size. The server may return fewer results than requested. If unspecified, the server will put a size of 500. -p page-token=string The page token as returned from ListProposalsResponse.","title":"Optional Method Properties"},{"location":"buyers_proposals-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-patch/","text":"Updates the proposal at the given revision number. If the revision number in the request is behind the latest one kept in the server, an error message will be returned. See FieldMask for how to use FieldMask. Only fields specified in the UpdateProposalRequest.update_mask will be updated; Fields noted as 'Immutable' or 'Output only' yet specified in the UpdateProposalRequest.update_mask will be ignored and left unchanged. Updating a private auction proposal is not allowed and will result in an error. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-patch ... Required Scalar Argument <name> (string) Immutable. The name of the proposal serving as a unique identifier. Format: buyers/{accountId}/proposals/{proposalId} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: string buyer: string buyer-private-data: reference-id: string client: string deal-type: string display-name: string is-renegotiating: boolean last-updater-or-commentor-role: string name: string originator-role: string pausing-consented: boolean proposal-revision: string publisher-profile: string state: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billed-buyer=dolore Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : buyers/{buyerAccountId} buyer=voluptua. Output only. Refers to a buyer in The Realtime-bidding API. Format: buyers/{buyerAccountId} buyer-private-data reference-id=amet. A buyer specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. client=ea Output only. Refers to a Client. Format: buyers/{buyerAccountId}/clients/{clientAccountid} deal-type=sadipscing Output only. Type of deal the proposal contains. display-name=lorem Output only. The descriptive name for the proposal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the proposal. is-renegotiating=true Output only. True if the proposal was previously finalized and is now being renegotiated. last-updater-or-commentor-role=no Output only. The role of the last user that either updated the proposal or left a comment. name=est Immutable. The name of the proposal serving as a unique identifier. Format: buyers/{accountId}/proposals/{proposalId} originator-role=at Output only. Indicates whether the buyer/seller created the proposal. pausing-consented=true Whether pausing is allowed for the proposal. This is a negotiable term between buyers and publishers. proposal-revision=sit Output only. The revision number for the proposal. Each update to the proposal or deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. publisher-profile=et Immutable. Reference to the seller on the proposal. Format: buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId} Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error. state=tempor Output only. Indicates the state of the proposal. terms-and-conditions=aliquyam Output only. The terms and conditions associated with this proposal. Accepting a proposal implies acceptance of this field. This is created by the seller, the buyer can only view it. update-time=ipsum Output only. The time when the proposal was last revised. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Patch"},{"location":"buyers_proposals-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-patch ...","title":"Scopes"},{"location":"buyers_proposals-patch/#required-scalar-argument","text":"<name> (string) Immutable. The name of the proposal serving as a unique identifier. Format: buyers/{accountId}/proposals/{proposalId}","title":"Required Scalar Argument"},{"location":"buyers_proposals-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Proposal: billed-buyer: string buyer: string buyer-private-data: reference-id: string client: string deal-type: string display-name: string is-renegotiating: boolean last-updater-or-commentor-role: string name: string originator-role: string pausing-consented: boolean proposal-revision: string publisher-profile: string state: string terms-and-conditions: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . billed-buyer=dolore Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : buyers/{buyerAccountId} buyer=voluptua. Output only. Refers to a buyer in The Realtime-bidding API. Format: buyers/{buyerAccountId} buyer-private-data reference-id=amet. A buyer specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units). .. client=ea Output only. Refers to a Client. Format: buyers/{buyerAccountId}/clients/{clientAccountid} deal-type=sadipscing Output only. Type of deal the proposal contains. display-name=lorem Output only. The descriptive name for the proposal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the proposal. is-renegotiating=true Output only. True if the proposal was previously finalized and is now being renegotiated. last-updater-or-commentor-role=no Output only. The role of the last user that either updated the proposal or left a comment. name=est Immutable. The name of the proposal serving as a unique identifier. Format: buyers/{accountId}/proposals/{proposalId} originator-role=at Output only. Indicates whether the buyer/seller created the proposal. pausing-consented=true Whether pausing is allowed for the proposal. This is a negotiable term between buyers and publishers. proposal-revision=sit Output only. The revision number for the proposal. Each update to the proposal or deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made. publisher-profile=et Immutable. Reference to the seller on the proposal. Format: buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId} Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error. state=tempor Output only. Indicates the state of the proposal. terms-and-conditions=aliquyam Output only. The terms and conditions associated with this proposal. Accepting a proposal implies acceptance of this field. This is created by the seller, the buyer can only view it. update-time=ipsum Output only. The time when the proposal was last revised.","title":"Required Request Value"},{"location":"buyers_proposals-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.","title":"Optional Method Properties"},{"location":"buyers_proposals-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_proposals-send-rfp/","text":"Sends a request for proposal (RFP) to a publisher to initiate the negotiation regarding certain inventory. In the RFP, buyers can specify the deal type, deal terms, start and end dates, targeting, and a message to the publisher. Once the RFP is sent, a proposal in SELLER_REVIEW_REQUESTED state will be created and returned in the response. The publisher may review your request and respond with detailed deals in the proposal. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-send-rfp ... Required Scalar Argument <buyer> (string) Required. The current buyer who is sending the RFP in the format: buyers/{accountId} . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SendRfpRequest: client: string display-name: string estimated-gross-spend: currency-code: string nanos: integer units: string flight-end-time: string flight-start-time: string geo-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] note: string preferred-deal-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string programmatic-guaranteed-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string guaranteed-looks: string impression-cap: string minimum-daily-looks: string percent-share-of-voice: string reservation-type: string publisher-profile: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client=et If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: buyers/{accountId}/clients/{clientAccountid} . display-name=sanctus Required. The display name of the proposal being created by this RFP. estimated-gross-spend currency-code=lorem The three-letter currency code defined in ISO 4217. nanos=94 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=sed The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. flight-end-time=diam Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second. flight-start-time=dolores Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second. geo-targeting excluded-criteria-ids=dolores A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=et A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. .. note=sed A message that is sent to the publisher. Maximum length is 1024 characters. preferred-deal-terms.fixed-price.amount currency-code=no The three-letter currency code defined in ISO 4217. nanos=16 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=elitr The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sed The pricing type for the deal. ...programmatic-guaranteed-terms.fixed-price.amount currency-code=no The three-letter currency code defined in ISO 4217. nanos=10 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=at The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sadipscing The pricing type for the deal. .. guaranteed-looks=aliquyam Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored. impression-cap=dolores The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached. minimum-daily-looks=sadipscing Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks. percent-share-of-voice=erat For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100. reservation-type=aliquyam The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD. .. publisher-profile=amet Required. The profile of the publisher who will receive this RFP in the format: buyers/{accountId}/publisherProfiles/{publisherProfileId} . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Proposals Send Rfp"},{"location":"buyers_proposals-send-rfp/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers proposals-send-rfp ...","title":"Scopes"},{"location":"buyers_proposals-send-rfp/#required-scalar-argument","text":"<buyer> (string) Required. The current buyer who is sending the RFP in the format: buyers/{accountId} .","title":"Required Scalar Argument"},{"location":"buyers_proposals-send-rfp/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SendRfpRequest: client: string display-name: string estimated-gross-spend: currency-code: string nanos: integer units: string flight-end-time: string flight-start-time: string geo-targeting: excluded-criteria-ids: [string] targeted-criteria-ids: [string] note: string preferred-deal-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string programmatic-guaranteed-terms: fixed-price: amount: currency-code: string nanos: integer units: string type: string guaranteed-looks: string impression-cap: string minimum-daily-looks: string percent-share-of-voice: string reservation-type: string publisher-profile: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client=et If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: buyers/{accountId}/clients/{clientAccountid} . display-name=sanctus Required. The display name of the proposal being created by this RFP. estimated-gross-spend currency-code=lorem The three-letter currency code defined in ISO 4217. nanos=94 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=sed The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. flight-end-time=diam Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second. flight-start-time=dolores Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second. geo-targeting excluded-criteria-ids=dolores A list of numeric IDs to be excluded. Each invocation of this argument appends the given value to the array. targeted-criteria-ids=et A list of numeric IDs to be included. Each invocation of this argument appends the given value to the array. .. note=sed A message that is sent to the publisher. Maximum length is 1024 characters. preferred-deal-terms.fixed-price.amount currency-code=no The three-letter currency code defined in ISO 4217. nanos=16 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=elitr The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sed The pricing type for the deal. ...programmatic-guaranteed-terms.fixed-price.amount currency-code=no The three-letter currency code defined in ISO 4217. nanos=10 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=at The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. type=sadipscing The pricing type for the deal. .. guaranteed-looks=aliquyam Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored. impression-cap=dolores The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached. minimum-daily-looks=sadipscing Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks. percent-share-of-voice=erat For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100. reservation-type=aliquyam The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD. .. publisher-profile=amet Required. The profile of the publisher who will receive this RFP in the format: buyers/{accountId}/publisherProfiles/{publisherProfileId} .","title":"Required Request Value"},{"location":"buyers_proposals-send-rfp/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"buyers_proposals-send-rfp/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_proposals-send-rfp/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_publisher-profiles-get/","text":"Gets the requested publisher profile by name. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers publisher-profiles-get ... Required Scalar Argument <name> (string) Required. Name of the publisher profile. Format: buyers/{buyerId}/publisherProfiles/{publisherProfileId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Profiles Get"},{"location":"buyers_publisher-profiles-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers publisher-profiles-get ...","title":"Scopes"},{"location":"buyers_publisher-profiles-get/#required-scalar-argument","text":"<name> (string) Required. Name of the publisher profile. Format: buyers/{buyerId}/publisherProfiles/{publisherProfileId}","title":"Required Scalar Argument"},{"location":"buyers_publisher-profiles-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_publisher-profiles-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"buyers_publisher-profiles-list/","text":"Lists publisher profiles. The returned publisher profiles aren't in any defined order. The order of the results might change. A new publisher profile can appear in any place in the list of returned results. Scopes You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers publisher-profiles-list ... Required Scalar Argument <parent> (string) Required. Parent that owns the collection of publisher profiles Format: buyers/{buyerId} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the [Cloud API list filtering] (https://developers.google.com/authorized-buyers/apis/guides/list-filters) syntax. -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from a previous ListPublisherProfilesResponse. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Publisher Profiles List"},{"location":"buyers_publisher-profiles-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/authorized-buyers-marketplace scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/authorized-buyers-marketplace . You can set the scope for this method like this: authorizedbuyersmarketplace1 --scope <scope> buyers publisher-profiles-list ...","title":"Scopes"},{"location":"buyers_publisher-profiles-list/#required-scalar-argument","text":"<parent> (string) Required. Parent that owns the collection of publisher profiles Format: buyers/{buyerId}","title":"Required Scalar Argument"},{"location":"buyers_publisher-profiles-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"buyers_publisher-profiles-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string Optional query string using the [Cloud API list filtering] (https://developers.google.com/authorized-buyers/apis/guides/list-filters) syntax. -p page-size=integer Requested page size. The server may return fewer results than requested. If requested more than 500, the server will return 500 results per page. If unspecified, the server will pick a default page size of 100. -p page-token=string The page token as returned from a previous ListPublisherProfilesResponse.","title":"Optional Method Properties"},{"location":"buyers_publisher-profiles-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}