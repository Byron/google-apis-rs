{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The content2-sandbox command-line interface (CLI) allows to use most features of the Google Shopping Content service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Shopping Content API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-content2_sandbox-cli Find the source code on github . Usage This documentation was generated from the Shopping Content API at revision 20181009 . The CLI is at version 5.0.4 . content2-sandbox [options] orderinvoices createchargeinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createrefundinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderpayments notifyauthapproved <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifyauthdeclined <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifycharge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifyrefund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderreturns get <merchant-id> <return-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] orders acknowledge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] advancetestorder <merchant-id> <order-id> [-p <v>]... [-o <out>] cancel <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] cancellineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] canceltestorderbycustomer <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestorder <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestreturn <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <order-id> [-p <v>]... [-o <out>] getbymerchantorderid <merchant-id> <merchant-order-id> [-p <v>]... [-o <out>] gettestordertemplate <merchant-id> <template-name> [-p <v>]... [-o <out>] instorerefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] refund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] rejectreturnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnrefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] setlineitemmetadata <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] shiplineitems <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatelineitemshippingdetails <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatemerchantorderid <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updateshipment <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] content2-sandbox --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with content2-sandbox- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/content2-sandbox-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/content2-sandbox-secret.json , assuming that the required content API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. content2-sandbox --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-content2_sandbox-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Shopping Content API at revision 20181009 . The CLI is at version 5.0.4 . content2-sandbox [options] orderinvoices createchargeinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createrefundinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderpayments notifyauthapproved <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifyauthdeclined <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifycharge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] notifyrefund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderreturns get <merchant-id> <return-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] orders acknowledge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] advancetestorder <merchant-id> <order-id> [-p <v>]... [-o <out>] cancel <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] cancellineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] canceltestorderbycustomer <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestorder <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestreturn <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <order-id> [-p <v>]... [-o <out>] getbymerchantorderid <merchant-id> <merchant-order-id> [-p <v>]... [-o <out>] gettestordertemplate <merchant-id> <template-name> [-p <v>]... [-o <out>] instorerefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] refund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] rejectreturnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnrefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] setlineitemmetadata <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] shiplineitems <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatelineitemshippingdetails <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatemerchantorderid <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updateshipment <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] content2-sandbox --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with content2-sandbox- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/content2-sandbox-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/content2-sandbox-secret.json , assuming that the required content API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. content2-sandbox --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"orderinvoices_createchargeinvoice/","text":"Creates a charge invoice for a shipment group, and triggers a charge capture for non-facilitated payment orders. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderinvoices createchargeinvoice ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateChargeInvoiceRequest: invoice-id: string invoice-summary: customer-balance: pretax: currency: string value: string tax: currency: string value: string google-balance: pretax: currency: string value: string tax: currency: string value: string merchant-balance: pretax: currency: string value: string tax: currency: string value: string product-total: pretax: currency: string value: string tax: currency: string value: string operation-id: string shipment-group-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=et [required] The ID of the invoice. invoice-summary.customer-balance.pretax currency=magna The currency of the price. value=no The price represented as a number. ..tax currency=ipsum The currency of the price. value=voluptua. The price represented as a number. ...google-balance.pretax currency=at The currency of the price. value=sanctus The price represented as a number. ..tax currency=sed The currency of the price. value=amet. The price represented as a number. ...merchant-balance.pretax currency=takimata The currency of the price. value=amet. The price represented as a number. ..tax currency=duo The currency of the price. value=ipsum The price represented as a number. ...product-total.pretax currency=gubergren The currency of the price. value=lorem The price represented as a number. ..tax currency=gubergren The currency of the price. value=eos The price represented as a number. .... operation-id=dolor [required] The ID of the operation, unique across all operations for a given order. shipment-group-id=ea [required] ID of the shipment group. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Createchargeinvoice"},{"location":"orderinvoices_createchargeinvoice/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderinvoices createchargeinvoice ...","title":"Scopes"},{"location":"orderinvoices_createchargeinvoice/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orderinvoices_createchargeinvoice/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateChargeInvoiceRequest: invoice-id: string invoice-summary: customer-balance: pretax: currency: string value: string tax: currency: string value: string google-balance: pretax: currency: string value: string tax: currency: string value: string merchant-balance: pretax: currency: string value: string tax: currency: string value: string product-total: pretax: currency: string value: string tax: currency: string value: string operation-id: string shipment-group-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=et [required] The ID of the invoice. invoice-summary.customer-balance.pretax currency=magna The currency of the price. value=no The price represented as a number. ..tax currency=ipsum The currency of the price. value=voluptua. The price represented as a number. ...google-balance.pretax currency=at The currency of the price. value=sanctus The price represented as a number. ..tax currency=sed The currency of the price. value=amet. The price represented as a number. ...merchant-balance.pretax currency=takimata The currency of the price. value=amet. The price represented as a number. ..tax currency=duo The currency of the price. value=ipsum The price represented as a number. ...product-total.pretax currency=gubergren The currency of the price. value=lorem The price represented as a number. ..tax currency=gubergren The currency of the price. value=eos The price represented as a number. .... operation-id=dolor [required] The ID of the operation, unique across all operations for a given order. shipment-group-id=ea [required] ID of the shipment group.","title":"Required Request Value"},{"location":"orderinvoices_createchargeinvoice/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderinvoices_createchargeinvoice/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderinvoices_createchargeinvoice/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderinvoices_createrefundinvoice/","text":"Creates a refund invoice for one or more shipment groups, and triggers a refund for non-facilitated payment orders. This can only be used for line items that have previously been charged using createChargeInvoice. All amounts (except for the summary) are incremental with respect to the previous invoice. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderinvoices createrefundinvoice ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateRefundInvoiceRequest: invoice-id: string operation-id: string refund-only-option: description: string reason: string return-option: description: string reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=ipsum [required] The ID of the invoice. operation-id=invidunt [required] The ID of the operation, unique across all operations for a given order. refund-only-option description=amet Optional description of the refund reason. reason=duo [required] Reason for the refund. ..return-option description=ipsum Optional description of the return reason. reason=sed [required] Reason for the return. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Createrefundinvoice"},{"location":"orderinvoices_createrefundinvoice/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderinvoices createrefundinvoice ...","title":"Scopes"},{"location":"orderinvoices_createrefundinvoice/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orderinvoices_createrefundinvoice/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateRefundInvoiceRequest: invoice-id: string operation-id: string refund-only-option: description: string reason: string return-option: description: string reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=ipsum [required] The ID of the invoice. operation-id=invidunt [required] The ID of the operation, unique across all operations for a given order. refund-only-option description=amet Optional description of the refund reason. reason=duo [required] Reason for the refund. ..return-option description=ipsum Optional description of the return reason. reason=sed [required] Reason for the return.","title":"Required Request Value"},{"location":"orderinvoices_createrefundinvoice/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderinvoices_createrefundinvoice/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderinvoices_createrefundinvoice/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderpayments_notifyauthapproved/","text":"Notify about successfully authorizing user's payment method for a given amount. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyauthapproved ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for for which payment authorization is happening. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyAuthApprovedRequest: auth-amount-pretax: currency: string value: string auth-amount-tax: currency: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .auth-amount-pretax currency=ut The currency of the price. value=gubergren The price represented as a number. ..auth-amount-tax currency=rebum. The currency of the price. value=est The price represented as a number. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Notifyauthapproved"},{"location":"orderpayments_notifyauthapproved/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyauthapproved ...","title":"Scopes"},{"location":"orderpayments_notifyauthapproved/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for for which payment authorization is happening.","title":"Required Scalar Arguments"},{"location":"orderpayments_notifyauthapproved/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyAuthApprovedRequest: auth-amount-pretax: currency: string value: string auth-amount-tax: currency: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .auth-amount-pretax currency=ut The currency of the price. value=gubergren The price represented as a number. ..auth-amount-tax currency=rebum. The currency of the price. value=est The price represented as a number.","title":"Required Request Value"},{"location":"orderpayments_notifyauthapproved/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderpayments_notifyauthapproved/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderpayments_notifyauthapproved/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderpayments_notifyauthdeclined/","text":"Notify about failure to authorize user's payment method. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyauthdeclined ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which payment authorization was declined. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyAuthDeclinedRequest: decline-reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . decline-reason=ipsum Reason why payment authorization was declined. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Notifyauthdeclined"},{"location":"orderpayments_notifyauthdeclined/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyauthdeclined ...","title":"Scopes"},{"location":"orderpayments_notifyauthdeclined/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which payment authorization was declined.","title":"Required Scalar Arguments"},{"location":"orderpayments_notifyauthdeclined/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyAuthDeclinedRequest: decline-reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . decline-reason=ipsum Reason why payment authorization was declined.","title":"Required Request Value"},{"location":"orderpayments_notifyauthdeclined/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderpayments_notifyauthdeclined/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderpayments_notifyauthdeclined/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderpayments_notifycharge/","text":"Notify about charge on user's selected payments method. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifycharge ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which charge is happening. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyChargeRequest: charge-state: string invoice-id: string invoice-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . charge-state=ipsum Whether charge was successful. invoice-id=est Deprecated. Please use invoiceIds instead. invoice-ids=gubergren Invoice IDs from the orderinvoices service that correspond to the charge. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Notifycharge"},{"location":"orderpayments_notifycharge/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifycharge ...","title":"Scopes"},{"location":"orderpayments_notifycharge/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which charge is happening.","title":"Required Scalar Arguments"},{"location":"orderpayments_notifycharge/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyChargeRequest: charge-state: string invoice-id: string invoice-ids: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . charge-state=ipsum Whether charge was successful. invoice-id=est Deprecated. Please use invoiceIds instead. invoice-ids=gubergren Invoice IDs from the orderinvoices service that correspond to the charge. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"orderpayments_notifycharge/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderpayments_notifycharge/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderpayments_notifycharge/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderpayments_notifyrefund/","text":"Notify about refund on user's selected payments method. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyrefund ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which charge is happening. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyRefundRequest: invoice-id: string invoice-ids: [string] refund-state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=ea Deprecated. Please use invoiceIds instead. invoice-ids=dolor Invoice IDs from the orderinvoices service that correspond to the refund. Each invocation of this argument appends the given value to the array. refund-state=lorem Whether refund was successful. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Notifyrefund"},{"location":"orderpayments_notifyrefund/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderpayments notifyrefund ...","title":"Scopes"},{"location":"orderpayments_notifyrefund/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order for which charge is happening.","title":"Required Scalar Arguments"},{"location":"orderpayments_notifyrefund/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderpaymentsNotifyRefundRequest: invoice-id: string invoice-ids: [string] refund-state: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=ea Deprecated. Please use invoiceIds instead. invoice-ids=dolor Invoice IDs from the orderinvoices service that correspond to the refund. Each invocation of this argument appends the given value to the array. refund-state=lorem Whether refund was successful.","title":"Required Request Value"},{"location":"orderpayments_notifyrefund/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderpayments_notifyrefund/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderpayments_notifyrefund/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderreturns_get/","text":"Retrieves an order return from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderreturns get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <return-id> (string) Merchant order return ID generated by Google. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"orderreturns_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderreturns get ...","title":"Scopes"},{"location":"orderreturns_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <return-id> (string) Merchant order return ID generated by Google.","title":"Required Scalar Arguments"},{"location":"orderreturns_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreturns_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orderreturns_list/","text":"Lists order returns in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderreturns list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p created-end-date=string Obtains order returns created before this date (inclusively), in ISO 8601 format. -p created-start-date=string Obtains order returns created after this date (inclusively), in ISO 8601 format. -p max-results=integer The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page. -p order-by=string Return the results in the specified order. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"orderreturns_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orderreturns list ...","title":"Scopes"},{"location":"orderreturns_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orderreturns_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreturns_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p created-end-date=string Obtains order returns created before this date (inclusively), in ISO 8601 format. -p created-start-date=string Obtains order returns created after this date (inclusively), in ISO 8601 format. -p max-results=integer The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page. -p order-by=string Return the results in the specified order. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"orderreturns_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_acknowledge/","text":"Marks an order as acknowledged. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders acknowledge ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersAcknowledgeRequest: operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=eos The ID of the operation. Unique across all operations for a given order. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Acknowledge"},{"location":"orders_acknowledge/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders acknowledge ...","title":"Scopes"},{"location":"orders_acknowledge/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_acknowledge/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersAcknowledgeRequest: operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=eos The ID of the operation. Unique across all operations for a given order.","title":"Required Request Value"},{"location":"orders_acknowledge/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_acknowledge/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_acknowledge/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_advancetestorder/","text":"Sandbox only. Moves a test order from state \"inProgress\" to state \"pendingShipment\". Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders advancetestorder ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to modify. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Advancetestorder"},{"location":"orders_advancetestorder/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders advancetestorder ...","title":"Scopes"},{"location":"orders_advancetestorder/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to modify.","title":"Required Scalar Arguments"},{"location":"orders_advancetestorder/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_advancetestorder/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_cancel/","text":"Cancels all line items in an order, making a full refund. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders cancel ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to cancel. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelRequest: operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=labore The ID of the operation. Unique across all operations for a given order. reason=sed The reason for the cancellation. reason-text=duo The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Cancel"},{"location":"orders_cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders cancel ...","title":"Scopes"},{"location":"orders_cancel/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to cancel.","title":"Required Scalar Arguments"},{"location":"orders_cancel/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelRequest: operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=labore The ID of the operation. Unique across all operations for a given order. reason=sed The reason for the cancellation. reason-text=duo The explanation of the reason.","title":"Required Request Value"},{"location":"orders_cancel/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_cancel/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_cancellineitem/","text":"Cancels a line item, making a full refund. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders cancellineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelLineItemRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=sed The currency of the price. value=no The price represented as a number. ..amount-pretax currency=stet The currency of the price. value=kasd The price represented as a number. ..amount-tax currency=et The currency of the price. value=sed The price represented as a number. .. line-item-id=et The ID of the line item to cancel. Either lineItemId or productId is required. operation-id=et The ID of the operation. Unique across all operations for a given order. product-id=vero The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=70 The quantity to cancel. reason=sed The reason for the cancellation. reason-text=duo The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Cancellineitem"},{"location":"orders_cancellineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders cancellineitem ...","title":"Scopes"},{"location":"orders_cancellineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_cancellineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelLineItemRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=sed The currency of the price. value=no The price represented as a number. ..amount-pretax currency=stet The currency of the price. value=kasd The price represented as a number. ..amount-tax currency=et The currency of the price. value=sed The price represented as a number. .. line-item-id=et The ID of the line item to cancel. Either lineItemId or productId is required. operation-id=et The ID of the operation. Unique across all operations for a given order. product-id=vero The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=70 The quantity to cancel. reason=sed The reason for the cancellation. reason-text=duo The explanation of the reason.","title":"Required Request Value"},{"location":"orders_cancellineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_cancellineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_cancellineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_canceltestorderbycustomer/","text":"Sandbox only. Cancels a test order for customer-initiated cancellation. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders canceltestorderbycustomer ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to cancel. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelTestOrderByCustomerRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=dolore The reason for the cancellation. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Canceltestorderbycustomer"},{"location":"orders_canceltestorderbycustomer/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders canceltestorderbycustomer ...","title":"Scopes"},{"location":"orders_canceltestorderbycustomer/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to cancel.","title":"Required Scalar Arguments"},{"location":"orders_canceltestorderbycustomer/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelTestOrderByCustomerRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=dolore The reason for the cancellation.","title":"Required Request Value"},{"location":"orders_canceltestorderbycustomer/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_canceltestorderbycustomer/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_canceltestorderbycustomer/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_createtestorder/","text":"Sandbox only. Creates a test order. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders createtestorder ... Required Scalar Argument <merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestOrderRequest: country: string template-name: string test-order: customer: email: string explicit-marketing-preference: boolean full-name: string marketing-rights-info: explicit-marketing-preference: string last-updated-timestamp: string enable-orderinvoices: boolean kind: string notification-mode: string payment-method: expiration-month: integer expiration-year: integer last-four-digits: string predefined-billing-address: string type: string predefined-delivery-address: string shipping-cost: currency: string value: string shipping-cost-tax: currency: string value: string shipping-option: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . country=et The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name, or the addresses of orders created via test_order. Acceptable values are: - \"US\" - \"FR\" Defaults to US. * template-name=voluptua. - The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template. * test-order.customer email=amet. - Deprecated. * explicit-marketing-preference=false - Deprecated. Please use marketingRightsInfo instead. * full-name=diam - Full name of the customer. * marketing-rights-info explicit-marketing-preference=dolor - Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. * last-updated-timestamp=et - Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet. ... enable-orderinvoices=false Whether the orderinvoices service should support this order. kind=stet Identifies what kind of resource this is. Value: the fixed string \"content#testOrder\". notification-mode=dolor Determines if test order must be pulled by merchant or pushed to merchant via push integration. payment-method expiration-month=81 The card expiration month (January = 1, February = 2 etc.). expiration-year=25 The card expiration year (4-digit, e.g. 2015). last-four-digits=vero The last four digits of the card number. predefined-billing-address=invidunt The billing address. type=stet The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder. .. predefined-delivery-address=vero Identifier of one of the predefined delivery addresses for the delivery. shipping-cost currency=elitr The currency of the price. value=lorem The price represented as a number. ..shipping-cost-tax currency=diam The currency of the price. value=no The price represented as a number. .. shipping-option=ipsum The requested shipping option. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Createtestorder"},{"location":"orders_createtestorder/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders createtestorder ...","title":"Scopes"},{"location":"orders_createtestorder/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orders_createtestorder/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestOrderRequest: country: string template-name: string test-order: customer: email: string explicit-marketing-preference: boolean full-name: string marketing-rights-info: explicit-marketing-preference: string last-updated-timestamp: string enable-orderinvoices: boolean kind: string notification-mode: string payment-method: expiration-month: integer expiration-year: integer last-four-digits: string predefined-billing-address: string type: string predefined-delivery-address: string shipping-cost: currency: string value: string shipping-cost-tax: currency: string value: string shipping-option: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . country=et The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name, or the addresses of orders created via test_order. Acceptable values are: - \"US\" - \"FR\" Defaults to US. * template-name=voluptua. - The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template. * test-order.customer email=amet. - Deprecated. * explicit-marketing-preference=false - Deprecated. Please use marketingRightsInfo instead. * full-name=diam - Full name of the customer. * marketing-rights-info explicit-marketing-preference=dolor - Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. * last-updated-timestamp=et - Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet. ... enable-orderinvoices=false Whether the orderinvoices service should support this order. kind=stet Identifies what kind of resource this is. Value: the fixed string \"content#testOrder\". notification-mode=dolor Determines if test order must be pulled by merchant or pushed to merchant via push integration. payment-method expiration-month=81 The card expiration month (January = 1, February = 2 etc.). expiration-year=25 The card expiration year (4-digit, e.g. 2015). last-four-digits=vero The last four digits of the card number. predefined-billing-address=invidunt The billing address. type=stet The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder. .. predefined-delivery-address=vero Identifier of one of the predefined delivery addresses for the delivery. shipping-cost currency=elitr The currency of the price. value=lorem The price represented as a number. ..shipping-cost-tax currency=diam The currency of the price. value=no The price represented as a number. .. shipping-option=ipsum The requested shipping option.","title":"Required Request Value"},{"location":"orders_createtestorder/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_createtestorder/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_createtestorder/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_createtestreturn/","text":"Sandbox only. Creates a test return. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders createtestreturn ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestReturnRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Createtestreturn"},{"location":"orders_createtestreturn/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders createtestreturn ...","title":"Scopes"},{"location":"orders_createtestreturn/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_createtestreturn/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestReturnRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"orders_createtestreturn/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_createtestreturn/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_createtestreturn/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_custombatch/","text":"Retrieves or modifies multiple orders in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Custombatch"},{"location":"orders_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders custombatch ...","title":"Scopes"},{"location":"orders_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"orders_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_get/","text":"Retrieves an order from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"orders_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders get ...","title":"Scopes"},{"location":"orders_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_getbymerchantorderid/","text":"Retrieves an order using merchant order id. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders getbymerchantorderid ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <merchant-order-id> (string) The merchant order id to be looked for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Getbymerchantorderid"},{"location":"orders_getbymerchantorderid/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders getbymerchantorderid ...","title":"Scopes"},{"location":"orders_getbymerchantorderid/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <merchant-order-id> (string) The merchant order id to be looked for.","title":"Required Scalar Arguments"},{"location":"orders_getbymerchantorderid/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_getbymerchantorderid/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_gettestordertemplate/","text":"Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders gettestordertemplate ... Required Scalar Arguments <merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. <template-name> (string) The name of the template to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country of the template to retrieve. Defaults to US. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Gettestordertemplate"},{"location":"orders_gettestordertemplate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders gettestordertemplate ...","title":"Scopes"},{"location":"orders_gettestordertemplate/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. <template-name> (string) The name of the template to retrieve.","title":"Required Scalar Arguments"},{"location":"orders_gettestordertemplate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_gettestordertemplate/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country of the template to retrieve. Defaults to US.","title":"Optional Method Properties"},{"location":"orders_gettestordertemplate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_instorerefundlineitem/","text":"Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders instorerefundlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersInStoreRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=accusam The currency of the price. value=takimata The price represented as a number. ..amount-tax currency=consetetur The currency of the price. value=voluptua. The price represented as a number. .. line-item-id=et The ID of the line item to return. Either lineItemId or productId is required. operation-id=erat The ID of the operation. Unique across all operations for a given order. product-id=consetetur The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=99 The quantity to return and refund. reason=sed The reason for the return. reason-text=takimata The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Instorerefundlineitem"},{"location":"orders_instorerefundlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders instorerefundlineitem ...","title":"Scopes"},{"location":"orders_instorerefundlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_instorerefundlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersInStoreRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=accusam The currency of the price. value=takimata The price represented as a number. ..amount-tax currency=consetetur The currency of the price. value=voluptua. The price represented as a number. .. line-item-id=et The ID of the line item to return. Either lineItemId or productId is required. operation-id=erat The ID of the operation. Unique across all operations for a given order. product-id=consetetur The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=99 The quantity to return and refund. reason=sed The reason for the return. reason-text=takimata The explanation of the reason.","title":"Required Request Value"},{"location":"orders_instorerefundlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_instorerefundlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_instorerefundlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_list/","text":"Lists the orders in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p acknowledged=boolean Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned. -p max-results=integer The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page. Known issue: All List calls will return all Orders without limit regardless of the value of this field. -p order-by=string The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. \"placedDate desc\" stands for listing orders by placement date, from oldest to most recent. \"placedDate asc\" stands for listing orders by placement date, from most recent to oldest. In future releases we'll support other sorting criteria. -p page-token=string The token returned by the previous request. -p placed-date-end=string Obtains orders placed before this date (exclusively), in ISO 8601 format. -p placed-date-start=string Obtains orders placed after this date (inclusively), in ISO 8601 format. -p statuses=string Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"orders_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders list ...","title":"Scopes"},{"location":"orders_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orders_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p acknowledged=boolean Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned. -p max-results=integer The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page. Known issue: All List calls will return all Orders without limit regardless of the value of this field. -p order-by=string The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. \"placedDate desc\" stands for listing orders by placement date, from oldest to most recent. \"placedDate asc\" stands for listing orders by placement date, from most recent to oldest. In future releases we'll support other sorting criteria. -p page-token=string The token returned by the previous request. -p placed-date-end=string Obtains orders placed before this date (exclusively), in ISO 8601 format. -p placed-date-start=string Obtains orders placed after this date (inclusively), in ISO 8601 format. -p statuses=string Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.","title":"Optional Method Properties"},{"location":"orders_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_refund/","text":"Deprecated, please use returnRefundLineItem instead. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders refund ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to refund. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRefundRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=dolores The currency of the price. value=gubergren The price represented as a number. ..amount-pretax currency=et The currency of the price. value=accusam The price represented as a number. ..amount-tax currency=voluptua. The currency of the price. value=dolore The price represented as a number. .. operation-id=dolore The ID of the operation. Unique across all operations for a given order. reason=dolore The reason for the refund. reason-text=voluptua. The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Refund"},{"location":"orders_refund/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders refund ...","title":"Scopes"},{"location":"orders_refund/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to refund.","title":"Required Scalar Arguments"},{"location":"orders_refund/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRefundRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=dolores The currency of the price. value=gubergren The price represented as a number. ..amount-pretax currency=et The currency of the price. value=accusam The price represented as a number. ..amount-tax currency=voluptua. The currency of the price. value=dolore The price represented as a number. .. operation-id=dolore The ID of the operation. Unique across all operations for a given order. reason=dolore The reason for the refund. reason-text=voluptua. The explanation of the reason.","title":"Required Request Value"},{"location":"orders_refund/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_refund/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_refund/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_rejectreturnlineitem/","text":"Rejects return on an line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders rejectreturnlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRejectReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=amet. The ID of the line item to return. Either lineItemId or productId is required. operation-id=ea The ID of the operation. Unique across all operations for a given order. product-id=sadipscing The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=95 The quantity to return and refund. reason=invidunt The reason for the return. reason-text=no The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Rejectreturnlineitem"},{"location":"orders_rejectreturnlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders rejectreturnlineitem ...","title":"Scopes"},{"location":"orders_rejectreturnlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_rejectreturnlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRejectReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=amet. The ID of the line item to return. Either lineItemId or productId is required. operation-id=ea The ID of the operation. Unique across all operations for a given order. product-id=sadipscing The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=95 The quantity to return and refund. reason=invidunt The reason for the return. reason-text=no The explanation of the reason.","title":"Required Request Value"},{"location":"orders_rejectreturnlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_rejectreturnlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_rejectreturnlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_returnlineitem/","text":"Returns a line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders returnlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=est The ID of the line item to return. Either lineItemId or productId is required. operation-id=at The ID of the operation. Unique across all operations for a given order. product-id=sed The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=3 The quantity to return. reason=et The reason for the return. reason-text=tempor The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Returnlineitem"},{"location":"orders_returnlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders returnlineitem ...","title":"Scopes"},{"location":"orders_returnlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_returnlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=est The ID of the line item to return. Either lineItemId or productId is required. operation-id=at The ID of the operation. Unique across all operations for a given order. product-id=sed The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=3 The quantity to return. reason=et The reason for the return. reason-text=tempor The explanation of the reason.","title":"Required Request Value"},{"location":"orders_returnlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_returnlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_returnlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_returnrefundlineitem/","text":"Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders returnrefundlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=aliquyam The currency of the price. value=ipsum The price represented as a number. ..amount-tax currency=et The currency of the price. value=sanctus The price represented as a number. .. line-item-id=lorem The ID of the line item to return. Either lineItemId or productId is required. operation-id=est The ID of the operation. Unique across all operations for a given order. product-id=sed The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=72 The quantity to return and refund. reason=dolores The reason for the return. reason-text=dolores The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Returnrefundlineitem"},{"location":"orders_returnrefundlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders returnrefundlineitem ...","title":"Scopes"},{"location":"orders_returnrefundlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_returnrefundlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=aliquyam The currency of the price. value=ipsum The price represented as a number. ..amount-tax currency=et The currency of the price. value=sanctus The price represented as a number. .. line-item-id=lorem The ID of the line item to return. Either lineItemId or productId is required. operation-id=est The ID of the operation. Unique across all operations for a given order. product-id=sed The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=72 The quantity to return and refund. reason=dolores The reason for the return. reason-text=dolores The explanation of the reason.","title":"Required Request Value"},{"location":"orders_returnrefundlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_returnrefundlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_returnrefundlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_setlineitemmetadata/","text":"Sets (overrides) merchant provided annotations on the line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders setlineitemmetadata ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersSetLineItemMetadataRequest: line-item-id: string operation-id: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=et The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=sed The ID of the operation. Unique across all operations for a given order. product-id=no The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Setlineitemmetadata"},{"location":"orders_setlineitemmetadata/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders setlineitemmetadata ...","title":"Scopes"},{"location":"orders_setlineitemmetadata/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_setlineitemmetadata/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersSetLineItemMetadataRequest: line-item-id: string operation-id: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=et The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=sed The ID of the operation. Unique across all operations for a given order. product-id=no The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.","title":"Required Request Value"},{"location":"orders_setlineitemmetadata/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_setlineitemmetadata/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_setlineitemmetadata/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_shiplineitems/","text":"Marks line item(s) as shipped. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders shiplineitems ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersShipLineItemsRequest: carrier: string operation-id: string shipment-group-id: string shipment-id: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=et Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the Orders resource representation for a list of acceptable values. operation-id=elitr The ID of the operation. Unique across all operations for a given order. shipment-group-id=sed ID of the shipment group. Required for orders that use the orderinvoices service. shipment-id=no Deprecated. Please use shipmentInfo instead. The ID of the shipment. tracking-id=nonumy Deprecated. Please use shipmentInfo instead. The tracking id for the shipment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Shiplineitems"},{"location":"orders_shiplineitems/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders shiplineitems ...","title":"Scopes"},{"location":"orders_shiplineitems/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_shiplineitems/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersShipLineItemsRequest: carrier: string operation-id: string shipment-group-id: string shipment-id: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=et Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the Orders resource representation for a list of acceptable values. operation-id=elitr The ID of the operation. Unique across all operations for a given order. shipment-group-id=sed ID of the shipment group. Required for orders that use the orderinvoices service. shipment-id=no Deprecated. Please use shipmentInfo instead. The ID of the shipment. tracking-id=nonumy Deprecated. Please use shipmentInfo instead. The tracking id for the shipment.","title":"Required Request Value"},{"location":"orders_shiplineitems/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_shiplineitems/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_shiplineitems/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_updatelineitemshippingdetails/","text":"Updates ship by and delivery by dates for a line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updatelineitemshippingdetails ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateLineItemShippingDetailsRequest: deliver-by-date: string line-item-id: string operation-id: string product-id: string ship-by-date: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deliver-by-date=at Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. line-item-id=sadipscing The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=aliquyam The ID of the operation. Unique across all operations for a given order. product-id=dolores The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. ship-by-date=sadipscing Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Updatelineitemshippingdetails"},{"location":"orders_updatelineitemshippingdetails/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updatelineitemshippingdetails ...","title":"Scopes"},{"location":"orders_updatelineitemshippingdetails/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updatelineitemshippingdetails/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateLineItemShippingDetailsRequest: deliver-by-date: string line-item-id: string operation-id: string product-id: string ship-by-date: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deliver-by-date=at Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. line-item-id=sadipscing The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=aliquyam The ID of the operation. Unique across all operations for a given order. product-id=dolores The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. ship-by-date=sadipscing Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated.","title":"Required Request Value"},{"location":"orders_updatelineitemshippingdetails/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updatelineitemshippingdetails/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updatelineitemshippingdetails/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_updatemerchantorderid/","text":"Updates the merchant order ID for a given order. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updatemerchantorderid ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateMerchantOrderIdRequest: merchant-order-id: string operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . merchant-order-id=erat The merchant order id to be assigned to the order. Must be unique per merchant. operation-id=aliquyam The ID of the operation. Unique across all operations for a given order. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Updatemerchantorderid"},{"location":"orders_updatemerchantorderid/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updatemerchantorderid ...","title":"Scopes"},{"location":"orders_updatemerchantorderid/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updatemerchantorderid/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateMerchantOrderIdRequest: merchant-order-id: string operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . merchant-order-id=erat The merchant order id to be assigned to the order. Must be unique per merchant. operation-id=aliquyam The ID of the operation. Unique across all operations for a given order.","title":"Required Request Value"},{"location":"orders_updatemerchantorderid/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updatemerchantorderid/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updatemerchantorderid/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"orders_updateshipment/","text":"Updates a shipment's status, carrier, and/or tracking ID. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updateshipment ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateShipmentRequest: carrier: string delivery-date: string operation-id: string shipment-id: string status: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=amet The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the Orders resource representation for a list of acceptable values. delivery-date=est Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered. operation-id=et The ID of the operation. Unique across all operations for a given order. shipment-id=sea The ID of the shipment. status=consetetur New status for the shipment. Not updated if missing. tracking-id=consetetur The tracking id for the shipment. Not updated if missing. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Updateshipment"},{"location":"orders_updateshipment/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2-sandbox --scope <scope> orders updateshipment ...","title":"Scopes"},{"location":"orders_updateshipment/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updateshipment/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateShipmentRequest: carrier: string delivery-date: string operation-id: string shipment-id: string status: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=amet The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the Orders resource representation for a list of acceptable values. delivery-date=est Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered. operation-id=et The ID of the operation. Unique across all operations for a given order. shipment-id=sea The ID of the shipment. status=consetetur New status for the shipment. Not updated if missing. tracking-id=consetetur The tracking id for the shipment. Not updated if missing.","title":"Required Request Value"},{"location":"orders_updateshipment/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updateshipment/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updateshipment/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}