initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["Binding","Associates `members` with a `role`."],["CatalogMethods","A builder providing access to all methods supported on catalog resources. It is not used directly, but through the `DataCatalog` hub."],["CatalogSearchCall","Searches Data Catalog for multiple resources like entries, tags that match a query. This is a custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the complete resource, only the resource identifier and high level fields. Clients can subsequently call `Get` methods. Note that Data Catalog search queries do not guarantee full recall. Query results that match your query may not be returned, even in subsequent result pages. Also note that results returned (and not returned) can vary across repeated search queries. See Data Catalog Search Syntax for more information."],["DataCatalog","Central instance to access all DataCatalog related resource activities"],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["EntryLookupCall","Get an entry by target resource name. This method allows clients to use the resource name from the source Google Cloud Platform service to get the Data Catalog Entry."],["EntryMethods","A builder providing access to all methods supported on entry resources. It is not used directly, but through the `DataCatalog` hub."],["Expr","Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."],["GetIamPolicyRequest","Request message for `GetIamPolicy` method."],["GetPolicyOptions","Encapsulates settings provided to GetIamPolicy."],["GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec","Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding"],["GoogleCloudDatacatalogV1beta1BigQueryTableSpec","Describes a BigQuery table."],["GoogleCloudDatacatalogV1beta1ColumnSchema","Representation of a column within a schema. Columns could be nested inside other columns."],["GoogleCloudDatacatalogV1beta1Entry","Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag."],["GoogleCloudDatacatalogV1beta1EntryGroup","EntryGroup Metadata. An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources."],["GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse","Response message for ExportTaxonomies."],["GoogleCloudDatacatalogV1beta1FieldType","There is no detailed description."],["GoogleCloudDatacatalogV1beta1FieldTypeEnumType","There is no detailed description."],["GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue","There is no detailed description."],["GoogleCloudDatacatalogV1beta1GcsFileSpec","Specifications of a single file in Cloud Storage."],["GoogleCloudDatacatalogV1beta1GcsFilesetSpec","Describes a Cloud Storage fileset entry."],["GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest","Request message for ImportTaxonomies."],["GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse","Response message for ImportTaxonomies."],["GoogleCloudDatacatalogV1beta1InlineSource","Inline source used for taxonomies import."],["GoogleCloudDatacatalogV1beta1ListEntriesResponse","Response message for ListEntries."],["GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse","Response message for ListEntryGroups."],["GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse","Response message for ListPolicyTags."],["GoogleCloudDatacatalogV1beta1ListTagsResponse","Response message for ListTags."],["GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse","Response message for ListTaxonomies."],["GoogleCloudDatacatalogV1beta1PolicyTag","Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -> (LatLong, City, ZipCode). PolicyTag \"Geolocation\" contains three child policy tags: \"LatLong\", \"City\", and \"ZipCode\"."],["GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest","Request message for RenameTagTemplateFieldEnumValue."],["GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest","Request message for RenameTagTemplateField."],["GoogleCloudDatacatalogV1beta1Schema","Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema)."],["GoogleCloudDatacatalogV1beta1SearchCatalogRequest","Request message for SearchCatalog."],["GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope","The criteria that select the subspace used for query matching."],["GoogleCloudDatacatalogV1beta1SearchCatalogResponse","Response message for SearchCatalog."],["GoogleCloudDatacatalogV1beta1SearchCatalogResult","A result that appears in the response of a search request. Each result captures details of one entry that matches the search."],["GoogleCloudDatacatalogV1beta1SerializedPolicyTag","Message representing one policy tag when exported as a nested proto."],["GoogleCloudDatacatalogV1beta1SerializedTaxonomy","Message capturing a taxonomy and its policy tag hierarchy as a nested proto. Used for taxonomy import/export and mutation."],["GoogleCloudDatacatalogV1beta1SystemTimestamps","Timestamps about this resource according to a particular system."],["GoogleCloudDatacatalogV1beta1TableSpec","Normal BigQuery table spec."],["GoogleCloudDatacatalogV1beta1Tag","Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template. See Data Catalog IAM for information on the permissions needed to create or view tags."],["GoogleCloudDatacatalogV1beta1TagField","Contains the value and supporting information for a field within a Tag."],["GoogleCloudDatacatalogV1beta1TagFieldEnumValue","Holds an enum value."],["GoogleCloudDatacatalogV1beta1TagTemplate","A tag template defines a tag, which can have one or more typed fields. The template is used to create and attach the tag to GCP resources. Tag template roles provide permissions to create, edit, and use the template. See, for example, the TagTemplate User role, which includes permission to use the tag template to tag resources."],["GoogleCloudDatacatalogV1beta1TagTemplateField","The template for an individual field within a tag template."],["GoogleCloudDatacatalogV1beta1Taxonomy","A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data sensitivity taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data origin taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data."],["GoogleCloudDatacatalogV1beta1ViewSpec","Table view specification."],["Policy","An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation. JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the IAM documentation."],["ProjectLocationEntryGroupCreateCall","A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationEntryGroupDeleteCall","Deletes an EntryGroup. Only entry groups that do not contain entries can be deleted. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationEntryGroupEntryCreateCall","Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group."],["ProjectLocationEntryGroupEntryDeleteCall","Deletes an existing entry. Only entries created through CreateEntry method can be deleted. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationEntryGroupEntryGetCall","Gets an entry."],["ProjectLocationEntryGroupEntryGetIamPolicyCall","Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups."],["ProjectLocationEntryGroupEntryListCall","Lists entries."],["ProjectLocationEntryGroupEntryPatchCall","Updates an existing entry. Users should enable the Data Catalog API in the project identified by the `entry.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationEntryGroupEntryTagCreateCall","Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the tag and the tag template used to create the tag must be from the same organization."],["ProjectLocationEntryGroupEntryTagDeleteCall","Deletes a tag."],["ProjectLocationEntryGroupEntryTagListCall","Lists the tags on an Entry."],["ProjectLocationEntryGroupEntryTagPatchCall","Updates an existing tag."],["ProjectLocationEntryGroupEntryTestIamPermissionCall","Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request."],["ProjectLocationEntryGroupGetCall","Gets an EntryGroup."],["ProjectLocationEntryGroupGetIamPolicyCall","Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups."],["ProjectLocationEntryGroupListCall","Lists entry groups."],["ProjectLocationEntryGroupPatchCall","Updates an EntryGroup. The user should enable the Data Catalog API in the project identified by the `entry_group.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationEntryGroupSetIamPolicyCall","Sets the access control policy for a resource. Replaces any existing policy. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. - `datacatalog.entries.setIamPolicy` to set policies on entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups."],["ProjectLocationEntryGroupTagCreateCall","Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the tag and the tag template used to create the tag must be from the same organization."],["ProjectLocationEntryGroupTagDeleteCall","Deletes a tag."],["ProjectLocationEntryGroupTagListCall","Lists the tags on an Entry."],["ProjectLocationEntryGroupTagPatchCall","Updates an existing tag."],["ProjectLocationEntryGroupTestIamPermissionCall","Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request."],["ProjectLocationTagTemplateCreateCall","Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see Data Catalog Resource Project for more information)."],["ProjectLocationTagTemplateDeleteCall","Deletes a tag template and all tags using the template. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationTagTemplateFieldCreateCall","Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see Data Catalog Resource Project for more information)."],["ProjectLocationTagTemplateFieldDeleteCall","Deletes a field in a tag template and all uses of that field. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationTagTemplateFieldEnumValueRenameCall","Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field."],["ProjectLocationTagTemplateFieldPatchCall","Updates a field in a tag template. This method cannot be used to update the field type. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationTagTemplateFieldRenameCall","Renames a field in a tag template. The user should enable the Data Catalog API in the project identified by the `name` parameter (see Data Catalog Resource Project for more information)."],["ProjectLocationTagTemplateGetCall","Gets a tag template."],["ProjectLocationTagTemplateGetIamPolicyCall","Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups."],["ProjectLocationTagTemplatePatchCall","Updates a tag template. This method cannot be used to update the fields of a template. The tag template fields are represented as separate resources and should be updated using their own create/update/delete methods. Users should enable the Data Catalog API in the project identified by the `tag_template.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)."],["ProjectLocationTagTemplateSetIamPolicyCall","Sets the access control policy for a resource. Replaces any existing policy. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. - `datacatalog.entries.setIamPolicy` to set policies on entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups."],["ProjectLocationTagTemplateTestIamPermissionCall","Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request."],["ProjectLocationTaxonomyCreateCall","Creates a taxonomy in the specified project."],["ProjectLocationTaxonomyDeleteCall","Deletes a taxonomy. This operation will also delete all policy tags in this taxonomy along with their associated policies."],["ProjectLocationTaxonomyExportCall","Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls."],["ProjectLocationTaxonomyGetCall","Gets a taxonomy."],["ProjectLocationTaxonomyGetIamPolicyCall","Gets the IAM policy for a taxonomy or a policy tag."],["ProjectLocationTaxonomyImportCall","Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure."],["ProjectLocationTaxonomyListCall","Lists all taxonomies in a project in a particular location that the caller has permission to view."],["ProjectLocationTaxonomyPatchCall","Updates a taxonomy."],["ProjectLocationTaxonomyPolicyTagCreateCall","Creates a policy tag in the specified taxonomy."],["ProjectLocationTaxonomyPolicyTagDeleteCall","Deletes a policy tag. Also deletes all of its descendant policy tags."],["ProjectLocationTaxonomyPolicyTagGetCall","Gets a policy tag."],["ProjectLocationTaxonomyPolicyTagGetIamPolicyCall","Gets the IAM policy for a taxonomy or a policy tag."],["ProjectLocationTaxonomyPolicyTagListCall","Lists all policy tags in a taxonomy."],["ProjectLocationTaxonomyPolicyTagPatchCall","Updates a policy tag."],["ProjectLocationTaxonomyPolicyTagSetIamPolicyCall","Sets the IAM policy for a taxonomy or a policy tag."],["ProjectLocationTaxonomyPolicyTagTestIamPermissionCall","Returns the permissions that a caller has on the specified taxonomy or policy tag."],["ProjectLocationTaxonomySetIamPolicyCall","Sets the IAM policy for a taxonomy or a policy tag."],["ProjectLocationTaxonomyTestIamPermissionCall","Returns the permissions that a caller has on the specified taxonomy or policy tag."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `DataCatalog` hub."],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."]]});