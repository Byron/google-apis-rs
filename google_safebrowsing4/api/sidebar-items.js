initSidebarItems({"struct":[["EncodedFullHasheGetCall","A builder for the get method supported by a encodedFullHashe resource. It is not used directly, but through a `EncodedFullHasheMethods` instance."],["EncodedFullHasheMethods","A builder providing access to all methods supported on encodedFullHashe resources. It is not used directly, but through the `Safebrowsing` hub."],["EncodedUpdateGetCall","A builder for the get method supported by a encodedUpdate resource. It is not used directly, but through a `EncodedUpdateMethods` instance."],["EncodedUpdateMethods","A builder providing access to all methods supported on encodedUpdate resources. It is not used directly, but through the `Safebrowsing` hub."],["FullHasheFindCall","Finds the full hashes that match the requested hash prefixes."],["FullHasheMethods","A builder providing access to all methods supported on fullHashe resources. It is not used directly, but through the `Safebrowsing` hub."],["GoogleProtobufEmpty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["GoogleSecuritySafebrowsingV4Checksum","The expected state of a client's local database."],["GoogleSecuritySafebrowsingV4ClientInfo","The client metadata associated with Safe Browsing API requests."],["GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequest","Describes a Safe Browsing API update request. Clients can request updates for multiple lists in a single request. The server may not respond to all requests, if the server has no updates for that list. NOTE: Field index 2 is unused. NEXT: 5"],["GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequest","A single list update request."],["GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints","The constraints for this update."],["GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse","There is no detailed description."],["GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse","An update to an individual list."],["GoogleSecuritySafebrowsingV4FindFullHashesRequest","Request to return full hashes matched by the provided hash prefixes."],["GoogleSecuritySafebrowsingV4FindFullHashesResponse","There is no detailed description."],["GoogleSecuritySafebrowsingV4FindThreatMatchesRequest","Request to check entries against lists."],["GoogleSecuritySafebrowsingV4FindThreatMatchesResponse","There is no detailed description."],["GoogleSecuritySafebrowsingV4ListThreatListsResponse","There is no detailed description."],["GoogleSecuritySafebrowsingV4RawHashes","The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression."],["GoogleSecuritySafebrowsingV4RawIndices","A set of raw indices to remove from a local list."],["GoogleSecuritySafebrowsingV4RiceDeltaEncoding","The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices."],["GoogleSecuritySafebrowsingV4ThreatEntry","An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set."],["GoogleSecuritySafebrowsingV4ThreatEntryMetadata","The metadata associated with a specific threat entry. The client is expected to know the metadata key/value pairs associated with each threat type."],["GoogleSecuritySafebrowsingV4ThreatEntryMetadataMetadataEntry","A single metadata entry."],["GoogleSecuritySafebrowsingV4ThreatEntrySet","A set of threats that should be added or removed from a client's local database."],["GoogleSecuritySafebrowsingV4ThreatHit","There is no detailed description."],["GoogleSecuritySafebrowsingV4ThreatHitThreatSource","A single resource related to a threat hit."],["GoogleSecuritySafebrowsingV4ThreatHitUserInfo","Details about the user that encountered the threat."],["GoogleSecuritySafebrowsingV4ThreatInfo","The information regarding one or more threats that a client submits when checking for matches in threat lists."],["GoogleSecuritySafebrowsingV4ThreatListDescriptor","Describes an individual threat list. A list is defined by three parameters: the type of threat posed, the type of platform targeted by the threat, and the type of entries in the list."],["GoogleSecuritySafebrowsingV4ThreatMatch","A match when checking a threat entry in the Safe Browsing threat lists."],["Safebrowsing","Central instance to access all Safebrowsing related resource activities"],["ThreatHitCreateCall","Reports a Safe Browsing threat list hit to Google. Only projects with TRUSTED_REPORTER visibility can use this method."],["ThreatHitMethods","A builder providing access to all methods supported on threatHit resources. It is not used directly, but through the `Safebrowsing` hub."],["ThreatListListCall","Lists the Safe Browsing threat lists available for download."],["ThreatListMethods","A builder providing access to all methods supported on threatList resources. It is not used directly, but through the `Safebrowsing` hub."],["ThreatListUpdateFetchCall","Fetches the most recent threat list updates. A client can request updates for multiple lists at once."],["ThreatListUpdateMethods","A builder providing access to all methods supported on threatListUpdate resources. It is not used directly, but through the `Safebrowsing` hub."],["ThreatMatcheFindCall","Finds the threat entries that match the Safe Browsing lists."],["ThreatMatcheMethods","A builder providing access to all methods supported on threatMatche resources. It is not used directly, but through the `Safebrowsing` hub."]]});