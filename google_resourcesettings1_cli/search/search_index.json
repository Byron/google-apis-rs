{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The resourcesettings1 command-line interface (CLI) allows to use most features of the Google Resource Settings service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Resource Settings API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-resourcesettings1-cli Find the source code on github . Usage This documentation was generated from the Resource Settings API at revision 20240303 . The CLI is at version 5.0.4 . resourcesettings1 [options] folders settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] organizations settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] projects settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] resourcesettings1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with resourcesettings1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/resourcesettings1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/resourcesettings1-secret.json , assuming that the required resourcesettings API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. resourcesettings1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-resourcesettings1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Resource Settings API at revision 20240303 . The CLI is at version 5.0.4 . resourcesettings1 [options] folders settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] organizations settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] projects settings-get <name> [-p <v>]... [-o <out>] settings-list <parent> [-p <v>]... [-o <out>] settings-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] resourcesettings1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with resourcesettings1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/resourcesettings1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/resourcesettings1-secret.json , assuming that the required resourcesettings API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. resourcesettings1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"folders_settings-get/","text":"Returns a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-get ... Required Scalar Argument <name> (string) Required. The name of the setting to get. See Setting for naming requirements. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Get"},{"location":"folders_settings-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-get ...","title":"Scopes"},{"location":"folders_settings-get/#required-scalar-argument","text":"<name> (string) Required. The name of the setting to get. See Setting for naming requirements.","title":"Required Scalar Argument"},{"location":"folders_settings-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"folders_settings-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"folders_settings-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"folders_settings-list/","text":"Lists all the settings that are available on the Cloud resource parent . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-list ... Required Scalar Argument <parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings List"},{"location":"folders_settings-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-list ...","title":"Scopes"},{"location":"folders_settings-list/#required-scalar-argument","text":"<parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id}","title":"Required Scalar Argument"},{"location":"folders_settings-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"folders_settings-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"folders_settings-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"folders_settings-patch/","text":"Updates a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Returns a google.rpc.Status with google.rpc.Code.FAILED_PRECONDITION if the setting is flagged as read only. Returns a google.rpc.Status with google.rpc.Code.ABORTED if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only name , local_value and etag . The metadata and effective_value cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the local_value field. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-patch ... Required Scalar Argument <name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=voluptua. Defines this value as being a Duration. enum-value value=at The value of this enum ..string-map-value mappings=key=sanctus The key-value pairs in the map the value will be associated with the given key ..string-set-value values=sed The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=amet. Defines this value as being a string value. .. etag=takimata A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=true Defines this value as being a boolean value. duration-value=duo Defines this value as being a Duration. enum-value value=ipsum The value of this enum ..string-map-value mappings=key=gubergren The key-value pairs in the map the value will be associated with the given key ..string-set-value values=lorem The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=gubergren Defines this value as being a string value. ..metadata data-type=eos The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=invidunt Defines this value as being a Duration. enum-value value=amet The value of this enum ..string-map-value mappings=key=duo The key-value pairs in the map the value will be associated with the given key ..string-set-value values=ipsum The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=sed Defines this value as being a string value. .. description=ut A detailed description of what this setting does. display-name=gubergren The human readable name for this setting. read-only=true A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=ipsum The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Patch"},{"location":"folders_settings-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> folders settings-patch ...","title":"Scopes"},{"location":"folders_settings-patch/#required-scalar-argument","text":"<name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Scalar Argument"},{"location":"folders_settings-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=voluptua. Defines this value as being a Duration. enum-value value=at The value of this enum ..string-map-value mappings=key=sanctus The key-value pairs in the map the value will be associated with the given key ..string-set-value values=sed The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=amet. Defines this value as being a string value. .. etag=takimata A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=true Defines this value as being a boolean value. duration-value=duo Defines this value as being a Duration. enum-value value=ipsum The value of this enum ..string-map-value mappings=key=gubergren The key-value pairs in the map the value will be associated with the given key ..string-set-value values=lorem The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=gubergren Defines this value as being a string value. ..metadata data-type=eos The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=invidunt Defines this value as being a Duration. enum-value value=amet The value of this enum ..string-map-value mappings=key=duo The key-value pairs in the map the value will be associated with the given key ..string-set-value values=ipsum The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=sed Defines this value as being a string value. .. description=ut A detailed description of what this setting does. display-name=gubergren The human readable name for this setting. read-only=true A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=ipsum The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Request Value"},{"location":"folders_settings-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"folders_settings-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"folders_settings-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"organizations_settings-get/","text":"Returns a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-get ... Required Scalar Argument <name> (string) Required. The name of the setting to get. See Setting for naming requirements. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Get"},{"location":"organizations_settings-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-get ...","title":"Scopes"},{"location":"organizations_settings-get/#required-scalar-argument","text":"<name> (string) Required. The name of the setting to get. See Setting for naming requirements.","title":"Required Scalar Argument"},{"location":"organizations_settings-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"organizations_settings-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"organizations_settings-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"organizations_settings-list/","text":"Lists all the settings that are available on the Cloud resource parent . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-list ... Required Scalar Argument <parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings List"},{"location":"organizations_settings-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-list ...","title":"Scopes"},{"location":"organizations_settings-list/#required-scalar-argument","text":"<parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id}","title":"Required Scalar Argument"},{"location":"organizations_settings-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"organizations_settings-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"organizations_settings-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"organizations_settings-patch/","text":"Updates a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Returns a google.rpc.Status with google.rpc.Code.FAILED_PRECONDITION if the setting is flagged as read only. Returns a google.rpc.Status with google.rpc.Code.ABORTED if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only name , local_value and etag . The metadata and effective_value cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the local_value field. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-patch ... Required Scalar Argument <name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=est Defines this value as being a Duration. enum-value value=gubergren The value of this enum ..string-map-value mappings=key=ea The key-value pairs in the map the value will be associated with the given key ..string-set-value values=dolor The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=lorem Defines this value as being a string value. .. etag=eos A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=false Defines this value as being a boolean value. duration-value=sed Defines this value as being a Duration. enum-value value=duo The value of this enum ..string-map-value mappings=key=sed The key-value pairs in the map the value will be associated with the given key ..string-set-value values=no The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=stet Defines this value as being a string value. ..metadata data-type=kasd The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=et Defines this value as being a Duration. enum-value value=et The value of this enum ..string-map-value mappings=key=vero The key-value pairs in the map the value will be associated with the given key ..string-set-value values=erat The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=sed Defines this value as being a string value. .. description=duo A detailed description of what this setting does. display-name=dolore The human readable name for this setting. read-only=false A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=diam The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Patch"},{"location":"organizations_settings-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> organizations settings-patch ...","title":"Scopes"},{"location":"organizations_settings-patch/#required-scalar-argument","text":"<name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Scalar Argument"},{"location":"organizations_settings-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=est Defines this value as being a Duration. enum-value value=gubergren The value of this enum ..string-map-value mappings=key=ea The key-value pairs in the map the value will be associated with the given key ..string-set-value values=dolor The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=lorem Defines this value as being a string value. .. etag=eos A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=false Defines this value as being a boolean value. duration-value=sed Defines this value as being a Duration. enum-value value=duo The value of this enum ..string-map-value mappings=key=sed The key-value pairs in the map the value will be associated with the given key ..string-set-value values=no The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=stet Defines this value as being a string value. ..metadata data-type=kasd The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=et Defines this value as being a Duration. enum-value value=et The value of this enum ..string-map-value mappings=key=vero The key-value pairs in the map the value will be associated with the given key ..string-set-value values=erat The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=sed Defines this value as being a string value. .. description=duo A detailed description of what this setting does. display-name=dolore The human readable name for this setting. read-only=false A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=diam The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Request Value"},{"location":"organizations_settings-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"organizations_settings-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"organizations_settings-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_settings-get/","text":"Returns a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-get ... Required Scalar Argument <name> (string) Required. The name of the setting to get. See Setting for naming requirements. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Get"},{"location":"projects_settings-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-get ...","title":"Scopes"},{"location":"projects_settings-get/#required-scalar-argument","text":"<name> (string) Required. The name of the setting to get. See Setting for naming requirements.","title":"Required Scalar Argument"},{"location":"projects_settings-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_settings-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"projects_settings-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_settings-list/","text":"Lists all the settings that are available on the Cloud resource parent . Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-list ... Required Scalar Argument <parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings List"},{"location":"projects_settings-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-list ...","title":"Scopes"},{"location":"projects_settings-list/#required-scalar-argument","text":"<parent> (string) Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * projects/{project_number} * projects/{project_id} * folders/{folder_id} * organizations/{organization_id}","title":"Required Scalar Argument"},{"location":"projects_settings-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_settings-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Unused. The size of the page to be returned. -p page-token=string Unused. A page token used to retrieve the next page. -p view=string The SettingView for this request.","title":"Optional Method Properties"},{"location":"projects_settings-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"projects_settings-patch/","text":"Updates a specified setting. Returns a google.rpc.Status with google.rpc.Code.NOT_FOUND if the setting does not exist. Returns a google.rpc.Status with google.rpc.Code.FAILED_PRECONDITION if the setting is flagged as read only. Returns a google.rpc.Status with google.rpc.Code.ABORTED if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only name , local_value and etag . The metadata and effective_value cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the local_value field. Scopes You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-patch ... Required Scalar Argument <name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=et Defines this value as being a Duration. enum-value value=et The value of this enum ..string-map-value mappings=key=sadipscing The key-value pairs in the map the value will be associated with the given key ..string-set-value values=stet The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=dolor Defines this value as being a string value. .. etag=duo A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=false Defines this value as being a boolean value. duration-value=vero Defines this value as being a Duration. enum-value value=invidunt The value of this enum ..string-map-value mappings=key=stet The key-value pairs in the map the value will be associated with the given key ..string-set-value values=vero The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=elitr Defines this value as being a string value. ..metadata data-type=lorem The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=ipsum Defines this value as being a Duration. enum-value value=accusam The value of this enum ..string-map-value mappings=key=takimata The key-value pairs in the map the value will be associated with the given key ..string-set-value values=consetetur The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=voluptua. Defines this value as being a string value. .. description=et A detailed description of what this setting does. display-name=erat The human readable name for this setting. read-only=false A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=amet. The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Settings Patch"},{"location":"projects_settings-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/cloud-platform scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/cloud-platform . You can set the scope for this method like this: resourcesettings1 --scope <scope> projects settings-patch ...","title":"Scopes"},{"location":"projects_settings-patch/#required-scalar-argument","text":"<name> (string) The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Scalar Argument"},{"location":"projects_settings-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GoogleCloudResourcesettingsV1Setting: effective-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string etag: string local-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string metadata: data-type: string default-value: boolean-value: boolean duration-value: string enum-value: value: string string-map-value: mappings: { string: string } string-set-value: values: [string] string-value: string description: string display-name: string read-only: boolean name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .effective-value boolean-value=true Defines this value as being a boolean value. duration-value=et Defines this value as being a Duration. enum-value value=et The value of this enum ..string-map-value mappings=key=sadipscing The key-value pairs in the map the value will be associated with the given key ..string-set-value values=stet The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=dolor Defines this value as being a string value. .. etag=duo A fingerprint used for optimistic concurrency. See UpdateSetting for more details. local-value boolean-value=false Defines this value as being a boolean value. duration-value=vero Defines this value as being a Duration. enum-value value=invidunt The value of this enum ..string-map-value mappings=key=stet The key-value pairs in the map the value will be associated with the given key ..string-set-value values=vero The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=elitr Defines this value as being a string value. ..metadata data-type=lorem The data type for this setting. default-value boolean-value=true Defines this value as being a boolean value. duration-value=ipsum Defines this value as being a Duration. enum-value value=accusam The value of this enum ..string-map-value mappings=key=takimata The key-value pairs in the map the value will be associated with the given key ..string-set-value values=consetetur The strings in the set Each invocation of this argument appends the given value to the array. .. string-value=voluptua. Defines this value as being a string value. .. description=et A detailed description of what this setting does. display-name=erat The human readable name for this setting. read-only=false A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons. .. name=amet. The resource name of the setting. Must be in one of the following forms: * projects/{project_number}/settings/{setting_name} * folders/{folder_id}/settings/{setting_name} * organizations/{organization_id}/settings/{setting_name} For example, \"/projects/123/settings/gcp-enableMyFeature\"","title":"Required Request Value"},{"location":"projects_settings-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"projects_settings-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"projects_settings-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}