initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["AuditConfig","Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."],["AuditLogConfig","Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."],["Backup","The details of a backup resource."],["Binding","Associates members with a role."],["DataCatalogConfig","Specifies how metastore metadata should be integrated with the Data Catalog service."],["DatabaseDump","A specification of the location of and metadata about a database dump from a relational database management system."],["DataprocMetastore","Central instance to access all DataprocMetastore related resource activities"],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}."],["ExportMetadataRequest","Request message for DataprocMetastore.ExportMetadata."],["Expr","Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."],["HiveMetastoreConfig","Specifies configuration information specific to running Hive metastore software as the metastore service."],["KerberosConfig","Configuration information for a Kerberos principal."],["ListBackupsResponse","Response message for DataprocMetastore.ListBackups."],["ListLocationsResponse","The response message for Locations.ListLocations."],["ListMetadataImportsResponse","Response message for DataprocMetastore.ListMetadataImports."],["ListOperationsResponse","The response message for Operations.ListOperations."],["ListServicesResponse","Response message for DataprocMetastore.ListServices."],["Location","A resource that represents Google Cloud Platform location."],["MaintenanceWindow","Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service."],["MetadataExport","The details of a metadata export operation."],["MetadataImport","A metastore resource that imports metadata."],["MetadataIntegration","Specifies how metastore metadata should be integrated with external services."],["MetadataManagementActivity","The metadata management activities of the metastore service."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["Policy","An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members to a single role. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/)."],["ProjectLocationGetCall","Gets information about a location."],["ProjectLocationListCall","Lists information about the supported locations for this service."],["ProjectLocationOperationDeleteCall","Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED."],["ProjectLocationOperationGetCall","Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."],["ProjectLocationOperationListCall","Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users//operations. To override the binding, API services can add a binding such as \"/v1/{name=users/}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."],["ProjectLocationServiceBackupCreateCall","Creates a new Backup in a given project and location."],["ProjectLocationServiceBackupDeleteCall","Deletes a single backup."],["ProjectLocationServiceBackupGetCall","Gets details of a single backup."],["ProjectLocationServiceBackupListCall","Lists backups in a service."],["ProjectLocationServiceCreateCall","Creates a metastore service in a project and location."],["ProjectLocationServiceDeleteCall","Deletes a single service."],["ProjectLocationServiceExportMetadataCall","Exports metadata from a service."],["ProjectLocationServiceGetCall","Gets the details of a single service."],["ProjectLocationServiceGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectLocationServiceListCall","Lists services in a project and location."],["ProjectLocationServiceMetadataImportCreateCall","Creates a new MetadataImport in a given project and location."],["ProjectLocationServiceMetadataImportGetCall","Gets details of a single import."],["ProjectLocationServiceMetadataImportListCall","Lists imports in a service."],["ProjectLocationServiceMetadataImportPatchCall","Updates a single import. Only the description field of MetadataImport is supported to be updated."],["ProjectLocationServicePatchCall","Updates the parameters of a single service."],["ProjectLocationServiceRestoreCall","Restores a service from a backup."],["ProjectLocationServiceSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."],["ProjectLocationServiceTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `DataprocMetastore` hub."],["Restore","The details of a metadata restore operation."],["RestoreServiceRequest","Request message for DataprocMetastore.Restore."],["Secret","A securely stored value."],["Service","A managed metastore service that serves metadata queries."],["SetIamPolicyRequest","Request message for SetIamPolicy method."],["Status","The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."],["TestIamPermissionsRequest","Request message for TestIamPermissions method."],["TestIamPermissionsResponse","Response message for TestIamPermissions method."]]});