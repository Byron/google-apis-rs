{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The calendar3 command-line interface (CLI) allows to use most features of the Google calendar service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the calendar API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-calendar3-cli Find the source code on github . Usage This documentation was generated from the calendar API at revision 20240223 . The CLI is at version 5.0.4 . calendar3 [options] acl delete <calendar-id> <rule-id> [-p <v>]... get <calendar-id> <rule-id> [-p <v>]... [-o <out>] insert <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] list <calendar-id> [-p <v>]... [-o <out>] patch <calendar-id> <rule-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> <rule-id> (-r <kv>)... [-p <v>]... [-o <out>] watch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] calendar-list delete <calendar-id> [-p <v>]... get <calendar-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] watch (-r <kv>)... [-p <v>]... [-o <out>] calendars clear <calendar-id> [-p <v>]... delete <calendar-id> [-p <v>]... get <calendar-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] channels stop (-r <kv>)... [-p <v>]... colors get [-p <v>]... [-o <out>] events delete <calendar-id> <event-id> [-p <v>]... get <calendar-id> <event-id> [-p <v>]... [-o <out>] import <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] insert <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] instances <calendar-id> <event-id> [-p <v>]... [-o <out>] list <calendar-id> [-p <v>]... [-o <out>] move <calendar-id> <event-id> <destination> [-p <v>]... [-o <out>] patch <calendar-id> <event-id> (-r <kv>)... [-p <v>]... [-o <out>] quick-add <calendar-id> <text> [-p <v>]... [-o <out>] update <calendar-id> <event-id> (-r <kv>)... [-p <v>]... [-o <out>] watch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] freebusy query (-r <kv>)... [-p <v>]... [-o <out>] settings get <setting> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] watch (-r <kv>)... [-p <v>]... [-o <out>] calendar3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with calendar3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/calendar3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/calendar3-secret.json , assuming that the required calendar API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. calendar3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-calendar3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the calendar API at revision 20240223 . The CLI is at version 5.0.4 . calendar3 [options] acl delete <calendar-id> <rule-id> [-p <v>]... get <calendar-id> <rule-id> [-p <v>]... [-o <out>] insert <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] list <calendar-id> [-p <v>]... [-o <out>] patch <calendar-id> <rule-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> <rule-id> (-r <kv>)... [-p <v>]... [-o <out>] watch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] calendar-list delete <calendar-id> [-p <v>]... get <calendar-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] patch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] watch (-r <kv>)... [-p <v>]... [-o <out>] calendars clear <calendar-id> [-p <v>]... delete <calendar-id> [-p <v>]... get <calendar-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] patch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] update <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] channels stop (-r <kv>)... [-p <v>]... colors get [-p <v>]... [-o <out>] events delete <calendar-id> <event-id> [-p <v>]... get <calendar-id> <event-id> [-p <v>]... [-o <out>] import <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] insert <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] instances <calendar-id> <event-id> [-p <v>]... [-o <out>] list <calendar-id> [-p <v>]... [-o <out>] move <calendar-id> <event-id> <destination> [-p <v>]... [-o <out>] patch <calendar-id> <event-id> (-r <kv>)... [-p <v>]... [-o <out>] quick-add <calendar-id> <text> [-p <v>]... [-o <out>] update <calendar-id> <event-id> (-r <kv>)... [-p <v>]... [-o <out>] watch <calendar-id> (-r <kv>)... [-p <v>]... [-o <out>] freebusy query (-r <kv>)... [-p <v>]... [-o <out>] settings get <setting> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] watch (-r <kv>)... [-p <v>]... [-o <out>] calendar3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with calendar3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/calendar3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/calendar3-secret.json , assuming that the required calendar API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. calendar3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"acl_delete/","text":"Deletes an access control rule. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl delete ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"acl_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl delete ...","title":"Scopes"},{"location":"acl_delete/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier.","title":"Required Scalar Arguments"},{"location":"acl_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_get/","text":"Returns an access control rule. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> acl get ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"acl_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> acl get ...","title":"Scopes"},{"location":"acl_get/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier.","title":"Required Scalar Arguments"},{"location":"acl_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_insert/","text":"Creates an access control rule. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl insert ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=et ETag of the resource. id=magna Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=no Type of the resource (\"calendar#aclRule\"). role=ipsum The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=voluptua. The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=at The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Optional. The default is True. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"acl_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl insert ...","title":"Scopes"},{"location":"acl_insert/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"acl_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=et ETag of the resource. id=magna Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=no Type of the resource (\"calendar#aclRule\"). role=ipsum The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=voluptua. The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=at The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\".","title":"Required Request Value"},{"location":"acl_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"acl_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Optional. The default is True.","title":"Optional Method Properties"},{"location":"acl_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_list/","text":"Returns the rules in the access control list for the calendar. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl list ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"acl_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl list ...","title":"Scopes"},{"location":"acl_list/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"acl_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"acl_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_patch/","text":"Updates an access control rule. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl patch ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=sanctus ETag of the resource. id=sed Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=amet. Type of the resource (\"calendar#aclRule\"). role=takimata The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=amet. The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=duo The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"acl_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl patch ...","title":"Scopes"},{"location":"acl_patch/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier.","title":"Required Scalar Arguments"},{"location":"acl_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=sanctus ETag of the resource. id=sed Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=amet. Type of the resource (\"calendar#aclRule\"). role=takimata The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=amet. The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=duo The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\".","title":"Required Request Value"},{"location":"acl_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"acl_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True.","title":"Optional Method Properties"},{"location":"acl_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_update/","text":"Updates an access control rule. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl update ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=ipsum ETag of the resource. id=gubergren Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=lorem Type of the resource (\"calendar#aclRule\"). role=gubergren The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=eos The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=dolor The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"acl_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl update ...","title":"Scopes"},{"location":"acl_update/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <rule-id> (string) ACL rule identifier.","title":"Required Scalar Arguments"},{"location":"acl_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AclRule: etag: string id: string kind: string role: string scope: type: string value: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . etag=ipsum ETag of the resource. id=gubergren Identifier of the Access Control List (ACL) rule. See Sharing calendars. kind=lorem Type of the resource (\"calendar#aclRule\"). role=gubergren The role assigned to the scope. Possible values are: \"none\" - Provides no access. \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. scope type=eos The type of the scope. Possible values are: \"default\" - The public scope. This is the default value. \"user\" - Limits the scope to a single user. \"group\" - Limits the scope to a group. \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not. value=dolor The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\".","title":"Required Request Value"},{"location":"acl_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"acl_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True.","title":"Optional Method Properties"},{"location":"acl_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"acl_watch/","text":"Watch for changes to ACL resources. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl watch ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=ea The address where notifications are delivered for this channel. expiration=ipsum Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=invidunt A UUID or similar unique string that identifies this channel. kind=amet Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=duo Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=true A Boolean value to indicate whether payload is wanted. Optional. resource-id=sed An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=ut A version-specific identifier for the watched resource. token=gubergren An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=rebum. The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Watch"},{"location":"acl_watch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> acl watch ...","title":"Scopes"},{"location":"acl_watch/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"acl_watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=ea The address where notifications are delivered for this channel. expiration=ipsum Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=invidunt A UUID or similar unique string that identifies this channel. kind=amet Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=duo Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=true A Boolean value to indicate whether payload is wanted. Optional. resource-id=sed An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=ut A version-specific identifier for the watched resource. token=gubergren An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=rebum. The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.","title":"Required Request Value"},{"location":"acl_watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"acl_watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"acl_watch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"acl_watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_delete/","text":"Removes a calendar from the user's calendar list. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list delete ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"calendar-list_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list delete ...","title":"Scopes"},{"location":"calendar-list_delete/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendar-list_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_get/","text":"Returns a calendar from the user's calendar list. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list get ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"calendar-list_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list get ...","title":"Scopes"},{"location":"calendar-list_get/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendar-list_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_insert/","text":"Inserts an existing calendar into the user's calendar list. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=est The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=ipsum The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=ipsum The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=est The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=true Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=ea Description of the calendar. Optional. Read-only. etag=dolor ETag of the resource. foreground-color=lorem The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=sed Identifier of the calendar. kind=duo Type of the resource (\"calendar#calendarListEntry\"). location=sed Geographic location of the calendar as free-form text. Optional. Read-only. primary=true Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=true Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=et Title of the calendar. Read-only. summary-override=et The summary that the authenticated user has set for this calendar. Optional. time-zone=vero The time zone of the calendar. Optional. Read-only. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"calendar-list_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list insert ...","title":"Scopes"},{"location":"calendar-list_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=est The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=ipsum The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=ipsum The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=est The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=true Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=ea Description of the calendar. Optional. Read-only. etag=dolor ETag of the resource. foreground-color=lorem The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=sed Identifier of the calendar. kind=duo Type of the resource (\"calendar#calendarListEntry\"). location=sed Geographic location of the calendar as free-form text. Optional. Read-only. primary=true Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=true Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=et Title of the calendar. Read-only. summary-override=et The summary that the authenticated user has set for this calendar. Optional. time-zone=vero The time zone of the calendar. Optional. Read-only.","title":"Required Request Value"},{"location":"calendar-list_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendar-list_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.","title":"Optional Method Properties"},{"location":"calendar-list_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_list/","text":"Returns the calendars on the user's calendar list. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p min-access-role=string The minimum access role for the user in the returned entries. Optional. The default is no restriction. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted calendar list entries in the result. Optional. The default is False. -p show-hidden=boolean Whether to show hidden entries. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"calendar-list_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list list ...","title":"Scopes"},{"location":"calendar-list_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p min-access-role=string The minimum access role for the user in the returned entries. Optional. The default is no restriction. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted calendar list entries in the result. Optional. The default is False. -p show-hidden=boolean Whether to show hidden entries. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"calendar-list_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_patch/","text":"Updates an existing calendar on the user's calendar list. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list patch ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=erat The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=sed The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=duo The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=dolore The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=false Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=diam Description of the calendar. Optional. Read-only. etag=dolor ETag of the resource. foreground-color=et The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=stet Identifier of the calendar. kind=dolor Type of the resource (\"calendar#calendarListEntry\"). location=duo Geographic location of the calendar as free-form text. Optional. Read-only. primary=false Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=false Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=invidunt Title of the calendar. Read-only. summary-override=stet The summary that the authenticated user has set for this calendar. Optional. time-zone=vero The time zone of the calendar. Optional. Read-only. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"calendar-list_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list patch ...","title":"Scopes"},{"location":"calendar-list_patch/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendar-list_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=erat The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=sed The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=duo The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=dolore The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=false Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=diam Description of the calendar. Optional. Read-only. etag=dolor ETag of the resource. foreground-color=et The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=stet Identifier of the calendar. kind=dolor Type of the resource (\"calendar#calendarListEntry\"). location=duo Geographic location of the calendar as free-form text. Optional. Read-only. primary=false Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=false Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=invidunt Title of the calendar. Read-only. summary-override=stet The summary that the authenticated user has set for this calendar. Optional. time-zone=vero The time zone of the calendar. Optional. Read-only.","title":"Required Request Value"},{"location":"calendar-list_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendar-list_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.","title":"Optional Method Properties"},{"location":"calendar-list_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_update/","text":"Updates an existing calendar on the user's calendar list. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list update ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=elitr The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=lorem The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=diam The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=no The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=false Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=accusam Description of the calendar. Optional. Read-only. etag=takimata ETag of the resource. foreground-color=consetetur The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=erat Identifier of the calendar. kind=consetetur Type of the resource (\"calendar#calendarListEntry\"). location=amet. Geographic location of the calendar as free-form text. Optional. Read-only. primary=true Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=false Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=accusam Title of the calendar. Read-only. summary-override=voluptua. The summary that the authenticated user has set for this calendar. Optional. time-zone=dolore The time zone of the calendar. Optional. Read-only. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"calendar-list_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list update ...","title":"Scopes"},{"location":"calendar-list_update/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendar-list_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CalendarListEntry: access-role: string background-color: string color-id: string conference-properties: allowed-conference-solution-types: [string] deleted: boolean description: string etag: string foreground-color: string hidden: boolean id: string kind: string location: string primary: boolean selected: boolean summary: string summary-override: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-role=elitr The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \"freeBusyReader\" - Provides read access to free/busy information. \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. background-color=lorem The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. color-id=diam The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional. conference-properties allowed-conference-solution-types=no The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. deleted=false Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False. description=accusam Description of the calendar. Optional. Read-only. etag=takimata ETag of the resource. foreground-color=consetetur The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional. hidden=false Whether the calendar has been hidden from the list. Optional. The attribute is only returned when the calendar is hidden, in which case the value is true. id=erat Identifier of the calendar. kind=consetetur Type of the resource (\"calendar#calendarListEntry\"). location=amet. Geographic location of the calendar as free-form text. Optional. Read-only. primary=true Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False. selected=false Whether the calendar content shows up in the calendar UI. Optional. The default is False. summary=accusam Title of the calendar. Read-only. summary-override=voluptua. The summary that the authenticated user has set for this calendar. Optional. time-zone=dolore The time zone of the calendar. Optional. Read-only.","title":"Required Request Value"},{"location":"calendar-list_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendar-list_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p color-rgb-format=boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.","title":"Optional Method Properties"},{"location":"calendar-list_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendar-list_watch/","text":"Watch for changes to CalendarList resources. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list watch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=dolore The address where notifications are delivered for this channel. expiration=dolore Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=voluptua. A UUID or similar unique string that identifies this channel. kind=amet. Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=ea Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=lorem An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=invidunt A version-specific identifier for the watched resource. token=no An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=est The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p min-access-role=string The minimum access role for the user in the returned entries. Optional. The default is no restriction. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted calendar list entries in the result. Optional. The default is False. -p show-hidden=boolean Whether to show hidden entries. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Watch"},{"location":"calendar-list_watch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendar-list watch ...","title":"Scopes"},{"location":"calendar-list_watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=dolore The address where notifications are delivered for this channel. expiration=dolore Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=voluptua. A UUID or similar unique string that identifies this channel. kind=amet. Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=ea Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=lorem An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=invidunt A version-specific identifier for the watched resource. token=no An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=est The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.","title":"Required Request Value"},{"location":"calendar-list_watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendar-list_watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendar-list_watch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p min-access-role=string The minimum access role for the user in the returned entries. Optional. The default is no restriction. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted calendar list entries in the result. Optional. The default is False. -p show-hidden=boolean Whether to show hidden entries. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"calendar-list_watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_clear/","text":"Clears a primary calendar. This operation deletes all events associated with the primary calendar of an account. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars clear ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Clear"},{"location":"calendars_clear/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars clear ...","title":"Scopes"},{"location":"calendars_clear/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendars_clear/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_delete/","text":"Deletes a secondary calendar. Use calendars.clear for clearing all events on primary calendars. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars delete ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"calendars_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars delete ...","title":"Scopes"},{"location":"calendars_delete/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendars_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_get/","text":"Returns metadata for a calendar. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendars get ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"calendars_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> calendars get ...","title":"Scopes"},{"location":"calendars_get/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendars_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendars_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_insert/","text":"Creates a secondary calendar. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=at The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=sed Description of the calendar. Optional. etag=sit ETag of the resource. id=et Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=tempor Type of the resource (\"calendar#calendar\"). location=aliquyam Geographic location of the calendar as free-form text. Optional. summary=ipsum Title of the calendar. time-zone=et The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"calendars_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars insert ...","title":"Scopes"},{"location":"calendars_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=at The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=sed Description of the calendar. Optional. etag=sit ETag of the resource. id=et Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=tempor Type of the resource (\"calendar#calendar\"). location=aliquyam Geographic location of the calendar as free-form text. Optional. summary=ipsum Title of the calendar. time-zone=et The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional.","title":"Required Request Value"},{"location":"calendars_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendars_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendars_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_patch/","text":"Updates metadata for a calendar. This method supports patch semantics. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars patch ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=sanctus The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=lorem Description of the calendar. Optional. etag=est ETag of the resource. id=sed Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=diam Type of the resource (\"calendar#calendar\"). location=dolores Geographic location of the calendar as free-form text. Optional. summary=dolores Title of the calendar. time-zone=et The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"calendars_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars patch ...","title":"Scopes"},{"location":"calendars_patch/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendars_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=sanctus The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=lorem Description of the calendar. Optional. etag=est ETag of the resource. id=sed Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=diam Type of the resource (\"calendar#calendar\"). location=dolores Geographic location of the calendar as free-form text. Optional. summary=dolores Title of the calendar. time-zone=et The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional.","title":"Required Request Value"},{"location":"calendars_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendars_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendars_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"calendars_update/","text":"Updates metadata for a calendar. Scopes You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars update ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=sed The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=no Description of the calendar. Optional. etag=et ETag of the resource. id=elitr Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=sed Type of the resource (\"calendar#calendar\"). location=no Geographic location of the calendar as free-form text. Optional. summary=nonumy Title of the calendar. time-zone=at The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"calendars_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/calendar scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> calendars update ...","title":"Scopes"},{"location":"calendars_update/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"calendars_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Calendar: conference-properties: allowed-conference-solution-types: [string] description: string etag: string id: string kind: string location: string summary: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .conference-properties allowed-conference-solution-types=sed The types of conference solutions that are supported for this calendar. The possible values are: \"eventHangout\" \"eventNamedHangout\" \"hangoutsMeet\" Optional. Each invocation of this argument appends the given value to the array. .. description=no Description of the calendar. Optional. etag=et ETag of the resource. id=elitr Identifier of the calendar. To retrieve IDs call the calendarList.list() method. kind=sed Type of the resource (\"calendar#calendar\"). location=no Geographic location of the calendar as free-form text. Optional. summary=nonumy Title of the calendar. time-zone=at The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional.","title":"Required Request Value"},{"location":"calendars_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"calendars_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"calendars_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"channels_stop/","text":"Stop watching resources through this channel Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> channels stop ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=sadipscing The address where notifications are delivered for this channel. expiration=aliquyam Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=dolores A UUID or similar unique string that identifies this channel. kind=sadipscing Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=erat Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=amet An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=est A version-specific identifier for the watched resource. token=et An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=sea The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Stop"},{"location":"channels_stop/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> channels stop ...","title":"Scopes"},{"location":"channels_stop/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=sadipscing The address where notifications are delivered for this channel. expiration=aliquyam Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=dolores A UUID or similar unique string that identifies this channel. kind=sadipscing Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=erat Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=amet An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=est A version-specific identifier for the watched resource. token=et An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=sea The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.","title":"Required Request Value"},{"location":"channels_stop/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"channels_stop/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"colors_get/","text":"Returns the color definitions for calendars and events. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> colors get ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"colors_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> colors get ...","title":"Scopes"},{"location":"colors_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"colors_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_delete/","text":"Deletes an event. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events delete ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the deletion of the event. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"events_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events delete ...","title":"Scopes"},{"location":"events_delete/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier.","title":"Required Scalar Arguments"},{"location":"events_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the deletion of the event.","title":"Optional Method Properties"},{"location":"events_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_get/","text":"Returns an event based on its Google Calendar ID. To retrieve an event using its iCalendar ID, call the events.list method using the iCalUID parameter. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events get ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"events_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events get ...","title":"Scopes"},{"location":"events_get/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier.","title":"Required Scalar Arguments"},{"location":"events_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar.","title":"Optional Method Properties"},{"location":"events_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_import/","text":"Imports an event. This operation is used to add a private copy of an existing event to a calendar. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events import ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=true Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=stet The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=est The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=aliquyam The user-visible icon for this solution. key type=elitr The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=duo The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=diam The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=est The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=sit The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=sed Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=eos No description provided. the value will be associated with the given key ... signature=lorem The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=ea Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=stet The creator's name, if available. email=dolores The creator's email address, if available. id=eos The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=sea Description of the event. Can contain HTML. Optional. end date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=at The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolore The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=true Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=lorem ETag of the resource. event-type=accusam Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=amet Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=erat Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=dolores Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=erat The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=accusam Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=sea The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=42 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=lorem The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=et The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=at Preferences. the value will be associated with the given key title=dolor The gadget's title. Deprecated. type=et The gadget's type. Deprecated. width=53 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=consetetur An absolute link to the Google Hangout associated with this event. Read-only. html-link=sit An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=aliquyam Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=eos Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=at Type of the resource (\"calendar#event\"). location=dolores Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=gubergren The organizer's name, if available. email=dolor The organizer's email address, if available. It must be a valid email address as per RFC5322. id=aliquyam The organizer's Profile ID, if available. self=true Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=amet. The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=ipsum The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=lorem The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=accusam Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=gubergren Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=at List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=sit For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=true Whether the default reminders of the calendar apply to the event. .. sequence=18 Sequence number as per iCalendar. source title=et Title of the source; for example a title of a web page or an email subject. url=rebum. URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=dolor The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=lorem The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=justo The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=amet. Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=no Title of the event. transparency=nonumy Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=sed Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=kasd Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=lorem An optional extra label for additional information. ..office-location building-id=sanctus An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=nonumy An optional desk identifier. floor-id=rebum. An optional floor identifier. floor-section-id=tempor An optional floor section identifier. label=dolore The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=eos Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Import"},{"location":"events_import/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events import ...","title":"Scopes"},{"location":"events_import/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"events_import/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=true Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=stet The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=est The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=aliquyam The user-visible icon for this solution. key type=elitr The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=duo The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=diam The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=est The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=sit The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=sed Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=eos No description provided. the value will be associated with the given key ... signature=lorem The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=ea Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=stet The creator's name, if available. email=dolores The creator's email address, if available. id=eos The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=sea Description of the event. Can contain HTML. Optional. end date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=at The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolore The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=true Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=lorem ETag of the resource. event-type=accusam Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=amet Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=erat Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=dolores Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=erat The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=accusam Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=sea The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=42 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=lorem The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=et The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=at Preferences. the value will be associated with the given key title=dolor The gadget's title. Deprecated. type=et The gadget's type. Deprecated. width=53 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=consetetur An absolute link to the Google Hangout associated with this event. Read-only. html-link=sit An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=aliquyam Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=eos Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=at Type of the resource (\"calendar#event\"). location=dolores Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=gubergren The organizer's name, if available. email=dolor The organizer's email address, if available. It must be a valid email address as per RFC5322. id=aliquyam The organizer's Profile ID, if available. self=true Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=amet. The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=ipsum The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=lorem The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=accusam Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=gubergren Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=at List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=sit For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=true Whether the default reminders of the calendar apply to the event. .. sequence=18 Sequence number as per iCalendar. source title=et Title of the source; for example a title of a web page or an email subject. url=rebum. URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=dolor The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=lorem The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=justo The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=amet. Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=no Title of the event. transparency=nonumy Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=sed Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=kasd Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=lorem An optional extra label for additional information. ..office-location building-id=sanctus An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=nonumy An optional desk identifier. floor-id=rebum. An optional floor identifier. floor-section-id=tempor An optional floor section identifier. label=dolore The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=eos Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties.","title":"Required Request Value"},{"location":"events_import/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"events_import/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_import/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False.","title":"Optional Method Properties"},{"location":"events_import/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_insert/","text":"Creates an event. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events insert ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=true Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=false Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=amet The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=ut The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=at The user-visible icon for this solution. key type=sit The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=vero The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=duo The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=sadipscing The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=ut The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=rebum. Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=duo No description provided. the value will be associated with the given key ... signature=kasd The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=sadipscing Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=tempor The creator's name, if available. email=sea The creator's email address, if available. id=et The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=magna Description of the event. Can contain HTML. Optional. end date=takimata The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=rebum. The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=at The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=false Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=clita ETag of the resource. event-type=stet Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=aliquyam Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=ut Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=sit Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=vero The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=rebum. Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=dolores The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=5 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=dolores The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=sed The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=invidunt Preferences. the value will be associated with the given key title=clita The gadget's title. Deprecated. type=dolor The gadget's type. Deprecated. width=19 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=false Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=et An absolute link to the Google Hangout associated with this event. Read-only. html-link=sanctus An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=accusam Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=tempor Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=sed Type of the resource (\"calendar#event\"). location=est Geographic location of the event as free-form text. Optional. locked=false Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=diam The organizer's name, if available. email=at The organizer's email address, if available. It must be a valid email address as per RFC5322. id=erat The organizer's Profile ID, if available. self=false Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=ipsum The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=accusam The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolores The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=consetetur Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=no Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=diam List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=sea For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=true Whether the default reminders of the calendar apply to the event. .. sequence=86 Sequence number as per iCalendar. source title=gubergren Title of the source; for example a title of a web page or an email subject. url=ipsum URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=no The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=sit The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=kasd The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=amet Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=lorem Title of the event. transparency=justo Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=invidunt Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=sed Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=nonumy An optional extra label for additional information. ..office-location building-id=sea An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=ipsum An optional desk identifier. floor-id=kasd An optional floor identifier. floor-section-id=justo An optional floor section identifier. label=ea The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=at Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the creation of the new event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Whether to send notifications about the creation of the new event. Note that some emails might still be sent. The default is false. -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"events_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events insert ...","title":"Scopes"},{"location":"events_insert/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"events_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=true Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=false Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=amet The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=ut The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=at The user-visible icon for this solution. key type=sit The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=vero The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=duo The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=sadipscing The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=ut The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=rebum. Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=duo No description provided. the value will be associated with the given key ... signature=kasd The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=sadipscing Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=tempor The creator's name, if available. email=sea The creator's email address, if available. id=et The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=magna Description of the event. Can contain HTML. Optional. end date=takimata The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=rebum. The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=at The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=false Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=clita ETag of the resource. event-type=stet Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=aliquyam Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=ut Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=sit Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=vero The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=rebum. Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=dolores The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=5 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=dolores The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=sed The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=invidunt Preferences. the value will be associated with the given key title=clita The gadget's title. Deprecated. type=dolor The gadget's type. Deprecated. width=19 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=false Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=et An absolute link to the Google Hangout associated with this event. Read-only. html-link=sanctus An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=accusam Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=tempor Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=sed Type of the resource (\"calendar#event\"). location=est Geographic location of the event as free-form text. Optional. locked=false Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=diam The organizer's name, if available. email=at The organizer's email address, if available. It must be a valid email address as per RFC5322. id=erat The organizer's Profile ID, if available. self=false Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=ipsum The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=accusam The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolores The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=consetetur Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=no Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=diam List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=sea For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=true Whether the default reminders of the calendar apply to the event. .. sequence=86 Sequence number as per iCalendar. source title=gubergren Title of the source; for example a title of a web page or an email subject. url=ipsum URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=no The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=sit The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=kasd The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=amet Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=lorem Title of the event. transparency=justo Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=invidunt Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=sed Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=nonumy An optional extra label for additional information. ..office-location building-id=sea An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=ipsum An optional desk identifier. floor-id=kasd An optional floor identifier. floor-section-id=justo An optional floor section identifier. label=ea The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=at Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties.","title":"Required Request Value"},{"location":"events_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"events_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the creation of the new event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Whether to send notifications about the creation of the new event. Note that some emails might still be sent. The default is false. -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False.","title":"Optional Method Properties"},{"location":"events_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_instances/","text":"Returns instances of the specified recurring event. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events instances ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Recurring event identifier. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p original-start=string The original start time of the instance in the result. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset. -p time-min=string Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Instances"},{"location":"events_instances/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events instances ...","title":"Scopes"},{"location":"events_instances/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Recurring event identifier.","title":"Required Scalar Arguments"},{"location":"events_instances/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_instances/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p original-start=string The original start time of the instance in the result. Optional. -p page-token=string Token specifying which result page to return. Optional. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset. -p time-min=string Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar.","title":"Optional Method Properties"},{"location":"events_instances/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_list/","text":"Returns events on the specified calendar. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events list ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. -p event-types=string Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. The default is [\"default\", \"focusTime\", \"outOfOffice\"]. -p i-cal-uid=string Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p order-by=string The order of the events returned in the result. Optional. The default is an unspecified, stable order. -p page-token=string Token specifying which result page to return. Optional. -p private-extended-property=string Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints. -p q=string Free text search terms to find events that match these terms in the following fields: summary description location attendee's displayName attendee's email organizer's displayName organizer's email workingLocationProperties.officeLocation.buildingId workingLocationProperties.officeLocation.deskId workingLocationProperties.officeLocation.label workingLocationProperties.customLocation.label These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for \"Office\" or \"Bureau\" returns working location events of type officeLocation, whereas searching for \"Out of office\" or \"Abwesend\" returns out-of-office events. Optional. -p shared-extended-property=string Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False. -p show-hidden-invitations=boolean Whether to include hidden invitations in the result. Optional. The default is False. -p single-events=boolean Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state. These are: - iCalUID - orderBy - privateExtendedProperty - q - sharedExtendedProperty - timeMin - timeMax - updatedMin All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin. -p time-min=string Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. -p updated-min=string Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"events_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.events.readonly . You can set the scope for this method like this: calendar3 --scope <scope> events list ...","title":"Scopes"},{"location":"events_list/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"events_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. -p event-types=string Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. The default is [\"default\", \"focusTime\", \"outOfOffice\"]. -p i-cal-uid=string Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p order-by=string The order of the events returned in the result. Optional. The default is an unspecified, stable order. -p page-token=string Token specifying which result page to return. Optional. -p private-extended-property=string Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints. -p q=string Free text search terms to find events that match these terms in the following fields: summary description location attendee's displayName attendee's email organizer's displayName organizer's email workingLocationProperties.officeLocation.buildingId workingLocationProperties.officeLocation.deskId workingLocationProperties.officeLocation.label workingLocationProperties.customLocation.label These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for \"Office\" or \"Bureau\" returns working location events of type officeLocation, whereas searching for \"Out of office\" or \"Abwesend\" returns out-of-office events. Optional. -p shared-extended-property=string Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False. -p show-hidden-invitations=boolean Whether to include hidden invitations in the result. Optional. The default is False. -p single-events=boolean Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state. These are: - iCalUID - orderBy - privateExtendedProperty - q - sharedExtendedProperty - timeMin - timeMax - updatedMin All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin. -p time-min=string Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. -p updated-min=string Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.","title":"Optional Method Properties"},{"location":"events_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_move/","text":"Moves an event to another calendar, i.e. changes an event's organizer. Note that only default events can be moved; outOfOffice, focusTime and workingLocation events cannot be moved. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events move ... Required Scalar Arguments <calendar-id> (string) Calendar identifier of the source calendar where the event currently is on. <event-id> (string) Event identifier. <destination> (string) Calendar identifier of the target calendar where the event is to be moved to. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the change of the event's organizer. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Move"},{"location":"events_move/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events move ...","title":"Scopes"},{"location":"events_move/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier of the source calendar where the event currently is on. <event-id> (string) Event identifier. <destination> (string) Calendar identifier of the target calendar where the event is to be moved to.","title":"Required Scalar Arguments"},{"location":"events_move/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_move/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the change of the event's organizer.","title":"Optional Method Properties"},{"location":"events_move/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_patch/","text":"Updates an event. This method supports patch semantics. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events patch ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=false Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=invidunt The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=nonumy The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=erat The user-visible icon for this solution. key type=erat The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=dolores The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=ipsum The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=voluptua. The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=eos The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=duo Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=elitr No description provided. the value will be associated with the given key ... signature=consetetur The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=et Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=clita The creator's name, if available. email=sit The creator's email address, if available. id=takimata The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=nonumy Description of the event. Can contain HTML. Optional. end date=lorem The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=at The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=diam The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=false Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=sed ETag of the resource. event-type=et Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=ea Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=dolore Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=ipsum Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=ea The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=at Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=sit The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=3 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=lorem The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=stet The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=duo Preferences. the value will be associated with the given key title=elitr The gadget's title. Deprecated. type=aliquyam The gadget's type. Deprecated. width=70 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=et An absolute link to the Google Hangout associated with this event. Read-only. html-link=sed An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=stet Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=aliquyam Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=kasd Type of the resource (\"calendar#event\"). location=lorem Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=kasd The organizer's name, if available. email=tempor The organizer's email address, if available. It must be a valid email address as per RFC5322. id=dolor The organizer's Profile ID, if available. self=false Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=sit The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=rebum. The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=sea The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=ipsum Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=ipsum Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=false If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=eirmod List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=dolor For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=false Whether the default reminders of the calendar apply to the event. .. sequence=97 Sequence number as per iCalendar. source title=dolor Title of the source; for example a title of a web page or an email subject. url=consetetur URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=sit The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=lorem The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=nonumy Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=diam Title of the event. transparency=ipsum Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=invidunt Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=stet Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=voluptua. An optional extra label for additional information. ..office-location building-id=at An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=diam An optional desk identifier. floor-id=amet An optional floor identifier. floor-section-id=at An optional floor section identifier. label=eirmod The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=erat Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the event update (for example, title changes, etc.). -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Patch"},{"location":"events_patch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events patch ...","title":"Scopes"},{"location":"events_patch/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier.","title":"Required Scalar Arguments"},{"location":"events_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=false Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=invidunt The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=nonumy The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=erat The user-visible icon for this solution. key type=erat The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=dolores The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=ipsum The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=voluptua. The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=eos The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=duo Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=elitr No description provided. the value will be associated with the given key ... signature=consetetur The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=et Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=clita The creator's name, if available. email=sit The creator's email address, if available. id=takimata The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=nonumy Description of the event. Can contain HTML. Optional. end date=lorem The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=at The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=diam The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=false Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=sed ETag of the resource. event-type=et Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=ea Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=dolore Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=ipsum Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=ea The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=at Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=sit The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=3 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=lorem The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=stet The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=duo Preferences. the value will be associated with the given key title=elitr The gadget's title. Deprecated. type=aliquyam The gadget's type. Deprecated. width=70 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=false Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=true Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=et An absolute link to the Google Hangout associated with this event. Read-only. html-link=sed An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=stet Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=aliquyam Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=kasd Type of the resource (\"calendar#event\"). location=lorem Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=kasd The organizer's name, if available. email=tempor The organizer's email address, if available. It must be a valid email address as per RFC5322. id=dolor The organizer's Profile ID, if available. self=false Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=sit The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=rebum. The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=sea The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=ipsum Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=ipsum Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=false If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=eirmod List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=dolor For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=false Whether the default reminders of the calendar apply to the event. .. sequence=97 Sequence number as per iCalendar. source title=dolor Title of the source; for example a title of a web page or an email subject. url=consetetur URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=sit The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=lorem The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=nonumy Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=diam Title of the event. transparency=ipsum Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=invidunt Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=stet Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=voluptua. An optional extra label for additional information. ..office-location building-id=at An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=diam An optional desk identifier. floor-id=amet An optional floor identifier. floor-section-id=at An optional floor section identifier. label=eirmod The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=erat Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties.","title":"Required Request Value"},{"location":"events_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"events_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the event update (for example, title changes, etc.). -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False.","title":"Optional Method Properties"},{"location":"events_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_quick-add/","text":"Creates an event based on a simple text string. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events quick-add ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <text> (string) The text describing the event to be created. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the creation of the new event. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Quick Add"},{"location":"events_quick-add/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events quick-add ...","title":"Scopes"},{"location":"events_quick-add/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <text> (string) The text describing the event to be created.","title":"Required Scalar Arguments"},{"location":"events_quick-add/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_quick-add/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the creation of the new event.","title":"Optional Method Properties"},{"location":"events_quick-add/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_update/","text":"Updates an event. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events update ... Required Scalar Arguments <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=true Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=accusam The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=et The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=nonumy The user-visible icon for this solution. key type=accusam The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=ut The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=voluptua. The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=consetetur The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=dolor The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=amet Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=et No description provided. the value will be associated with the given key ... signature=aliquyam The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=ipsum Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=gubergren The creator's name, if available. email=invidunt The creator's email address, if available. id=sea The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=stet Description of the event. Can contain HTML. Optional. end date=sadipscing The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=no The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=tempor The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=true Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=sea ETag of the resource. event-type=sit Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=amet. Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=ipsum Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=at Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=vero The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=takimata Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=gubergren The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=27 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=invidunt The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=magna The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=sit Preferences. the value will be associated with the given key title=gubergren The gadget's title. Deprecated. type=elitr The gadget's type. Deprecated. width=51 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=true Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=false Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=lorem An absolute link to the Google Hangout associated with this event. Read-only. html-link=dolores An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=consetetur Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=stet Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=accusam Type of the resource (\"calendar#event\"). location=consetetur Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=nonumy The organizer's name, if available. email=sea The organizer's email address, if available. It must be a valid email address as per RFC5322. id=eos The organizer's Profile ID, if available. self=true Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=sed The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=labore The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=et The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=eirmod Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=sed Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=lorem List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=dolor For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=false Whether the default reminders of the calendar apply to the event. .. sequence=18 Sequence number as per iCalendar. source title=magna Title of the source; for example a title of a web page or an email subject. url=invidunt URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=et The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolor The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=erat Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=dolore Title of the event. transparency=vero Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=ea Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=et Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=amet. An optional extra label for additional information. ..office-location building-id=eirmod An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=sanctus An optional desk identifier. floor-id=sed An optional floor identifier. floor-section-id=dolor An optional floor section identifier. label=et The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=et Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the event update (for example, title changes, etc.). -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"events_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events update ...","title":"Scopes"},{"location":"events_update/#required-scalar-arguments","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. <event-id> (string) Event identifier.","title":"Required Scalar Arguments"},{"location":"events_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Event: anyone-can-add-self: boolean attendees-omitted: boolean color-id: string conference-data: conference-id: string conference-solution: icon-uri: string key: type: string name: string create-request: conference-solution-key: type: string request-id: string status: status-code: string notes: string parameters: add-on-parameters: parameters: { string: string } signature: string created: string creator: display-name: string email: string id: string self: boolean description: string end: date: string date-time: string time-zone: string end-time-unspecified: boolean etag: string event-type: string extended-properties: private: { string: string } shared: { string: string } focus-time-properties: auto-decline-mode: string chat-status: string decline-message: string gadget: display: string height: integer icon-link: string link: string preferences: { string: string } title: string type: string width: integer guests-can-invite-others: boolean guests-can-modify: boolean guests-can-see-other-guests: boolean hangout-link: string html-link: string i-cal-uid: string id: string kind: string location: string locked: boolean organizer: display-name: string email: string id: string self: boolean original-start-time: date: string date-time: string time-zone: string out-of-office-properties: auto-decline-mode: string decline-message: string private-copy: boolean recurrence: [string] recurring-event-id: string reminders: use-default: boolean sequence: integer source: title: string url: string start: date: string date-time: string time-zone: string status: string summary: string transparency: string updated: string visibility: string working-location-properties: custom-location: label: string office-location: building-id: string desk-id: string floor-id: string floor-section-id: string label: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . anyone-can-add-self=false Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. attendees-omitted=true Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. color-id=accusam The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional. conference-data conference-id=et The ID of the conference. Can be used by developers to keep track of conferences, should not be displayed to users. The ID value is formed differently for each conference solution type: eventHangout: ID is not set. (This conference type is deprecated.) eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.) hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc. addOn: ID is defined by the third-party provider. Optional. conference-solution icon-uri=nonumy The user-visible icon for this solution. key type=accusam The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. name=ut The user-visible name of this solution. Not localized. ..create-request.conference-solution-key type=voluptua. The conference solution type. If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications. The possible values are: \"eventHangout\" for Hangouts for consumers (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated; existing events may show this conference solution type but new conferences cannot be created) \"hangoutsMeet\" for Google Meet (http://meet.google.com) \"addOn\" for 3P conference providers .. request-id=consetetur The client-generated unique ID for this request. Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored. status status-code=dolor The current status of the conference create request. Read-only. The possible values are: \"pending\": the conference create request is still being processed. \"success\": the conference create request succeeded, the entry points are populated. \"failure\": the conference create request failed, there are no entry points. ... notes=amet Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional. parameters.add-on-parameters parameters=key=et No description provided. the value will be associated with the given key ... signature=aliquyam The signature of the conference data. Generated on server side. Unset for a conference with a failed create request. Optional for a conference with a pending create request. .. created=ipsum Creation time of the event (as a RFC3339 timestamp). Read-only. creator display-name=gubergren The creator's name, if available. email=invidunt The creator's email address, if available. id=sea The creator's Profile ID, if available. self=true Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. .. description=stet Description of the event. Can contain HTML. Optional. end date=sadipscing The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=no The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=tempor The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. end-time-unspecified=true Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. etag=sea ETag of the resource. event-type=sit Specific type of the event. This cannot be modified after the event is created. Possible values are: \"default\" - A regular event or not further specified. \"outOfOffice\" - An out-of-office event. \"focusTime\" - A focus-time event. \"workingLocation\" - A working location event. Currently, only \"default \" and \"workingLocation\" events can be created using the API. Extended support for other event types will be made available in later releases. extended-properties private=key=amet. Properties that are private to the copy of the event that appears on this calendar. the value will be associated with the given key shared=key=ipsum Properties that are shared between copies of the event on other attendees' calendars. the value will be associated with the given key ..focus-time-properties auto-decline-mode=at Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined. chat-status=vero The status to mark the user in Chat and related products. This can be available or doNotDisturb. decline-message=takimata Response message to set if an existing event or new invitation is automatically declined by Calendar. ..gadget display=gubergren The gadget's display mode. Deprecated. Possible values are: \"icon\" - The gadget displays next to the event's title in the calendar view. \"chip\" - The gadget displays when the event is clicked. height=27 The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated. icon-link=invidunt The gadget's icon URL. The URL scheme must be HTTPS. Deprecated. link=magna The gadget's URL. The URL scheme must be HTTPS. Deprecated. preferences=key=sit Preferences. the value will be associated with the given key title=gubergren The gadget's title. Deprecated. type=elitr The gadget's type. Deprecated. width=51 The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated. .. guests-can-invite-others=true Whether attendees other than the organizer can invite others to the event. Optional. The default is True. guests-can-modify=false Whether attendees other than the organizer can modify the event. Optional. The default is False. guests-can-see-other-guests=true Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. hangout-link=lorem An absolute link to the Google Hangout associated with this event. Read-only. html-link=dolores An absolute link to this event in the Google Calendar Web UI. Read-only. i-cal-uid=consetetur Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method. Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method. id=stet Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules: characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 the length of the ID must be between 5 and 1024 characters the ID must be unique per calendar Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122. If you do not specify an ID, it will be automatically generated by the server. Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs. kind=accusam Type of the resource (\"calendar#event\"). location=consetetur Geographic location of the event as free-form text. Optional. locked=true Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. organizer display-name=nonumy The organizer's name, if available. email=sea The organizer's email address, if available. It must be a valid email address as per RFC5322. id=eos The organizer's Profile ID, if available. self=true Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. ..original-start-time date=sed The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=labore The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=et The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. ..out-of-office-properties auto-decline-mode=eirmod Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined. decline-message=sed Response message to set if an existing event or new invitation is automatically declined by Calendar. .. private-copy=true If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. recurrence=lorem List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events. Each invocation of this argument appends the given value to the array. recurring-event-id=dolor For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable. reminders use-default=false Whether the default reminders of the calendar apply to the event. .. sequence=18 Sequence number as per iCalendar. source title=magna Title of the source; for example a title of a web page or an email subject. url=invidunt URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS. ..start date=et The date, in the format \"yyyy-mm-dd\", if this is an all-day event. date-time=et The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone. time-zone=dolor The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end. .. status=erat Status of the event. Optional. Possible values are: \"confirmed\" - The event is confirmed. This is the default status. \"tentative\" - The event is tentatively confirmed. \"cancelled\" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them. A cancelled status represents two different states depending on the event type: Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event. Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty. All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely. Deleted events are only guaranteed to have the id field populated. On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details. If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated. summary=dolore Title of the event. transparency=vero Whether the event blocks time on the calendar. Optional. Possible values are: \"opaque\" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI. \"transparent\" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI. updated=ea Last modification time of the event (as a RFC3339 timestamp). Read-only. visibility=et Visibility of the event. Optional. Possible values are: \"default\" - Uses the default visibility for events on the calendar. This is the default value. \"public\" - The event is public and event details are visible to all readers of the calendar. \"private\" - The event is private and only event attendees may view event details. \"confidential\" - The event is private. This value is provided for compatibility reasons. working-location-properties.custom-location label=amet. An optional extra label for additional information. ..office-location building-id=eirmod An optional building identifier. This should reference a building ID in the organization's Resources database. desk-id=sanctus An optional desk identifier. floor-id=sed An optional floor identifier. floor-section-id=dolor An optional floor section identifier. label=et The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database. .. type=et Type of the working location. Possible values are: \"homeOffice\" - The user is working at home. \"officeLocation\" - The user is working from an office. \"customLocation\" - The user is working from a custom location. Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored. Required when adding working location properties.","title":"Required Request Value"},{"location":"events_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"events_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided). -p conference-data-version=integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p send-notifications=boolean Deprecated. Please use sendUpdates instead. Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false. -p send-updates=string Guests who should receive notifications about the event update (for example, title changes, etc.). -p supports-attachments=boolean Whether API client performing operation supports event attachments. Optional. The default is False.","title":"Optional Method Properties"},{"location":"events_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"events_watch/","text":"Watch for changes to Events resources. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events watch ... Required Scalar Argument <calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=erat The address where notifications are delivered for this channel. expiration=eos Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=nonumy A UUID or similar unique string that identifies this channel. kind=ea Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=aliquyam Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=stet An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=rebum. A version-specific identifier for the watched resource. token=eirmod An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=dolores The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. -p event-types=string Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. The default is [\"default\", \"focusTime\", \"outOfOffice\"]. -p i-cal-uid=string Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p order-by=string The order of the events returned in the result. Optional. The default is an unspecified, stable order. -p page-token=string Token specifying which result page to return. Optional. -p private-extended-property=string Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints. -p q=string Free text search terms to find events that match these terms in the following fields: summary description location attendee's displayName attendee's email organizer's displayName organizer's email workingLocationProperties.officeLocation.buildingId workingLocationProperties.officeLocation.deskId workingLocationProperties.officeLocation.label workingLocationProperties.customLocation.label These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for \"Office\" or \"Bureau\" returns working location events of type officeLocation, whereas searching for \"Out of office\" or \"Abwesend\" returns out-of-office events. Optional. -p shared-extended-property=string Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False. -p show-hidden-invitations=boolean Whether to include hidden invitations in the result. Optional. The default is False. -p single-events=boolean Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state. These are: - iCalUID - orderBy - privateExtendedProperty - q - sharedExtendedProperty - timeMin - timeMax - updatedMin All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin. -p time-min=string Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. -p updated-min=string Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Watch"},{"location":"events_watch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> events watch ...","title":"Scopes"},{"location":"events_watch/#required-scalar-argument","text":"<calendar-id> (string) Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.","title":"Required Scalar Argument"},{"location":"events_watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=erat The address where notifications are delivered for this channel. expiration=eos Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=nonumy A UUID or similar unique string that identifies this channel. kind=ea Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=aliquyam Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=stet An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=rebum. A version-specific identifier for the watched resource. token=eirmod An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=dolores The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.","title":"Required Request Value"},{"location":"events_watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"events_watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"events_watch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p always-include-email=boolean Deprecated and ignored. -p event-types=string Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. The default is [\"default\", \"focusTime\", \"outOfOffice\"]. -p i-cal-uid=string Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID. -p max-attendees=integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional. -p max-results=integer Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional. -p order-by=string The order of the events returned in the result. Optional. The default is an unspecified, stable order. -p page-token=string Token specifying which result page to return. Optional. -p private-extended-property=string Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints. -p q=string Free text search terms to find events that match these terms in the following fields: summary description location attendee's displayName attendee's email organizer's displayName organizer's email workingLocationProperties.officeLocation.buildingId workingLocationProperties.officeLocation.deskId workingLocationProperties.officeLocation.label workingLocationProperties.customLocation.label These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for \"Office\" or \"Bureau\" returns working location events of type officeLocation, whereas searching for \"Out of office\" or \"Abwesend\" returns out-of-office events. Optional. -p shared-extended-property=string Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints. -p show-deleted=boolean Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False. -p show-hidden-invitations=boolean Whether to include hidden invitations in the result. Optional. The default is False. -p single-events=boolean Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state. These are: - iCalUID - orderBy - privateExtendedProperty - q - sharedExtendedProperty - timeMin - timeMax - updatedMin All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. -p time-max=string Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin. -p time-min=string Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax. -p time-zone=string Time zone used in the response. Optional. The default is the time zone of the calendar. -p updated-min=string Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.","title":"Optional Method Properties"},{"location":"events_watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"freebusy_query/","text":"Returns free/busy information for a set of calendars. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> freebusy query ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FreeBusyRequest: calendar-expansion-max: integer group-expansion-max: integer time-max: string time-min: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . calendar-expansion-max=19 Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50. group-expansion-max=93 Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100. time-max=invidunt The end of the interval for the query formatted as per RFC3339. time-min=dolor The start of the interval for the query formatted as per RFC3339. time-zone=eos Time zone used in the response. Optional. The default is UTC. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Query"},{"location":"freebusy_query/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> freebusy query ...","title":"Scopes"},{"location":"freebusy_query/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FreeBusyRequest: calendar-expansion-max: integer group-expansion-max: integer time-max: string time-min: string time-zone: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . calendar-expansion-max=19 Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50. group-expansion-max=93 Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100. time-max=invidunt The end of the interval for the query formatted as per RFC3339. time-min=dolor The start of the interval for the query formatted as per RFC3339. time-zone=eos Time zone used in the response. Optional. The default is UTC.","title":"Required Request Value"},{"location":"freebusy_query/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"freebusy_query/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"freebusy_query/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"settings_get/","text":"Returns a single user setting. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> settings get ... Required Scalar Argument <setting> (string) The id of the user setting. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"settings_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> settings get ...","title":"Scopes"},{"location":"settings_get/#required-scalar-argument","text":"<setting> (string) The id of the user setting.","title":"Required Scalar Argument"},{"location":"settings_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"settings_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"settings_list/","text":"Returns all user settings for the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> settings list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"settings_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar.readonly . You can set the scope for this method like this: calendar3 --scope <scope> settings list ...","title":"Scopes"},{"location":"settings_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"settings_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"settings_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"settings_watch/","text":"Watch for changes to Settings resources. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> settings watch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=magna The address where notifications are delivered for this channel. expiration=no Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=gubergren A UUID or similar unique string that identifies this channel. kind=erat Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=aliquyam Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=ea An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=lorem A version-specific identifier for the watched resource. token=elitr An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=justo The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Watch"},{"location":"settings_watch/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.settings.readonly If unset, the scope for this method defaults to https://www.googleapis.com/auth/calendar . You can set the scope for this method like this: calendar3 --scope <scope> settings watch ...","title":"Scopes"},{"location":"settings_watch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Channel: address: string expiration: string id: string kind: string params: { string: string } payload: boolean resource-id: string resource-uri: string token: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=magna The address where notifications are delivered for this channel. expiration=no Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional. id=gubergren A UUID or similar unique string that identifies this channel. kind=erat Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". params=key=aliquyam Additional parameters controlling delivery channel behavior. Optional. the value will be associated with the given key payload=false A Boolean value to indicate whether payload is wanted. Optional. resource-id=ea An opaque ID that identifies the resource being watched on this channel. Stable across different API versions. resource-uri=lorem A version-specific identifier for the watched resource. token=elitr An arbitrary string delivered to the target address with each notification delivered over this channel. Optional. type=justo The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.","title":"Required Request Value"},{"location":"settings_watch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"settings_watch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"settings_watch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional. -p page-token=string Token specifying which result page to return. Optional. -p sync-token=string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.","title":"Optional Method Properties"},{"location":"settings_watch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}