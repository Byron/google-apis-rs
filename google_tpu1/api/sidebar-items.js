initSidebarItems({"enum":[["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["AcceleratorType","A accelerator type that a Node can be configured with."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."],["ListAcceleratorTypesResponse","Response for ListAcceleratorTypes."],["ListLocationsResponse","The response message for Locations.ListLocations."],["ListNodesResponse","Response for ListNodes."],["ListOperationsResponse","The response message for Operations.ListOperations."],["ListTensorFlowVersionsResponse","Response for ListTensorFlowVersions."],["Location","A resource that represents Google Cloud Platform location."],["NetworkEndpoint","A network endpoint over which a TPU worker can be reached."],["Node","A TPU instance."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["ProjectLocationAcceleratorTypeGetCall","Gets AcceleratorType."],["ProjectLocationAcceleratorTypeListCall","Lists accelerator types supported by this API."],["ProjectLocationGetCall","Gets information about a location."],["ProjectLocationListCall","Lists information about the supported locations for this service."],["ProjectLocationNodeCreateCall","Creates a node."],["ProjectLocationNodeDeleteCall","Deletes a node."],["ProjectLocationNodeGetCall","Gets the details of a node."],["ProjectLocationNodeListCall","Lists nodes."],["ProjectLocationNodeReimageCall","Reimages a node's OS."],["ProjectLocationNodeStartCall","Starts a node."],["ProjectLocationNodeStopCall","Stops a node."],["ProjectLocationOperationCancelCall","Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."],["ProjectLocationOperationDeleteCall","Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."],["ProjectLocationOperationGetCall","Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."],["ProjectLocationOperationListCall","Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."],["ProjectLocationTensorflowVersionGetCall","Gets TensorFlow Version."],["ProjectLocationTensorflowVersionListCall","List TensorFlow versions supported by this API."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `TPU` hub."],["ReimageNodeRequest","Request for ReimageNode."],["SchedulingConfig","Sets the scheduling options for this node."],["StartNodeRequest","Request for StartNode."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the API Design Guide."],["StopNodeRequest","Request for StopNode."],["Symptom","A Symptom instance."],["TPU","Central instance to access all TPU related resource activities"],["TensorFlowVersion","A tensorflow version that a Node can be configured with."]]});