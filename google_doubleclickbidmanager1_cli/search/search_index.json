{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The doubleclickbidmanager1 command-line interface (CLI) allows to use most features of the Google DoubleClick Bid Manager service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the DoubleClick Bid Manager API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-doubleclickbidmanager1-cli Find the source code on github . Usage This documentation was generated from the DoubleClick Bid Manager API at revision 20210323 . The CLI is at version 5.0.4 . doubleclickbidmanager1 [options] lineitems downloadlineitems (-r <kv>)... [-p <v>]... [-o <out>] uploadlineitems (-r <kv>)... [-p <v>]... [-o <out>] queries createquery (-r <kv>)... [-p <v>]... [-o <out>] deletequery <query-id> [-p <v>]... getquery <query-id> [-p <v>]... [-o <out>] listqueries [-p <v>]... [-o <out>] runquery <query-id> (-r <kv>)... [-p <v>]... reports listreports <query-id> [-p <v>]... [-o <out>] sdf download (-r <kv>)... [-p <v>]... [-o <out>] doubleclickbidmanager1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with doubleclickbidmanager1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/doubleclickbidmanager1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/doubleclickbidmanager1-secret.json , assuming that the required doubleclickbidmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. doubleclickbidmanager1 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-doubleclickbidmanager1-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the DoubleClick Bid Manager API at revision 20210323 . The CLI is at version 5.0.4 . doubleclickbidmanager1 [options] lineitems downloadlineitems (-r <kv>)... [-p <v>]... [-o <out>] uploadlineitems (-r <kv>)... [-p <v>]... [-o <out>] queries createquery (-r <kv>)... [-p <v>]... [-o <out>] deletequery <query-id> [-p <v>]... getquery <query-id> [-p <v>]... [-o <out>] listqueries [-p <v>]... [-o <out>] runquery <query-id> (-r <kv>)... [-p <v>]... reports listreports <query-id> [-p <v>]... [-o <out>] sdf download (-r <kv>)... [-p <v>]... [-o <out>] doubleclickbidmanager1 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with doubleclickbidmanager1- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/doubleclickbidmanager1-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/doubleclickbidmanager1-secret.json , assuming that the required doubleclickbidmanager API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. doubleclickbidmanager1 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"lineitems_downloadlineitems/","text":"Retrieves line items in CSV format. YouTube & partners line items are not supported. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> lineitems downloadlineitems ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DownloadLineItemsRequest: file-spec: string filter-ids: [string] filter-type: string format: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-spec=et File specification (column names, types, order) in which the line items will be returned. Default to EWF. filter-ids=magna Ids of the specified filter type used to filter line items to fetch. If omitted, all the line items will be returned. Each invocation of this argument appends the given value to the array. filter-type=no Filter type used to filter line items to fetch. format=ipsum Format in which the line items will be returned. Default to CSV. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Downloadlineitems"},{"location":"lineitems_downloadlineitems/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> lineitems downloadlineitems ...","title":"Scopes"},{"location":"lineitems_downloadlineitems/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DownloadLineItemsRequest: file-spec: string filter-ids: [string] filter-type: string format: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-spec=et File specification (column names, types, order) in which the line items will be returned. Default to EWF. filter-ids=magna Ids of the specified filter type used to filter line items to fetch. If omitted, all the line items will be returned. Each invocation of this argument appends the given value to the array. filter-type=no Filter type used to filter line items to fetch. format=ipsum Format in which the line items will be returned. Default to CSV.","title":"Required Request Value"},{"location":"lineitems_downloadlineitems/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"lineitems_downloadlineitems/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"lineitems_downloadlineitems/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"lineitems_uploadlineitems/","text":"Uploads line items in CSV format. YouTube & partners line items are not supported. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> lineitems uploadlineitems ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UploadLineItemsRequest: dry-run: boolean format: string line-items: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . dry-run=false Set to true to get upload status without actually persisting the line items. format=amet. Format the line items are in. Default to CSV. line-items=takimata Line items in CSV to upload. Refer to Entity Write File Format for more information on file format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Uploadlineitems"},{"location":"lineitems_uploadlineitems/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> lineitems uploadlineitems ...","title":"Scopes"},{"location":"lineitems_uploadlineitems/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UploadLineItemsRequest: dry-run: boolean format: string line-items: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . dry-run=false Set to true to get upload status without actually persisting the line items. format=amet. Format the line items are in. Default to CSV. line-items=takimata Line items in CSV to upload. Refer to Entity Write File Format for more information on file format.","title":"Required Request Value"},{"location":"lineitems_uploadlineitems/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"lineitems_uploadlineitems/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"lineitems_uploadlineitems/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"queries_createquery/","text":"Creates a query. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries createquery ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Query: kind: string metadata: data-range: string format: string google-cloud-storage-path-for-latest-report: string google-drive-path-for-latest-report: string latest-report-run-time-ms: string locale: string report-count: integer running: boolean send-notification: boolean share-email-address: [string] title: string params: group-bys: [string] include-invite-data: boolean metrics: [string] type: string query-id: string report-data-end-time-ms: string report-data-start-time-ms: string schedule: end-time-ms: string frequency: string next-run-minute-of-day: integer next-run-timezone-code: string timezone-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=amet. Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#query\". metadata data-range=duo Range of report data. format=ipsum Format of the generated report. google-cloud-storage-path-for-latest-report=gubergren The path to the location in Google Cloud Storage where the latest report is stored. google-drive-path-for-latest-report=lorem The path in Google Drive for the latest report. latest-report-run-time-ms=gubergren The time when the latest report started to run. locale=eos Locale of the generated reports. Valid values are cs CZECH de GERMAN en ENGLISH es SPANISH fr FRENCH it ITALIAN ja JAPANESE ko KOREAN pl POLISH pt-BR BRAZILIAN_PORTUGUESE ru RUSSIAN tr TURKISH uk UKRAINIAN zh-CN CHINA_CHINESE zh-TW TAIWAN_CHINESE An locale string not in the list above will generate reports in English. report-count=97 Number of reports that have been generated for the query. running=true Whether the latest report is currently running. send-notification=false Whether to send an email notification when a report is ready. Default to false. share-email-address=amet List of email addresses which are sent email notifications when the report is finished. Separate from sendNotification. Each invocation of this argument appends the given value to the array. title=duo Query title. It is used to name the reports generated from this query. ..params group-bys=ipsum Data is grouped by the filters listed in this field. Each invocation of this argument appends the given value to the array. include-invite-data=false Deprecated. This field is no longer in use. metrics=ut Metrics to include as columns in your report. Each invocation of this argument appends the given value to the array. type=gubergren Report type. .. query-id=rebum. Query ID. report-data-end-time-ms=est The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise. report-data-start-time-ms=ipsum The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise. schedule end-time-ms=ipsum Datetime to periodically run the query until. frequency=est How often the query is run. next-run-minute-of-day=39 Time of day at which a new report will be generated, represented as minutes past midnight. Range is 0 to 1439. Only applies to scheduled reports. next-run-timezone-code=ea Canonical timezone code for report generation time. Defaults to America/New_York. .. timezone-code=dolor Canonical timezone code for report data time. Defaults to America/New_York. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createquery"},{"location":"queries_createquery/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries createquery ...","title":"Scopes"},{"location":"queries_createquery/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Query: kind: string metadata: data-range: string format: string google-cloud-storage-path-for-latest-report: string google-drive-path-for-latest-report: string latest-report-run-time-ms: string locale: string report-count: integer running: boolean send-notification: boolean share-email-address: [string] title: string params: group-bys: [string] include-invite-data: boolean metrics: [string] type: string query-id: string report-data-end-time-ms: string report-data-start-time-ms: string schedule: end-time-ms: string frequency: string next-run-minute-of-day: integer next-run-timezone-code: string timezone-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=amet. Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#query\". metadata data-range=duo Range of report data. format=ipsum Format of the generated report. google-cloud-storage-path-for-latest-report=gubergren The path to the location in Google Cloud Storage where the latest report is stored. google-drive-path-for-latest-report=lorem The path in Google Drive for the latest report. latest-report-run-time-ms=gubergren The time when the latest report started to run. locale=eos Locale of the generated reports. Valid values are cs CZECH de GERMAN en ENGLISH es SPANISH fr FRENCH it ITALIAN ja JAPANESE ko KOREAN pl POLISH pt-BR BRAZILIAN_PORTUGUESE ru RUSSIAN tr TURKISH uk UKRAINIAN zh-CN CHINA_CHINESE zh-TW TAIWAN_CHINESE An locale string not in the list above will generate reports in English. report-count=97 Number of reports that have been generated for the query. running=true Whether the latest report is currently running. send-notification=false Whether to send an email notification when a report is ready. Default to false. share-email-address=amet List of email addresses which are sent email notifications when the report is finished. Separate from sendNotification. Each invocation of this argument appends the given value to the array. title=duo Query title. It is used to name the reports generated from this query. ..params group-bys=ipsum Data is grouped by the filters listed in this field. Each invocation of this argument appends the given value to the array. include-invite-data=false Deprecated. This field is no longer in use. metrics=ut Metrics to include as columns in your report. Each invocation of this argument appends the given value to the array. type=gubergren Report type. .. query-id=rebum. Query ID. report-data-end-time-ms=est The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise. report-data-start-time-ms=ipsum The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise. schedule end-time-ms=ipsum Datetime to periodically run the query until. frequency=est How often the query is run. next-run-minute-of-day=39 Time of day at which a new report will be generated, represented as minutes past midnight. Range is 0 to 1439. Only applies to scheduled reports. next-run-timezone-code=ea Canonical timezone code for report generation time. Defaults to America/New_York. .. timezone-code=dolor Canonical timezone code for report data time. Defaults to America/New_York.","title":"Required Request Value"},{"location":"queries_createquery/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"queries_createquery/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"queries_createquery/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"queries_deletequery/","text":"Deletes a stored query as well as the associated stored reports. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries deletequery ... Required Scalar Argument <query-id> (string) Query ID to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deletequery"},{"location":"queries_deletequery/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries deletequery ...","title":"Scopes"},{"location":"queries_deletequery/#required-scalar-argument","text":"<query-id> (string) Query ID to delete.","title":"Required Scalar Argument"},{"location":"queries_deletequery/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"queries_getquery/","text":"Retrieves a stored query. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries getquery ... Required Scalar Argument <query-id> (string) Query ID to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getquery"},{"location":"queries_getquery/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries getquery ...","title":"Scopes"},{"location":"queries_getquery/#required-scalar-argument","text":"<query-id> (string) Query ID to retrieve.","title":"Required Scalar Argument"},{"location":"queries_getquery/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"queries_getquery/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"queries_listqueries/","text":"Retrieves stored queries. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries listqueries ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listqueries"},{"location":"queries_listqueries/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries listqueries ...","title":"Scopes"},{"location":"queries_listqueries/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"queries_listqueries/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"queries_runquery/","text":"Runs a stored query to generate a report. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries runquery ... Required Scalar Argument <query-id> (string) Query ID to run. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunQueryRequest: data-range: string report-data-end-time-ms: string report-data-start-time-ms: string timezone-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data-range=lorem Report data range used to generate the report. report-data-end-time-ms=eos The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise. report-data-start-time-ms=labore The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise. timezone-code=sed Canonical timezone code for report data time. Defaults to America/New_York. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Runquery"},{"location":"queries_runquery/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> queries runquery ...","title":"Scopes"},{"location":"queries_runquery/#required-scalar-argument","text":"<query-id> (string) Query ID to run.","title":"Required Scalar Argument"},{"location":"queries_runquery/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RunQueryRequest: data-range: string report-data-end-time-ms: string report-data-start-time-ms: string timezone-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . data-range=lorem Report data range used to generate the report. report-data-end-time-ms=eos The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise. report-data-start-time-ms=labore The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise. timezone-code=sed Canonical timezone code for report data time. Defaults to America/New_York.","title":"Required Request Value"},{"location":"queries_runquery/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"queries_runquery/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_listreports/","text":"Retrieves stored reports. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> reports listreports ... Required Scalar Argument <query-id> (string) Query ID with which the reports are associated. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listreports"},{"location":"reports_listreports/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> reports listreports ...","title":"Scopes"},{"location":"reports_listreports/#required-scalar-argument","text":"<query-id> (string) Query ID with which the reports are associated.","title":"Required Scalar Argument"},{"location":"reports_listreports/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_listreports/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"sdf_download/","text":"Retrieves entities in SDF format. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> sdf download ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DownloadRequest: file-types: [string] filter-ids: [string] filter-type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-types=duo File types that will be returned. If INVENTORY_SOURCE is requested, no other file types may be requested. Acceptable values are: - \"AD\" - \"AD_GROUP\" - \"CAMPAIGN\" - \"INSERTION_ORDER\" - \"INVENTORY_SOURCE\" - \"LINE_ITEM\" Each invocation of this argument appends the given value to the array. filter-ids=sed The IDs of the specified filter type. This is used to filter entities to fetch. At least one ID must be specified. Each invocation of this argument appends the given value to the array. filter-type=no Filter type used to filter entities to fetch. PARTNER_ID and INVENTORY_SOURCE_ID may only be used when downloading inventory sources. version=stet SDF Version (column names, types, order) in which the entities will be returned. Default to 5. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Download"},{"location":"sdf_download/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclickbidmanager scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclickbidmanager . You can set the scope for this method like this: doubleclickbidmanager1 --scope <scope> sdf download ...","title":"Scopes"},{"location":"sdf_download/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DownloadRequest: file-types: [string] filter-ids: [string] filter-type: string version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-types=duo File types that will be returned. If INVENTORY_SOURCE is requested, no other file types may be requested. Acceptable values are: - \"AD\" - \"AD_GROUP\" - \"CAMPAIGN\" - \"INSERTION_ORDER\" - \"INVENTORY_SOURCE\" - \"LINE_ITEM\" Each invocation of this argument appends the given value to the array. filter-ids=sed The IDs of the specified filter type. This is used to filter entities to fetch. At least one ID must be specified. Each invocation of this argument appends the given value to the array. filter-type=no Filter type used to filter entities to fetch. PARTNER_ID and INVENTORY_SOURCE_ID may only be used when downloading inventory sources. version=stet SDF Version (column names, types, order) in which the entities will be returned. Default to 5.","title":"Required Request Value"},{"location":"sdf_download/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"sdf_download/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"sdf_download/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}