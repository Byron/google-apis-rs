{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The partners2 command-line interface (CLI) allows to use most features of the Google Partners service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Partners API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-partners2-cli Find the source code on github . Usage This documentation was generated from the Partners API at revision 20180925 . The CLI is at version 5.0.4 . partners2 [options] analytics list [-p <v>]... [-o <out>] client-messages log (-r <kv>)... [-p <v>]... [-o <out>] companies get <company-id> [-p <v>]... [-o <out>] leads-create <company-id> (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] leads list [-p <v>]... [-o <out>] methods get-partnersstatus [-p <v>]... [-o <out>] update-companies (-r <kv>)... [-p <v>]... [-o <out>] update-leads (-r <kv>)... [-p <v>]... [-o <out>] offers history-list [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] user-events log (-r <kv>)... [-p <v>]... [-o <out>] user-states list [-p <v>]... [-o <out>] users create-company-relation <user-id> (-r <kv>)... [-p <v>]... [-o <out>] delete-company-relation <user-id> [-p <v>]... [-o <out>] get <user-id> [-p <v>]... [-o <out>] update-profile (-r <kv>)... [-p <v>]... [-o <out>] partners2 --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with partners2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/partners2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/partners2-secret.json , assuming that the required partners API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. partners2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-partners2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Partners API at revision 20180925 . The CLI is at version 5.0.4 . partners2 [options] analytics list [-p <v>]... [-o <out>] client-messages log (-r <kv>)... [-p <v>]... [-o <out>] companies get <company-id> [-p <v>]... [-o <out>] leads-create <company-id> (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] leads list [-p <v>]... [-o <out>] methods get-partnersstatus [-p <v>]... [-o <out>] update-companies (-r <kv>)... [-p <v>]... [-o <out>] update-leads (-r <kv>)... [-p <v>]... [-o <out>] offers history-list [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] user-events log (-r <kv>)... [-p <v>]... [-o <out>] user-states list [-p <v>]... [-o <out>] users create-company-relation <user-id> (-r <kv>)... [-p <v>]... [-o <out>] delete-company-relation <user-id> [-p <v>]... [-o <out>] get <user-id> [-p <v>]... [-o <out>] update-profile (-r <kv>)... [-p <v>]... [-o <out>] partners2 --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with partners2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/partners2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/partners2-secret.json , assuming that the required partners API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. partners2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"analytics_list/","text":"Lists analytics data for a user's associated company. Should only be called within the context of an authorized logged in user. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer analytics than requested. If unspecified or set to 0, default value is 30. Specifies the number of days in the date range when querying analytics. The page_token represents the end date of the date range and the start date is calculated using the page_size as the number of days BEFORE the end date. Must be a non-negative integer. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListAnalyticsResponse.next_page_token returned from the previous call to ListAnalytics. Will be a date string in YYYY-MM-DD format representing the end date of the date range of results to return. If unspecified or set to \"\", default value is the current date. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"analytics_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"analytics_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer Requested page size. Server may return fewer analytics than requested. If unspecified or set to 0, default value is 30. Specifies the number of days in the date range when querying analytics. The page_token represents the end date of the date range and the start date is calculated using the page_size as the number of days BEFORE the end date. Must be a non-negative integer. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListAnalyticsResponse.next_page_token returned from the previous call to ListAnalytics. Will be a date string in YYYY-MM-DD format representing the end date of the date range of results to return. If unspecified or set to \"\", default value is the current date. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"analytics_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"client-messages_log/","text":"Logs a generic message from the client, such as Failed to render component , Profile page is running slow , More than 500 users have accessed this result. , etc. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LogMessageRequest: client-info: { string: string } details: string level: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-info=key=et Map of client info, such as URL, browser navigator, browser platform, etc. the value will be associated with the given key details=magna Details about the client message. level=no Message level of client message. request-metadata experiment-ids=ipsum Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=voluptua. Locale to use for the current request. partners-session-id=at Google Partners session ID. traffic-source traffic-source-id=sanctus Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=sed Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=amet. IP address to use instead of the user's geo-located IP address. user-id=takimata Logged-in user ID to impersonate instead of the user's ID. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Log"},{"location":"client-messages_log/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LogMessageRequest: client-info: { string: string } details: string level: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . client-info=key=et Map of client info, such as URL, browser navigator, browser platform, etc. the value will be associated with the given key details=magna Details about the client message. level=no Message level of client message. request-metadata experiment-ids=ipsum Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=voluptua. Locale to use for the current request. partners-session-id=at Google Partners session ID. traffic-source traffic-source-id=sanctus Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=sed Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=amet. IP address to use instead of the user's geo-located IP address. user-id=takimata Logged-in user ID to impersonate instead of the user's ID.","title":"Required Request Value"},{"location":"client-messages_log/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"client-messages_log/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"client-messages_log/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"companies_get/","text":"Gets a company. Required Scalar Argument <company-id> (string) The ID of the company to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string The address to use for sorting the company's addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set. -p currency-code=string If the company's budget is in a different currency code than this one, then the converted budget is converted to this currency code. -p order-by=string How to order addresses within the returned company. Currently, only address and address desc is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p view=string The view of Company resource to be returned. This must not be COMPANY_VIEW_UNSPECIFIED . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"companies_get/#required-scalar-argument","text":"<company-id> (string) The ID of the company to retrieve.","title":"Required Scalar Argument"},{"location":"companies_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"companies_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string The address to use for sorting the company's addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set. -p currency-code=string If the company's budget is in a different currency code than this one, then the converted budget is converted to this currency code. -p order-by=string How to order addresses within the returned company. Currently, only address and address desc is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p view=string The view of Company resource to be returned. This must not be COMPANY_VIEW_UNSPECIFIED .","title":"Optional Method Properties"},{"location":"companies_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"companies_leads-create/","text":"Creates an advertiser lead for the given company ID. Required Scalar Argument <company-id> (string) The ID of the company to contact. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateLeadRequest: lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string recaptcha-challenge: id: string response: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .lead adwords-customer-id=amet. The AdWords Customer ID of the lead. comments=duo Comments lead source gave. create-time=ipsum Timestamp of when this lead was created. email=gubergren Email address of lead source. family-name=lorem Last name of lead source. given-name=gubergren First name of lead source. gps-motivations=eos List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=dolor ID of the lead. language-code=ea Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=true Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=invidunt The 3-letter currency code defined in ISO 4217. nanos=54 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=duo The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=ipsum Phone number of lead source. state=sed The lead's state in relation to the company. type=ut Type of lead. website-url=gubergren Website URL of lead source. ..recaptcha-challenge id=rebum. The ID of the reCaptcha challenge. response=est The response to the reCaptcha challenge. ..request-metadata experiment-ids=ipsum Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=ipsum Locale to use for the current request. partners-session-id=est Google Partners session ID. traffic-source traffic-source-id=gubergren Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=ea Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=dolor IP address to use instead of the user's geo-located IP address. user-id=lorem Logged-in user ID to impersonate instead of the user's ID. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Leads Create"},{"location":"companies_leads-create/#required-scalar-argument","text":"<company-id> (string) The ID of the company to contact.","title":"Required Scalar Argument"},{"location":"companies_leads-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateLeadRequest: lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string recaptcha-challenge: id: string response: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .lead adwords-customer-id=amet. The AdWords Customer ID of the lead. comments=duo Comments lead source gave. create-time=ipsum Timestamp of when this lead was created. email=gubergren Email address of lead source. family-name=lorem Last name of lead source. given-name=gubergren First name of lead source. gps-motivations=eos List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=dolor ID of the lead. language-code=ea Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=true Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=invidunt The 3-letter currency code defined in ISO 4217. nanos=54 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=duo The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=ipsum Phone number of lead source. state=sed The lead's state in relation to the company. type=ut Type of lead. website-url=gubergren Website URL of lead source. ..recaptcha-challenge id=rebum. The ID of the reCaptcha challenge. response=est The response to the reCaptcha challenge. ..request-metadata experiment-ids=ipsum Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=ipsum Locale to use for the current request. partners-session-id=est Google Partners session ID. traffic-source traffic-source-id=gubergren Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=ea Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=dolor IP address to use instead of the user's geo-located IP address. user-id=lorem Logged-in user ID to impersonate instead of the user's ID.","title":"Required Request Value"},{"location":"companies_leads-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"companies_leads-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"companies_leads-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"companies_list/","text":"Lists companies. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string The address to use when searching for companies. If not given, the geo-located address of the request is used. -p company-name=string Company name to search for. -p gps-motivations=string List of reasons for using Google Partner Search to get companies. -p industries=string List of industries the company can help with. -p language-codes=string List of language codes that company can support. Only primary language subtags are accepted as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). -p max-monthly-budget-currency-code=string The 3-letter currency code defined in ISO 4217. -p max-monthly-budget-nanos=integer Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. -p max-monthly-budget-units=string The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. -p min-monthly-budget-currency-code=string The 3-letter currency code defined in ISO 4217. -p min-monthly-budget-nanos=integer Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. -p min-monthly-budget-units=string The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. -p order-by=string How to order addresses within the returned companies. Currently, only address and address desc is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively. -p page-size=integer Requested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListCompaniesResponse.next_page_token returned from the previous call to ListCompanies. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p services=string List of services that the returned agencies should provide. If this is not empty, any returned agency must have at least one of these services, or one of the specializations in the \"specializations\" field. -p specializations=string List of specializations that the returned agencies should provide. If this is not empty, any returned agency must have at least one of these specializations, or one of the services in the \"services\" field. -p view=string The view of the Company resource to be returned. This must not be COMPANY_VIEW_UNSPECIFIED . -p website-url=string Website URL that will help to find a better matched company. . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"companies_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"companies_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p address=string The address to use when searching for companies. If not given, the geo-located address of the request is used. -p company-name=string Company name to search for. -p gps-motivations=string List of reasons for using Google Partner Search to get companies. -p industries=string List of industries the company can help with. -p language-codes=string List of language codes that company can support. Only primary language subtags are accepted as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). -p max-monthly-budget-currency-code=string The 3-letter currency code defined in ISO 4217. -p max-monthly-budget-nanos=integer Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. -p max-monthly-budget-units=string The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. -p min-monthly-budget-currency-code=string The 3-letter currency code defined in ISO 4217. -p min-monthly-budget-nanos=integer Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. -p min-monthly-budget-units=string The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. -p order-by=string How to order addresses within the returned companies. Currently, only address and address desc is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively. -p page-size=integer Requested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListCompaniesResponse.next_page_token returned from the previous call to ListCompanies. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p services=string List of services that the returned agencies should provide. If this is not empty, any returned agency must have at least one of these services, or one of the specializations in the \"specializations\" field. -p specializations=string List of specializations that the returned agencies should provide. If this is not empty, any returned agency must have at least one of these specializations, or one of the services in the \"services\" field. -p view=string The view of the Company resource to be returned. This must not be COMPANY_VIEW_UNSPECIFIED . -p website-url=string Website URL that will help to find a better matched company. .","title":"Optional Method Properties"},{"location":"companies_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"leads_list/","text":"Lists advertiser leads for a user's associated company. Should only be called within the context of an authorized logged in user. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string How to order Leads. Currently, only create_time and create_time desc are supported -p page-size=integer Requested page size. Server may return fewer leads than requested. If unspecified, server picks an appropriate default. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListLeadsResponse.next_page_token returned from the previous call to ListLeads. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"leads_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"leads_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string How to order Leads. Currently, only create_time and create_time desc are supported -p page-size=integer Requested page size. Server may return fewer leads than requested. If unspecified, server picks an appropriate default. -p page-token=string A token identifying a page of results that the server returns. Typically, this is the value of ListLeadsResponse.next_page_token returned from the previous call to ListLeads. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"leads_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"methods_get-partnersstatus/","text":"Gets Partners Status of the logged in user's agency. Should only be called if the logged in user is the admin of the agency. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Partnersstatus"},{"location":"methods_get-partnersstatus/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"methods_get-partnersstatus/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"methods_get-partnersstatus/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"methods_update-companies/","text":"Update company. Should only be called within the context of an authorized logged in user. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Company: additional-websites: [string] auto-approval-email-domains: [string] badge-authority-in-awn: boolean badge-tier: string company-types: [string] converted-min-monthly-budget: currency-code: string nanos: integer units: string id: string industries: [string] name: string original-min-monthly-budget: currency-code: string nanos: integer units: string primary-adwords-manager-account-id: string primary-language-code: string primary-location: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string profile-status: string public-profile: display-image-url: string display-name: string id: string profile-image: string url: string services: [string] website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . additional-websites=eos URL of the company's additional websites used to verify the dynamic badges. These are stored as full URLs as entered by the user, but only the TLD will be used for the actual verification. Each invocation of this argument appends the given value to the array. auto-approval-email-domains=labore Email domains that allow users with a matching email address to get auto-approved for associating with this company. Each invocation of this argument appends the given value to the array. badge-authority-in-awn=true Whether the company's badge authority is in AWN badge-tier=duo Partner badge tier company-types=sed Company type labels listed on the company's profile. Each invocation of this argument appends the given value to the array. converted-min-monthly-budget currency-code=no The 3-letter currency code defined in ISO 4217. nanos=86 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=kasd The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. id=et The ID of the company. industries=sed Industries the company can help with. Each invocation of this argument appends the given value to the array. name=et The name of the company. original-min-monthly-budget currency-code=et The 3-letter currency code defined in ISO 4217. nanos=25 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=erat The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. primary-adwords-manager-account-id=sed The Primary AdWords Manager Account id. primary-language-code=duo The primary language code of the company, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). primary-location address=dolore The single string version of the address. address-line=et The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=voluptua. Top-level administrative subdivision of this country. dependent-locality=amet. Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=consetetur Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.07223777776561668 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.9625057030686941 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=et Generally refers to the city/town portion of an address. postal-code=sadipscing Values are frequently alphanumeric. region-code=stet CLDR (Common Locale Data Repository) region code . sorting-code=dolor Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. profile-status=duo The public viewability status of the company's profile. public-profile display-image-url=vero The URL to the main display image of the public profile. Being deprecated. display-name=vero The display name of the public profile. id=invidunt The ID which can be used to retrieve more details about the public profile. profile-image=stet The URL to the main profile image of the public profile. url=vero The URL of the public profile. .. services=elitr Services the company can help with. Each invocation of this argument appends the given value to the array. website-url=lorem URL of the company's website. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p update-mask=string Standard field mask for the set of fields to be updated. Required with at least 1 value in FieldMask's paths. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Companies"},{"location":"methods_update-companies/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Company: additional-websites: [string] auto-approval-email-domains: [string] badge-authority-in-awn: boolean badge-tier: string company-types: [string] converted-min-monthly-budget: currency-code: string nanos: integer units: string id: string industries: [string] name: string original-min-monthly-budget: currency-code: string nanos: integer units: string primary-adwords-manager-account-id: string primary-language-code: string primary-location: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string profile-status: string public-profile: display-image-url: string display-name: string id: string profile-image: string url: string services: [string] website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . additional-websites=eos URL of the company's additional websites used to verify the dynamic badges. These are stored as full URLs as entered by the user, but only the TLD will be used for the actual verification. Each invocation of this argument appends the given value to the array. auto-approval-email-domains=labore Email domains that allow users with a matching email address to get auto-approved for associating with this company. Each invocation of this argument appends the given value to the array. badge-authority-in-awn=true Whether the company's badge authority is in AWN badge-tier=duo Partner badge tier company-types=sed Company type labels listed on the company's profile. Each invocation of this argument appends the given value to the array. converted-min-monthly-budget currency-code=no The 3-letter currency code defined in ISO 4217. nanos=86 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=kasd The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. id=et The ID of the company. industries=sed Industries the company can help with. Each invocation of this argument appends the given value to the array. name=et The name of the company. original-min-monthly-budget currency-code=et The 3-letter currency code defined in ISO 4217. nanos=25 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=erat The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. primary-adwords-manager-account-id=sed The Primary AdWords Manager Account id. primary-language-code=duo The primary language code of the company, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). primary-location address=dolore The single string version of the address. address-line=et The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=voluptua. Top-level administrative subdivision of this country. dependent-locality=amet. Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=consetetur Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.07223777776561668 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.9625057030686941 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=et Generally refers to the city/town portion of an address. postal-code=sadipscing Values are frequently alphanumeric. region-code=stet CLDR (Common Locale Data Repository) region code . sorting-code=dolor Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. profile-status=duo The public viewability status of the company's profile. public-profile display-image-url=vero The URL to the main display image of the public profile. Being deprecated. display-name=vero The display name of the public profile. id=invidunt The ID which can be used to retrieve more details about the public profile. profile-image=stet The URL to the main profile image of the public profile. url=vero The URL of the public profile. .. services=elitr Services the company can help with. Each invocation of this argument appends the given value to the array. website-url=lorem URL of the company's website.","title":"Required Request Value"},{"location":"methods_update-companies/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"methods_update-companies/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"methods_update-companies/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p update-mask=string Standard field mask for the set of fields to be updated. Required with at least 1 value in FieldMask's paths.","title":"Optional Method Properties"},{"location":"methods_update-companies/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"methods_update-leads/","text":"Updates the specified lead. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adwords-customer-id=diam The AdWords Customer ID of the lead. comments=no Comments lead source gave. create-time=ipsum Timestamp of when this lead was created. email=accusam Email address of lead source. family-name=takimata Last name of lead source. given-name=consetetur First name of lead source. gps-motivations=voluptua. List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=et ID of the lead. language-code=erat Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=false Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=amet. The 3-letter currency code defined in ISO 4217. nanos=71 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=takimata The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=dolores Phone number of lead source. state=gubergren The lead's state in relation to the company. type=et Type of lead. website-url=accusam Website URL of lead source. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p update-mask=string Standard field mask for the set of fields to be updated. Required with at least 1 value in FieldMask's paths. Only state and adwords_customer_id are currently supported. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Leads"},{"location":"methods_update-leads/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adwords-customer-id=diam The AdWords Customer ID of the lead. comments=no Comments lead source gave. create-time=ipsum Timestamp of when this lead was created. email=accusam Email address of lead source. family-name=takimata Last name of lead source. given-name=consetetur First name of lead source. gps-motivations=voluptua. List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=et ID of the lead. language-code=erat Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=false Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=amet. The 3-letter currency code defined in ISO 4217. nanos=71 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=takimata The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=dolores Phone number of lead source. state=gubergren The lead's state in relation to the company. type=et Type of lead. website-url=accusam Website URL of lead source.","title":"Required Request Value"},{"location":"methods_update-leads/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"methods_update-leads/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"methods_update-leads/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p update-mask=string Standard field mask for the set of fields to be updated. Required with at least 1 value in FieldMask's paths. Only state and adwords_customer_id are currently supported.","title":"Optional Method Properties"},{"location":"methods_update-leads/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"offers_history-list/","text":"Lists the Historical Offers for the current user (or user's entire company) Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p entire-company=boolean if true, show history for the entire company. Requires user to be admin. -p order-by=string Comma-separated list of fields to order by, e.g.: \"foo,bar,baz\". Use \"foo desc\" to sort descending. List of valid field names is: name, offer_code, expiration_time, status, last_modified_time, sender_name, creation_time, country_code, offer_type. -p page-size=integer Maximum number of rows to return per page. -p page-token=string Token to retrieve a specific page. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"History List"},{"location":"offers_history-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"offers_history-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p entire-company=boolean if true, show history for the entire company. Requires user to be admin. -p order-by=string Comma-separated list of fields to order by, e.g.: \"foo,bar,baz\". Use \"foo desc\" to sort descending. List of valid field names is: name, offer_code, expiration_time, status, last_modified_time, sender_name, creation_time, country_code, offer_type. -p page-size=integer Maximum number of rows to return per page. -p page-token=string Token to retrieve a specific page. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"offers_history-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"offers_list/","text":"Lists the Offers available for the current user Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"offers_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"offers_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"offers_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"user-events_log/","text":"Logs a user event. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LogUserEventRequest: event-action: string event-category: string event-scope: string lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . event-action=voluptua. The action that occurred. event-category=dolore The category the action belongs to. event-scope=dolore The scope of the event. lead adwords-customer-id=dolore The AdWords Customer ID of the lead. comments=voluptua. Comments lead source gave. create-time=amet. Timestamp of when this lead was created. email=ea Email address of lead source. family-name=sadipscing Last name of lead source. given-name=lorem First name of lead source. gps-motivations=invidunt List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=no ID of the lead. language-code=est Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=true Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=sit The 3-letter currency code defined in ISO 4217. nanos=66 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=tempor The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=aliquyam Phone number of lead source. state=ipsum The lead's state in relation to the company. type=et Type of lead. website-url=sanctus Website URL of lead source. ..request-metadata experiment-ids=lorem Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=est Locale to use for the current request. partners-session-id=sed Google Partners session ID. traffic-source traffic-source-id=diam Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=dolores Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=dolores IP address to use instead of the user's geo-located IP address. user-id=et Logged-in user ID to impersonate instead of the user's ID. ... url=sed The URL where the event occurred. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Log"},{"location":"user-events_log/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LogUserEventRequest: event-action: string event-category: string event-scope: string lead: adwords-customer-id: string comments: string create-time: string email: string family-name: string given-name: string gps-motivations: [string] id: string language-code: string marketing-opt-in: boolean min-monthly-budget: currency-code: string nanos: integer units: string phone-number: string state: string type: string website-url: string request-metadata: experiment-ids: [string] locale: string partners-session-id: string traffic-source: traffic-source-id: string traffic-sub-id: string user-overrides: ip-address: string user-id: string url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . event-action=voluptua. The action that occurred. event-category=dolore The category the action belongs to. event-scope=dolore The scope of the event. lead adwords-customer-id=dolore The AdWords Customer ID of the lead. comments=voluptua. Comments lead source gave. create-time=amet. Timestamp of when this lead was created. email=ea Email address of lead source. family-name=sadipscing Last name of lead source. given-name=lorem First name of lead source. gps-motivations=invidunt List of reasons for using Google Partner Search and creating a lead. Each invocation of this argument appends the given value to the array. id=no ID of the lead. language-code=est Language code of the lead's language preference, as defined by <a href=\"https://tools.ietf.org/html/bcp47\">BCP 47</a> (IETF BCP 47, \"Tags for Identifying Languages\"). marketing-opt-in=true Whether or not the lead signed up for marketing emails min-monthly-budget currency-code=sit The 3-letter currency code defined in ISO 4217. nanos=66 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=tempor The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. .. phone-number=aliquyam Phone number of lead source. state=ipsum The lead's state in relation to the company. type=et Type of lead. website-url=sanctus Website URL of lead source. ..request-metadata experiment-ids=lorem Experiment IDs the current request belongs to. Each invocation of this argument appends the given value to the array. locale=est Locale to use for the current request. partners-session-id=sed Google Partners session ID. traffic-source traffic-source-id=diam Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. traffic-sub-id=dolores Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. ..user-overrides ip-address=dolores IP address to use instead of the user's geo-located IP address. user-id=et Logged-in user ID to impersonate instead of the user's ID. ... url=sed The URL where the event occurred.","title":"Required Request Value"},{"location":"user-events_log/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"user-events_log/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"user-events_log/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"user-states_list/","text":"Lists states for current user. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"user-states_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"user-states_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"user-states_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_create-company-relation/","text":"Creates a user's company relation. Affiliates the user to a company. Required Scalar Argument <user-id> (string) The ID of the user. Can be set to <code>me</code> to mean the currently authenticated user. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompanyRelation: address: string badge-tier: string company-admin: boolean company-id: string creation-time: string internal-company-id: string is-pending: boolean logo-url: string manager-account: string name: string phone-number: string primary-address: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string primary-country-code: int64 primary-language-code: string resolved-timestamp: string segment: [string] state: string website: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=no The primary address for this company. badge-tier=et Whether the company is a Partner. company-admin=false Indicates if the user is an admin for this company. company-id=sed The ID of the company. There may be no id if this is a pending company.5 creation-time=no The timestamp of when affiliation was requested. @OutputOnly internal-company-id=nonumy The internal company ID. Only available for a whitelisted set of api clients. is-pending=false The flag that indicates if the company is pending verification. logo-url=sadipscing A URL to a profile photo, e.g. a G+ profile photo. manager-account=aliquyam The AdWords manager account # associated this company. name=dolores The name (in the company's primary language) for the company. phone-number=sadipscing The phone number for the company's primary address. primary-address address=erat The single string version of the address. address-line=aliquyam The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=amet Top-level administrative subdivision of this country. dependent-locality=est Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=et Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.7169672018374179 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.906716808162772 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=consetetur Generally refers to the city/town portion of an address. postal-code=consetetur Values are frequently alphanumeric. region-code=stet CLDR (Common Locale Data Repository) region code . sorting-code=est Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. primary-country-code=-82 The primary country code of the company. primary-language-code=elitr The primary language code of the company. resolved-timestamp=duo The timestamp when the user was approved. @OutputOnly segment=diam The segment the company is classified as. Each invocation of this argument appends the given value to the array. state=est The state of relationship, in terms of approvals. website=sit The website URL for this company. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create Company Relation"},{"location":"users_create-company-relation/#required-scalar-argument","text":"<user-id> (string) The ID of the user. Can be set to <code>me</code> to mean the currently authenticated user.","title":"Required Scalar Argument"},{"location":"users_create-company-relation/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompanyRelation: address: string badge-tier: string company-admin: boolean company-id: string creation-time: string internal-company-id: string is-pending: boolean logo-url: string manager-account: string name: string phone-number: string primary-address: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string primary-country-code: int64 primary-language-code: string resolved-timestamp: string segment: [string] state: string website: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . address=no The primary address for this company. badge-tier=et Whether the company is a Partner. company-admin=false Indicates if the user is an admin for this company. company-id=sed The ID of the company. There may be no id if this is a pending company.5 creation-time=no The timestamp of when affiliation was requested. @OutputOnly internal-company-id=nonumy The internal company ID. Only available for a whitelisted set of api clients. is-pending=false The flag that indicates if the company is pending verification. logo-url=sadipscing A URL to a profile photo, e.g. a G+ profile photo. manager-account=aliquyam The AdWords manager account # associated this company. name=dolores The name (in the company's primary language) for the company. phone-number=sadipscing The phone number for the company's primary address. primary-address address=erat The single string version of the address. address-line=aliquyam The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=amet Top-level administrative subdivision of this country. dependent-locality=est Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=et Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.7169672018374179 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.906716808162772 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=consetetur Generally refers to the city/town portion of an address. postal-code=consetetur Values are frequently alphanumeric. region-code=stet CLDR (Common Locale Data Repository) region code . sorting-code=est Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. primary-country-code=-82 The primary country code of the company. primary-language-code=elitr The primary language code of the company. resolved-timestamp=duo The timestamp when the user was approved. @OutputOnly segment=diam The segment the company is classified as. Each invocation of this argument appends the given value to the array. state=est The state of relationship, in terms of approvals. website=sit The website URL for this company.","title":"Required Request Value"},{"location":"users_create-company-relation/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"users_create-company-relation/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_create-company-relation/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"users_create-company-relation/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_delete-company-relation/","text":"Deletes a user's company relation. Unaffiliaites the user from a company. Required Scalar Argument <user-id> (string) The ID of the user. Can be set to <code>me</code> to mean the currently authenticated user. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete Company Relation"},{"location":"users_delete-company-relation/#required-scalar-argument","text":"<user-id> (string) The ID of the user. Can be set to <code>me</code> to mean the currently authenticated user.","title":"Required Scalar Argument"},{"location":"users_delete-company-relation/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_delete-company-relation/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"users_delete-company-relation/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_get/","text":"Gets a user. Required Scalar Argument <user-id> (string) Identifier of the user. Can be set to <code>me</code> to mean the currently authenticated user. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p user-view=string Specifies what parts of the user information to return. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"users_get/#required-scalar-argument","text":"<user-id> (string) Identifier of the user. Can be set to <code>me</code> to mean the currently authenticated user.","title":"Required Scalar Argument"},{"location":"users_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. -p user-view=string Specifies what parts of the user information to return.","title":"Optional Method Properties"},{"location":"users_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_update-profile/","text":"Updates a user's profile. A user can only update their own profile and should only be called within the context of a logged in user. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserProfile: address: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string adwords-manager-account: string channels: [string] email-address: string email-opt-ins: market-comm: boolean performance-suggestions: boolean phone-contact: boolean physical-mail: boolean special-offers: boolean family-name: string given-name: string industries: [string] job-functions: [string] languages: [string] markets: [string] migrate-to-afa: boolean phone-number: string primary-country-code: int64 profile-public: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .address address=sed The single string version of the address. address-line=eos The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=lorem Top-level administrative subdivision of this country. dependent-locality=ea Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=stet Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.6437440335822143 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.26366414664221993 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=et Generally refers to the city/town portion of an address. postal-code=at Values are frequently alphanumeric. region-code=dolore CLDR (Common Locale Data Repository) region code . sorting-code=eirmod Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. adwords-manager-account=lorem If the user has edit access to multiple accounts, the user can choose the preferred account and it is used when a personal account is needed. Can be empty. channels=accusam A list of ids representing which channels the user selected they were in. Each invocation of this argument appends the given value to the array. email-address=amet The email address the user has selected on the Partners site as primary. email-opt-ins market-comm=true An opt-in about receiving email from Partners marketing teams. Includes member-only events and special promotional offers for Google products. performance-suggestions=false An opt-in about receiving email with customized AdWords campaign management tips. phone-contact=false An opt-in to allow recieivng phone calls about their Partners account. physical-mail=true An opt-in to receive special promotional gifts and material in the mail. special-offers=true An opt-in about receiving email regarding new features and products. .. family-name=et The user's family name. given-name=at The user's given name. industries=dolor A list of ids representing which industries the user selected. Each invocation of this argument appends the given value to the array. job-functions=et A list of ids represnting which job categories the user selected. Each invocation of this argument appends the given value to the array. languages=sit The list of languages this user understands. Each invocation of this argument appends the given value to the array. markets=erat A list of ids representing which markets the user was interested in. Each invocation of this argument appends the given value to the array. migrate-to-afa=true Whether or not to migrate the user's exam data to Academy for Ads. phone-number=et The user's phone number. primary-country-code=-12 The user's primary country, an ISO 2-character code. profile-public=true Whether the user's public profile is visible to anyone with the URL. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Profile"},{"location":"users_update-profile/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UserProfile: address: address: string address-line: [string] administrative-area: string dependent-locality: string language-code: string lat-lng: latitude: number longitude: number locality: string postal-code: string region-code: string sorting-code: string adwords-manager-account: string channels: [string] email-address: string email-opt-ins: market-comm: boolean performance-suggestions: boolean phone-contact: boolean physical-mail: boolean special-offers: boolean family-name: string given-name: string industries: [string] job-functions: [string] languages: [string] markets: [string] migrate-to-afa: boolean phone-number: string primary-country-code: int64 profile-public: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .address address=sed The single string version of the address. address-line=eos The following address lines represent the most specific part of any address. Each invocation of this argument appends the given value to the array. administrative-area=lorem Top-level administrative subdivision of this country. dependent-locality=ea Dependent locality or sublocality. Used for UK dependent localities, or neighborhoods or boroughs in other locations. language-code=stet Language code of the address. Should be in BCP 47 format. lat-lng latitude=0.6437440335822143 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.26366414664221993 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. locality=et Generally refers to the city/town portion of an address. postal-code=at Values are frequently alphanumeric. region-code=dolore CLDR (Common Locale Data Repository) region code . sorting-code=eirmod Use of this code is very country-specific, but will refer to a secondary classification code for sorting mail. .. adwords-manager-account=lorem If the user has edit access to multiple accounts, the user can choose the preferred account and it is used when a personal account is needed. Can be empty. channels=accusam A list of ids representing which channels the user selected they were in. Each invocation of this argument appends the given value to the array. email-address=amet The email address the user has selected on the Partners site as primary. email-opt-ins market-comm=true An opt-in about receiving email from Partners marketing teams. Includes member-only events and special promotional offers for Google products. performance-suggestions=false An opt-in about receiving email with customized AdWords campaign management tips. phone-contact=false An opt-in to allow recieivng phone calls about their Partners account. physical-mail=true An opt-in to receive special promotional gifts and material in the mail. special-offers=true An opt-in about receiving email regarding new features and products. .. family-name=et The user's family name. given-name=at The user's given name. industries=dolor A list of ids representing which industries the user selected. Each invocation of this argument appends the given value to the array. job-functions=et A list of ids represnting which job categories the user selected. Each invocation of this argument appends the given value to the array. languages=sit The list of languages this user understands. Each invocation of this argument appends the given value to the array. markets=erat A list of ids representing which markets the user was interested in. Each invocation of this argument appends the given value to the array. migrate-to-afa=true Whether or not to migrate the user's exam data to Academy for Ads. phone-number=et The user's phone number. primary-country-code=-12 The user's primary country, an ISO 2-character code. profile-public=true Whether the user's public profile is visible to anyone with the URL.","title":"Required Request Value"},{"location":"users_update-profile/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"users_update-profile/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_update-profile/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-metadata-experiment-ids=string Experiment IDs the current request belongs to. -p request-metadata-locale=string Locale to use for the current request. -p request-metadata-partners-session-id=string Google Partners session ID. -p request-metadata-traffic-source-traffic-source-id=string Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-traffic-source-traffic-sub-id=string Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us. -p request-metadata-user-overrides-ip-address=string IP address to use instead of the user's geo-located IP address. -p request-metadata-user-overrides-user-id=string Logged-in user ID to impersonate instead of the user's ID.","title":"Optional Method Properties"},{"location":"users_update-profile/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}