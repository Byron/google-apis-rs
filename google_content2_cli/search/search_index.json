{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The content2 command-line interface (CLI) allows to use most features of the Google Shopping Content service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Shopping Content API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-content2-cli Find the source code on github . Usage This documentation was generated from the Shopping Content API at revision 20220303 . The CLI is at version 5.0.4 . content2 [options] accounts authinfo [-p <v>]... [-o <out>] claimwebsite <merchant-id> <account-id> [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <account-id> [-p <v>]... get <merchant-id> <account-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] link <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] accountstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] accounttax custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] datafeeds custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <datafeed-id> [-p <v>]... fetchnow <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] get <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <datafeed-id> (-r <kv>)... [-p <v>]... [-o <out>] datafeedstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] inventory custombatch (-r <kv>)... [-p <v>]... [-o <out>] set <merchant-id> <store-code> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] liasettings custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] getaccessiblegmbaccounts <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] listposdataproviders [-p <v>]... [-o <out>] requestgmbaccess <merchant-id> <account-id> <gmb-email> [-p <v>]... [-o <out>] requestinventoryverification <merchant-id> <account-id> <country> [-p <v>]... [-o <out>] setinventoryverificationcontact <merchant-id> <account-id> <country> <language> <contact-name> <contact-email> [-p <v>]... [-o <out>] setposdataprovider <merchant-id> <account-id> <country> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] orderinvoices createchargeinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createrefundinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderreports listdisbursements <merchant-id> [-p <v>]... [-o <out>] listtransactions <merchant-id> <disbursement-id> [-p <v>]... [-o <out>] orderreturns get <merchant-id> <return-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] orders acknowledge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] advancetestorder <merchant-id> <order-id> [-p <v>]... [-o <out>] cancel <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] cancellineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] canceltestorderbycustomer <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestorder <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestreturn <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <order-id> [-p <v>]... [-o <out>] getbymerchantorderid <merchant-id> <merchant-order-id> [-p <v>]... [-o <out>] gettestordertemplate <merchant-id> <template-name> [-p <v>]... [-o <out>] instorerefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] refund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] rejectreturnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnrefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] setlineitemmetadata <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] shiplineitems <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatelineitemshippingdetails <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatemerchantorderid <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updateshipment <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] pos custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <target-merchant-id> <store-code> [-p <v>]... get <merchant-id> <target-merchant-id> <store-code> [-p <v>]... [-o <out>] insert <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] inventory <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> <target-merchant-id> [-p <v>]... [-o <out>] sale <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] products custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <product-id> [-p <v>]... get <merchant-id> <product-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] productstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <product-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] shippingsettings custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] getsupportedcarriers <merchant-id> [-p <v>]... [-o <out>] getsupportedholidays <merchant-id> [-p <v>]... [-o <out>] getsupportedpickupservices <merchant-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] content2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with content2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/content2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/content2-secret.json , assuming that the required content API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. content2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-content2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Shopping Content API at revision 20220303 . The CLI is at version 5.0.4 . content2 [options] accounts authinfo [-p <v>]... [-o <out>] claimwebsite <merchant-id> <account-id> [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <account-id> [-p <v>]... get <merchant-id> <account-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] link <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] accountstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] accounttax custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] datafeeds custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <datafeed-id> [-p <v>]... fetchnow <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] get <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <datafeed-id> (-r <kv>)... [-p <v>]... [-o <out>] datafeedstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <datafeed-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] inventory custombatch (-r <kv>)... [-p <v>]... [-o <out>] set <merchant-id> <store-code> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] liasettings custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] getaccessiblegmbaccounts <merchant-id> <account-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] listposdataproviders [-p <v>]... [-o <out>] requestgmbaccess <merchant-id> <account-id> <gmb-email> [-p <v>]... [-o <out>] requestinventoryverification <merchant-id> <account-id> <country> [-p <v>]... [-o <out>] setinventoryverificationcontact <merchant-id> <account-id> <country> <language> <contact-name> <contact-email> [-p <v>]... [-o <out>] setposdataprovider <merchant-id> <account-id> <country> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] orderinvoices createchargeinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createrefundinvoice <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] orderreports listdisbursements <merchant-id> [-p <v>]... [-o <out>] listtransactions <merchant-id> <disbursement-id> [-p <v>]... [-o <out>] orderreturns get <merchant-id> <return-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] orders acknowledge <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] advancetestorder <merchant-id> <order-id> [-p <v>]... [-o <out>] cancel <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] cancellineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] canceltestorderbycustomer <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestorder <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] createtestreturn <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <order-id> [-p <v>]... [-o <out>] getbymerchantorderid <merchant-id> <merchant-order-id> [-p <v>]... [-o <out>] gettestordertemplate <merchant-id> <template-name> [-p <v>]... [-o <out>] instorerefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] refund <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] rejectreturnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] returnrefundlineitem <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] setlineitemmetadata <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] shiplineitems <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatelineitemshippingdetails <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updatemerchantorderid <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] updateshipment <merchant-id> <order-id> (-r <kv>)... [-p <v>]... [-o <out>] pos custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <target-merchant-id> <store-code> [-p <v>]... get <merchant-id> <target-merchant-id> <store-code> [-p <v>]... [-o <out>] insert <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] inventory <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> <target-merchant-id> [-p <v>]... [-o <out>] sale <merchant-id> <target-merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] products custombatch (-r <kv>)... [-p <v>]... [-o <out>] delete <merchant-id> <product-id> [-p <v>]... get <merchant-id> <product-id> [-p <v>]... [-o <out>] insert <merchant-id> (-r <kv>)... [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] productstatuses custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <product-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] shippingsettings custombatch (-r <kv>)... [-p <v>]... [-o <out>] get <merchant-id> <account-id> [-p <v>]... [-o <out>] getsupportedcarriers <merchant-id> [-p <v>]... [-o <out>] getsupportedholidays <merchant-id> [-p <v>]... [-o <out>] getsupportedpickupservices <merchant-id> [-p <v>]... [-o <out>] list <merchant-id> [-p <v>]... [-o <out>] update <merchant-id> <account-id> (-r <kv>)... [-p <v>]... [-o <out>] content2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with content2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/content2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/content2-secret.json , assuming that the required content API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. content2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_authinfo/","text":"Returns information about the authenticated user. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts authinfo ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Authinfo"},{"location":"accounts_authinfo/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts authinfo ...","title":"Scopes"},{"location":"accounts_authinfo/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_authinfo/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_claimwebsite/","text":"Claims the website of a Merchant Center sub-account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts claimwebsite ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account whose website is claimed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p overwrite=boolean Only available to selected merchants. When set to True , this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Claimwebsite"},{"location":"accounts_claimwebsite/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts claimwebsite ...","title":"Scopes"},{"location":"accounts_claimwebsite/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account whose website is claimed.","title":"Required Scalar Arguments"},{"location":"accounts_claimwebsite/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_claimwebsite/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p overwrite=boolean Only available to selected merchants. When set to True , this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.","title":"Optional Method Properties"},{"location":"accounts_claimwebsite/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_custombatch/","text":"Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"accounts_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts custombatch ...","title":"Scopes"},{"location":"accounts_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"accounts_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_delete/","text":"Deletes a Merchant Center sub-account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts delete ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). -p force=boolean Flag to delete sub-accounts with products. The default value is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"accounts_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts delete ...","title":"Scopes"},{"location":"accounts_delete/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account.","title":"Required Scalar Arguments"},{"location":"accounts_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). -p force=boolean Flag to delete sub-accounts with products. The default value is false.","title":"Optional Method Properties"},{"location":"accounts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_get/","text":"Retrieves a Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts get ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"accounts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts get ...","title":"Scopes"},{"location":"accounts_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account.","title":"Required Scalar Arguments"},{"location":"accounts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_insert/","text":"Creates a Merchant Center sub-account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts insert ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: adult-content: boolean business-information: address: country: string locality: string postal-code: string region: string street-address: string customer-service: email: string phone-number: string url: string korean-business-registration-number: string phone-number: string google-my-business-link: gmb-email: string status: string id: string kind: string name: string reviews-url: string seller-id: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adult-content=true Indicates whether the merchant sells adult content. business-information.address country=voluptua. CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA. locality=at City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). postal-code=sanctus Postal code or ZIP (e.g. \"94043\"). region=sed Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\"). street-address=amet. Street-level part of the address. ..customer-service email=takimata Customer service email. phone-number=amet. Customer service phone number. url=duo Customer service URL. .. korean-business-registration-number=ipsum The 10-digit Korean business registration number separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set. phone-number=gubergren The phone number of the business. ..google-my-business-link gmb-email=lorem The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account. status=gubergren Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \" active \" - \" pending \" .. id=eos Required for update. Merchant Center account ID. kind=dolor Identifies what kind of resource this is. Value: the fixed string \" content#account \" name=ea Required. Display name for the account. reviews-url=ipsum [DEPRECATED] This field is never returned and will be ignored if provided. seller-id=invidunt Client-specific, locally-unique, internal ID for the child account. website-url=amet The merchant's website. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"accounts_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts insert ...","title":"Scopes"},{"location":"accounts_insert/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"accounts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: adult-content: boolean business-information: address: country: string locality: string postal-code: string region: string street-address: string customer-service: email: string phone-number: string url: string korean-business-registration-number: string phone-number: string google-my-business-link: gmb-email: string status: string id: string kind: string name: string reviews-url: string seller-id: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adult-content=true Indicates whether the merchant sells adult content. business-information.address country=voluptua. CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA. locality=at City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). postal-code=sanctus Postal code or ZIP (e.g. \"94043\"). region=sed Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\"). street-address=amet. Street-level part of the address. ..customer-service email=takimata Customer service email. phone-number=amet. Customer service phone number. url=duo Customer service URL. .. korean-business-registration-number=ipsum The 10-digit Korean business registration number separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set. phone-number=gubergren The phone number of the business. ..google-my-business-link gmb-email=lorem The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account. status=gubergren Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \" active \" - \" pending \" .. id=eos Required for update. Merchant Center account ID. kind=dolor Identifies what kind of resource this is. Value: the fixed string \" content#account \" name=ea Required. Display name for the account. reviews-url=ipsum [DEPRECATED] This field is never returned and will be ignored if provided. seller-id=invidunt Client-specific, locally-unique, internal ID for the child account. website-url=amet The merchant's website.","title":"Required Request Value"},{"location":"accounts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"accounts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_link/","text":"Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts link ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that should be linked. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountsLinkRequest: action: string link-type: string linked-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . action=duo Action to perform for this link. The &#34;request&#34; action is only available to select merchants. Acceptable values are: - \" approve \" - \" remove \" - \" request \" link-type=ipsum Type of the link between the two accounts. Acceptable values are: - \" channelPartner \" - \" eCommercePlatform \" linked-account-id=sed The ID of the linked account. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Link"},{"location":"accounts_link/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts link ...","title":"Scopes"},{"location":"accounts_link/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that should be linked.","title":"Required Scalar Arguments"},{"location":"accounts_link/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountsLinkRequest: action: string link-type: string linked-account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . action=duo Action to perform for this link. The &#34;request&#34; action is only available to select merchants. Acceptable values are: - \" approve \" - \" remove \" - \" request \" link-type=ipsum Type of the link between the two accounts. Acceptable values are: - \" channelPartner \" - \" eCommercePlatform \" linked-account-id=sed The ID of the linked account.","title":"Required Request Value"},{"location":"accounts_link/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_link/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_link/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_list/","text":"Lists the sub-accounts in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts list ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of accounts to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"accounts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts list ...","title":"Scopes"},{"location":"accounts_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"accounts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of accounts to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"accounts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_update/","text":"Updates a Merchant Center account. Any fields that are not provided are deleted from the resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts update ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: adult-content: boolean business-information: address: country: string locality: string postal-code: string region: string street-address: string customer-service: email: string phone-number: string url: string korean-business-registration-number: string phone-number: string google-my-business-link: gmb-email: string status: string id: string kind: string name: string reviews-url: string seller-id: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adult-content=true Indicates whether the merchant sells adult content. business-information.address country=ipsum CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA. locality=ipsum City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). postal-code=est Postal code or ZIP (e.g. \"94043\"). region=gubergren Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\"). street-address=ea Street-level part of the address. ..customer-service email=dolor Customer service email. phone-number=lorem Customer service phone number. url=eos Customer service URL. .. korean-business-registration-number=labore The 10-digit Korean business registration number separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set. phone-number=sed The phone number of the business. ..google-my-business-link gmb-email=duo The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account. status=sed Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \" active \" - \" pending \" .. id=no Required for update. Merchant Center account ID. kind=stet Identifies what kind of resource this is. Value: the fixed string \" content#account \" name=kasd Required. Display name for the account. reviews-url=et [DEPRECATED] This field is never returned and will be ignored if provided. seller-id=sed Client-specific, locally-unique, internal ID for the child account. website-url=et The merchant's website. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"accounts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounts update ...","title":"Scopes"},{"location":"accounts_update/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account.","title":"Required Scalar Arguments"},{"location":"accounts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: adult-content: boolean business-information: address: country: string locality: string postal-code: string region: string street-address: string customer-service: email: string phone-number: string url: string korean-business-registration-number: string phone-number: string google-my-business-link: gmb-email: string status: string id: string kind: string name: string reviews-url: string seller-id: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . adult-content=true Indicates whether the merchant sells adult content. business-information.address country=ipsum CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA. locality=ipsum City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). postal-code=est Postal code or ZIP (e.g. \"94043\"). region=gubergren Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\"). street-address=ea Street-level part of the address. ..customer-service email=dolor Customer service email. phone-number=lorem Customer service phone number. url=eos Customer service URL. .. korean-business-registration-number=labore The 10-digit Korean business registration number separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set. phone-number=sed The phone number of the business. ..google-my-business-link gmb-email=duo The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account. status=sed Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \" active \" - \" pending \" .. id=no Required for update. Merchant Center account ID. kind=stet Identifies what kind of resource this is. Value: the fixed string \" content#account \" name=kasd Required. Display name for the account. reviews-url=et [DEPRECATED] This field is never returned and will be ignored if provided. seller-id=sed Client-specific, locally-unique, internal ID for the child account. website-url=et The merchant's website.","title":"Required Request Value"},{"location":"accounts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"accounts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accountstatuses_custombatch/","text":"Retrieves multiple Merchant Center account statuses in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"accountstatuses_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses custombatch ...","title":"Scopes"},{"location":"accountstatuses_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accountstatuses_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accountstatuses_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accountstatuses_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accountstatuses_get/","text":"Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses get ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"accountstatuses_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses get ...","title":"Scopes"},{"location":"accountstatuses_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account.","title":"Required Scalar Arguments"},{"location":"accountstatuses_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accountstatuses_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.","title":"Optional Method Properties"},{"location":"accountstatuses_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accountstatuses_list/","text":"Lists the statuses of the sub-accounts in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses list ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p max-results=integer The maximum number of account statuses to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"accountstatuses_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accountstatuses list ...","title":"Scopes"},{"location":"accountstatuses_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"accountstatuses_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accountstatuses_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p max-results=integer The maximum number of account statuses to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"accountstatuses_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounttax_custombatch/","text":"Retrieves and updates tax settings of multiple accounts in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccounttaxCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"accounttax_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax custombatch ...","title":"Scopes"},{"location":"accounttax_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccounttaxCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounttax_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounttax_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounttax_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"accounttax_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounttax_get/","text":"Retrieves the tax settings of the account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax get ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update account tax settings. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"accounttax_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax get ...","title":"Scopes"},{"location":"accounttax_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update account tax settings.","title":"Required Scalar Arguments"},{"location":"accounttax_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounttax_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounttax_list/","text":"Lists the tax settings of the sub-accounts in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax list ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of tax settings to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"accounttax_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax list ...","title":"Scopes"},{"location":"accounttax_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"accounttax_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounttax_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of tax settings to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"accounttax_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounttax_update/","text":"Updates the tax settings of the account. Any fields that are not provided are deleted from the resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax update ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update account tax settings. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountTax: account-id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=et Required. The ID of the account to which these account tax settings belong. kind=vero Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\". About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"accounttax_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> accounttax update ...","title":"Scopes"},{"location":"accounttax_update/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update account tax settings.","title":"Required Scalar Arguments"},{"location":"accounttax_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AccountTax: account-id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=et Required. The ID of the account to which these account tax settings belong. kind=vero Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\".","title":"Required Request Value"},{"location":"accounttax_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounttax_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounttax_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"accounttax_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_custombatch/","text":"Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatafeedsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"datafeeds_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds custombatch ...","title":"Scopes"},{"location":"datafeeds_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatafeedsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"datafeeds_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"datafeeds_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"datafeeds_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_delete/","text":"Deletes a datafeed configuration from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds delete ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"datafeeds_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds delete ...","title":"Scopes"},{"location":"datafeeds_delete/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed.","title":"Required Scalar Arguments"},{"location":"datafeeds_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"datafeeds_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_fetchnow/","text":"Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method more than once per day, we recommend you use the Products service to update your product data. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds fetchnow ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed to be fetched. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Fetchnow"},{"location":"datafeeds_fetchnow/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds fetchnow ...","title":"Scopes"},{"location":"datafeeds_fetchnow/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed to be fetched.","title":"Required Scalar Arguments"},{"location":"datafeeds_fetchnow/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_fetchnow/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"datafeeds_fetchnow/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_get/","text":"Retrieves a datafeed configuration from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"datafeeds_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds get ...","title":"Scopes"},{"location":"datafeeds_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed.","title":"Required Scalar Arguments"},{"location":"datafeeds_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_insert/","text":"Registers a datafeed configuration with your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds insert ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Datafeed: attribute-language: string content-language: string content-type: string fetch-schedule: day-of-month: integer fetch-url: string hour: integer minute-of-hour: integer password: string paused: boolean time-zone: string username: string weekday: string file-name: string format: column-delimiter: string file-encoding: string quoting-mode: string id: string intended-destinations: [string] kind: string name: string target-country: int64 can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . attribute-language=erat The two-letter ISO 639-1 language in which the attributes are defined in the data feed. content-language=sed [DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry . content-type=duo Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \" local products \" - \" product inventory \" - \" products \" fetch-schedule day-of-month=67 The day of the month the feed file should be fetched (1-31). fetch-url=et The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols. hour=73 The hour of the day the feed file should be fetched (0-23). minute-of-hour=99 The minute of the hour the feed file should be fetched (0-59). Read-only. password=consetetur An optional password for fetch_url. paused=false Whether the scheduled fetch is paused or not. time-zone=dolor Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\". username=et An optional user name for fetch_url. weekday=et The day of the week the feed file should be fetched. Acceptable values are: - \" monday \" - \" tuesday \" - \" wednesday \" - \" thursday \" - \" friday \" - \" saturday \" - \" sunday \" .. file-name=sadipscing Required. The filename of the feed. All feeds must have a unique file name. format column-delimiter=stet Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" pipe \" - \" tab \" - \" tilde \" file-encoding=dolor Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \" latin-1 \" - \" utf-16be \" - \" utf-16le \" - \" utf-8 \" - \" windows-1252 \" quoting-mode=duo Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" normal character \" - \" value quoting \" .. id=vero Required for update. The ID of the data feed. intended-destinations=vero [DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center). Each invocation of this argument appends the given value to the array. kind=invidunt Identifies what kind of resource this is. Value: the fixed string \" content#datafeed \" name=stet Required for insert. A descriptive name of the data feed. target-country=-76 [DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"datafeeds_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds insert ...","title":"Scopes"},{"location":"datafeeds_insert/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"datafeeds_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Datafeed: attribute-language: string content-language: string content-type: string fetch-schedule: day-of-month: integer fetch-url: string hour: integer minute-of-hour: integer password: string paused: boolean time-zone: string username: string weekday: string file-name: string format: column-delimiter: string file-encoding: string quoting-mode: string id: string intended-destinations: [string] kind: string name: string target-country: int64 can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . attribute-language=erat The two-letter ISO 639-1 language in which the attributes are defined in the data feed. content-language=sed [DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry . content-type=duo Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \" local products \" - \" product inventory \" - \" products \" fetch-schedule day-of-month=67 The day of the month the feed file should be fetched (1-31). fetch-url=et The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols. hour=73 The hour of the day the feed file should be fetched (0-23). minute-of-hour=99 The minute of the hour the feed file should be fetched (0-59). Read-only. password=consetetur An optional password for fetch_url. paused=false Whether the scheduled fetch is paused or not. time-zone=dolor Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\". username=et An optional user name for fetch_url. weekday=et The day of the week the feed file should be fetched. Acceptable values are: - \" monday \" - \" tuesday \" - \" wednesday \" - \" thursday \" - \" friday \" - \" saturday \" - \" sunday \" .. file-name=sadipscing Required. The filename of the feed. All feeds must have a unique file name. format column-delimiter=stet Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" pipe \" - \" tab \" - \" tilde \" file-encoding=dolor Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \" latin-1 \" - \" utf-16be \" - \" utf-16le \" - \" utf-8 \" - \" windows-1252 \" quoting-mode=duo Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" normal character \" - \" value quoting \" .. id=vero Required for update. The ID of the data feed. intended-destinations=vero [DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center). Each invocation of this argument appends the given value to the array. kind=invidunt Identifies what kind of resource this is. Value: the fixed string \" content#datafeed \" name=stet Required for insert. A descriptive name of the data feed. target-country=-76 [DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.","title":"Required Request Value"},{"location":"datafeeds_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"datafeeds_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"datafeeds_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_list/","text":"Lists the configurations for datafeeds in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the datafeeds. This account cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"datafeeds_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds list ...","title":"Scopes"},{"location":"datafeeds_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the datafeeds. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"datafeeds_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"datafeeds_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeeds_update/","text":"Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds update ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Datafeed: attribute-language: string content-language: string content-type: string fetch-schedule: day-of-month: integer fetch-url: string hour: integer minute-of-hour: integer password: string paused: boolean time-zone: string username: string weekday: string file-name: string format: column-delimiter: string file-encoding: string quoting-mode: string id: string intended-destinations: [string] kind: string name: string target-country: int64 can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . attribute-language=elitr The two-letter ISO 639-1 language in which the attributes are defined in the data feed. content-language=lorem [DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry . content-type=diam Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \" local products \" - \" product inventory \" - \" products \" fetch-schedule day-of-month=40 The day of the month the feed file should be fetched (1-31). fetch-url=ipsum The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols. hour=78 The hour of the day the feed file should be fetched (0-23). minute-of-hour=42 The minute of the hour the feed file should be fetched (0-59). Read-only. password=consetetur An optional password for fetch_url. paused=false Whether the scheduled fetch is paused or not. time-zone=erat Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\". username=consetetur An optional user name for fetch_url. weekday=amet. The day of the week the feed file should be fetched. Acceptable values are: - \" monday \" - \" tuesday \" - \" wednesday \" - \" thursday \" - \" friday \" - \" saturday \" - \" sunday \" .. file-name=sed Required. The filename of the feed. All feeds must have a unique file name. format column-delimiter=takimata Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" pipe \" - \" tab \" - \" tilde \" file-encoding=dolores Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \" latin-1 \" - \" utf-16be \" - \" utf-16le \" - \" utf-8 \" - \" windows-1252 \" quoting-mode=gubergren Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" normal character \" - \" value quoting \" .. id=et Required for update. The ID of the data feed. intended-destinations=accusam [DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center). Each invocation of this argument appends the given value to the array. kind=voluptua. Identifies what kind of resource this is. Value: the fixed string \" content#datafeed \" name=dolore Required for insert. A descriptive name of the data feed. target-country=-34 [DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"datafeeds_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeeds update ...","title":"Scopes"},{"location":"datafeeds_update/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed.","title":"Required Scalar Arguments"},{"location":"datafeeds_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Datafeed: attribute-language: string content-language: string content-type: string fetch-schedule: day-of-month: integer fetch-url: string hour: integer minute-of-hour: integer password: string paused: boolean time-zone: string username: string weekday: string file-name: string format: column-delimiter: string file-encoding: string quoting-mode: string id: string intended-destinations: [string] kind: string name: string target-country: int64 can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . attribute-language=elitr The two-letter ISO 639-1 language in which the attributes are defined in the data feed. content-language=lorem [DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry . content-type=diam Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \" local products \" - \" product inventory \" - \" products \" fetch-schedule day-of-month=40 The day of the month the feed file should be fetched (1-31). fetch-url=ipsum The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols. hour=78 The hour of the day the feed file should be fetched (0-23). minute-of-hour=42 The minute of the hour the feed file should be fetched (0-59). Read-only. password=consetetur An optional password for fetch_url. paused=false Whether the scheduled fetch is paused or not. time-zone=erat Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\". username=consetetur An optional user name for fetch_url. weekday=amet. The day of the week the feed file should be fetched. Acceptable values are: - \" monday \" - \" tuesday \" - \" wednesday \" - \" thursday \" - \" friday \" - \" saturday \" - \" sunday \" .. file-name=sed Required. The filename of the feed. All feeds must have a unique file name. format column-delimiter=takimata Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" pipe \" - \" tab \" - \" tilde \" file-encoding=dolores Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \" latin-1 \" - \" utf-16be \" - \" utf-16le \" - \" utf-8 \" - \" windows-1252 \" quoting-mode=gubergren Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \" normal character \" - \" value quoting \" .. id=et Required for update. The ID of the data feed. intended-destinations=accusam [DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center). Each invocation of this argument appends the given value to the array. kind=voluptua. Identifies what kind of resource this is. Value: the fixed string \" content#datafeed \" name=dolore Required for insert. A descriptive name of the data feed. target-country=-34 [DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.","title":"Required Request Value"},{"location":"datafeeds_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"datafeeds_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeeds_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"datafeeds_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeedstatuses_custombatch/","text":"Gets multiple Merchant Center datafeed statuses in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatafeedstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"datafeedstatuses_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses custombatch ...","title":"Scopes"},{"location":"datafeedstatuses_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DatafeedstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"datafeedstatuses_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"datafeedstatuses_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeedstatuses_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeedstatuses_get/","text":"Retrieves the status of a datafeed from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target. -p language=string The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"datafeedstatuses_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses get ...","title":"Scopes"},{"location":"datafeedstatuses_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the datafeed. This account cannot be a multi-client account. <datafeed-id> (string) The ID of the datafeed.","title":"Required Scalar Arguments"},{"location":"datafeedstatuses_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeedstatuses_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target. -p language=string The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.","title":"Optional Method Properties"},{"location":"datafeedstatuses_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"datafeedstatuses_list/","text":"Lists the statuses of the datafeeds in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the datafeeds. This account cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"datafeedstatuses_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> datafeedstatuses list ...","title":"Scopes"},{"location":"datafeedstatuses_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the datafeeds. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"datafeedstatuses_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"datafeedstatuses_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"datafeedstatuses_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inventory_custombatch/","text":"Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> inventory custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InventoryCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"inventory_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> inventory custombatch ...","title":"Scopes"},{"location":"inventory_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InventoryCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"inventory_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inventory_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inventory_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"inventory_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inventory_set/","text":"Updates price and availability of a product in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> inventory set ... Required Scalar Arguments <merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <store-code> (string) The code of the store for which to update price and availability. Use online to update price and availability of an online product. <product-id> (string) The REST ID of the product for which to update price and availability. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InventorySetRequest: availability: string custom-label0: string custom-label1: string custom-label2: string custom-label3: string custom-label4: string installment: amount: currency: string value: string months: string instore-product-location: string loyalty-points: name: string points-value: string ratio: number pickup: pickup-method: string pickup-sla: string price: currency: string value: string quantity: integer sale-price: currency: string value: string sale-price-effective-date: string sell-on-google-quantity: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . availability=dolore The availability of the product. Acceptable values are: - \" in stock \" - \" out of stock \" - \" preorder \" custom-label0=voluptua. Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label1=amet. Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label2=ea Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label3=sadipscing Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label4=lorem Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products. installment.amount currency=invidunt The currency of the price. value=no The price represented as a number. .. months=est The number of installments the buyer has to pay. .. instore-product-location=at The instore product location. Supported only for local products. loyalty-points name=sed Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters. points-value=sit The retailer's loyalty points in absolute value. ratio=0.8049890363387713 The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0. ..pickup pickup-method=tempor Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is \"not supported\", must be submitted together with pickupSla . Acceptable values are: - \" buy \" - \" not supported \" - \" reserve \" - \" ship to store \" pickup-sla=aliquyam The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with pickupMethod . Acceptable values are: - \" five day \" - \" four day \" - \" multi day \" - \" multi week \" - \" next day \" - \" same day \" - \" seven day \" - \" six day \" - \" three day \" - \" two day \" ..price currency=ipsum The currency of the price. value=et The price represented as a number. .. quantity=93 The quantity of the product. Must be equal to or greater than zero. Supported only for local products. sale-price currency=lorem The currency of the price. value=est The price represented as a number. .. sale-price-effective-date=sed A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided. sell-on-google-quantity=72 The quantity of the product that is available for selling on Google. Supported only for online products. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Set"},{"location":"inventory_set/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> inventory set ...","title":"Scopes"},{"location":"inventory_set/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <store-code> (string) The code of the store for which to update price and availability. Use online to update price and availability of an online product. <product-id> (string) The REST ID of the product for which to update price and availability.","title":"Required Scalar Arguments"},{"location":"inventory_set/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InventorySetRequest: availability: string custom-label0: string custom-label1: string custom-label2: string custom-label3: string custom-label4: string installment: amount: currency: string value: string months: string instore-product-location: string loyalty-points: name: string points-value: string ratio: number pickup: pickup-method: string pickup-sla: string price: currency: string value: string quantity: integer sale-price: currency: string value: string sale-price-effective-date: string sell-on-google-quantity: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . availability=dolore The availability of the product. Acceptable values are: - \" in stock \" - \" out of stock \" - \" preorder \" custom-label0=voluptua. Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label1=amet. Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label2=ea Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label3=sadipscing Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products. custom-label4=lorem Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products. installment.amount currency=invidunt The currency of the price. value=no The price represented as a number. .. months=est The number of installments the buyer has to pay. .. instore-product-location=at The instore product location. Supported only for local products. loyalty-points name=sed Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters. points-value=sit The retailer's loyalty points in absolute value. ratio=0.8049890363387713 The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0. ..pickup pickup-method=tempor Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is \"not supported\", must be submitted together with pickupSla . Acceptable values are: - \" buy \" - \" not supported \" - \" reserve \" - \" ship to store \" pickup-sla=aliquyam The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with pickupMethod . Acceptable values are: - \" five day \" - \" four day \" - \" multi day \" - \" multi week \" - \" next day \" - \" same day \" - \" seven day \" - \" six day \" - \" three day \" - \" two day \" ..price currency=ipsum The currency of the price. value=et The price represented as a number. .. quantity=93 The quantity of the product. Must be equal to or greater than zero. Supported only for local products. sale-price currency=lorem The currency of the price. value=est The price represented as a number. .. sale-price-effective-date=sed A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided. sell-on-google-quantity=72 The quantity of the product that is available for selling on Google. Supported only for online products.","title":"Required Request Value"},{"location":"inventory_set/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inventory_set/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inventory_set/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"inventory_set/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_custombatch/","text":"Retrieves and/or updates the LIA settings of multiple accounts in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiasettingsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"liasettings_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings custombatch ...","title":"Scopes"},{"location":"liasettings_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiasettingsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"liasettings_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"liasettings_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"liasettings_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_get/","text":"Retrieves the LIA settings of the account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings get ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get or update LIA settings. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"liasettings_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings get ...","title":"Scopes"},{"location":"liasettings_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get or update LIA settings.","title":"Required Scalar Arguments"},{"location":"liasettings_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_getaccessiblegmbaccounts/","text":"Retrieves the list of accessible Google My Business accounts. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings getaccessiblegmbaccounts ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to retrieve accessible Google My Business accounts. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getaccessiblegmbaccounts"},{"location":"liasettings_getaccessiblegmbaccounts/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings getaccessiblegmbaccounts ...","title":"Scopes"},{"location":"liasettings_getaccessiblegmbaccounts/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to retrieve accessible Google My Business accounts.","title":"Required Scalar Arguments"},{"location":"liasettings_getaccessiblegmbaccounts/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_getaccessiblegmbaccounts/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_list/","text":"Lists the LIA settings of the sub-accounts in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings list ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of LIA settings to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"liasettings_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings list ...","title":"Scopes"},{"location":"liasettings_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"liasettings_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of LIA settings to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"liasettings_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_listposdataproviders/","text":"Retrieves the list of POS data providers that have active settings for the all eiligible countries. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings listposdataproviders ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listposdataproviders"},{"location":"liasettings_listposdataproviders/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings listposdataproviders ...","title":"Scopes"},{"location":"liasettings_listposdataproviders/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_listposdataproviders/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_requestgmbaccess/","text":"Requests access to a specified Google My Business account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings requestgmbaccess ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which GMB access is requested. <gmb-email> (string) The email of the Google My Business account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Requestgmbaccess"},{"location":"liasettings_requestgmbaccess/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings requestgmbaccess ...","title":"Scopes"},{"location":"liasettings_requestgmbaccess/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which GMB access is requested. <gmb-email> (string) The email of the Google My Business account.","title":"Required Scalar Arguments"},{"location":"liasettings_requestgmbaccess/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_requestgmbaccess/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_requestinventoryverification/","text":"Requests inventory validation for the specified country. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings requestinventoryverification ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <country> (string) The country for which inventory validation is requested. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Requestinventoryverification"},{"location":"liasettings_requestinventoryverification/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings requestinventoryverification ...","title":"Scopes"},{"location":"liasettings_requestinventoryverification/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <country> (string) The country for which inventory validation is requested.","title":"Required Scalar Arguments"},{"location":"liasettings_requestinventoryverification/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_requestinventoryverification/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_setinventoryverificationcontact/","text":"Sets the inventory verification contract for the specified country. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings setinventoryverificationcontact ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <country> (string) The country for which inventory verification is requested. <language> (string) The language for which inventory verification is requested. <contact-name> (string) The name of the inventory verification contact. <contact-email> (string) The email of the inventory verification contact. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Setinventoryverificationcontact"},{"location":"liasettings_setinventoryverificationcontact/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings setinventoryverificationcontact ...","title":"Scopes"},{"location":"liasettings_setinventoryverificationcontact/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <country> (string) The country for which inventory verification is requested. <language> (string) The language for which inventory verification is requested. <contact-name> (string) The name of the inventory verification contact. <contact-email> (string) The email of the inventory verification contact.","title":"Required Scalar Arguments"},{"location":"liasettings_setinventoryverificationcontact/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_setinventoryverificationcontact/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_setposdataprovider/","text":"Sets the POS data provider for the specified country. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings setposdataprovider ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to retrieve accessible Google My Business accounts. <country> (string) The country for which the POS data provider is selected. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pos-data-provider-id=string The ID of POS data provider. -p pos-external-account-id=string The account ID by which this merchant is known to the POS data provider. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Setposdataprovider"},{"location":"liasettings_setposdataprovider/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings setposdataprovider ...","title":"Scopes"},{"location":"liasettings_setposdataprovider/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to retrieve accessible Google My Business accounts. <country> (string) The country for which the POS data provider is selected.","title":"Required Scalar Arguments"},{"location":"liasettings_setposdataprovider/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_setposdataprovider/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p pos-data-provider-id=string The ID of POS data provider. -p pos-external-account-id=string The account ID by which this merchant is known to the POS data provider.","title":"Optional Method Properties"},{"location":"liasettings_setposdataprovider/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"liasettings_update/","text":"Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings update ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get or update LIA settings. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiaSettings: account-id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=dolores The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses. kind=dolores Identifies what kind of resource this is. Value: the fixed string \" content#liaSettings \" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"liasettings_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> liasettings update ...","title":"Scopes"},{"location":"liasettings_update/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get or update LIA settings.","title":"Required Scalar Arguments"},{"location":"liasettings_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LiaSettings: account-id: string kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=dolores The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses. kind=dolores Identifies what kind of resource this is. Value: the fixed string \" content#liaSettings \"","title":"Required Request Value"},{"location":"liasettings_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"liasettings_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"liasettings_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"liasettings_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderinvoices_createchargeinvoice/","text":"Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderinvoices createchargeinvoice ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateChargeInvoiceRequest: invoice-id: string invoice-summary: customer-balance: pretax: currency: string value: string tax: currency: string value: string google-balance: pretax: currency: string value: string tax: currency: string value: string merchant-balance: pretax: currency: string value: string tax: currency: string value: string product-total: pretax: currency: string value: string tax: currency: string value: string operation-id: string shipment-group-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=et [required] The ID of the invoice. invoice-summary.customer-balance.pretax currency=sed The currency of the price. value=no The price represented as a number. ..tax currency=et The currency of the price. value=elitr The price represented as a number. ...google-balance.pretax currency=sed The currency of the price. value=no The price represented as a number. ..tax currency=nonumy The currency of the price. value=at The price represented as a number. ...merchant-balance.pretax currency=sadipscing The currency of the price. value=aliquyam The price represented as a number. ..tax currency=dolores The currency of the price. value=sadipscing The price represented as a number. ...product-total.pretax currency=erat The currency of the price. value=aliquyam The price represented as a number. ..tax currency=amet The currency of the price. value=est The price represented as a number. .... operation-id=et [required] The ID of the operation, unique across all operations for a given order. shipment-group-id=sea [required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the same kind of shipping charges. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createchargeinvoice"},{"location":"orderinvoices_createchargeinvoice/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderinvoices createchargeinvoice ...","title":"Scopes"},{"location":"orderinvoices_createchargeinvoice/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orderinvoices_createchargeinvoice/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateChargeInvoiceRequest: invoice-id: string invoice-summary: customer-balance: pretax: currency: string value: string tax: currency: string value: string google-balance: pretax: currency: string value: string tax: currency: string value: string merchant-balance: pretax: currency: string value: string tax: currency: string value: string product-total: pretax: currency: string value: string tax: currency: string value: string operation-id: string shipment-group-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=et [required] The ID of the invoice. invoice-summary.customer-balance.pretax currency=sed The currency of the price. value=no The price represented as a number. ..tax currency=et The currency of the price. value=elitr The price represented as a number. ...google-balance.pretax currency=sed The currency of the price. value=no The price represented as a number. ..tax currency=nonumy The currency of the price. value=at The price represented as a number. ...merchant-balance.pretax currency=sadipscing The currency of the price. value=aliquyam The price represented as a number. ..tax currency=dolores The currency of the price. value=sadipscing The price represented as a number. ...product-total.pretax currency=erat The currency of the price. value=aliquyam The price represented as a number. ..tax currency=amet The currency of the price. value=est The price represented as a number. .... operation-id=et [required] The ID of the operation, unique across all operations for a given order. shipment-group-id=sea [required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the same kind of shipping charges.","title":"Required Request Value"},{"location":"orderinvoices_createchargeinvoice/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderinvoices_createchargeinvoice/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderinvoices_createchargeinvoice/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderinvoices_createrefundinvoice/","text":"Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using createChargeInvoice . All amounts (except for the summary) are incremental with respect to the previous invoice. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderinvoices createrefundinvoice ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateRefundInvoiceRequest: invoice-id: string operation-id: string refund-only-option: description: string reason: string return-option: description: string reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=consetetur [required] The ID of the invoice. operation-id=consetetur [required] The ID of the operation, unique across all operations for a given order. refund-only-option description=stet Optional description of the refund reason. reason=est [required] Reason for the refund. Acceptable values are: - \" adjustment \" - \" autoPostInternal \" - \" autoPostInvalidBillingAddress \" - \" autoPostNoInventory \" - \" autoPostPriceError \" - \" autoPostUndeliverableShippingAddress \" - \" couponAbuse \" - \" courtesyAdjustment \" - \" customerCanceled \" - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" customerSupportRequested \" - \" deliveredLateByCarrier \" - \" deliveredTooLate \" - \" expiredItem \" - \" failToPushOrderGoogleError \" - \" failToPushOrderMerchantError \" - \" failToPushOrderMerchantFulfillmentError \" - \" failToPushOrderToMerchant \" - \" failToPushOrderToMerchantOutOfStock \" - \" feeAdjustment \" - \" invalidCoupon \" - \" lateShipmentCredit \" - \" malformedShippingAddress \" - \" merchantDidNotShipOnTime \" - \" noInventory \" - \" orderTimeout \" - \" other \" - \" paymentAbuse \" - \" paymentDeclined \" - \" priceAdjustment \" - \" priceError \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" promoReallocation \" - \" qualityNotAsExpected \" - \" returnRefundAbuse \" - \" shippingCostAdjustment \" - \" shippingPriceError \" - \" taxAdjustment \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" ..return-option description=aliquyam Optional description of the return reason. reason=elitr [required] Reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createrefundinvoice"},{"location":"orderinvoices_createrefundinvoice/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderinvoices createrefundinvoice ...","title":"Scopes"},{"location":"orderinvoices_createrefundinvoice/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orderinvoices_createrefundinvoice/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrderinvoicesCreateRefundInvoiceRequest: invoice-id: string operation-id: string refund-only-option: description: string reason: string return-option: description: string reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . invoice-id=consetetur [required] The ID of the invoice. operation-id=consetetur [required] The ID of the operation, unique across all operations for a given order. refund-only-option description=stet Optional description of the refund reason. reason=est [required] Reason for the refund. Acceptable values are: - \" adjustment \" - \" autoPostInternal \" - \" autoPostInvalidBillingAddress \" - \" autoPostNoInventory \" - \" autoPostPriceError \" - \" autoPostUndeliverableShippingAddress \" - \" couponAbuse \" - \" courtesyAdjustment \" - \" customerCanceled \" - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" customerSupportRequested \" - \" deliveredLateByCarrier \" - \" deliveredTooLate \" - \" expiredItem \" - \" failToPushOrderGoogleError \" - \" failToPushOrderMerchantError \" - \" failToPushOrderMerchantFulfillmentError \" - \" failToPushOrderToMerchant \" - \" failToPushOrderToMerchantOutOfStock \" - \" feeAdjustment \" - \" invalidCoupon \" - \" lateShipmentCredit \" - \" malformedShippingAddress \" - \" merchantDidNotShipOnTime \" - \" noInventory \" - \" orderTimeout \" - \" other \" - \" paymentAbuse \" - \" paymentDeclined \" - \" priceAdjustment \" - \" priceError \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" promoReallocation \" - \" qualityNotAsExpected \" - \" returnRefundAbuse \" - \" shippingCostAdjustment \" - \" shippingPriceError \" - \" taxAdjustment \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" ..return-option description=aliquyam Optional description of the return reason. reason=elitr [required] Reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \"","title":"Required Request Value"},{"location":"orderinvoices_createrefundinvoice/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orderinvoices_createrefundinvoice/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderinvoices_createrefundinvoice/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderreports_listdisbursements/","text":"Retrieves a report for disbursements from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreports listdisbursements ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p disbursement-end-date=string The last date which disbursements occurred. In ISO 8601 format. Default: current date. -p disbursement-start-date=string The first date which disbursements occurred. In ISO 8601 format. -p max-results=integer The maximum number of disbursements to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listdisbursements"},{"location":"orderreports_listdisbursements/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreports listdisbursements ...","title":"Scopes"},{"location":"orderreports_listdisbursements/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orderreports_listdisbursements/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreports_listdisbursements/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p disbursement-end-date=string The last date which disbursements occurred. In ISO 8601 format. Default: current date. -p disbursement-start-date=string The first date which disbursements occurred. In ISO 8601 format. -p max-results=integer The maximum number of disbursements to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"orderreports_listdisbursements/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderreports_listtransactions/","text":"Retrieves a list of transactions for a disbursement from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreports listtransactions ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <disbursement-id> (string) The Google-provided ID of the disbursement (found in Wallet). Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of disbursements to return in the response, used for paging. -p page-token=string The token returned by the previous request. -p transaction-end-date=string The last date in which transaction occurred. In ISO 8601 format. Default: current date. -p transaction-start-date=string The first date in which transaction occurred. In ISO 8601 format. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listtransactions"},{"location":"orderreports_listtransactions/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreports listtransactions ...","title":"Scopes"},{"location":"orderreports_listtransactions/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <disbursement-id> (string) The Google-provided ID of the disbursement (found in Wallet).","title":"Required Scalar Arguments"},{"location":"orderreports_listtransactions/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreports_listtransactions/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of disbursements to return in the response, used for paging. -p page-token=string The token returned by the previous request. -p transaction-end-date=string The last date in which transaction occurred. In ISO 8601 format. Default: current date. -p transaction-start-date=string The first date in which transaction occurred. In ISO 8601 format.","title":"Optional Method Properties"},{"location":"orderreports_listtransactions/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderreturns_get/","text":"Retrieves an order return from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreturns get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <return-id> (string) Merchant order return ID generated by Google. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"orderreturns_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreturns get ...","title":"Scopes"},{"location":"orderreturns_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <return-id> (string) Merchant order return ID generated by Google.","title":"Required Scalar Arguments"},{"location":"orderreturns_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreturns_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orderreturns_list/","text":"Lists order returns in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreturns list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p created-end-date=string Obtains order returns created before this date (inclusively), in ISO 8601 format. -p created-start-date=string Obtains order returns created after this date (inclusively), in ISO 8601 format. -p max-results=integer The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page. -p order-by=string Return the results in the specified order. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"orderreturns_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orderreturns list ...","title":"Scopes"},{"location":"orderreturns_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orderreturns_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orderreturns_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p created-end-date=string Obtains order returns created before this date (inclusively), in ISO 8601 format. -p created-start-date=string Obtains order returns created after this date (inclusively), in ISO 8601 format. -p max-results=integer The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page. -p order-by=string Return the results in the specified order. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"orderreturns_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_acknowledge/","text":"Marks an order as acknowledged. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders acknowledge ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersAcknowledgeRequest: operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=duo The ID of the operation. Unique across all operations for a given order. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Acknowledge"},{"location":"orders_acknowledge/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders acknowledge ...","title":"Scopes"},{"location":"orders_acknowledge/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_acknowledge/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersAcknowledgeRequest: operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=duo The ID of the operation. Unique across all operations for a given order.","title":"Required Request Value"},{"location":"orders_acknowledge/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_acknowledge/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_acknowledge/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_advancetestorder/","text":"Sandbox only. Moves a test order from state \" inProgress \" to state \" pendingShipment \". Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders advancetestorder ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to modify. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Advancetestorder"},{"location":"orders_advancetestorder/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders advancetestorder ...","title":"Scopes"},{"location":"orders_advancetestorder/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to modify.","title":"Required Scalar Arguments"},{"location":"orders_advancetestorder/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_advancetestorder/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_cancel/","text":"Cancels all line items in an order, making a full refund. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders cancel ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to cancel. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelRequest: operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=diam The ID of the operation. Unique across all operations for a given order. reason=est The reason for the cancellation. Acceptable values are: - \" customerInitiatedCancel \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" noInventory \" - \" other \" - \" priceError \" - \" shippingPriceError \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" reason-text=sit The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Cancel"},{"location":"orders_cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders cancel ...","title":"Scopes"},{"location":"orders_cancel/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to cancel.","title":"Required Scalar Arguments"},{"location":"orders_cancel/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelRequest: operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . operation-id=diam The ID of the operation. Unique across all operations for a given order. reason=est The reason for the cancellation. Acceptable values are: - \" customerInitiatedCancel \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" noInventory \" - \" other \" - \" priceError \" - \" shippingPriceError \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" reason-text=sit The explanation of the reason.","title":"Required Request Value"},{"location":"orders_cancel/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_cancel/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_cancellineitem/","text":"Cancels a line item, making a full refund. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders cancellineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelLineItemRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=sed The currency of the price. value=eos The price represented as a number. ..amount-pretax currency=lorem The currency of the price. value=ea The price represented as a number. ..amount-tax currency=stet The currency of the price. value=dolores The price represented as a number. .. line-item-id=eos The ID of the line item to cancel. Either lineItemId or productId is required. operation-id=et The ID of the operation. Unique across all operations for a given order. product-id=sea The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=27 The quantity to cancel. reason=at The reason for the cancellation. Acceptable values are: - \" customerInitiatedCancel \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" noInventory \" - \" other \" - \" priceError \" - \" shippingPriceError \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" reason-text=dolore The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Cancellineitem"},{"location":"orders_cancellineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders cancellineitem ...","title":"Scopes"},{"location":"orders_cancellineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_cancellineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelLineItemRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=sed The currency of the price. value=eos The price represented as a number. ..amount-pretax currency=lorem The currency of the price. value=ea The price represented as a number. ..amount-tax currency=stet The currency of the price. value=dolores The price represented as a number. .. line-item-id=eos The ID of the line item to cancel. Either lineItemId or productId is required. operation-id=et The ID of the operation. Unique across all operations for a given order. product-id=sea The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=27 The quantity to cancel. reason=at The reason for the cancellation. Acceptable values are: - \" customerInitiatedCancel \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" noInventory \" - \" other \" - \" priceError \" - \" shippingPriceError \" - \" taxError \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" reason-text=dolore The explanation of the reason.","title":"Required Request Value"},{"location":"orders_cancellineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_cancellineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_cancellineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_canceltestorderbycustomer/","text":"Sandbox only. Cancels a test order for customer-initiated cancellation. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders canceltestorderbycustomer ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to cancel. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelTestOrderByCustomerRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=eirmod The reason for the cancellation. Acceptable values are: - \" changedMind \" - \" orderedWrongItem \" - \" other \" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Canceltestorderbycustomer"},{"location":"orders_canceltestorderbycustomer/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders canceltestorderbycustomer ...","title":"Scopes"},{"location":"orders_canceltestorderbycustomer/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the test order to cancel.","title":"Required Scalar Arguments"},{"location":"orders_canceltestorderbycustomer/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCancelTestOrderByCustomerRequest: reason: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reason=eirmod The reason for the cancellation. Acceptable values are: - \" changedMind \" - \" orderedWrongItem \" - \" other \"","title":"Required Request Value"},{"location":"orders_canceltestorderbycustomer/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_canceltestorderbycustomer/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_canceltestorderbycustomer/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_createtestorder/","text":"Sandbox only. Creates a test order. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders createtestorder ... Required Scalar Argument <merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestOrderRequest: country: string template-name: string test-order: customer: email: string explicit-marketing-preference: boolean full-name: string marketing-rights-info: explicit-marketing-preference: string last-updated-timestamp: string enable-orderinvoices: boolean kind: string notification-mode: string payment-method: expiration-month: integer expiration-year: integer last-four-digits: string predefined-billing-address: string type: string predefined-delivery-address: string predefined-pickup-details: string shipping-cost: currency: string value: string shipping-cost-tax: currency: string value: string shipping-option: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . country=lorem The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name , or the addresses of orders created via test_order . Acceptable values are: - \" US \" - \" FR \" Defaults to US . template-name=accusam The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \" template1 \" - \" template1a \" - \" template1b \" - \" template2 \" - \" template3 \" test-order.customer email=amet Required. Email address of the customer. Acceptable values are: - \" pog.dwight.schrute@gmail.com \" - \" pog.jim.halpert@gmail.com \" - \" penpog.pam.beesly@gmail.comding \" explicit-marketing-preference=true Deprecated. Please use marketingRightsInfo instead. full-name=erat Full name of the customer. marketing-rights-info explicit-marketing-preference=accusam Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \" denied \" - \" granted \" last-updated-timestamp=sea Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet. ... enable-orderinvoices=true Whether the orderinvoices service should support this order. kind=lorem Identifies what kind of resource this is. Value: the fixed string \" content#testOrder \" notification-mode=et Restricted. Do not use. payment-method expiration-month=24 The card expiration month (January = 1, February = 2 etc.). expiration-year=97 The card expiration year (4-digit, e.g. 2015). last-four-digits=et The last four digits of the card number. predefined-billing-address=sit The billing address. Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" type=erat The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder . Acceptable values are: - \" AMEX \" - \" DISCOVER \" - \" MASTERCARD \" - \" VISA \" .. predefined-delivery-address=sea Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" predefined-pickup-details=nonumy Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type pickup . Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" shipping-cost currency=et The currency of the price. value=gubergren The price represented as a number. ..shipping-cost-tax currency=justo The currency of the price. value=sea The price represented as a number. .. shipping-option=consetetur Required. The requested shipping option. Acceptable values are: - \" economy \" - \" expedited \" - \" oneDay \" - \" sameDay \" - \" standard \" - \" twoDay \" About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createtestorder"},{"location":"orders_createtestorder/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders createtestorder ...","title":"Scopes"},{"location":"orders_createtestorder/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orders_createtestorder/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestOrderRequest: country: string template-name: string test-order: customer: email: string explicit-marketing-preference: boolean full-name: string marketing-rights-info: explicit-marketing-preference: string last-updated-timestamp: string enable-orderinvoices: boolean kind: string notification-mode: string payment-method: expiration-month: integer expiration-year: integer last-four-digits: string predefined-billing-address: string type: string predefined-delivery-address: string predefined-pickup-details: string shipping-cost: currency: string value: string shipping-cost-tax: currency: string value: string shipping-option: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . country=lorem The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name , or the addresses of orders created via test_order . Acceptable values are: - \" US \" - \" FR \" Defaults to US . template-name=accusam The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \" template1 \" - \" template1a \" - \" template1b \" - \" template2 \" - \" template3 \" test-order.customer email=amet Required. Email address of the customer. Acceptable values are: - \" pog.dwight.schrute@gmail.com \" - \" pog.jim.halpert@gmail.com \" - \" penpog.pam.beesly@gmail.comding \" explicit-marketing-preference=true Deprecated. Please use marketingRightsInfo instead. full-name=erat Full name of the customer. marketing-rights-info explicit-marketing-preference=accusam Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \" denied \" - \" granted \" last-updated-timestamp=sea Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet. ... enable-orderinvoices=true Whether the orderinvoices service should support this order. kind=lorem Identifies what kind of resource this is. Value: the fixed string \" content#testOrder \" notification-mode=et Restricted. Do not use. payment-method expiration-month=24 The card expiration month (January = 1, February = 2 etc.). expiration-year=97 The card expiration year (4-digit, e.g. 2015). last-four-digits=et The last four digits of the card number. predefined-billing-address=sit The billing address. Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" type=erat The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder . Acceptable values are: - \" AMEX \" - \" DISCOVER \" - \" MASTERCARD \" - \" VISA \" .. predefined-delivery-address=sea Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" predefined-pickup-details=nonumy Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type pickup . Acceptable values are: - \" dwight \" - \" jim \" - \" pam \" shipping-cost currency=et The currency of the price. value=gubergren The price represented as a number. ..shipping-cost-tax currency=justo The currency of the price. value=sea The price represented as a number. .. shipping-option=consetetur Required. The requested shipping option. Acceptable values are: - \" economy \" - \" expedited \" - \" oneDay \" - \" sameDay \" - \" standard \" - \" twoDay \"","title":"Required Request Value"},{"location":"orders_createtestorder/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_createtestorder/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_createtestorder/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_createtestreturn/","text":"Sandbox only. Creates a test return. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders createtestreturn ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestReturnRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createtestreturn"},{"location":"orders_createtestreturn/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders createtestreturn ...","title":"Scopes"},{"location":"orders_createtestreturn/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_createtestreturn/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCreateTestReturnRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"orders_createtestreturn/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_createtestreturn/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_createtestreturn/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_custombatch/","text":"Retrieves or modifies multiple orders in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"orders_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders custombatch ...","title":"Scopes"},{"location":"orders_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"orders_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_get/","text":"Retrieves an order from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"orders_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders get ...","title":"Scopes"},{"location":"orders_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_getbymerchantorderid/","text":"Retrieves an order using merchant order ID. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders getbymerchantorderid ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <merchant-order-id> (string) The merchant order ID to be looked for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getbymerchantorderid"},{"location":"orders_getbymerchantorderid/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders getbymerchantorderid ...","title":"Scopes"},{"location":"orders_getbymerchantorderid/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <merchant-order-id> (string) The merchant order ID to be looked for.","title":"Required Scalar Arguments"},{"location":"orders_getbymerchantorderid/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_getbymerchantorderid/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_gettestordertemplate/","text":"Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders gettestordertemplate ... Required Scalar Arguments <merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. <template-name> (string) The name of the template to retrieve. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country of the template to retrieve. Defaults to US . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Gettestordertemplate"},{"location":"orders_gettestordertemplate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders gettestordertemplate ...","title":"Scopes"},{"location":"orders_gettestordertemplate/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that should manage the order. This cannot be a multi-client account. <template-name> (string) The name of the template to retrieve.","title":"Required Scalar Arguments"},{"location":"orders_gettestordertemplate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_gettestordertemplate/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p country=string The country of the template to retrieve. Defaults to US .","title":"Optional Method Properties"},{"location":"orders_gettestordertemplate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_instorerefundlineitem/","text":"Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders instorerefundlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersInStoreRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=sit The currency of the price. value=aliquyam The price represented as a number. ..amount-tax currency=eos The currency of the price. value=at The price represented as a number. .. line-item-id=dolores The ID of the line item to return. Either lineItemId or productId is required. operation-id=consetetur The ID of the operation. Unique across all operations for a given order. product-id=gubergren The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=97 The quantity to return and refund. reason=aliquyam The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=no The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Instorerefundlineitem"},{"location":"orders_instorerefundlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders instorerefundlineitem ...","title":"Scopes"},{"location":"orders_instorerefundlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_instorerefundlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersInStoreRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=sit The currency of the price. value=aliquyam The price represented as a number. ..amount-tax currency=eos The currency of the price. value=at The price represented as a number. .. line-item-id=dolores The ID of the line item to return. Either lineItemId or productId is required. operation-id=consetetur The ID of the operation. Unique across all operations for a given order. product-id=gubergren The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=97 The quantity to return and refund. reason=aliquyam The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=no The explanation of the reason.","title":"Required Request Value"},{"location":"orders_instorerefundlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_instorerefundlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_instorerefundlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_list/","text":"Lists the orders in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders list ... Required Scalar Argument <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p acknowledged=boolean Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to false , in conjunction with the acknowledge call, such that only un-acknowledged orders are returned. -p max-results=integer The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page. -p order-by=string Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc -p page-token=string The token returned by the previous request. -p placed-date-end=string Obtains orders placed before this date (exclusively), in ISO 8601 format. -p placed-date-start=string Obtains orders placed after this date (inclusively), in ISO 8601 format. -p statuses=string Obtains orders that match any of the specified statuses. Please note that active is a shortcut for pendingShipment and partiallyShipped , and completed is a shortcut for shipped , partiallyDelivered , delivered , partiallyReturned , returned , and canceled . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"orders_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders list ...","title":"Scopes"},{"location":"orders_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"orders_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p acknowledged=boolean Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to false , in conjunction with the acknowledge call, such that only un-acknowledged orders are returned. -p max-results=integer The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page. -p order-by=string Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc -p page-token=string The token returned by the previous request. -p placed-date-end=string Obtains orders placed before this date (exclusively), in ISO 8601 format. -p placed-date-start=string Obtains orders placed after this date (inclusively), in ISO 8601 format. -p statuses=string Obtains orders that match any of the specified statuses. Please note that active is a shortcut for pendingShipment and partiallyShipped , and completed is a shortcut for shipped , partiallyDelivered , delivered , partiallyReturned , returned , and canceled .","title":"Optional Method Properties"},{"location":"orders_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_refund/","text":"Deprecated, please use returnRefundLineItem instead. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders refund ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to refund. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRefundRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=amet. The currency of the price. value=ipsum The price represented as a number. ..amount-pretax currency=lorem The currency of the price. value=accusam The price represented as a number. ..amount-tax currency=gubergren The currency of the price. value=sadipscing The price represented as a number. .. operation-id=at The ID of the operation. Unique across all operations for a given order. reason=sit The reason for the refund. Acceptable values are: - \" adjustment \" - \" courtesyAdjustment \" - \" customerCanceled \" - \" customerDiscretionaryReturn \" - \" deliveredLateByCarrier \" - \" feeAdjustment \" - \" lateShipmentCredit \" - \" noInventory \" - \" other \" - \" priceError \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" shippingCostAdjustment \" - \" taxAdjustment \" - \" undeliverableShippingAddress \" - \" wrongProductShipped \" reason-text=duo The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Refund"},{"location":"orders_refund/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders refund ...","title":"Scopes"},{"location":"orders_refund/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order to refund.","title":"Required Scalar Arguments"},{"location":"orders_refund/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRefundRequest: amount: currency: string value: string amount-pretax: currency: string value: string amount-tax: currency: string value: string operation-id: string reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount currency=amet. The currency of the price. value=ipsum The price represented as a number. ..amount-pretax currency=lorem The currency of the price. value=accusam The price represented as a number. ..amount-tax currency=gubergren The currency of the price. value=sadipscing The price represented as a number. .. operation-id=at The ID of the operation. Unique across all operations for a given order. reason=sit The reason for the refund. Acceptable values are: - \" adjustment \" - \" courtesyAdjustment \" - \" customerCanceled \" - \" customerDiscretionaryReturn \" - \" deliveredLateByCarrier \" - \" feeAdjustment \" - \" lateShipmentCredit \" - \" noInventory \" - \" other \" - \" priceError \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" shippingCostAdjustment \" - \" taxAdjustment \" - \" undeliverableShippingAddress \" - \" wrongProductShipped \" reason-text=duo The explanation of the reason.","title":"Required Request Value"},{"location":"orders_refund/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_refund/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_refund/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_rejectreturnlineitem/","text":"Rejects return on an line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders rejectreturnlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRejectReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=sit The ID of the line item to return. Either lineItemId or productId is required. operation-id=magna The ID of the operation. Unique across all operations for a given order. product-id=et The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=35 The quantity to return and refund. reason=dolor The reason for the return. Acceptable values are: - \" damagedOrUsed \" - \" missingComponent \" - \" notEligible \" - \" other \" - \" outOfReturnWindow \" reason-text=lorem The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Rejectreturnlineitem"},{"location":"orders_rejectreturnlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders rejectreturnlineitem ...","title":"Scopes"},{"location":"orders_rejectreturnlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_rejectreturnlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersRejectReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=sit The ID of the line item to return. Either lineItemId or productId is required. operation-id=magna The ID of the operation. Unique across all operations for a given order. product-id=et The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=35 The quantity to return and refund. reason=dolor The reason for the return. Acceptable values are: - \" damagedOrUsed \" - \" missingComponent \" - \" notEligible \" - \" other \" - \" outOfReturnWindow \" reason-text=lorem The explanation of the reason.","title":"Required Request Value"},{"location":"orders_rejectreturnlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_rejectreturnlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_rejectreturnlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_returnlineitem/","text":"Returns a line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders returnlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=justo The ID of the line item to return. Either lineItemId or productId is required. operation-id=amet. The ID of the operation. Unique across all operations for a given order. product-id=no The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=10 The quantity to return. reason=sed The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=kasd The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Returnlineitem"},{"location":"orders_returnlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders returnlineitem ...","title":"Scopes"},{"location":"orders_returnlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_returnlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnLineItemRequest: line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=justo The ID of the line item to return. Either lineItemId or productId is required. operation-id=amet. The ID of the operation. Unique across all operations for a given order. product-id=no The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=10 The quantity to return. reason=sed The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=kasd The explanation of the reason.","title":"Required Request Value"},{"location":"orders_returnlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_returnlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_returnlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_returnrefundlineitem/","text":"Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders returnrefundlineitem ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=lorem The currency of the price. value=sanctus The price represented as a number. ..amount-tax currency=nonumy The currency of the price. value=rebum. The price represented as a number. .. line-item-id=tempor The ID of the line item to return. Either lineItemId or productId is required. operation-id=dolore The ID of the operation. Unique across all operations for a given order. product-id=eos The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=49 The quantity to return and refund. Quantity is required. reason=dolore The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=amet The explanation of the reason. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Returnrefundlineitem"},{"location":"orders_returnrefundlineitem/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders returnrefundlineitem ...","title":"Scopes"},{"location":"orders_returnrefundlineitem/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_returnrefundlineitem/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersReturnRefundLineItemRequest: amount-pretax: currency: string value: string amount-tax: currency: string value: string line-item-id: string operation-id: string product-id: string quantity: integer reason: string reason-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .amount-pretax currency=lorem The currency of the price. value=sanctus The price represented as a number. ..amount-tax currency=nonumy The currency of the price. value=rebum. The price represented as a number. .. line-item-id=tempor The ID of the line item to return. Either lineItemId or productId is required. operation-id=dolore The ID of the operation. Unique across all operations for a given order. product-id=eos The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. quantity=49 The quantity to return and refund. Quantity is required. reason=dolore The reason for the return. Acceptable values are: - \" customerDiscretionaryReturn \" - \" customerInitiatedMerchantCancel \" - \" deliveredTooLate \" - \" expiredItem \" - \" invalidCoupon \" - \" malformedShippingAddress \" - \" other \" - \" productArrivedDamaged \" - \" productNotAsDescribed \" - \" qualityNotAsExpected \" - \" undeliverableShippingAddress \" - \" unsupportedPoBoxAddress \" - \" wrongProductShipped \" reason-text=amet The explanation of the reason.","title":"Required Request Value"},{"location":"orders_returnrefundlineitem/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_returnrefundlineitem/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_returnrefundlineitem/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_setlineitemmetadata/","text":"Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders setlineitemmetadata ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersSetLineItemMetadataRequest: line-item-id: string operation-id: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=ut The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=at The ID of the operation. Unique across all operations for a given order. product-id=sit The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Setlineitemmetadata"},{"location":"orders_setlineitemmetadata/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders setlineitemmetadata ...","title":"Scopes"},{"location":"orders_setlineitemmetadata/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_setlineitemmetadata/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersSetLineItemMetadataRequest: line-item-id: string operation-id: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . line-item-id=ut The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=at The ID of the operation. Unique across all operations for a given order. product-id=sit The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.","title":"Required Request Value"},{"location":"orders_setlineitemmetadata/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_setlineitemmetadata/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_setlineitemmetadata/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_shiplineitems/","text":"Marks line item(s) as shipped. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders shiplineitems ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersShipLineItemsRequest: carrier: string operation-id: string shipment-group-id: string shipment-id: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=vero Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the Orders resource representation for a list of acceptable values. operation-id=duo The ID of the operation. Unique across all operations for a given order. shipment-group-id=sadipscing ID of the shipment group. Required for orders that use the orderinvoices service. shipment-id=ut Deprecated. Please use shipmentInfo instead. The ID of the shipment. tracking-id=rebum. Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Shiplineitems"},{"location":"orders_shiplineitems/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders shiplineitems ...","title":"Scopes"},{"location":"orders_shiplineitems/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_shiplineitems/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersShipLineItemsRequest: carrier: string operation-id: string shipment-group-id: string shipment-id: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=vero Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the Orders resource representation for a list of acceptable values. operation-id=duo The ID of the operation. Unique across all operations for a given order. shipment-group-id=sadipscing ID of the shipment group. Required for orders that use the orderinvoices service. shipment-id=ut Deprecated. Please use shipmentInfo instead. The ID of the shipment. tracking-id=rebum. Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment.","title":"Required Request Value"},{"location":"orders_shiplineitems/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_shiplineitems/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_shiplineitems/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_updatelineitemshippingdetails/","text":"Updates ship by and delivery by dates for a line item. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updatelineitemshippingdetails ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateLineItemShippingDetailsRequest: deliver-by-date: string line-item-id: string operation-id: string product-id: string ship-by-date: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deliver-by-date=duo Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past. line-item-id=kasd The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=sadipscing The ID of the operation. Unique across all operations for a given order. product-id=tempor The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. ship-by-date=sea Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Updatelineitemshippingdetails"},{"location":"orders_updatelineitemshippingdetails/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updatelineitemshippingdetails ...","title":"Scopes"},{"location":"orders_updatelineitemshippingdetails/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updatelineitemshippingdetails/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateLineItemShippingDetailsRequest: deliver-by-date: string line-item-id: string operation-id: string product-id: string ship-by-date: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . deliver-by-date=duo Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past. line-item-id=kasd The ID of the line item to set metadata. Either lineItemId or productId is required. operation-id=sadipscing The ID of the operation. Unique across all operations for a given order. product-id=tempor The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. ship-by-date=sea Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.","title":"Required Request Value"},{"location":"orders_updatelineitemshippingdetails/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updatelineitemshippingdetails/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updatelineitemshippingdetails/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_updatemerchantorderid/","text":"Updates the merchant order ID for a given order. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updatemerchantorderid ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateMerchantOrderIdRequest: merchant-order-id: string operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . merchant-order-id=et The merchant order id to be assigned to the order. Must be unique per merchant. operation-id=lorem The ID of the operation. Unique across all operations for a given order. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Updatemerchantorderid"},{"location":"orders_updatemerchantorderid/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updatemerchantorderid ...","title":"Scopes"},{"location":"orders_updatemerchantorderid/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updatemerchantorderid/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateMerchantOrderIdRequest: merchant-order-id: string operation-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . merchant-order-id=et The merchant order id to be assigned to the order. Must be unique per merchant. operation-id=lorem The ID of the operation. Unique across all operations for a given order.","title":"Required Request Value"},{"location":"orders_updatemerchantorderid/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updatemerchantorderid/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updatemerchantorderid/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_updateshipment/","text":"Updates a shipment's status, carrier, and/or tracking ID. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updateshipment ... Required Scalar Arguments <merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateShipmentRequest: carrier: string delivery-date: string operation-id: string shipment-id: string status: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=magna The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the Orders resource representation for a list of acceptable values. delivery-date=takimata Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered . operation-id=rebum. The ID of the operation. Unique across all operations for a given order. shipment-id=at The ID of the shipment. status=invidunt New status for the shipment. Not updated if missing. Acceptable values are: - \" delivered \" - \" undeliverable \" - \" readyForPickup \" tracking-id=clita The tracking ID for the shipment. Not updated if missing. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Updateshipment"},{"location":"orders_updateshipment/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> orders updateshipment ...","title":"Scopes"},{"location":"orders_updateshipment/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that manages the order. This cannot be a multi-client account. <order-id> (string) The ID of the order.","title":"Required Scalar Arguments"},{"location":"orders_updateshipment/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: OrdersUpdateShipmentRequest: carrier: string delivery-date: string operation-id: string shipment-id: string status: string tracking-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . carrier=magna The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the Orders resource representation for a list of acceptable values. delivery-date=takimata Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered . operation-id=rebum. The ID of the operation. Unique across all operations for a given order. shipment-id=at The ID of the shipment. status=invidunt New status for the shipment. Not updated if missing. Acceptable values are: - \" delivered \" - \" undeliverable \" - \" readyForPickup \" tracking-id=clita The tracking ID for the shipment. Not updated if missing.","title":"Required Request Value"},{"location":"orders_updateshipment/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"orders_updateshipment/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"orders_updateshipment/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_custombatch/","text":"Batches multiple POS-related calls in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"pos_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos custombatch ...","title":"Scopes"},{"location":"pos_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"pos_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pos_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"pos_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_delete/","text":"Deletes a store for the given merchant. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos delete ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. <store-code> (string) A store code that is unique per merchant. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"pos_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos delete ...","title":"Scopes"},{"location":"pos_delete/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. <store-code> (string) A store code that is unique per merchant.","title":"Required Scalar Arguments"},{"location":"pos_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"pos_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_get/","text":"Retrieves information about the given store. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos get ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. <store-code> (string) A store code that is unique per merchant. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"pos_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos get ...","title":"Scopes"},{"location":"pos_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. <store-code> (string) A store code that is unique per merchant.","title":"Required Scalar Arguments"},{"location":"pos_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_insert/","text":"Creates a store for the given merchant. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos insert ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosStore: gcid-category: [string] kind: string phone-number: string place-id: string store-address: string store-code: string store-name: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . gcid-category=stet The business type of the store. Each invocation of this argument appends the given value to the array. kind=aliquyam Identifies what kind of resource this is. Value: the fixed string \" content#posStore \" phone-number=ut The store phone number. place-id=sit The Google Place Id of the store location. store-address=vero Required. The street address of the store. store-code=rebum. Required. A store identifier that is unique for the given merchant. store-name=dolores The merchant or store name. website-url=consetetur The website url for the store or merchant. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"pos_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos insert ...","title":"Scopes"},{"location":"pos_insert/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant.","title":"Required Scalar Arguments"},{"location":"pos_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosStore: gcid-category: [string] kind: string phone-number: string place-id: string store-address: string store-code: string store-name: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . gcid-category=stet The business type of the store. Each invocation of this argument appends the given value to the array. kind=aliquyam Identifies what kind of resource this is. Value: the fixed string \" content#posStore \" phone-number=ut The store phone number. place-id=sit The Google Place Id of the store location. store-address=vero Required. The street address of the store. store-code=rebum. Required. A store identifier that is unique for the given merchant. store-name=dolores The merchant or store name. website-url=consetetur The website url for the store or merchant.","title":"Required Request Value"},{"location":"pos_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pos_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"pos_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_inventory/","text":"Submit inventory for the given merchant. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos inventory ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosInventoryRequest: content-language: string gtin: string item-id: string price: currency: string value: string quantity: string store-code: string target-country: int64 timestamp: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . content-language=dolores Required. The two-letter ISO 639-1 language code for the item. gtin=sed Global Trade Item Number. item-id=invidunt Required. A unique identifier for the item. price currency=clita The currency of the price. value=dolor The price represented as a number. .. quantity=aliquyam Required. The available quantity of the item. store-code=magna Required. The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. target-country=-42 Required. The CLDR territory code for the item. timestamp=nonumy Required. The inventory timestamp, in ISO 8601 format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Inventory"},{"location":"pos_inventory/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos inventory ...","title":"Scopes"},{"location":"pos_inventory/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant.","title":"Required Scalar Arguments"},{"location":"pos_inventory/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosInventoryRequest: content-language: string gtin: string item-id: string price: currency: string value: string quantity: string store-code: string target-country: int64 timestamp: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . content-language=dolores Required. The two-letter ISO 639-1 language code for the item. gtin=sed Global Trade Item Number. item-id=invidunt Required. A unique identifier for the item. price currency=clita The currency of the price. value=dolor The price represented as a number. .. quantity=aliquyam Required. The available quantity of the item. store-code=magna Required. The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. target-country=-42 Required. The CLDR territory code for the item. timestamp=nonumy Required. The inventory timestamp, in ISO 8601 format.","title":"Required Request Value"},{"location":"pos_inventory/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pos_inventory/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_inventory/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"pos_inventory/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_list/","text":"Lists the stores of the target merchant. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos list ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"pos_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos list ...","title":"Scopes"},{"location":"pos_list/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant.","title":"Required Scalar Arguments"},{"location":"pos_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"pos_sale/","text":"Submit a sale event for the given merchant. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos sale ... Required Scalar Arguments <merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosSaleRequest: content-language: string gtin: string item-id: string price: currency: string value: string quantity: string sale-id: string store-code: string target-country: int64 timestamp: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . content-language=et Required. The two-letter ISO 639-1 language code for the item. gtin=sanctus Global Trade Item Number. item-id=accusam Required. A unique identifier for the item. price currency=tempor The currency of the price. value=sed The price represented as a number. .. quantity=est Required. The relative change of the available quantity. Negative for items returned. sale-id=takimata A unique ID to group items from the same sale event. store-code=dolor Required. The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. target-country=-79 Required. The CLDR territory code for the item. timestamp=at Required. The inventory timestamp, in ISO 8601 format. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Sale"},{"location":"pos_sale/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> pos sale ...","title":"Scopes"},{"location":"pos_sale/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the POS or inventory data provider. <target-merchant-id> (string) The ID of the target merchant.","title":"Required Scalar Arguments"},{"location":"pos_sale/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: PosSaleRequest: content-language: string gtin: string item-id: string price: currency: string value: string quantity: string sale-id: string store-code: string target-country: int64 timestamp: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . content-language=et Required. The two-letter ISO 639-1 language code for the item. gtin=sanctus Global Trade Item Number. item-id=accusam Required. A unique identifier for the item. price currency=tempor The currency of the price. value=sed The price represented as a number. .. quantity=est Required. The relative change of the available quantity. Negative for items returned. sale-id=takimata A unique ID to group items from the same sale event. store-code=dolor Required. The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. target-country=-79 Required. The CLDR territory code for the item. timestamp=at Required. The inventory timestamp, in ISO 8601 format.","title":"Required Request Value"},{"location":"pos_sale/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"pos_sale/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"pos_sale/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"pos_sale/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"products_custombatch/","text":"Retrieves, inserts, and deletes multiple products in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"products_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products custombatch ...","title":"Scopes"},{"location":"products_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"products_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"products_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"products_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"products_delete/","text":"Deletes a product from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products delete ... Required Scalar Arguments <merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"products_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products delete ...","title":"Scopes"},{"location":"products_delete/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product.","title":"Required Scalar Arguments"},{"location":"products_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"products_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"products_get/","text":"Retrieves a product from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"products_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products get ...","title":"Scopes"},{"location":"products_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product.","title":"Required Scalar Arguments"},{"location":"products_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"products_insert/","text":"Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products insert ... Required Scalar Argument <merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Product: additional-image-links: [string] additional-product-types: [string] adult: boolean adwords-grouping: string adwords-labels: [string] adwords-redirect: string age-group: string availability: string availability-date: string brand: string canonical-link: string channel: string color: string condition: string content-language: string cost-of-goods-sold: currency: string value: string custom-label0: string custom-label1: string custom-label2: string custom-label3: string custom-label4: string description: string display-ads-id: string display-ads-link: string display-ads-similar-ids: [string] display-ads-title: string display-ads-value: number energy-efficiency-class: string expiration-date: string gender: string google-product-category: string gtin: string id: string identifier-exists: boolean image-link: string installment: amount: currency: string value: string months: string is-bundle: boolean item-group-id: string kind: string link: string loyalty-points: name: string points-value: string ratio: number material: string max-energy-efficiency-class: string max-handling-time: string min-energy-efficiency-class: string min-handling-time: string mobile-link: string mpn: string multipack: string offer-id: string online-only: boolean pattern: string price: currency: string value: string product-type: string promotion-ids: [string] sale-price: currency: string value: string sale-price-effective-date: string sell-on-google-quantity: string shipping-height: unit: string value: number shipping-label: string shipping-length: unit: string value: number shipping-weight: unit: string value: number shipping-width: unit: string value: number size-system: string size-type: string sizes: [string] source: string target-country: int64 title: string unit-pricing-base-measure: unit: string value: string unit-pricing-measure: unit: string value: number validated-destinations: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . additional-image-links=erat Additional URLs of images of the item. Each invocation of this argument appends the given value to the array. additional-product-types=justo Additional categories of the item (formatted as in products data specification). Each invocation of this argument appends the given value to the array. adult=false Should be set to true if the item is targeted towards adults. adwords-grouping=dolores Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise. adwords-labels=consetetur Similar to adwords_grouping, but only works on CPC. Each invocation of this argument appends the given value to the array. adwords-redirect=no Allows advertisers to override the item URL when the product is shown within the context of Product Ads. age-group=justo Target age group of the item. Acceptable values are: - \" adult \" - \" infant \" - \" kids \" - \" newborn \" - \" toddler \" - \" youngAdult \" availability=sadipscing Availability status of the item. Acceptable values are: - \" in stock \" - \" out of stock \" - \" preorder \" availability-date=diam The day a pre-ordered product becomes available for delivery, in ISO 8601 format. brand=sea Brand of the item. canonical-link=ipsum URL for the canonical version of your item's landing page. channel=stet Required. The item's channel (online or local). Acceptable values are: - \" local \" - \" online \" color=gubergren Color of the item. condition=ipsum Condition or state of the item. Acceptable values are: - \" new \" - \" refurbished \" - \" used \" content-language=no Required. The two-letter ISO 639-1 language code for the item. cost-of-goods-sold currency=sit The currency of the price. value=kasd The price represented as a number. .. custom-label0=amet Custom label 0 for custom grouping of items in a Shopping campaign. custom-label1=lorem Custom label 1 for custom grouping of items in a Shopping campaign. custom-label2=justo Custom label 2 for custom grouping of items in a Shopping campaign. custom-label3=invidunt Custom label 3 for custom grouping of items in a Shopping campaign. custom-label4=sed Custom label 4 for custom grouping of items in a Shopping campaign. description=nonumy Description of the item. display-ads-id=sea An identifier for an item for dynamic remarketing campaigns. display-ads-link=ipsum URL directly to your item's landing page for dynamic remarketing campaigns. display-ads-similar-ids=kasd Advertiser-specified recommendations. Each invocation of this argument appends the given value to the array. display-ads-title=justo Title of an item for dynamic remarketing campaigns. display-ads-value=0.6596318919873574 Offer margin for dynamic remarketing campaigns. energy-efficiency-class=at The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" expiration-date=erat Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future. gender=clita Target gender of the item. Acceptable values are: - \" female \" - \" male \" - \" unisex \" google-product-category=vero Google's category of the item (see Google product taxonomy ). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API. gtin=invidunt Global Trade Item Number (GTIN) of the item. id=nonumy The REST ID of the product. Content API methods that operate on products take this as their productId parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId. identifier-exists=false False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada. image-link=erat URL of an image of the item. installment.amount currency=dolores The currency of the price. value=ipsum The price represented as a number. .. months=voluptua. The number of installments the buyer has to pay. .. is-bundle=false Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price. item-group-id=elitr Shared identifier for all variants of the same product. kind=consetetur Identifies what kind of resource this is. Value: the fixed string \" content#product \" link=et URL directly linking to your item's page on your website. loyalty-points name=clita Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters. points-value=sit The retailer's loyalty points in absolute value. ratio=0.32829879113659266 The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0. .. material=erat The material of which the item is made. max-energy-efficiency-class=diam The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" max-handling-time=nonumy Maximal product handling time (in business days). min-energy-efficiency-class=lorem The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" min-handling-time=at Minimal product handling time (in business days). mobile-link=diam URL for the mobile-optimized version of your item's landing page. mpn=diam Manufacturer Part Number (MPN) of the item. multipack=sed The number of identical products in a merchant-defined multipack. offer-id=et Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. Note: Content API methods that operate on products take the REST ID of the product, not this identifier. online-only=false Deprecated. pattern=ipsum The item's pattern (e.g. polka dots). price currency=ea The currency of the price. value=at The price represented as a number. .. product-type=sit Your category of the item (formatted as in products data specification). promotion-ids=sit The unique ID of a promotion. Each invocation of this argument appends the given value to the array. sale-price currency=lorem The currency of the price. value=stet The price represented as a number. .. sale-price-effective-date=duo Date range during which the item is on sale (see products data specification ). sell-on-google-quantity=elitr The quantity of the product that is available for selling on Google. Supported only for online products. shipping-height unit=aliquyam The unit of value. value=0.5502099166314959 The dimension of the product used to calculate the shipping cost of the item. .. shipping-label=ut The shipping label of the product, used to group product in account-level shipping rules. shipping-length unit=et The unit of value. value=0.9734580099452333 The dimension of the product used to calculate the shipping cost of the item. ..shipping-weight unit=rebum. The unit of value. value=0.5220589381617724 The weight of the product used to calculate the shipping cost of the item. ..shipping-width unit=stet The unit of value. value=0.15591803706823315 The dimension of the product used to calculate the shipping cost of the item. .. size-system=lorem System in which the size is specified. Recommended for apparel items. Acceptable values are: - \" AU \" - \" BR \" - \" CN \" - \" DE \" - \" EU \" - \" FR \" - \" IT \" - \" JP \" - \" MEX \" - \" UK \" - \" US \" size-type=sit The cut of the item. Recommended for apparel items. Acceptable values are: - \" big and tall \" - \" maternity \" - \" oversize \" - \" petite \" - \" plus \" - \" regular \" sizes=kasd Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value (see size definition). Each invocation of this argument appends the given value to the array. source=tempor The source of the offer, i.e., how the offer was created. Acceptable values are: - \" api \" - \" crawl \" - \" feed \" target-country=-54 Required. The CLDR territory code for the item. title=amet Title of the item. unit-pricing-base-measure unit=sit The unit of the denominator. value=rebum. The denominator of the unit price. ..unit-pricing-measure unit=sea The unit of the measure. value=0.012890508443760607 The measure of an item. .. validated-destinations=et Deprecated. The read-only list of intended destinations which passed validation. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"products_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products insert ...","title":"Scopes"},{"location":"products_insert/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"products_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Product: additional-image-links: [string] additional-product-types: [string] adult: boolean adwords-grouping: string adwords-labels: [string] adwords-redirect: string age-group: string availability: string availability-date: string brand: string canonical-link: string channel: string color: string condition: string content-language: string cost-of-goods-sold: currency: string value: string custom-label0: string custom-label1: string custom-label2: string custom-label3: string custom-label4: string description: string display-ads-id: string display-ads-link: string display-ads-similar-ids: [string] display-ads-title: string display-ads-value: number energy-efficiency-class: string expiration-date: string gender: string google-product-category: string gtin: string id: string identifier-exists: boolean image-link: string installment: amount: currency: string value: string months: string is-bundle: boolean item-group-id: string kind: string link: string loyalty-points: name: string points-value: string ratio: number material: string max-energy-efficiency-class: string max-handling-time: string min-energy-efficiency-class: string min-handling-time: string mobile-link: string mpn: string multipack: string offer-id: string online-only: boolean pattern: string price: currency: string value: string product-type: string promotion-ids: [string] sale-price: currency: string value: string sale-price-effective-date: string sell-on-google-quantity: string shipping-height: unit: string value: number shipping-label: string shipping-length: unit: string value: number shipping-weight: unit: string value: number shipping-width: unit: string value: number size-system: string size-type: string sizes: [string] source: string target-country: int64 title: string unit-pricing-base-measure: unit: string value: string unit-pricing-measure: unit: string value: number validated-destinations: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . additional-image-links=erat Additional URLs of images of the item. Each invocation of this argument appends the given value to the array. additional-product-types=justo Additional categories of the item (formatted as in products data specification). Each invocation of this argument appends the given value to the array. adult=false Should be set to true if the item is targeted towards adults. adwords-grouping=dolores Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise. adwords-labels=consetetur Similar to adwords_grouping, but only works on CPC. Each invocation of this argument appends the given value to the array. adwords-redirect=no Allows advertisers to override the item URL when the product is shown within the context of Product Ads. age-group=justo Target age group of the item. Acceptable values are: - \" adult \" - \" infant \" - \" kids \" - \" newborn \" - \" toddler \" - \" youngAdult \" availability=sadipscing Availability status of the item. Acceptable values are: - \" in stock \" - \" out of stock \" - \" preorder \" availability-date=diam The day a pre-ordered product becomes available for delivery, in ISO 8601 format. brand=sea Brand of the item. canonical-link=ipsum URL for the canonical version of your item's landing page. channel=stet Required. The item's channel (online or local). Acceptable values are: - \" local \" - \" online \" color=gubergren Color of the item. condition=ipsum Condition or state of the item. Acceptable values are: - \" new \" - \" refurbished \" - \" used \" content-language=no Required. The two-letter ISO 639-1 language code for the item. cost-of-goods-sold currency=sit The currency of the price. value=kasd The price represented as a number. .. custom-label0=amet Custom label 0 for custom grouping of items in a Shopping campaign. custom-label1=lorem Custom label 1 for custom grouping of items in a Shopping campaign. custom-label2=justo Custom label 2 for custom grouping of items in a Shopping campaign. custom-label3=invidunt Custom label 3 for custom grouping of items in a Shopping campaign. custom-label4=sed Custom label 4 for custom grouping of items in a Shopping campaign. description=nonumy Description of the item. display-ads-id=sea An identifier for an item for dynamic remarketing campaigns. display-ads-link=ipsum URL directly to your item's landing page for dynamic remarketing campaigns. display-ads-similar-ids=kasd Advertiser-specified recommendations. Each invocation of this argument appends the given value to the array. display-ads-title=justo Title of an item for dynamic remarketing campaigns. display-ads-value=0.6596318919873574 Offer margin for dynamic remarketing campaigns. energy-efficiency-class=at The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" expiration-date=erat Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future. gender=clita Target gender of the item. Acceptable values are: - \" female \" - \" male \" - \" unisex \" google-product-category=vero Google's category of the item (see Google product taxonomy ). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API. gtin=invidunt Global Trade Item Number (GTIN) of the item. id=nonumy The REST ID of the product. Content API methods that operate on products take this as their productId parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId. identifier-exists=false False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada. image-link=erat URL of an image of the item. installment.amount currency=dolores The currency of the price. value=ipsum The price represented as a number. .. months=voluptua. The number of installments the buyer has to pay. .. is-bundle=false Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price. item-group-id=elitr Shared identifier for all variants of the same product. kind=consetetur Identifies what kind of resource this is. Value: the fixed string \" content#product \" link=et URL directly linking to your item's page on your website. loyalty-points name=clita Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters. points-value=sit The retailer's loyalty points in absolute value. ratio=0.32829879113659266 The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0. .. material=erat The material of which the item is made. max-energy-efficiency-class=diam The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" max-handling-time=nonumy Maximal product handling time (in business days). min-energy-efficiency-class=lorem The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \" A \" - \" A+ \" - \" A++ \" - \" A+++ \" - \" B \" - \" C \" - \" D \" - \" E \" - \" F \" - \" G \" min-handling-time=at Minimal product handling time (in business days). mobile-link=diam URL for the mobile-optimized version of your item's landing page. mpn=diam Manufacturer Part Number (MPN) of the item. multipack=sed The number of identical products in a merchant-defined multipack. offer-id=et Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. Note: Content API methods that operate on products take the REST ID of the product, not this identifier. online-only=false Deprecated. pattern=ipsum The item's pattern (e.g. polka dots). price currency=ea The currency of the price. value=at The price represented as a number. .. product-type=sit Your category of the item (formatted as in products data specification). promotion-ids=sit The unique ID of a promotion. Each invocation of this argument appends the given value to the array. sale-price currency=lorem The currency of the price. value=stet The price represented as a number. .. sale-price-effective-date=duo Date range during which the item is on sale (see products data specification ). sell-on-google-quantity=elitr The quantity of the product that is available for selling on Google. Supported only for online products. shipping-height unit=aliquyam The unit of value. value=0.5502099166314959 The dimension of the product used to calculate the shipping cost of the item. .. shipping-label=ut The shipping label of the product, used to group product in account-level shipping rules. shipping-length unit=et The unit of value. value=0.9734580099452333 The dimension of the product used to calculate the shipping cost of the item. ..shipping-weight unit=rebum. The unit of value. value=0.5220589381617724 The weight of the product used to calculate the shipping cost of the item. ..shipping-width unit=stet The unit of value. value=0.15591803706823315 The dimension of the product used to calculate the shipping cost of the item. .. size-system=lorem System in which the size is specified. Recommended for apparel items. Acceptable values are: - \" AU \" - \" BR \" - \" CN \" - \" DE \" - \" EU \" - \" FR \" - \" IT \" - \" JP \" - \" MEX \" - \" UK \" - \" US \" size-type=sit The cut of the item. Recommended for apparel items. Acceptable values are: - \" big and tall \" - \" maternity \" - \" oversize \" - \" petite \" - \" plus \" - \" regular \" sizes=kasd Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value (see size definition). Each invocation of this argument appends the given value to the array. source=tempor The source of the offer, i.e., how the offer was created. Acceptable values are: - \" api \" - \" crawl \" - \" feed \" target-country=-54 Required. The CLDR territory code for the item. title=amet Title of the item. unit-pricing-base-measure unit=sit The unit of the denominator. value=rebum. The denominator of the unit price. ..unit-pricing-measure unit=sea The unit of the measure. value=0.012890508443760607 The measure of an item. .. validated-destinations=et Deprecated. The read-only list of intended destinations which passed validation. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"products_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"products_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"products_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"products_list/","text":"Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products list ... Required Scalar Argument <merchant-id> (string) The ID of the account that contains the products. This account cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-invalid-inserted-items=boolean Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false). -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"products_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> products list ...","title":"Scopes"},{"location":"products_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that contains the products. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"products_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"products_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-invalid-inserted-items=boolean Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false). -p max-results=integer The maximum number of products to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"products_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"productstatuses_custombatch/","text":"Gets the statuses of multiple products in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-attributes=boolean Flag to include full product data in the results of this request. The default value is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"productstatuses_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses custombatch ...","title":"Scopes"},{"location":"productstatuses_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductstatusesCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"productstatuses_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"productstatuses_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"productstatuses_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p include-attributes=boolean Flag to include full product data in the results of this request. The default value is false.","title":"Optional Method Properties"},{"location":"productstatuses_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"productstatuses_get/","text":"Gets the status of a product from your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses get ... Required Scalar Arguments <merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p include-attributes=boolean Flag to include full product data in the result of this get request. The default value is false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"productstatuses_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses get ...","title":"Scopes"},{"location":"productstatuses_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the account that contains the product. This account cannot be a multi-client account. <product-id> (string) The REST ID of the product.","title":"Required Scalar Arguments"},{"location":"productstatuses_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"productstatuses_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p include-attributes=boolean Flag to include full product data in the result of this get request. The default value is false.","title":"Optional Method Properties"},{"location":"productstatuses_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"productstatuses_list/","text":"Lists the statuses of the products in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses list ... Required Scalar Argument <merchant-id> (string) The ID of the account that contains the products. This account cannot be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p include-attributes=boolean Flag to include full product data in the results of the list request. The default value is false. -p include-invalid-inserted-items=boolean Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false). -p max-results=integer The maximum number of product statuses to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"productstatuses_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> productstatuses list ...","title":"Scopes"},{"location":"productstatuses_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account that contains the products. This account cannot be a multi-client account.","title":"Required Scalar Argument"},{"location":"productstatuses_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"productstatuses_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p destinations=string If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. -p include-attributes=boolean Flag to include full product data in the results of the list request. The default value is false. -p include-invalid-inserted-items=boolean Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false). -p max-results=integer The maximum number of product statuses to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"productstatuses_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_custombatch/","text":"Retrieves and updates the shipping settings of multiple accounts in a single request. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings custombatch ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ShippingsettingsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Custombatch"},{"location":"shippingsettings_custombatch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings custombatch ...","title":"Scopes"},{"location":"shippingsettings_custombatch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ShippingsettingsCustomBatchRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"shippingsettings_custombatch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"shippingsettings_custombatch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_custombatch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"shippingsettings_custombatch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_get/","text":"Retrieves the shipping settings of the account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings get ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update shipping settings. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"shippingsettings_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings get ...","title":"Scopes"},{"location":"shippingsettings_get/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update shipping settings.","title":"Required Scalar Arguments"},{"location":"shippingsettings_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_getsupportedcarriers/","text":"Retrieves supported carriers and carrier services for an account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedcarriers ... Required Scalar Argument <merchant-id> (string) The ID of the account for which to retrieve the supported carriers. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getsupportedcarriers"},{"location":"shippingsettings_getsupportedcarriers/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedcarriers ...","title":"Scopes"},{"location":"shippingsettings_getsupportedcarriers/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account for which to retrieve the supported carriers.","title":"Required Scalar Argument"},{"location":"shippingsettings_getsupportedcarriers/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_getsupportedcarriers/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_getsupportedholidays/","text":"Retrieves supported holidays for an account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedholidays ... Required Scalar Argument <merchant-id> (string) The ID of the account for which to retrieve the supported holidays. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getsupportedholidays"},{"location":"shippingsettings_getsupportedholidays/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedholidays ...","title":"Scopes"},{"location":"shippingsettings_getsupportedholidays/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account for which to retrieve the supported holidays.","title":"Required Scalar Argument"},{"location":"shippingsettings_getsupportedholidays/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_getsupportedholidays/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_getsupportedpickupservices/","text":"Retrieves supported pickup services for an account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedpickupservices ... Required Scalar Argument <merchant-id> (string) The ID of the account for which to retrieve the supported pickup services. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getsupportedpickupservices"},{"location":"shippingsettings_getsupportedpickupservices/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings getsupportedpickupservices ...","title":"Scopes"},{"location":"shippingsettings_getsupportedpickupservices/#required-scalar-argument","text":"<merchant-id> (string) The ID of the account for which to retrieve the supported pickup services.","title":"Required Scalar Argument"},{"location":"shippingsettings_getsupportedpickupservices/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_getsupportedpickupservices/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_list/","text":"Lists the shipping settings of the sub-accounts in your Merchant Center account. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings list ... Required Scalar Argument <merchant-id> (string) The ID of the managing account. This must be a multi-client account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of shipping settings to return in the response, used for paging. -p page-token=string The token returned by the previous request. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"shippingsettings_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings list ...","title":"Scopes"},{"location":"shippingsettings_list/#required-scalar-argument","text":"<merchant-id> (string) The ID of the managing account. This must be a multi-client account.","title":"Required Scalar Argument"},{"location":"shippingsettings_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer The maximum number of shipping settings to return in the response, used for paging. -p page-token=string The token returned by the previous request.","title":"Optional Method Properties"},{"location":"shippingsettings_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"shippingsettings_update/","text":"Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource. Scopes You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings update ... Required Scalar Arguments <merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update shipping settings. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ShippingSettings: account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=elitr The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"shippingsettings_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/content scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/content . You can set the scope for this method like this: content2 --scope <scope> shippingsettings update ...","title":"Scopes"},{"location":"shippingsettings_update/#required-scalar-arguments","text":"<merchant-id> (string) The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account. <account-id> (string) The ID of the account for which to get/update shipping settings.","title":"Required Scalar Arguments"},{"location":"shippingsettings_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ShippingSettings: account-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-id=elitr The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.","title":"Required Request Value"},{"location":"shippingsettings_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"shippingsettings_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"shippingsettings_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p dry-run=boolean Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).","title":"Optional Method Properties"},{"location":"shippingsettings_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}