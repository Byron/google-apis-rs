{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The mybusiness4 command-line interface (CLI) allows to use most features of the Google My Business service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the My Business API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-mybusiness4-cli Find the source code on github . Usage This documentation was generated from the My Business API at revision 0 . The CLI is at version 5.0.4 . mybusiness4 [options] accounts admins-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] admins-delete <name> [-p <v>]... [-o <out>] admins-list <parent> [-p <v>]... [-o <out>] admins-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] create (-r <kv>)... [-p <v>]... [-o <out>] delete-notifications <name> [-p <v>]... [-o <out>] generate-account-number <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] get-notifications <name> [-p <v>]... [-o <out>] invitations-accept <name> (-r <kv>)... [-p <v>]... [-o <out>] invitations-decline <name> (-r <kv>)... [-p <v>]... [-o <out>] invitations-list <parent> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-recommend-google-locations <name> [-p <v>]... [-o <out>] locations-admins-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-admins-delete <name> [-p <v>]... [-o <out>] locations-admins-list <parent> [-p <v>]... [-o <out>] locations-admins-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-associate <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-batch-get <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-batch-get-reviews <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-clear-association <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-delete <name> [-p <v>]... [-o <out>] locations-fetch-verification-options <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-find-matches <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-followers-get-metadata <name> [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-get-google-updated <name> [-p <v>]... [-o <out>] locations-list <parent> [-p <v>]... [-o <out>] locations-local-posts-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-local-posts-delete <name> [-p <v>]... [-o <out>] locations-local-posts-get <name> [-p <v>]... [-o <out>] locations-local-posts-list <parent> [-p <v>]... [-o <out>] locations-local-posts-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-local-posts-report-insights <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-customers-get <name> [-p <v>]... [-o <out>] locations-media-customers-list <parent> [-p <v>]... [-o <out>] locations-media-delete <name> [-p <v>]... [-o <out>] locations-media-get <name> [-p <v>]... [-o <out>] locations-media-list <parent> [-p <v>]... [-o <out>] locations-media-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-start-upload <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-answers-delete <parent> [-p <v>]... [-o <out>] locations-questions-answers-list <parent> [-p <v>]... [-o <out>] locations-questions-answers-upsert <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-delete <name> [-p <v>]... [-o <out>] locations-questions-list <parent> [-p <v>]... [-o <out>] locations-questions-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-report-insights <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-reviews-delete-reply <name> [-p <v>]... [-o <out>] locations-reviews-get <name> [-p <v>]... [-o <out>] locations-reviews-list <parent> [-p <v>]... [-o <out>] locations-reviews-update-reply <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-transfer <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-verifications-complete <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-verifications-list <parent> [-p <v>]... [-o <out>] locations-verify <name> (-r <kv>)... [-p <v>]... [-o <out>] update <name> (-r <kv>)... [-p <v>]... [-o <out>] update-notifications <name> (-r <kv>)... [-p <v>]... [-o <out>] attributes list [-p <v>]... [-o <out>] categories list [-p <v>]... [-o <out>] chains get <name> [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] google-locations report <name> (-r <kv>)... [-p <v>]... [-o <out>] search (-r <kv>)... [-p <v>]... [-o <out>] verification-tokens generate (-r <kv>)... [-p <v>]... [-o <out>] mybusiness4 --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with mybusiness4- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/mybusiness4-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/mybusiness4-secret.json , assuming that the required mybusiness API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. mybusiness4 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-mybusiness4-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the My Business API at revision 0 . The CLI is at version 5.0.4 . mybusiness4 [options] accounts admins-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] admins-delete <name> [-p <v>]... [-o <out>] admins-list <parent> [-p <v>]... [-o <out>] admins-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] create (-r <kv>)... [-p <v>]... [-o <out>] delete-notifications <name> [-p <v>]... [-o <out>] generate-account-number <name> (-r <kv>)... [-p <v>]... [-o <out>] get <name> [-p <v>]... [-o <out>] get-notifications <name> [-p <v>]... [-o <out>] invitations-accept <name> (-r <kv>)... [-p <v>]... [-o <out>] invitations-decline <name> (-r <kv>)... [-p <v>]... [-o <out>] invitations-list <parent> [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] list-recommend-google-locations <name> [-p <v>]... [-o <out>] locations-admins-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-admins-delete <name> [-p <v>]... [-o <out>] locations-admins-list <parent> [-p <v>]... [-o <out>] locations-admins-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-associate <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-batch-get <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-batch-get-reviews <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-clear-association <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-delete <name> [-p <v>]... [-o <out>] locations-fetch-verification-options <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-find-matches <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-followers-get-metadata <name> [-p <v>]... [-o <out>] locations-get <name> [-p <v>]... [-o <out>] locations-get-google-updated <name> [-p <v>]... [-o <out>] locations-list <parent> [-p <v>]... [-o <out>] locations-local-posts-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-local-posts-delete <name> [-p <v>]... [-o <out>] locations-local-posts-get <name> [-p <v>]... [-o <out>] locations-local-posts-list <parent> [-p <v>]... [-o <out>] locations-local-posts-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-local-posts-report-insights <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-customers-get <name> [-p <v>]... [-o <out>] locations-media-customers-list <parent> [-p <v>]... [-o <out>] locations-media-delete <name> [-p <v>]... [-o <out>] locations-media-get <name> [-p <v>]... [-o <out>] locations-media-list <parent> [-p <v>]... [-o <out>] locations-media-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-media-start-upload <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-answers-delete <parent> [-p <v>]... [-o <out>] locations-questions-answers-list <parent> [-p <v>]... [-o <out>] locations-questions-answers-upsert <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-create <parent> (-r <kv>)... [-p <v>]... [-o <out>] locations-questions-delete <name> [-p <v>]... [-o <out>] locations-questions-list <parent> [-p <v>]... [-o <out>] locations-questions-patch <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-report-insights <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-reviews-delete-reply <name> [-p <v>]... [-o <out>] locations-reviews-get <name> [-p <v>]... [-o <out>] locations-reviews-list <parent> [-p <v>]... [-o <out>] locations-reviews-update-reply <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-transfer <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-verifications-complete <name> (-r <kv>)... [-p <v>]... [-o <out>] locations-verifications-list <parent> [-p <v>]... [-o <out>] locations-verify <name> (-r <kv>)... [-p <v>]... [-o <out>] update <name> (-r <kv>)... [-p <v>]... [-o <out>] update-notifications <name> (-r <kv>)... [-p <v>]... [-o <out>] attributes list [-p <v>]... [-o <out>] categories list [-p <v>]... [-o <out>] chains get <name> [-p <v>]... [-o <out>] search [-p <v>]... [-o <out>] google-locations report <name> (-r <kv>)... [-p <v>]... [-o <out>] search (-r <kv>)... [-p <v>]... [-o <out>] verification-tokens generate (-r <kv>)... [-p <v>]... [-o <out>] mybusiness4 --help Configuration: --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with mybusiness4- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/mybusiness4-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/mybusiness4-secret.json , assuming that the required mybusiness API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. mybusiness4 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"accounts_admins-create/","text":"Invites the specified user to become an administrator for the specified account. The invitee must accept the invitation in order to be granted access to the account. See AcceptInvitation to programmatically accept an invitation. Required Scalar Argument <parent> (string) The resource name of the account this admin is created for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=et The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=magna The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=true - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=voluptua. - Specifies the AdminRole that this admin uses with the specified Account or Location resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Admins Create"},{"location":"accounts_admins-create/#required-scalar-argument","text":"<parent> (string) The resource name of the account this admin is created for.","title":"Required Scalar Argument"},{"location":"accounts_admins-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=et The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=magna The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=true - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=voluptua. - Specifies the AdminRole that this admin uses with the specified Account or Location resource.","title":"Required Request Value"},{"location":"accounts_admins-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_admins-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_admins-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_admins-delete/","text":"Removes the specified admin from the specified account. Required Scalar Argument <name> (string) The resource name of the admin to remove from the account. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Admins Delete"},{"location":"accounts_admins-delete/#required-scalar-argument","text":"<name> (string) The resource name of the admin to remove from the account.","title":"Required Scalar Argument"},{"location":"accounts_admins-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_admins-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_admins-list/","text":"Lists the admins for the specified account. Required Scalar Argument <parent> (string) The name of the account from which to retrieve a list of admins. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Admins List"},{"location":"accounts_admins-list/#required-scalar-argument","text":"<parent> (string) The name of the account from which to retrieve a list of admins.","title":"Required Scalar Argument"},{"location":"accounts_admins-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_admins-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_admins-patch/","text":"Updates the Admin for the specified Account Admin. Only the AdminRole of the Admin can be updated. Required Scalar Argument <name> (string) The resource name of the admin to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=at The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=sanctus The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=false - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=amet. - Specifies the AdminRole that this admin uses with the specified Account or Location resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Admins Patch"},{"location":"accounts_admins-patch/#required-scalar-argument","text":"<name> (string) The resource name of the admin to update.","title":"Required Scalar Argument"},{"location":"accounts_admins-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=at The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=sanctus The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=false - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=amet. - Specifies the AdminRole that this admin uses with the specified Account or Location resource.","title":"Required Request Value"},{"location":"accounts_admins-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_admins-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_admins-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_create/","text":"Creates an account with the specified name and type under the given parent. <ul> <li> Personal accounts and Organizations cannot be created. </li> <li> User Groups cannot be created with a Personal account as primary owner. </li> <li> Location Groups cannot be created with a primary owner of a Personal account if the Personal account is in an Organization. </li> <li> Location Groups cannot own Location Groups. </li> </ul> Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: account-name: string account-number: string name: string organization-info: phone-number: string postal-address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string registered-domain: string permission-level: string role: string state: status: string vetted-status: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-name=takimata The name of the account. <aside class=\"note\"><b>Note:</b> For an account with AccountType PERSONAL , this is the first and last name of the user account.</aside> account-number=amet. Account reference number if provisioned. name=duo The resource name, in the format accounts/{account_id} . organization-info phone-number=ipsum The contact number for the organization. postal-address address-lines=gubergren Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=lorem - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=gubergren - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=eos - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=dolor - Optional. The name of the organization at the address. * postal-code=ea - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=ipsum - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=invidunt - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=54 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=duo - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=ipsum - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. registered-domain=sed The registered domain for the account. .. permission-level=ut Output only. Specifies the PermissionLevel the caller has for this account. role=gubergren Output only. Specifies the AccountRole the caller has for this account. state status=rebum. If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation. vetted-status=est Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method. .. type=ipsum Output only. Specifies the AccountType of this account. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p primary-owner=string The resource name of the account which will be the primary owner of the account being created. It should be of the form accounts/{account_id}/ . Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create"},{"location":"accounts_create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: account-name: string account-number: string name: string organization-info: phone-number: string postal-address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string registered-domain: string permission-level: string role: string state: status: string vetted-status: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-name=takimata The name of the account. <aside class=\"note\"><b>Note:</b> For an account with AccountType PERSONAL , this is the first and last name of the user account.</aside> account-number=amet. Account reference number if provisioned. name=duo The resource name, in the format accounts/{account_id} . organization-info phone-number=ipsum The contact number for the organization. postal-address address-lines=gubergren Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=lorem - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=gubergren - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=eos - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=dolor - Optional. The name of the organization at the address. * postal-code=ea - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=ipsum - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=invidunt - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=54 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=duo - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=ipsum - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. registered-domain=sed The registered domain for the account. .. permission-level=ut Output only. Specifies the PermissionLevel the caller has for this account. role=gubergren Output only. Specifies the AccountRole the caller has for this account. state status=rebum. If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation. vetted-status=est Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method. .. type=ipsum Output only. Specifies the AccountType of this account.","title":"Required Request Value"},{"location":"accounts_create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p primary-owner=string The resource name of the account which will be the primary owner of the account being created. It should be of the form accounts/{account_id}/ .","title":"Optional Method Properties"},{"location":"accounts_create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_delete-notifications/","text":"Clears the pubsub notification settings for the account. Required Scalar Argument <name> (string) The resource name for the notification settings to be cleared. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete Notifications"},{"location":"accounts_delete-notifications/#required-scalar-argument","text":"<name> (string) The resource name for the notification settings to be cleared.","title":"Required Scalar Argument"},{"location":"accounts_delete-notifications/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_delete-notifications/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_generate-account-number/","text":"Generates an account number for this account. The account number is not provisioned when an account is created. Use this request to create an account number when it is required. Required Scalar Argument <name> (string) The name of the account to generate an account number for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GenerateAccountNumberRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Generate Account Number"},{"location":"accounts_generate-account-number/#required-scalar-argument","text":"<name> (string) The name of the account to generate an account number for.","title":"Required Scalar Argument"},{"location":"accounts_generate-account-number/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GenerateAccountNumberRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_generate-account-number/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_generate-account-number/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_generate-account-number/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_get-notifications/","text":"Returns the pubsub notification settings for the account. Required Scalar Argument <name> (string) The notification settings resource name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Notifications"},{"location":"accounts_get-notifications/#required-scalar-argument","text":"<name> (string) The notification settings resource name.","title":"Required Scalar Argument"},{"location":"accounts_get-notifications/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_get-notifications/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_get/","text":"Gets the specified account. Returns NOT_FOUND if the account does not exist or if the caller does not have access rights to it. Required Scalar Argument <name> (string) The name of the account to fetch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"accounts_get/#required-scalar-argument","text":"<name> (string) The name of the account to fetch.","title":"Required Scalar Argument"},{"location":"accounts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_invitations-accept/","text":"Accepts the specified invitation. Required Scalar Argument <name> (string) The name of the invitation that is being accepted. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptInvitationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Invitations Accept"},{"location":"accounts_invitations-accept/#required-scalar-argument","text":"<name> (string) The name of the invitation that is being accepted.","title":"Required Scalar Argument"},{"location":"accounts_invitations-accept/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AcceptInvitationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_invitations-accept/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_invitations-accept/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_invitations-accept/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_invitations-decline/","text":"Declines the specified invitation. Required Scalar Argument <name> (string) The name of the account invitation that is being declined. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeclineInvitationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Invitations Decline"},{"location":"accounts_invitations-decline/#required-scalar-argument","text":"<name> (string) The name of the account invitation that is being declined.","title":"Required Scalar Argument"},{"location":"accounts_invitations-decline/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeclineInvitationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_invitations-decline/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_invitations-decline/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_invitations-decline/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_invitations-list/","text":"Lists pending invitations for the specified account. Required Scalar Argument <parent> (string) The name of the account from which the list of invitations is being retrieved. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p target-type=string Specifies which target types should appear in the response. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Invitations List"},{"location":"accounts_invitations-list/#required-scalar-argument","text":"<parent> (string) The name of the account from which the list of invitations is being retrieved.","title":"Required Scalar Argument"},{"location":"accounts_invitations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_invitations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p target-type=string Specifies which target types should appear in the response.","title":"Optional Method Properties"},{"location":"accounts_invitations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_list-recommend-google-locations/","text":"List all the GoogleLocations that have been recommended to the specified GMB account. Recommendations are provided for personal accounts and location groups only, requests for all other account types will result in an error. The recommendations for location groups are based on the locations in that group. The recommendations for personal accounts are based on all of the locations that the user has access to on Google My Business (which includes locations they can access through location groups), and is a superset of all recommendations generated for the user. Required Scalar Argument <name> (string) Name of the account resource to fetch recommended Google locations for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many locations to fetch per page. Default is 25, minimum is 1, and maximum page size is 100. -p page-token=string If specified, the next page of locations is retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List Recommend Google Locations"},{"location":"accounts_list-recommend-google-locations/#required-scalar-argument","text":"<name> (string) Name of the account resource to fetch recommended Google locations for.","title":"Required Scalar Argument"},{"location":"accounts_list-recommend-google-locations/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_list-recommend-google-locations/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many locations to fetch per page. Default is 25, minimum is 1, and maximum page size is 100. -p page-token=string If specified, the next page of locations is retrieved.","title":"Optional Method Properties"},{"location":"accounts_list-recommend-google-locations/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_list/","text":"Lists all of the accounts for the authenticated user. This includes all accounts that the user owns, as well as any accounts for which the user has management rights. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter constraining the accounts to return. The response includes only entries that match the filter. If filter is empty, then no constraints are applied and all accounts (paginated) are retrieved for the requested account. For example, a request with the filter type=USER_GROUP will only return user groups. -p name=string The resource name of the account for which the list of directly accessible accounts is to be retrieved. This only makes sense for Organizations and User Groups. If empty, will return ListAccounts for the authenticated user. -p page-size=integer How many accounts to fetch per page. Default is 20, minimum is 2, and maximum page size is 20. -p page-token=string If specified, the next page of accounts is retrieved. The pageToken is returned when a call to accounts.list returns more results than can fit into the requested page size. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"accounts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter constraining the accounts to return. The response includes only entries that match the filter. If filter is empty, then no constraints are applied and all accounts (paginated) are retrieved for the requested account. For example, a request with the filter type=USER_GROUP will only return user groups. -p name=string The resource name of the account for which the list of directly accessible accounts is to be retrieved. This only makes sense for Organizations and User Groups. If empty, will return ListAccounts for the authenticated user. -p page-size=integer How many accounts to fetch per page. Default is 20, minimum is 2, and maximum page size is 20. -p page-token=string If specified, the next page of accounts is retrieved. The pageToken is returned when a call to accounts.list returns more results than can fit into the requested page size.","title":"Optional Method Properties"},{"location":"accounts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-admins-create/","text":"Invites the specified user to become an administrator for the specified location. The invitee must accept the invitation in order to be granted access to the location. See AcceptInvitation to programmatically accept an invitation. Required Scalar Argument <parent> (string) The resource name of the location this admin is created for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=ipsum The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=est The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=true - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=ea - Specifies the AdminRole that this admin uses with the specified Account or Location resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Admins Create"},{"location":"accounts_locations-admins-create/#required-scalar-argument","text":"<parent> (string) The resource name of the location this admin is created for.","title":"Required Scalar Argument"},{"location":"accounts_locations-admins-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=ipsum The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=est The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=true - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=ea - Specifies the AdminRole that this admin uses with the specified Account or Location resource.","title":"Required Request Value"},{"location":"accounts_locations-admins-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-admins-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-admins-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-admins-delete/","text":"Removes the specified admin as a manager of the specified location. Required Scalar Argument <name> (string) The resource name of the admin to remove from the location. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Admins Delete"},{"location":"accounts_locations-admins-delete/#required-scalar-argument","text":"<name> (string) The resource name of the admin to remove from the location.","title":"Required Scalar Argument"},{"location":"accounts_locations-admins-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-admins-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-admins-list/","text":"Lists all of the admins for the specified location. Required Scalar Argument <parent> (string) The name of the location to list admins of. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Admins List"},{"location":"accounts_locations-admins-list/#required-scalar-argument","text":"<parent> (string) The name of the location to list admins of.","title":"Required Scalar Argument"},{"location":"accounts_locations-admins-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-admins-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-admins-patch/","text":"Updates the Admin for the specified Location Admin. Only the AdminRole of the Admin can be updated. Required Scalar Argument <name> (string) The resource name of the admin to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=dolor The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=lorem The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=false - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=sed - Specifies the AdminRole that this admin uses with the specified Account or Location resource. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Admins Patch"},{"location":"accounts_locations-admins-patch/#required-scalar-argument","text":"<name> (string) The resource name of the admin to update.","title":"Required Scalar Argument"},{"location":"accounts_locations-admins-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Admin: admin-name: string name: string pending-invitation: boolean role: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . admin-name=dolor The name of the admin. When making the initial invitation, this is the invitee's email address. On GET calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. name=lorem The resource name. For account admins, this is in the form: accounts/{account_id}/admins/{admin_id} For location admins, this is in the form: accounts/{account_id}/locations/{location_id}/admins/{admin_id} * pending-invitation=false - Output only. Indicates whether this admin has a pending invitation for the specified resource. * role=sed - Specifies the AdminRole that this admin uses with the specified Account or Location resource.","title":"Required Request Value"},{"location":"accounts_locations-admins-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-admins-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-admins-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-associate/","text":"Associates a location to a place ID. Any previous association is overwritten. This operation is only valid if the location is unverified. The association must be valid, that is, it appears in the list of FindMatchingLocations . Required Scalar Argument <name> (string) The resource name of the location to associate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AssociateLocationRequest: place-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . place-id=duo The association to establish. If not set, it indicates no match. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Associate"},{"location":"accounts_locations-associate/#required-scalar-argument","text":"<name> (string) The resource name of the location to associate.","title":"Required Scalar Argument"},{"location":"accounts_locations-associate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AssociateLocationRequest: place-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . place-id=duo The association to establish. If not set, it indicates no match.","title":"Required Request Value"},{"location":"accounts_locations-associate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-associate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-associate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-batch-get-reviews/","text":"Returns the paginated list of reviews for all specified locations. This operation is only valid if the specified locations are verified. <aside class=\"note\"><b>Note:</b> Reviews are limited to a batch size of 200 location_names per call.</aside> Required Scalar Argument <name> (string) The name of the account from which to retrieve a list of reviews across multiple locations. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetReviewsRequest: ignore-rating-only-reviews: boolean location-names: [string] order-by: string page-size: integer page-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ignore-rating-only-reviews=true Whether to ignore rating-only reviews. location-names=stet A collection of locations to fetch reviews for, specified by their names. Each invocation of this argument appends the given value to the array. order-by=kasd Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to update_time desc . Valid orders to sort by are rating , rating desc and update_time desc . rating will return reviews in ascending order. update_time (i.e. ascending order) is not supported. page-size=77 How many reviews to fetch per page. The default value is 200. page-token=sed If specified, it fetches the next page of reviews. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Batch Get Reviews"},{"location":"accounts_locations-batch-get-reviews/#required-scalar-argument","text":"<name> (string) The name of the account from which to retrieve a list of reviews across multiple locations.","title":"Required Scalar Argument"},{"location":"accounts_locations-batch-get-reviews/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetReviewsRequest: ignore-rating-only-reviews: boolean location-names: [string] order-by: string page-size: integer page-token: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . ignore-rating-only-reviews=true Whether to ignore rating-only reviews. location-names=stet A collection of locations to fetch reviews for, specified by their names. Each invocation of this argument appends the given value to the array. order-by=kasd Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to update_time desc . Valid orders to sort by are rating , rating desc and update_time desc . rating will return reviews in ascending order. update_time (i.e. ascending order) is not supported. page-size=77 How many reviews to fetch per page. The default value is 200. page-token=sed If specified, it fetches the next page of reviews.","title":"Required Request Value"},{"location":"accounts_locations-batch-get-reviews/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-batch-get-reviews/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-batch-get-reviews/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-batch-get/","text":"Gets all of the specified locations in the given account. Required Scalar Argument <name> (string) The name of the account from which to fetch locations. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetLocationsRequest: location-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . location-names=sed A collection of locations to fetch, specified by their names. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Batch Get"},{"location":"accounts_locations-batch-get/#required-scalar-argument","text":"<name> (string) The name of the account from which to fetch locations.","title":"Required Scalar Argument"},{"location":"accounts_locations-batch-get/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetLocationsRequest: location-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . location-names=sed A collection of locations to fetch, specified by their names. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"accounts_locations-batch-get/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-batch-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-batch-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-clear-association/","text":"Clears an association between a location and its place ID. This operation is only valid if the location is unverified. Required Scalar Argument <name> (string) The resource name of the location to disassociate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClearLocationAssociationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Clear Association"},{"location":"accounts_locations-clear-association/#required-scalar-argument","text":"<name> (string) The resource name of the location to disassociate.","title":"Required Scalar Argument"},{"location":"accounts_locations-clear-association/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ClearLocationAssociationRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_locations-clear-association/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-clear-association/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-clear-association/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-create/","text":"Creates a new location owned by the specified account, and returns it. Required Scalar Argument <parent> (string) The name of the account in which to create this location. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .ad-words-location-extensions ad-phone=et An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=et Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=vero Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=erat - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=sed - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=duo - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=dolore - Optional. The name of the organization at the address. * postal-code=et - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=voluptua. - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=amet. - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=5 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=diam - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=dolor - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=et A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=et The language of the location. Set during creation and not updateable. latlng latitude=0.05383208152352925 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.017140519879742522 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=vero If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=invidunt - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=stet - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=vero Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=true Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=true Output only. Indicates whether the location has pending verification requests. is-disabled=true Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=true Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=false Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=false Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sit Indicates whether the user has access to the location it duplicates. location-name=et The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=tempor The place ID of the location that this duplicates. .. maps-url=aliquyam A link to the location on Maps. new-review-url=ipsum A link to the page on Google Search where a customer can leave a review for the location. .. name=et Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=true - Output only. Indicates whether this business is eligible for re-open. * opening-date day=94 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=71 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=72 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=dolores Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=dolores @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=et @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=sed A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=no Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=et The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=elitr Indicates the type of the service area business. radius.latlng latitude=0.9036304069319014 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.3160448060928295 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.07842573666472352 The distance in kilometers of the area around the point. ... store-code=sadipscing External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=aliquyam A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string A unique request ID for the server to detect duplicated requests. We recommend using UUIDs. Max length is 50 characters. -p validate-only=boolean If true, the request is validated without actually creating the location. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Create"},{"location":"accounts_locations-create/#required-scalar-argument","text":"<parent> (string) The name of the account in which to create this location.","title":"Required Scalar Argument"},{"location":"accounts_locations-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .ad-words-location-extensions ad-phone=et An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=et Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=vero Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=erat - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=sed - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=duo - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=dolore - Optional. The name of the organization at the address. * postal-code=et - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=voluptua. - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=amet. - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=5 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=diam - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=dolor - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=et A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=et The language of the location. Set during creation and not updateable. latlng latitude=0.05383208152352925 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.017140519879742522 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=vero If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=invidunt - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=stet - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=vero Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=true Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=true Output only. Indicates whether the location has pending verification requests. is-disabled=true Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=true Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=false Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=false Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sit Indicates whether the user has access to the location it duplicates. location-name=et The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=tempor The place ID of the location that this duplicates. .. maps-url=aliquyam A link to the location on Maps. new-review-url=ipsum A link to the page on Google Search where a customer can leave a review for the location. .. name=et Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=true - Output only. Indicates whether this business is eligible for re-open. * opening-date day=94 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=71 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=72 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=dolores Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=dolores @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=et @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=sed A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=no Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=et The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=elitr Indicates the type of the service area business. radius.latlng latitude=0.9036304069319014 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.3160448060928295 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.07842573666472352 The distance in kilometers of the area around the point. ... store-code=sadipscing External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=aliquyam A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.","title":"Required Request Value"},{"location":"accounts_locations-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p request-id=string A unique request ID for the server to detect duplicated requests. We recommend using UUIDs. Max length is 50 characters. -p validate-only=boolean If true, the request is validated without actually creating the location.","title":"Optional Method Properties"},{"location":"accounts_locations-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-delete/","text":"Deletes a location. <aside class=\"note\"><b>Note:</b> If this location cannot be deleted using the API as marked in the LocationState, use the Google My Business website. Returns NOT_FOUND if the location does not exist. Required Scalar Argument <name> (string) The name of the location to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Delete"},{"location":"accounts_locations-delete/#required-scalar-argument","text":"<name> (string) The name of the location to delete.","title":"Required Scalar Argument"},{"location":"accounts_locations-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-fetch-verification-options/","text":"Reports all eligible verification options for a location in a specific language. Required Scalar Argument <name> (string) Resource name of the location to verify. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FetchVerificationOptionsRequest: context: address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string language-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .context.address address-lines=dolores Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=sadipscing - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=erat - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=aliquyam - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=amet - Optional. The name of the organization at the address. * postal-code=est - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=et - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=sea - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=5 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=consetetur - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=stet - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. ... language-code=est The BCP 47 language code representing the language that is to be used for the verification process. Available options vary by language. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Fetch Verification Options"},{"location":"accounts_locations-fetch-verification-options/#required-scalar-argument","text":"<name> (string) Resource name of the location to verify.","title":"Required Scalar Argument"},{"location":"accounts_locations-fetch-verification-options/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FetchVerificationOptionsRequest: context: address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string language-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .context.address address-lines=dolores Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=sadipscing - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=erat - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=aliquyam - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=amet - Optional. The name of the organization at the address. * postal-code=est - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=et - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=sea - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=5 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=consetetur - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=stet - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. ... language-code=est The BCP 47 language code representing the language that is to be used for the verification process. Available options vary by language.","title":"Required Request Value"},{"location":"accounts_locations-fetch-verification-options/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-fetch-verification-options/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-fetch-verification-options/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-find-matches/","text":"Finds all of the possible locations that are a match to the specified location. This operation is only valid if the location is unverified. Required Scalar Argument <name> (string) The resource name of the location to find matches for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FindMatchingLocationsRequest: language-code: string max-cache-duration: string num-results: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . language-code=aliquyam The preferred language for the matching location (in BCP-47 format). max-cache-duration=elitr Deprecated. This field is ignored for all requests. num-results=81 The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Find Matches"},{"location":"accounts_locations-find-matches/#required-scalar-argument","text":"<name> (string) The resource name of the location to find matches for.","title":"Required Scalar Argument"},{"location":"accounts_locations-find-matches/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: FindMatchingLocationsRequest: language-code: string max-cache-duration: string num-results: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . language-code=aliquyam The preferred language for the matching location (in BCP-47 format). max-cache-duration=elitr Deprecated. This field is ignored for all requests. num-results=81 The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.","title":"Required Request Value"},{"location":"accounts_locations-find-matches/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-find-matches/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-find-matches/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-followers-get-metadata/","text":"Get the followers settings for a location. NOT_FOUND is returned if either the account or the location doesn't exist. PRECONDITION_FAILED is returned if the location is not verified nor connected to Maps. Required Scalar Argument <name> (string) The resource name of the location's followers metadata. accounts/{account_id}/locations/{location_id}/followers/metadata Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Followers Get Metadata"},{"location":"accounts_locations-followers-get-metadata/#required-scalar-argument","text":"<name> (string) The resource name of the location's followers metadata. accounts/{account_id}/locations/{location_id}/followers/metadata","title":"Required Scalar Argument"},{"location":"accounts_locations-followers-get-metadata/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-followers-get-metadata/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-get-google-updated/","text":"Gets the Google-updated version of the specified location. Returns NOT_FOUND if the location does not exist. Required Scalar Argument <name> (string) The name of the location to fetch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Get Google Updated"},{"location":"accounts_locations-get-google-updated/#required-scalar-argument","text":"<name> (string) The name of the location to fetch.","title":"Required Scalar Argument"},{"location":"accounts_locations-get-google-updated/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-get-google-updated/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-get/","text":"Gets the specified location. Returns NOT_FOUND if the location does not exist. Required Scalar Argument <name> (string) The name of the location to fetch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Get"},{"location":"accounts_locations-get/#required-scalar-argument","text":"<name> (string) The name of the location to fetch.","title":"Required Scalar Argument"},{"location":"accounts_locations-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-list/","text":"Lists the locations for the specified account. Required Scalar Argument <parent> (string) The name of the account to fetch locations from. If the Account is of AccountType PERSONAL, only Locations that are directly owned by the Account are returned, otherwise it will return all accessible locations from the Account, either directly or indirectly. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter constraining the locations to return. The response includes only entries that match the filter. If filter is empty, then constraints are applied and all locations (paginated) are retrieved for the requested account. For more information about valid fields and example usage, see Work with Location Data Guide . -p language-code=string The BCP 47 code of language to get display location properties in. If this language is not available, they will be provided in the language of the location. If neither is available, they will be provided in English. -p order-by=string Sorting order for the request. Multiple fields should be comma-separated, following SQL syntax. The default sorting order is ascending. To specify descending order, a suffix \" desc\" should be added. Valid fields to order_by are location_name and store_code. For example: \"location_name, store_code desc\" or \"location_name\" or \"store_code desc\" -p page-size=integer How many locations to fetch per page. Default is 100, minimum is 1, and maximum page size is 100. -p page-token=string If specified, it fetches the next page of locations. The page token is returned by previous calls to ListLocations when there were more locations than could fit in the requested page size. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations List"},{"location":"accounts_locations-list/#required-scalar-argument","text":"<parent> (string) The name of the account to fetch locations from. If the Account is of AccountType PERSONAL, only Locations that are directly owned by the Account are returned, otherwise it will return all accessible locations from the Account, either directly or indirectly.","title":"Required Scalar Argument"},{"location":"accounts_locations-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p filter=string A filter constraining the locations to return. The response includes only entries that match the filter. If filter is empty, then constraints are applied and all locations (paginated) are retrieved for the requested account. For more information about valid fields and example usage, see Work with Location Data Guide . -p language-code=string The BCP 47 code of language to get display location properties in. If this language is not available, they will be provided in the language of the location. If neither is available, they will be provided in English. -p order-by=string Sorting order for the request. Multiple fields should be comma-separated, following SQL syntax. The default sorting order is ascending. To specify descending order, a suffix \" desc\" should be added. Valid fields to order_by are location_name and store_code. For example: \"location_name, store_code desc\" or \"location_name\" or \"store_code desc\" -p page-size=integer How many locations to fetch per page. Default is 100, minimum is 1, and maximum page size is 100. -p page-token=string If specified, it fetches the next page of locations. The page token is returned by previous calls to ListLocations when there were more locations than could fit in the requested page size.","title":"Optional Method Properties"},{"location":"accounts_locations-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-create/","text":"Creates a new local post associated with the specified location, and returns it. Required Scalar Argument <parent> (string) The name of the location in which to create this local post. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LocalPost: alert-type: string call-to-action: action-type: string url: string create-time: string event: schedule: end-date: day: integer month: integer year: integer end-time: hours: integer minutes: integer nanos: integer seconds: integer start-date: day: integer month: integer year: integer start-time: hours: integer minutes: integer nanos: integer seconds: integer title: string language-code: string name: string offer: coupon-code: string redeem-online-url: string terms-conditions: string search-url: string state: string summary: string topic-type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-type=diam The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts. call-to-action action-type=est The type of action that will be performed. url=sit The URL the user will be directed to upon clicking. This field should be left unset for Call CTA. .. create-time=sed Output only. Time of the creation of the post. event.schedule.end-date day=26 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=45 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=84 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..end-time hours=86 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=82 Minutes of hour of day. Must be from 0 to 59. nanos=76 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=33 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ..start-date day=91 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=27 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=24 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..start-time hours=17 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=61 Minutes of hour of day. Must be from 0 to 59. nanos=50 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=78 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ... title=amet Name of the event. .. language-code=erat The language of the local post. name=dolores Output only. Google identifier for this local post in the form: accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id} offer coupon-code=erat Optional. Offer code that is usable in store or online. redeem-online-url=accusam Optional. Online link to redeem offer. terms-conditions=sea Optional. Offer terms and conditions. .. search-url=takimata Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc. state=lorem Output only. The state of the post, indicating what part of its lifecycle it is in. summary=et Description/body of the local post. topic-type=at Required. The topic type of the post: standard, event, offer, or alert. update-time=dolor Output only. Time of the last modification of the post made by the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts Create"},{"location":"accounts_locations-local-posts-create/#required-scalar-argument","text":"<parent> (string) The name of the location in which to create this local post.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LocalPost: alert-type: string call-to-action: action-type: string url: string create-time: string event: schedule: end-date: day: integer month: integer year: integer end-time: hours: integer minutes: integer nanos: integer seconds: integer start-date: day: integer month: integer year: integer start-time: hours: integer minutes: integer nanos: integer seconds: integer title: string language-code: string name: string offer: coupon-code: string redeem-online-url: string terms-conditions: string search-url: string state: string summary: string topic-type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-type=diam The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts. call-to-action action-type=est The type of action that will be performed. url=sit The URL the user will be directed to upon clicking. This field should be left unset for Call CTA. .. create-time=sed Output only. Time of the creation of the post. event.schedule.end-date day=26 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=45 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=84 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..end-time hours=86 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=82 Minutes of hour of day. Must be from 0 to 59. nanos=76 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=33 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ..start-date day=91 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=27 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=24 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..start-time hours=17 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=61 Minutes of hour of day. Must be from 0 to 59. nanos=50 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=78 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ... title=amet Name of the event. .. language-code=erat The language of the local post. name=dolores Output only. Google identifier for this local post in the form: accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id} offer coupon-code=erat Optional. Offer code that is usable in store or online. redeem-online-url=accusam Optional. Online link to redeem offer. terms-conditions=sea Optional. Offer terms and conditions. .. search-url=takimata Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc. state=lorem Output only. The state of the post, indicating what part of its lifecycle it is in. summary=et Description/body of the local post. topic-type=at Required. The topic type of the post: standard, event, offer, or alert. update-time=dolor Output only. Time of the last modification of the post made by the user.","title":"Required Request Value"},{"location":"accounts_locations-local-posts-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-local-posts-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-delete/","text":"Deletes a local post. Returns NOT_FOUND if the local post does not exist. Required Scalar Argument <name> (string) The name of the local post to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts Delete"},{"location":"accounts_locations-local-posts-delete/#required-scalar-argument","text":"<name> (string) The name of the local post to delete.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-get/","text":"Gets the specified local post. Returns NOT_FOUND if the local post does not exist. Required Scalar Argument <name> (string) The name of the local post to fetch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts Get"},{"location":"accounts_locations-local-posts-get/#required-scalar-argument","text":"<name> (string) The name of the local post to fetch.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-list/","text":"Returns a list of local posts associated with a location. Required Scalar Argument <parent> (string) The name of the location whose local posts will be listed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many local posts to return per page. Default of 20. The minimum is 1, and maximum page size is 100. -p page-token=string If specified, returns the next page of local posts. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts List"},{"location":"accounts_locations-local-posts-list/#required-scalar-argument","text":"<parent> (string) The name of the location whose local posts will be listed.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many local posts to return per page. Default of 20. The minimum is 1, and maximum page size is 100. -p page-token=string If specified, returns the next page of local posts.","title":"Optional Method Properties"},{"location":"accounts_locations-local-posts-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-patch/","text":"Updates the specified local post and returns the updated local post. Required Scalar Argument <name> (string) The name of the local post to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LocalPost: alert-type: string call-to-action: action-type: string url: string create-time: string event: schedule: end-date: day: integer month: integer year: integer end-time: hours: integer minutes: integer nanos: integer seconds: integer start-date: day: integer month: integer year: integer start-time: hours: integer minutes: integer nanos: integer seconds: integer title: string language-code: string name: string offer: coupon-code: string redeem-online-url: string terms-conditions: string search-url: string state: string summary: string topic-type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-type=et The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts. call-to-action action-type=sit The type of action that will be performed. url=erat The URL the user will be directed to upon clicking. This field should be left unset for Call CTA. .. create-time=sea Output only. Time of the creation of the post. event.schedule.end-date day=60 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=79 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=89 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..end-time hours=80 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=41 Minutes of hour of day. Must be from 0 to 59. nanos=5 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=3 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ..start-date day=69 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=76 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=24 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..start-time hours=82 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=55 Minutes of hour of day. Must be from 0 to 59. nanos=39 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=97 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ... title=aliquyam Name of the event. .. language-code=no The language of the local post. name=amet. Output only. Google identifier for this local post in the form: accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id} offer coupon-code=ipsum Optional. Offer code that is usable in store or online. redeem-online-url=lorem Optional. Online link to redeem offer. terms-conditions=accusam Optional. Offer terms and conditions. .. search-url=gubergren Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc. state=sadipscing Output only. The state of the post, indicating what part of its lifecycle it is in. summary=at Description/body of the local post. topic-type=sit Required. The topic type of the post: standard, event, offer, or alert. update-time=duo Output only. Time of the last modification of the post made by the user. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string The specific fields to update. You must specify each field that is being updated in the mask. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts Patch"},{"location":"accounts_locations-local-posts-patch/#required-scalar-argument","text":"<name> (string) The name of the local post to update.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: LocalPost: alert-type: string call-to-action: action-type: string url: string create-time: string event: schedule: end-date: day: integer month: integer year: integer end-time: hours: integer minutes: integer nanos: integer seconds: integer start-date: day: integer month: integer year: integer start-time: hours: integer minutes: integer nanos: integer seconds: integer title: string language-code: string name: string offer: coupon-code: string redeem-online-url: string terms-conditions: string search-url: string state: string summary: string topic-type: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . alert-type=et The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts. call-to-action action-type=sit The type of action that will be performed. url=erat The URL the user will be directed to upon clicking. This field should be left unset for Call CTA. .. create-time=sea Output only. Time of the creation of the post. event.schedule.end-date day=60 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=79 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=89 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..end-time hours=80 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=41 Minutes of hour of day. Must be from 0 to 59. nanos=5 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=3 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ..start-date day=69 Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. month=76 Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. year=24 Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. ..start-time hours=82 Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time. minutes=55 Minutes of hour of day. Must be from 0 to 59. nanos=39 Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. seconds=97 Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. ... title=aliquyam Name of the event. .. language-code=no The language of the local post. name=amet. Output only. Google identifier for this local post in the form: accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id} offer coupon-code=ipsum Optional. Offer code that is usable in store or online. redeem-online-url=lorem Optional. Online link to redeem offer. terms-conditions=accusam Optional. Offer terms and conditions. .. search-url=gubergren Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc. state=sadipscing Output only. The state of the post, indicating what part of its lifecycle it is in. summary=at Description/body of the local post. topic-type=sit Required. The topic type of the post: standard, event, offer, or alert. update-time=duo Output only. Time of the last modification of the post made by the user.","title":"Required Request Value"},{"location":"accounts_locations-local-posts-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-local-posts-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string The specific fields to update. You must specify each field that is being updated in the mask.","title":"Optional Method Properties"},{"location":"accounts_locations-local-posts-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-local-posts-report-insights/","text":"Returns insights for a set of local posts associated with a single listing. Which metrics and how they are reported are options specified in the request proto. <aside class=\"note\"><b>Note:</b> Insight reports are limited to 100 local_post_names per call.</aside> Required Scalar Argument <name> (string) Required. The name of the location for which to fetch insights. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportLocalPostInsightsRequest: basic-request: time-range: end-time: string start-time: string local-post-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .basic-request.time-range end-time=sit Epoch timestamp for the end of the range (exclusive). start-time=magna Epoch timestamp for the start of the range (inclusive). ... local-post-names=et Required. The list of posts for which to fetch insights data. All posts have to belong to the location whose name is specified in the name field. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Local Posts Report Insights"},{"location":"accounts_locations-local-posts-report-insights/#required-scalar-argument","text":"<name> (string) Required. The name of the location for which to fetch insights.","title":"Required Scalar Argument"},{"location":"accounts_locations-local-posts-report-insights/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportLocalPostInsightsRequest: basic-request: time-range: end-time: string start-time: string local-post-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .basic-request.time-range end-time=sit Epoch timestamp for the end of the range (exclusive). start-time=magna Epoch timestamp for the start of the range (inclusive). ... local-post-names=et Required. The list of posts for which to fetch insights data. All posts have to belong to the location whose name is specified in the name field. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"accounts_locations-local-posts-report-insights/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-local-posts-report-insights/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-local-posts-report-insights/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-create/","text":"Creates a new media item for the location. Required Scalar Argument <parent> (string) The resource name of the location where this media item will be created. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MediaItem: attribution: profile-name: string profile-photo-url: string profile-url: string takedown-url: string create-time: string data-ref: resource-name: string description: string dimensions: height-pixels: integer width-pixels: integer google-url: string insights: view-count: int64 location-association: category: string price-list-item-id: string media-format: string name: string source-url: string thumbnail-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .attribution profile-name=rebum. The user name to attribute the media item to. profile-photo-url=dolor URL of the attributed user's profile photo thumbnail. profile-url=lorem The URL of the attributed user's Google Maps profile page. takedown-url=justo The URL of the takedown page, where the media item can be reported if it is inappropriate. .. create-time=amet. Output only. Creation time of this media item. data-ref resource-name=no The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: curl -X POST -T{path_to_file} &#34;http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media&#34; For CreateMediaItem calls, set this as the MediaItem data_ref . .. description=nonumy Description for this media item. Descriptions cannot be modified through the My Business API, but can be set when creating a new media item that is not a cover photo. dimensions height-pixels=58 Height of the media item, in pixels. width-pixels=88 Width of the media item, in pixels. .. google-url=lorem Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon. insights view-count=-58 Output only. The number of times the media item has been viewed. ..location-association category=nonumy The category that this location photo belongs to. price-list-item-id=rebum. The ID of a price list item that this location photo is associated with. .. media-format=tempor The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated. name=dolore The resource name for this media item. accounts/{account_id}/locations/{location_id}/media/{media_key} source-url=eos A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If source_url was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated. * thumbnail-url=amet. - Output only. Where provided, the URL of a thumbnail image for this media item. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Create"},{"location":"accounts_locations-media-create/#required-scalar-argument","text":"<parent> (string) The resource name of the location where this media item will be created.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MediaItem: attribution: profile-name: string profile-photo-url: string profile-url: string takedown-url: string create-time: string data-ref: resource-name: string description: string dimensions: height-pixels: integer width-pixels: integer google-url: string insights: view-count: int64 location-association: category: string price-list-item-id: string media-format: string name: string source-url: string thumbnail-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .attribution profile-name=rebum. The user name to attribute the media item to. profile-photo-url=dolor URL of the attributed user's profile photo thumbnail. profile-url=lorem The URL of the attributed user's Google Maps profile page. takedown-url=justo The URL of the takedown page, where the media item can be reported if it is inappropriate. .. create-time=amet. Output only. Creation time of this media item. data-ref resource-name=no The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: curl -X POST -T{path_to_file} &#34;http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media&#34; For CreateMediaItem calls, set this as the MediaItem data_ref . .. description=nonumy Description for this media item. Descriptions cannot be modified through the My Business API, but can be set when creating a new media item that is not a cover photo. dimensions height-pixels=58 Height of the media item, in pixels. width-pixels=88 Width of the media item, in pixels. .. google-url=lorem Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon. insights view-count=-58 Output only. The number of times the media item has been viewed. ..location-association category=nonumy The category that this location photo belongs to. price-list-item-id=rebum. The ID of a price list item that this location photo is associated with. .. media-format=tempor The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated. name=dolore The resource name for this media item. accounts/{account_id}/locations/{location_id}/media/{media_key} source-url=eos A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If source_url was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated. * thumbnail-url=amet. - Output only. Where provided, the URL of a thumbnail image for this media item.","title":"Required Request Value"},{"location":"accounts_locations-media-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-media-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-customers-get/","text":"Returns metadata for the requested customer media item. Required Scalar Argument <name> (string) The resource name of the requested customer media item. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Customers Get"},{"location":"accounts_locations-media-customers-get/#required-scalar-argument","text":"<name> (string) The resource name of the requested customer media item.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-customers-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-customers-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-customers-list/","text":"Returns a list of media items associated with a location that have been contributed by customers. Required Scalar Argument <parent> (string) The name of the location whose customer media items will be listed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many media items to return per page. The default value is 100, the maximum supported page size is 200. -p page-token=string If specified, returns the next page of media items. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Customers List"},{"location":"accounts_locations-media-customers-list/#required-scalar-argument","text":"<parent> (string) The name of the location whose customer media items will be listed.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-customers-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-customers-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many media items to return per page. The default value is 100, the maximum supported page size is 200. -p page-token=string If specified, returns the next page of media items.","title":"Optional Method Properties"},{"location":"accounts_locations-media-customers-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-delete/","text":"Deletes the specified media item. Required Scalar Argument <name> (string) The name of the media item to be deleted. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Delete"},{"location":"accounts_locations-media-delete/#required-scalar-argument","text":"<name> (string) The name of the media item to be deleted.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-get/","text":"Returns metadata for the requested media item. Required Scalar Argument <name> (string) The name of the requested media item. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Get"},{"location":"accounts_locations-media-get/#required-scalar-argument","text":"<name> (string) The name of the requested media item.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-list/","text":"Returns a list of media items associated with a location. Required Scalar Argument <parent> (string) The name of the location whose media items will be listed. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many media items to return per page. The default value is 100, which is also the maximum supported number of media items able to be added to a location with the My Business API. Maximum page size is 2500. -p page-token=string If specified, returns the next page of media items. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media List"},{"location":"accounts_locations-media-list/#required-scalar-argument","text":"<parent> (string) The name of the location whose media items will be listed.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many media items to return per page. The default value is 100, which is also the maximum supported number of media items able to be added to a location with the My Business API. Maximum page size is 2500. -p page-token=string If specified, returns the next page of media items.","title":"Optional Method Properties"},{"location":"accounts_locations-media-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-patch/","text":"Updates metadata of the specified media item. This can only be used to update the Category of a media item, with the exception that the new category cannot be COVER or PROFILE. Required Scalar Argument <name> (string) The name of the media item to be updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MediaItem: attribution: profile-name: string profile-photo-url: string profile-url: string takedown-url: string create-time: string data-ref: resource-name: string description: string dimensions: height-pixels: integer width-pixels: integer google-url: string insights: view-count: int64 location-association: category: string price-list-item-id: string media-format: string name: string source-url: string thumbnail-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .attribution profile-name=dolore The user name to attribute the media item to. profile-photo-url=amet URL of the attributed user's profile photo thumbnail. profile-url=ut The URL of the attributed user's Google Maps profile page. takedown-url=at The URL of the takedown page, where the media item can be reported if it is inappropriate. .. create-time=sit Output only. Creation time of this media item. data-ref resource-name=vero The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: curl -X POST -T{path_to_file} &#34;http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media&#34; For CreateMediaItem calls, set this as the MediaItem data_ref . .. description=duo Description for this media item. Descriptions cannot be modified through the My Business API, but can be set when creating a new media item that is not a cover photo. dimensions height-pixels=56 Height of the media item, in pixels. width-pixels=14 Width of the media item, in pixels. .. google-url=rebum. Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon. insights view-count=-70 Output only. The number of times the media item has been viewed. ..location-association category=kasd The category that this location photo belongs to. price-list-item-id=sadipscing The ID of a price list item that this location photo is associated with. .. media-format=tempor The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated. name=sea The resource name for this media item. accounts/{account_id}/locations/{location_id}/media/{media_key} source-url=et A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If source_url was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated. * thumbnail-url=lorem - Output only. Where provided, the URL of a thumbnail image for this media item. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string The specific fields to update. If no mask is specified, then this is treated as a full update and all editable fields are set to the values passed in. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Patch"},{"location":"accounts_locations-media-patch/#required-scalar-argument","text":"<name> (string) The name of the media item to be updated.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MediaItem: attribution: profile-name: string profile-photo-url: string profile-url: string takedown-url: string create-time: string data-ref: resource-name: string description: string dimensions: height-pixels: integer width-pixels: integer google-url: string insights: view-count: int64 location-association: category: string price-list-item-id: string media-format: string name: string source-url: string thumbnail-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .attribution profile-name=dolore The user name to attribute the media item to. profile-photo-url=amet URL of the attributed user's profile photo thumbnail. profile-url=ut The URL of the attributed user's Google Maps profile page. takedown-url=at The URL of the takedown page, where the media item can be reported if it is inappropriate. .. create-time=sit Output only. Creation time of this media item. data-ref resource-name=vero The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: curl -X POST -T{path_to_file} &#34;http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media&#34; For CreateMediaItem calls, set this as the MediaItem data_ref . .. description=duo Description for this media item. Descriptions cannot be modified through the My Business API, but can be set when creating a new media item that is not a cover photo. dimensions height-pixels=56 Height of the media item, in pixels. width-pixels=14 Width of the media item, in pixels. .. google-url=rebum. Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon. insights view-count=-70 Output only. The number of times the media item has been viewed. ..location-association category=kasd The category that this location photo belongs to. price-list-item-id=sadipscing The ID of a price list item that this location photo is associated with. .. media-format=tempor The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated. name=sea The resource name for this media item. accounts/{account_id}/locations/{location_id}/media/{media_key} source-url=et A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If source_url was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated. * thumbnail-url=lorem - Output only. Where provided, the URL of a thumbnail image for this media item.","title":"Required Request Value"},{"location":"accounts_locations-media-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-media-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string The specific fields to update. If no mask is specified, then this is treated as a full update and all editable fields are set to the values passed in.","title":"Optional Method Properties"},{"location":"accounts_locations-media-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-media-start-upload/","text":"Generates a MediaItemDataRef for media item uploading. Required Scalar Argument <parent> (string) The resource name of the location this media item is to be added to. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StartUploadMediaItemDataRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Media Start Upload"},{"location":"accounts_locations-media-start-upload/#required-scalar-argument","text":"<parent> (string) The resource name of the location this media item is to be added to.","title":"Required Scalar Argument"},{"location":"accounts_locations-media-start-upload/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: StartUploadMediaItemDataRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"accounts_locations-media-start-upload/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-media-start-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-media-start-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-patch/","text":"Updates the specified location. Photos are only allowed on a location that has a Google+ page. Returns NOT_FOUND if the location does not exist. Required Scalar Argument <name> (string) The name of the location to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .ad-words-location-extensions ad-phone=magna An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=takimata Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=rebum. Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=at - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=invidunt - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=clita - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=stet - Optional. The name of the organization at the address. * postal-code=aliquyam - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=ut - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=sit - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=75 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=rebum. - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=dolores - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=consetetur A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=dolores The language of the location. Set during creation and not updateable. latlng latitude=0.5604347251077454 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.29626359057310125 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=magna If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=diam - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=nonumy - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=et Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=true Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=false Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=true Output only. Indicates whether the review of the location is pending. is-published=true Output only. Indicates whether the location is published. is-suspended=true Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sit Indicates whether the user has access to the location it duplicates. location-name=kasd The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=amet The place ID of the location that this duplicates. .. maps-url=lorem A link to the location on Maps. new-review-url=justo A link to the page on Google Search where a customer can leave a review for the location. .. name=invidunt Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=false - Output only. Indicates whether this business is eligible for re-open. * opening-date day=10 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=91 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=1 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=kasd Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=justo @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=ea @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=at A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=erat Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=clita The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=vero Indicates the type of the service area business. radius.latlng latitude=0.10654050170100493 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.15946238897772735 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.6425169848801962 The distance in kilometers of the area around the point. ... store-code=ipsum External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=voluptua. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p attribute-mask=string The IDs of the attributes to update. Only attributes noted in the mask will be updated. If an attribute is present in the mask and not in the location, it will be removed. An empty mask will update all attributes. Whenever this field is set, the update_mask should include attributes as one of the fields to update. -p update-mask=string The specific fields to update. If no mask is specified, then this is treated as a full update and all fields are set to the values passed in, which may include unsetting empty fields in the request. -p validate-only=boolean If true, the request is validated without actually updating the location. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Patch"},{"location":"accounts_locations-patch/#required-scalar-argument","text":"<name> (string) The name of the location to update.","title":"Required Scalar Argument"},{"location":"accounts_locations-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .ad-words-location-extensions ad-phone=magna An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=takimata Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=rebum. Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=at - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=invidunt - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=clita - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=stet - Optional. The name of the organization at the address. * postal-code=aliquyam - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=ut - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=sit - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=75 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=rebum. - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=dolores - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=consetetur A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=dolores The language of the location. Set during creation and not updateable. latlng latitude=0.5604347251077454 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.29626359057310125 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=magna If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=diam - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=nonumy - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=et Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=true Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=false Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=true Output only. Indicates whether the review of the location is pending. is-published=true Output only. Indicates whether the location is published. is-suspended=true Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sit Indicates whether the user has access to the location it duplicates. location-name=kasd The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=amet The place ID of the location that this duplicates. .. maps-url=lorem A link to the location on Maps. new-review-url=justo A link to the page on Google Search where a customer can leave a review for the location. .. name=invidunt Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=false - Output only. Indicates whether this business is eligible for re-open. * opening-date day=10 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=91 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=1 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=kasd Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=justo @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=ea @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=at A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=erat Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=clita The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=vero Indicates the type of the service area business. radius.latlng latitude=0.10654050170100493 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.15946238897772735 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.6425169848801962 The distance in kilometers of the area around the point. ... store-code=ipsum External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=voluptua. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.","title":"Required Request Value"},{"location":"accounts_locations-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p attribute-mask=string The IDs of the attributes to update. Only attributes noted in the mask will be updated. If an attribute is present in the mask and not in the location, it will be removed. An empty mask will update all attributes. Whenever this field is set, the update_mask should include attributes as one of the fields to update. -p update-mask=string The specific fields to update. If no mask is specified, then this is treated as a full update and all fields are set to the values passed in, which may include unsetting empty fields in the request. -p validate-only=boolean If true, the request is validated without actually updating the location.","title":"Optional Method Properties"},{"location":"accounts_locations-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-answers-delete/","text":"Deletes the answer written by the current user to a question. Required Scalar Argument <parent> (string) The name of the question to delete an answer for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Answers Delete"},{"location":"accounts_locations-questions-answers-delete/#required-scalar-argument","text":"<parent> (string) The name of the question to delete an answer for.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-answers-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-answers-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-answers-list/","text":"Returns the paginated list of answers for a specified question. Required Scalar Argument <parent> (string) The name of the question to fetch answers for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string The order to return the answers. Valid options include 'update_time desc' and 'upvote_count desc', which will return the answers sorted descendingly by the requested field. The default sort order is 'update_time desc'. -p page-size=integer How many answers to fetch per page. The default and maximum page_size values are 10. -p page-token=string If specified, the next page of answers is retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Answers List"},{"location":"accounts_locations-questions-answers-list/#required-scalar-argument","text":"<parent> (string) The name of the question to fetch answers for.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-answers-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-answers-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string The order to return the answers. Valid options include 'update_time desc' and 'upvote_count desc', which will return the answers sorted descendingly by the requested field. The default sort order is 'update_time desc'. -p page-size=integer How many answers to fetch per page. The default and maximum page_size values are 10. -p page-token=string If specified, the next page of answers is retrieved.","title":"Optional Method Properties"},{"location":"accounts_locations-questions-answers-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-answers-upsert/","text":"Creates an answer or updates the existing answer written by the user for the specified question. A user can only create one answer per question. Required Scalar Argument <parent> (string) The name of the question to write an answer for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpsertAnswerRequest: answer: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .answer.author display-name=eos The display name of the user profile-photo-url=duo The profile photo URL of the user. type=elitr The type of user the author is. .. create-time=consetetur Output only. The timestamp for when the answer was written. name=et Output only. The unique name for the answer accounts/ /locations/ /questions/ /answers/ text=clita The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters. update-time=sit Output only. The timestamp for when the answer was last modified. upvote-count=42 Output only. The number of upvotes for the answer. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Answers Upsert"},{"location":"accounts_locations-questions-answers-upsert/#required-scalar-argument","text":"<parent> (string) The name of the question to write an answer for.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-answers-upsert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpsertAnswerRequest: answer: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .answer.author display-name=eos The display name of the user profile-photo-url=duo The profile photo URL of the user. type=elitr The type of user the author is. .. create-time=consetetur Output only. The timestamp for when the answer was written. name=et Output only. The unique name for the answer accounts/ /locations/ /questions/ /answers/ text=clita The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters. update-time=sit Output only. The timestamp for when the answer was last modified. upvote-count=42 Output only. The number of upvotes for the answer.","title":"Required Request Value"},{"location":"accounts_locations-questions-answers-upsert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-questions-answers-upsert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-answers-upsert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-create/","text":"Adds a question for the specified location. Required Scalar Argument <parent> (string) The name of the location to write a question for. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Question: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string total-answer-count: integer update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=erat The display name of the user profile-photo-url=diam The profile photo URL of the user. type=nonumy The type of user the author is. .. create-time=lorem Output only. The timestamp for when the question was written. name=at Output only. The unique name for the question. accounts/ /locations/ /questions/* text=diam The text of the question. It should contain at least two words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters. total-answer-count=9 Output only. The total number of answers posted for this question. update-time=sed Output only. The timestamp for when the question was last modified. upvote-count=83 Output only. The number of upvotes for the question. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Create"},{"location":"accounts_locations-questions-create/#required-scalar-argument","text":"<parent> (string) The name of the location to write a question for.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Question: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string total-answer-count: integer update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=erat The display name of the user profile-photo-url=diam The profile photo URL of the user. type=nonumy The type of user the author is. .. create-time=lorem Output only. The timestamp for when the question was written. name=at Output only. The unique name for the question. accounts/ /locations/ /questions/* text=diam The text of the question. It should contain at least two words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters. total-answer-count=9 Output only. The total number of answers posted for this question. update-time=sed Output only. The timestamp for when the question was last modified. upvote-count=83 Output only. The number of upvotes for the question.","title":"Required Request Value"},{"location":"accounts_locations-questions-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-questions-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-delete/","text":"Deletes a specific question written by the current user. Required Scalar Argument <name> (string) The name of the question to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Delete"},{"location":"accounts_locations-questions-delete/#required-scalar-argument","text":"<name> (string) The name of the question to delete.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-list/","text":"Returns the paginated list of questions and some of its answers for a specified location. Required Scalar Argument <parent> (string) The name of the location to fetch questions for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p answers-per-question=integer How many answers to fetch per question. The default and maximum answers_per_question values are 10. -p filter=string A filter constraining the questions to return. The only filter currently supported is \"ignore_answered=true\" -p order-by=string The order to return the questions. Valid options include 'update_time desc' and 'upvote_count desc', which will return the questions sorted descendingly by the requested field. The default sort order is 'update_time desc'. -p page-size=integer How many questions to fetch per page. The default and maximum page_size values are 10. -p page-token=string If specified, the next page of questions is retrieved. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions List"},{"location":"accounts_locations-questions-list/#required-scalar-argument","text":"<parent> (string) The name of the location to fetch questions for.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p answers-per-question=integer How many answers to fetch per question. The default and maximum answers_per_question values are 10. -p filter=string A filter constraining the questions to return. The only filter currently supported is \"ignore_answered=true\" -p order-by=string The order to return the questions. Valid options include 'update_time desc' and 'upvote_count desc', which will return the questions sorted descendingly by the requested field. The default sort order is 'update_time desc'. -p page-size=integer How many questions to fetch per page. The default and maximum page_size values are 10. -p page-token=string If specified, the next page of questions is retrieved.","title":"Optional Method Properties"},{"location":"accounts_locations-questions-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-questions-patch/","text":"Updates a specific question written by the current user. Required Scalar Argument <name> (string) The name of the question to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Question: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string total-answer-count: integer update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=ea The display name of the user profile-photo-url=dolore The profile photo URL of the user. type=ipsum The type of user the author is. .. create-time=ea Output only. The timestamp for when the question was written. name=at Output only. The unique name for the question. accounts/ /locations/ /questions/* text=sit The text of the question. It should contain at least two words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters. total-answer-count=3 Output only. The total number of answers posted for this question. update-time=lorem Output only. The timestamp for when the question was last modified. upvote-count=86 Output only. The number of upvotes for the question. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Questions Patch"},{"location":"accounts_locations-questions-patch/#required-scalar-argument","text":"<name> (string) The name of the question to update.","title":"Required Scalar Argument"},{"location":"accounts_locations-questions-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Question: author: display-name: string profile-photo-url: string type: string create-time: string name: string text: string total-answer-count: integer update-time: string upvote-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .author display-name=ea The display name of the user profile-photo-url=dolore The profile photo URL of the user. type=ipsum The type of user the author is. .. create-time=ea Output only. The timestamp for when the question was written. name=at Output only. The unique name for the question. accounts/ /locations/ /questions/* text=sit The text of the question. It should contain at least two words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters. total-answer-count=3 Output only. The total number of answers posted for this question. update-time=lorem Output only. The timestamp for when the question was last modified. upvote-count=86 Output only. The number of upvotes for the question.","title":"Required Request Value"},{"location":"accounts_locations-questions-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-questions-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-questions-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-report-insights/","text":"Returns a report containing insights on one or more metrics by location. <aside class=\"note\"><b>Note:</b> Insight reports are limited to a batch size of 10 location_names per call.</aside> Required Scalar Argument <name> (string) The account resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportLocationInsightsRequest: basic-request: time-range: end-time: string start-time: string driving-directions-request: language-code: string num-days: string location-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .basic-request.time-range end-time=duo Epoch timestamp for the end of the range (exclusive). start-time=elitr Epoch timestamp for the start of the range (inclusive). ...driving-directions-request language-code=aliquyam The BCP 47 code for the language. If a language code is not provided, it defaults to English. num-days=erat The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90. .. location-names=ut A collection of locations to fetch insights for, specified by their names. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Report Insights"},{"location":"accounts_locations-report-insights/#required-scalar-argument","text":"<name> (string) The account resource name.","title":"Required Scalar Argument"},{"location":"accounts_locations-report-insights/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportLocationInsightsRequest: basic-request: time-range: end-time: string start-time: string driving-directions-request: language-code: string num-days: string location-names: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .basic-request.time-range end-time=duo Epoch timestamp for the end of the range (exclusive). start-time=elitr Epoch timestamp for the start of the range (inclusive). ...driving-directions-request language-code=aliquyam The BCP 47 code for the language. If a language code is not provided, it defaults to English. num-days=erat The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90. .. location-names=ut A collection of locations to fetch insights for, specified by their names. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"accounts_locations-report-insights/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-report-insights/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-report-insights/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-reviews-delete-reply/","text":"Deletes the response to the specified review. This operation is only valid if the specified location is verified. Required Scalar Argument <name> (string) The name of the review reply to delete. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Reviews Delete Reply"},{"location":"accounts_locations-reviews-delete-reply/#required-scalar-argument","text":"<name> (string) The name of the review reply to delete.","title":"Required Scalar Argument"},{"location":"accounts_locations-reviews-delete-reply/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-reviews-delete-reply/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-reviews-get/","text":"Returns the specified review. This operation is only valid if the specified location is verified. Returns NOT_FOUND if the review does not exist, or has been deleted. Required Scalar Argument <name> (string) The name of the review to fetch. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Reviews Get"},{"location":"accounts_locations-reviews-get/#required-scalar-argument","text":"<name> (string) The name of the review to fetch.","title":"Required Scalar Argument"},{"location":"accounts_locations-reviews-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-reviews-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-reviews-list/","text":"Returns the paginated list of reviews for the specified location. This operation is only valid if the specified location is verified. Required Scalar Argument <parent> (string) The name of the location to fetch reviews for. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to update_time desc . Valid orders to sort by are rating , rating desc and update_time desc . -p page-size=integer How many reviews to fetch per page. The maximum page_size is 200. -p page-token=string If specified, it fetches the next page of reviews. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Reviews List"},{"location":"accounts_locations-reviews-list/#required-scalar-argument","text":"<parent> (string) The name of the location to fetch reviews for.","title":"Required Scalar Argument"},{"location":"accounts_locations-reviews-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-reviews-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p order-by=string Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to update_time desc . Valid orders to sort by are rating , rating desc and update_time desc . -p page-size=integer How many reviews to fetch per page. The maximum page_size is 200. -p page-token=string If specified, it fetches the next page of reviews.","title":"Optional Method Properties"},{"location":"accounts_locations-reviews-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-reviews-update-reply/","text":"Updates the reply to the specified review. A reply is created if one does not exist. This operation is only valid if the specified location is verified. Required Scalar Argument <name> (string) The name of the review to respond to. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReviewReply: comment: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . comment=et The body of the reply as plain text with markups. The maximum length is 4096 bytes. update-time=lorem Output only. The timestamp for when the reply was last modified. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Reviews Update Reply"},{"location":"accounts_locations-reviews-update-reply/#required-scalar-argument","text":"<name> (string) The name of the review to respond to.","title":"Required Scalar Argument"},{"location":"accounts_locations-reviews-update-reply/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReviewReply: comment: string update-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . comment=et The body of the reply as plain text with markups. The maximum length is 4096 bytes. update-time=lorem Output only. The timestamp for when the reply was last modified.","title":"Required Request Value"},{"location":"accounts_locations-reviews-update-reply/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-reviews-update-reply/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-reviews-update-reply/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-transfer/","text":"Moves a location from an account that the user owns to another account that the same user administers. The user must be an owner of the account the location is currently associated with and must also be at least a manager of the destination account. Returns the Location with its new resource name. Required Scalar Argument <name> (string) The name of the location to transfer. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TransferLocationRequest: to-account: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . to-account=rebum. Name of the account resource to transfer the location to (for example, \"accounts/8675309\"). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Transfer"},{"location":"accounts_locations-transfer/#required-scalar-argument","text":"<name> (string) The name of the location to transfer.","title":"Required Scalar Argument"},{"location":"accounts_locations-transfer/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TransferLocationRequest: to-account: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . to-account=rebum. Name of the account resource to transfer the location to (for example, \"accounts/8675309\").","title":"Required Request Value"},{"location":"accounts_locations-transfer/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-transfer/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-transfer/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-verifications-complete/","text":"Completes a PENDING verification. It is only necessary for non AUTO verification methods. AUTO verification request is instantly VERIFIED upon creation. Required Scalar Argument <name> (string) Resource name of the verification to complete. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompleteVerificationRequest: pin: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . pin=et PIN code received by the merchant to complete the verification. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Verifications Complete"},{"location":"accounts_locations-verifications-complete/#required-scalar-argument","text":"<name> (string) Resource name of the verification to complete.","title":"Required Scalar Argument"},{"location":"accounts_locations-verifications-complete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CompleteVerificationRequest: pin: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . pin=et PIN code received by the merchant to complete the verification.","title":"Required Request Value"},{"location":"accounts_locations-verifications-complete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-verifications-complete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-verifications-complete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-verifications-list/","text":"List verifications of a location, ordered by create time. Required Scalar Argument <parent> (string) Resource name of the location that verification requests belong to. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many verification to include per page. If not set, return all. -p page-token=string If specified, returns the next page of verifications. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Verifications List"},{"location":"accounts_locations-verifications-list/#required-scalar-argument","text":"<parent> (string) Resource name of the location that verification requests belong to.","title":"Required Scalar Argument"},{"location":"accounts_locations-verifications-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-verifications-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer How many verification to include per page. If not set, return all. -p page-token=string If specified, returns the next page of verifications.","title":"Optional Method Properties"},{"location":"accounts_locations-verifications-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_locations-verify/","text":"Starts the verification process for a location. Required Scalar Argument <name> (string) Resource name of the location to verify. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: VerifyLocationRequest: address-input: mailer-contact-name: string context: address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string email-input: email-address: string language-code: string method: string phone-input: phone-number: string vetted-partner-input: token: token-string: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .address-input mailer-contact-name=sed Contact name the mail should be sent to. ..context.address address-lines=stet Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=aliquyam - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=kasd - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=lorem - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=sit - Optional. The name of the organization at the address. * postal-code=kasd - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=tempor - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=dolor - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=4 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=sit - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=rebum. - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. ...email-input email-address=sea Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name. .. language-code=ipsum The BCP 47 language code representing the language that is to be used for the verification process. method=ipsum Verification method. phone-input phone-number=et The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options. ..vetted-partner-input.token token-string=elitr The token string. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Locations Verify"},{"location":"accounts_locations-verify/#required-scalar-argument","text":"<name> (string) Resource name of the location to verify.","title":"Required Scalar Argument"},{"location":"accounts_locations-verify/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: VerifyLocationRequest: address-input: mailer-contact-name: string context: address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string email-input: email-address: string language-code: string method: string phone-input: phone-number: string vetted-partner-input: token: token-string: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .address-input mailer-contact-name=sed Contact name the mail should be sent to. ..context.address address-lines=stet Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=aliquyam - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=kasd - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=lorem - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=sit - Optional. The name of the organization at the address. * postal-code=kasd - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=tempor - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=dolor - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=4 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=sit - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=rebum. - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. ...email-input email-address=sea Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name. .. language-code=ipsum The BCP 47 language code representing the language that is to be used for the verification process. method=ipsum Verification method. phone-input phone-number=et The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options. ..vetted-partner-input.token token-string=elitr The token string.","title":"Required Request Value"},{"location":"accounts_locations-verify/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_locations-verify/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_locations-verify/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_update-notifications/","text":"Sets the pubsub notification settings for the account informing My Business which topic to send pubsub notifications for: New reviews for locations administered by the account. Updated reviews for locations administered by the account. New GoogleUpdates for locations administered by the account. An account will only have one notification settings resource, and only one pubsub topic can be set. Required Scalar Argument <name> (string) The notification settings resource name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Notifications: name: string notification-types: [string] topic-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . name=duo Output only. The notifications resource name. notification-types=et The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications. Each invocation of this argument appends the given value to the array. topic-name=erat The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Notifications"},{"location":"accounts_update-notifications/#required-scalar-argument","text":"<name> (string) The notification settings resource name.","title":"Required Scalar Argument"},{"location":"accounts_update-notifications/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Notifications: name: string notification-types: [string] topic-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . name=duo Output only. The notifications resource name. notification-types=et The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications. Each invocation of this argument appends the given value to the array. topic-name=erat The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic.","title":"Required Request Value"},{"location":"accounts_update-notifications/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_update-notifications/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_update-notifications/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"accounts_update/","text":"Updates the specified business account. Personal accounts cannot be updated using this method. <aside class=\"note\"><b>Note:</b> The only editable field for an account is account_name . Any other fields passed in (such as type or role ) are ignored.</aside> Required Scalar Argument <name> (string) The name of the account to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: account-name: string account-number: string name: string organization-info: phone-number: string postal-address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string registered-domain: string permission-level: string role: string state: status: string vetted-status: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-name=eirmod The name of the account. <aside class=\"note\"><b>Note:</b> For an account with AccountType PERSONAL , this is the first and last name of the user account.</aside> account-number=dolor Account reference number if provisioned. name=sadipscing The resource name, in the format accounts/{account_id} . organization-info phone-number=dolor The contact number for the organization. postal-address address-lines=dolor Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=consetetur - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=et - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=sit - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=lorem - Optional. The name of the organization at the address. * postal-code=nonumy - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=diam - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=ipsum - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=63 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=stet - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=voluptua. - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. registered-domain=at The registered domain for the account. .. permission-level=diam Output only. Specifies the PermissionLevel the caller has for this account. role=amet Output only. Specifies the AccountRole the caller has for this account. state status=at If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation. vetted-status=eirmod Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method. .. type=erat Output only. Specifies the AccountType of this account. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p validate-only=boolean If true, the request is validated without actually updating the account. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"accounts_update/#required-scalar-argument","text":"<name> (string) The name of the account to update.","title":"Required Scalar Argument"},{"location":"accounts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Account: account-name: string account-number: string name: string organization-info: phone-number: string postal-address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string registered-domain: string permission-level: string role: string state: status: string vetted-status: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . account-name=eirmod The name of the account. <aside class=\"note\"><b>Note:</b> For an account with AccountType PERSONAL , this is the first and last name of the user account.</aside> account-number=dolor Account reference number if provisioned. name=sadipscing The resource name, in the format accounts/{account_id} . organization-info phone-number=dolor The contact number for the organization. postal-address address-lines=dolor Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=consetetur - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=et - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=sit - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=lorem - Optional. The name of the organization at the address. * postal-code=nonumy - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=diam - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=ipsum - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=63 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=stet - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=voluptua. - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. registered-domain=at The registered domain for the account. .. permission-level=diam Output only. Specifies the PermissionLevel the caller has for this account. role=amet Output only. Specifies the AccountRole the caller has for this account. state status=at If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation. vetted-status=eirmod Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method. .. type=erat Output only. Specifies the AccountType of this account.","title":"Required Request Value"},{"location":"accounts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"accounts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"accounts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p validate-only=boolean If true, the request is validated without actually updating the account.","title":"Optional Method Properties"},{"location":"accounts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"attributes_list/","text":"Returns the list of available attributes that would be available for a location with the given primary category and country. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p category-id=string The primary category stable ID to find available attributes. -p country=string The ISO 3166-1 alpha-2 country code to find available attributes. -p language-code=string The BCP 47 code of language to get attribute display names in. If this language is not available, they will be provided in English. -p name=string Resource name of the location to look up available attributes. -p page-size=integer How many attributes to include per page. Default is 200, minimum is 1. -p page-token=string If specified, the next page of attribute metadata is retrieved. The pageToken is returned when a call to attributes.list returns more results than can fit into the requested page size. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"attributes_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"attributes_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p category-id=string The primary category stable ID to find available attributes. -p country=string The ISO 3166-1 alpha-2 country code to find available attributes. -p language-code=string The BCP 47 code of language to get attribute display names in. If this language is not available, they will be provided in English. -p name=string Resource name of the location to look up available attributes. -p page-size=integer How many attributes to include per page. Default is 200, minimum is 1. -p page-token=string If specified, the next page of attribute metadata is retrieved. The pageToken is returned when a call to attributes.list returns more results than can fit into the requested page size.","title":"Optional Method Properties"},{"location":"attributes_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"categories_list/","text":"Returns a list of business categories. Search will match the category name but not the category ID. <aside class=\"note\"><b>Note:</b> Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').</aside> Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p language-code=string The BCP 47 code of language. If the language is not available, it will default to English. -p page-size=integer How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is 100. -p page-token=string If specified, the next page of categories will be fetched. -p region-code=string The ISO 3166-1 alpha-2 country code. -p search-term=string Optional filter string from user. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"categories_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"categories_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p language-code=string The BCP 47 code of language. If the language is not available, it will default to English. -p page-size=integer How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is 100. -p page-token=string If specified, the next page of categories will be fetched. -p region-code=string The ISO 3166-1 alpha-2 country code. -p search-term=string Optional filter string from user.","title":"Optional Method Properties"},{"location":"categories_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"chains_get/","text":"Gets the specified chain. Returns NOT_FOUND if the chain does not exist. Required Scalar Argument <name> (string) The chain's resource name, in the format chains/{chain_place_id} . Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"chains_get/#required-scalar-argument","text":"<name> (string) The chain's resource name, in the format chains/{chain_place_id} .","title":"Required Scalar Argument"},{"location":"chains_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"chains_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"chains_search/","text":"Searches the chain based on chain name. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p chain-display-name=string Search for a chain by its name. Exact/partial/fuzzy/related queries are supported. Examples: \"walmart\", \"wal-mart\", \"walmmmart\", \"\u6c83\u5c14\u739b\" -p result-count=integer The maximum number of matched chains to return from this query. The default is 10. The maximum possible value is 500. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Search"},{"location":"chains_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"chains_search/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p chain-display-name=string Search for a chain by its name. Exact/partial/fuzzy/related queries are supported. Examples: \"walmart\", \"wal-mart\", \"walmmmart\", \"\u6c83\u5c14\u739b\" -p result-count=integer The maximum number of matched chains to return from this query. The default is 10. The maximum possible value is 500.","title":"Optional Method Properties"},{"location":"chains_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"google-locations_report/","text":"Report a GoogleLocation. Required Scalar Argument <name> (string) Resource name of a [GoogleLocation], in the format googleLocations/{googleLocationId} . Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportGoogleLocationRequest: location-group-name: string report-reason-bad-location: string report-reason-bad-recommendation: string report-reason-elaboration: string report-reason-language-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . location-group-name=sit Optional. The resource name of the location group that this Google Location is being reported for, in the format accounts/{account_id} . report-reason-bad-location=accusam The reason for which the user is reporting this location when the issue is with the location itself. report-reason-bad-recommendation=et The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the GMB account. report-reason-elaboration=nonumy Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters. report-reason-language-code=accusam Optional. The BCP 47 code of language used in report_reason_elaboration . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Report"},{"location":"google-locations_report/#required-scalar-argument","text":"<name> (string) Resource name of a [GoogleLocation], in the format googleLocations/{googleLocationId} .","title":"Required Scalar Argument"},{"location":"google-locations_report/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportGoogleLocationRequest: location-group-name: string report-reason-bad-location: string report-reason-bad-recommendation: string report-reason-elaboration: string report-reason-language-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . location-group-name=sit Optional. The resource name of the location group that this Google Location is being reported for, in the format accounts/{account_id} . report-reason-bad-location=accusam The reason for which the user is reporting this location when the issue is with the location itself. report-reason-bad-recommendation=et The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the GMB account. report-reason-elaboration=nonumy Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters. report-reason-language-code=accusam Optional. The BCP 47 code of language used in report_reason_elaboration .","title":"Required Request Value"},{"location":"google-locations_report/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"google-locations_report/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"google-locations_report/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"google-locations_search/","text":"Search all of the possible locations that are a match to the specified request. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SearchGoogleLocationsRequest: location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string query: string result-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .location.ad-words-location-extensions ad-phone=ut An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=voluptua. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=consetetur Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=dolor - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=amet - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=et - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=aliquyam - Optional. The name of the organization at the address. * postal-code=ipsum - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=gubergren - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=invidunt - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=91 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=duo - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=sea - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=stet A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=sadipscing The language of the location. Set during creation and not updateable. latlng latitude=0.9967765115914052 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.8773482329441525 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=true Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=sea If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=sit - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=amet. - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=ipsum Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=false Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=true Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=true Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=false Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=true Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=false Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=true Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=false Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sea Indicates whether the user has access to the location it duplicates. location-name=eos The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=dolore The place ID of the location that this duplicates. .. maps-url=accusam A link to the location on Maps. new-review-url=elitr A link to the page on Google Search where a customer can leave a review for the location. .. name=sed Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=false - Output only. Indicates whether this business is eligible for re-open. * opening-date day=11 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=58 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=74 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=stet Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=sit @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=ipsum @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=lorem A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=dolor Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=amet The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=magna Indicates the type of the service area business. radius.latlng latitude=0.14615157326830652 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.22806568296421847 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.6208108768517692 The distance in kilometers of the area around the point. ... store-code=erat External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=dolore A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand. .. query=vero Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches. result-count=84 The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Search"},{"location":"google-locations_search/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SearchGoogleLocationsRequest: location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string query: string result-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .location.ad-words-location-extensions ad-phone=ut An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=voluptua. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=consetetur Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=dolor - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=amet - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=et - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=aliquyam - Optional. The name of the organization at the address. * postal-code=ipsum - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=gubergren - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=invidunt - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=91 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=duo - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=sea - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=stet A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=sadipscing The language of the location. Set during creation and not updateable. latlng latitude=0.9967765115914052 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.8773482329441525 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=true Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=sea If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=sit - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=amet. - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=ipsum Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=true Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=false Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=true Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=true Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=false Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=true Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=false Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=true Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=false Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sea Indicates whether the user has access to the location it duplicates. location-name=eos The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=dolore The place ID of the location that this duplicates. .. maps-url=accusam A link to the location on Maps. new-review-url=elitr A link to the page on Google Search where a customer can leave a review for the location. .. name=sed Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=false - Output only. Indicates whether this business is eligible for re-open. * opening-date day=11 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=58 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=74 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=stet Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=sit @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=ipsum @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=lorem A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=dolor Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=amet The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=magna Indicates the type of the service area business. radius.latlng latitude=0.14615157326830652 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.22806568296421847 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.6208108768517692 The distance in kilometers of the area around the point. ... store-code=erat External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=dolore A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand. .. query=vero Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches. result-count=84 The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.","title":"Required Request Value"},{"location":"google-locations_search/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"google-locations_search/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"google-locations_search/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"verification-tokens_generate/","text":"Generates a token for the provided location data as a vetted partner. Throws PERMISSION_DENIED if the caller is not a vetted partner account. Throws FAILED_PRECONDITION if the caller's VettedStatus is INVALID. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GenerateVerificationTokenRequest: location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .location.ad-words-location-extensions ad-phone=et An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=amet. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=eirmod Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=sanctus - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=sed - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=dolor - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=et - Optional. The name of the organization at the address. * postal-code=et - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=erat - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=eos - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=60 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=ea - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=aliquyam - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=nonumy A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=stet The language of the location. Set during creation and not updateable. latlng latitude=0.9288076257779742 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.484368020718412 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=sanctus If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=invidunt - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=dolor - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=eos Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=false Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=false Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=true Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=true Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=false Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sanctus Indicates whether the user has access to the location it duplicates. location-name=ipsum The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=eirmod The place ID of the location that this duplicates. .. maps-url=vero A link to the location on Maps. new-review-url=voluptua. A link to the page on Google Search where a customer can leave a review for the location. .. name=sea Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=true - Output only. Indicates whether this business is eligible for re-open. * opening-date day=91 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=27 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=89 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=dolore Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=ea @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=elitr @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=takimata A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=duo Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=tempor The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=clita Indicates the type of the service area business. radius.latlng latitude=0.5559467100868378 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.2863599831179915 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.8755402661178983 The distance in kilometers of the area around the point. ... store-code=consetetur External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=dolores A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Generate"},{"location":"verification-tokens_generate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: GenerateVerificationTokenRequest: location: ad-words-location-extensions: ad-phone: string additional-phones: [string] address: address-lines: [string] administrative-area: string language-code: string locality: string organization: string postal-code: string recipients: [string] region-code: string revision: integer sorting-code: string sublocality: string labels: [string] language-code: string latlng: latitude: number longitude: number location-key: explicit-no-place-id: boolean place-id: string plus-page-id: string request-id: string location-name: string location-state: can-delete: boolean can-update: boolean has-pending-edits: boolean has-pending-verification: boolean is-disabled: boolean is-disconnected: boolean is-duplicate: boolean is-google-updated: boolean is-local-post-api-disabled: boolean is-pending-review: boolean is-published: boolean is-suspended: boolean is-verified: boolean needs-reverification: boolean metadata: duplicate: access: string location-name: string place-id: string maps-url: string new-review-url: string name: string open-info: can-reopen: boolean opening-date: day: integer month: integer year: integer status: string primary-category: category-id: string display-name: string primary-phone: string profile: description: string relationship-data: parent-chain: string service-area: business-type: string radius: latlng: latitude: number longitude: number radius-km: number store-code: string website-url: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .location.ad-words-location-extensions ad-phone=et An alternate phone number to display on AdWords location extensions instead of the location's primary phone number. .. additional-phones=amet. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number. Each invocation of this argument appends the given value to the array. address address-lines=eirmod Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). - Each invocation of this argument appends the given value to the array. * administrative-area=sanctus - Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated. * language-code=sed - Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\". * locality=dolor - Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines. * organization=et - Optional. The name of the organization at the address. * postal-code=et - Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.). * recipients=erat - Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information. - Each invocation of this argument appends the given value to the array. * region-code=eos - Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. * revision=60 - The schema revision of the PostalAddress . This must be set to 0, which is the latest revision. All new revisions must be backward compatible with old revisions. * sorting-code=ea - Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire). * sublocality=aliquyam - Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. .. labels=nonumy A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label). Each invocation of this argument appends the given value to the array. language-code=stet The language of the location. Set during creation and not updateable. latlng latitude=0.9288076257779742 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.484368020718412 The longitude in degrees. It must be in the range [-180.0, +180.0]. ..location-key explicit-no-place-id=false Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet. place-id=sanctus If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional explicit_no_place_id bool qualifies whether an unset place ID is deliberate or not. * plus-page-id=invidunt - Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location. * request-id=dolor - Output only. The request_id used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations. .. location-name=eos Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, Address , Categories ). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\"). location-state can-delete=false Output only. Indicates whether the location can be deleted using the Google My Business API. can-update=false Output only. Indicates whether the location can be updated. has-pending-edits=false Output only. Indicates whether any of this Location's properties are in the edit pending state. has-pending-verification=false Output only. Indicates whether the location has pending verification requests. is-disabled=false Output only. Indicates whether the location is disabled. is-disconnected=false Output only. Indicates whether the location is disconnected from a place on Google Maps. is-duplicate=false Output only. Indicates whether the location is a duplicate of another location. For more information, see metadata.duplicate . is-google-updated=true Output only. Indicates whether the place ID associated with this location has updates. is-local-post-api-disabled=false Output only. Indicates whether accounts.locations.localPosts is disabled for this location. is-pending-review=true Output only. Indicates whether the review of the location is pending. is-published=false Output only. Indicates whether the location is published. is-suspended=false Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145). is-verified=true Output only. Indicates whether the location is verified. needs-reverification=true Output only. Indicates whether the location requires reverification. ..metadata.duplicate access=sanctus Indicates whether the user has access to the location it duplicates. location-name=ipsum The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted. place-id=eirmod The place ID of the location that this duplicates. .. maps-url=vero A link to the location on Maps. new-review-url=voluptua. A link to the page on Google Search where a customer can leave a review for the location. .. name=sea Google identifier for this location in the form: accounts/{account_id}/locations/{location_id} In the context of matches, this field will not be populated. * open-info can-reopen=true - Output only. Indicates whether this business is eligible for re-open. * opening-date day=91 - Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. * month=27 - Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. * year=89 - Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. .. status=dolore Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed. ..primary-category category-id=ea @OutputOnly. A stable ID (provided by Google) for this category. The category_id must be specified when modifying the category (when creating or updating a location). display-name=elitr @OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, category_id must be set. .. primary-phone=takimata A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible. profile description=duo Description of the location in your own voice, not editable by anyone else. ..relationship-data parent-chain=tempor The resource name of the Chain that this location is member of. How to find Chain ID ..service-area business-type=clita Indicates the type of the service area business. radius.latlng latitude=0.5559467100868378 The latitude in degrees. It must be in the range [-90.0, +90.0]. longitude=0.2863599831179915 The longitude in degrees. It must be in the range [-180.0, +180.0]. .. radius-km=0.8755402661178983 The distance in kilometers of the area around the point. ... store-code=consetetur External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records. website-url=dolores A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.","title":"Required Request Value"},{"location":"verification-tokens_generate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"verification-tokens_generate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"verification-tokens_generate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}