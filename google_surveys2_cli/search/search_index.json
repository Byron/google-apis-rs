{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The surveys2 command-line interface (CLI) allows to use most features of the Google Surveys service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Installation and Source Code Install the command-line interface with cargo using: cargo install google-surveys2-cli Find the source code on github . Usage This documentation was generated from the Surveys API at revision 20180508 . The CLI is at version 5.0.4 . surveys2 [options] results get <survey-url-id> (-r <kv>)... [-p <v>]... [-o <out>] surveys delete <survey-url-id> [-p <v>]... [-o <out>] get <survey-url-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] start <resource-id> (-r <kv>)... [-p <v>]... [-o <out>] stop <resource-id> [-p <v>]... [-o <out>] update <survey-url-id> (-r <kv>)... [-p <v>]... [-o <out>] surveys2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with surveys2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/surveys2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/surveys2-secret.json , assuming that the required surveys API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. surveys2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-surveys2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Surveys API at revision 20180508 . The CLI is at version 5.0.4 . surveys2 [options] results get <survey-url-id> (-r <kv>)... [-p <v>]... [-o <out>] surveys delete <survey-url-id> [-p <v>]... [-o <out>] get <survey-url-id> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] list [-p <v>]... [-o <out>] start <resource-id> (-r <kv>)... [-p <v>]... [-o <out>] stop <resource-id> [-p <v>]... [-o <out>] update <survey-url-id> (-r <kv>)... [-p <v>]... [-o <out>] surveys2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with surveys2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/surveys2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/surveys2-secret.json , assuming that the required surveys API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. surveys2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"results_get/","text":"Retrieves any survey results that have been produced so far. Results are formatted as an Excel file. You must add \"?alt=media\" to the URL as an argument to get results. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> results get ... Required Scalar Argument <survey-url-id> (string) External URL ID for the survey. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResultsGetRequest: result-mask: projection: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .result-mask projection=et No description provided. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"results_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> results get ...","title":"Scopes"},{"location":"results_get/#required-scalar-argument","text":"<survey-url-id> (string) External URL ID for the survey.","title":"Required Scalar Argument"},{"location":"results_get/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ResultsGetRequest: result-mask: projection: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .result-mask projection=et No description provided.","title":"Required Request Value"},{"location":"results_get/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"results_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"results_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_delete/","text":"Removes a survey from view in all user GET requests. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys delete ... Required Scalar Argument <survey-url-id> (string) External URL ID for the survey. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Delete"},{"location":"surveys_delete/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys delete ...","title":"Scopes"},{"location":"surveys_delete/#required-scalar-argument","text":"<survey-url-id> (string) External URL ID for the survey.","title":"Required Scalar Argument"},{"location":"surveys_delete/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_get/","text":"Retrieves information about the specified survey. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> surveys get ... Required Scalar Argument <survey-url-id> (string) External URL ID for the survey. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Get"},{"location":"surveys_get/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> surveys get ...","title":"Scopes"},{"location":"surveys_get/#required-scalar-argument","text":"<survey-url-id> (string) External URL ID for the survey.","title":"Required Scalar Argument"},{"location":"surveys_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_insert/","text":"Creates a survey. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Survey: audience: ages: [string] country: string country-subdivision: string gender: string languages: [string] population-source: string cost: cost-per-response-nanos: string currency-code: string max-cost-per-response-nanos: string nanos: string customer-data: string description: string owners: [string] rejection-reason: explanation: string type: string state: string survey-url-id: string title: string wanted-response-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audience ages=magna Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+'] Each invocation of this argument appends the given value to the array. country=no Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom. country-subdivision=ipsum Country subdivision (states/provinces/etc) that surveys should be targeted to. For all countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-UKC' for North East England). gender=voluptua. Optional gender to target. languages=at Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification. Each invocation of this argument appends the given value to the array. population-source=sanctus Online population source where the respondents are sampled from. ..cost cost-per-response-nanos=sed Cost per survey response in nano units of the given currency. To get the total cost for a survey, multiply this value by wanted_response_count. currency-code=amet. Currency code that the cost is given in. max-cost-per-response-nanos=takimata Deprecated Threshold to start a survey automatically if the quoted price is at most this value. When a survey has a Screener (threshold) question, it must go through an incidence pricing test to determine the final cost per response. Typically you will have to make a followup call to start the survey giving the final computed cost per response. If the survey has no threshold_answers, setting this property will return an error. By specifying this property, you indicate the max price per response you are willing to pay in advance of the incidence test. If the price turns out to be lower than the specified value, the survey will begin immediately and you will be charged at the rate determined by the incidence pricing test. If the price turns out to be greater than the specified value the survey will not be started and you will instead be notified what price was determined by the incidence test. At that point, you must raise the value of this property to be greater than or equal to that cost before attempting to start the survey again. This will immediately start the survey as long the incidence test was run within the last 21 days. This will no longer be available after June 2018. nanos=amet. Cost of survey in nano units of the given currency. DEPRECATED in favor of cost_per_response_nanos .. customer-data=duo Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes. description=ipsum Text description of the survey. owners=gubergren List of email addresses for survey owners. Must contain at least the address of the user making the API call. Each invocation of this argument appends the given value to the array. rejection-reason explanation=lorem A human-readable explanation of what was wrong with the survey. type=gubergren Which category of rejection this was. See the Google Surveys Help Center for additional details on each category. .. state=eos State that the survey is in. survey-url-id=dolor Unique survey ID, that is viewable in the URL of the Survey Creator UI title=ea Optional name that will be given to the survey. wanted-response-count=46 Number of responses desired for the survey. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Insert"},{"location":"surveys_insert/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys insert ...","title":"Scopes"},{"location":"surveys_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Survey: audience: ages: [string] country: string country-subdivision: string gender: string languages: [string] population-source: string cost: cost-per-response-nanos: string currency-code: string max-cost-per-response-nanos: string nanos: string customer-data: string description: string owners: [string] rejection-reason: explanation: string type: string state: string survey-url-id: string title: string wanted-response-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audience ages=magna Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+'] Each invocation of this argument appends the given value to the array. country=no Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom. country-subdivision=ipsum Country subdivision (states/provinces/etc) that surveys should be targeted to. For all countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-UKC' for North East England). gender=voluptua. Optional gender to target. languages=at Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification. Each invocation of this argument appends the given value to the array. population-source=sanctus Online population source where the respondents are sampled from. ..cost cost-per-response-nanos=sed Cost per survey response in nano units of the given currency. To get the total cost for a survey, multiply this value by wanted_response_count. currency-code=amet. Currency code that the cost is given in. max-cost-per-response-nanos=takimata Deprecated Threshold to start a survey automatically if the quoted price is at most this value. When a survey has a Screener (threshold) question, it must go through an incidence pricing test to determine the final cost per response. Typically you will have to make a followup call to start the survey giving the final computed cost per response. If the survey has no threshold_answers, setting this property will return an error. By specifying this property, you indicate the max price per response you are willing to pay in advance of the incidence test. If the price turns out to be lower than the specified value, the survey will begin immediately and you will be charged at the rate determined by the incidence pricing test. If the price turns out to be greater than the specified value the survey will not be started and you will instead be notified what price was determined by the incidence test. At that point, you must raise the value of this property to be greater than or equal to that cost before attempting to start the survey again. This will immediately start the survey as long the incidence test was run within the last 21 days. This will no longer be available after June 2018. nanos=amet. Cost of survey in nano units of the given currency. DEPRECATED in favor of cost_per_response_nanos .. customer-data=duo Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes. description=ipsum Text description of the survey. owners=gubergren List of email addresses for survey owners. Must contain at least the address of the user making the API call. Each invocation of this argument appends the given value to the array. rejection-reason explanation=lorem A human-readable explanation of what was wrong with the survey. type=gubergren Which category of rejection this was. See the Google Surveys Help Center for additional details on each category. .. state=eos State that the survey is in. survey-url-id=dolor Unique survey ID, that is viewable in the URL of the Survey Creator UI title=ea Optional name that will be given to the survey. wanted-response-count=46 Number of responses desired for the survey.","title":"Required Request Value"},{"location":"surveys_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"surveys_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_list/","text":"Lists the surveys owned by the authenticated user. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> surveys list ... Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer No description provided. -p start-index=integer No description provided. -p token=string No description provided. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"List"},{"location":"surveys_list/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/surveys.readonly https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys.readonly . You can set the scope for this method like this: surveys2 --scope <scope> surveys list ...","title":"Scopes"},{"location":"surveys_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer No description provided. -p start-index=integer No description provided. -p token=string No description provided.","title":"Optional Method Properties"},{"location":"surveys_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_start/","text":"Begins running a survey. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys start ... Required Scalar Argument <resource-id> (string) No description provided. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SurveysStartRequest: max-cost-per-response-nanos: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . max-cost-per-response-nanos=invidunt Deprecated Threshold to start a survey automatically if the quoted prices is less than or equal to this value. See Survey.Cost for more details. This will no longer be available after June 2018. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Start"},{"location":"surveys_start/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys start ...","title":"Scopes"},{"location":"surveys_start/#required-scalar-argument","text":"<resource-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"surveys_start/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SurveysStartRequest: max-cost-per-response-nanos: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . max-cost-per-response-nanos=invidunt Deprecated Threshold to start a survey automatically if the quoted prices is less than or equal to this value. See Survey.Cost for more details. This will no longer be available after June 2018.","title":"Required Request Value"},{"location":"surveys_start/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"surveys_start/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_start/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_stop/","text":"Stops a running survey. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys stop ... Required Scalar Argument <resource-id> (string) No description provided. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Stop"},{"location":"surveys_stop/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys stop ...","title":"Scopes"},{"location":"surveys_stop/#required-scalar-argument","text":"<resource-id> (string) No description provided.","title":"Required Scalar Argument"},{"location":"surveys_stop/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_stop/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"},{"location":"surveys_update/","text":"Updates a survey. Currently the only property that can be updated is the owners property. Scopes You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys update ... Required Scalar Argument <survey-url-id> (string) External URL ID for the survey. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Survey: audience: ages: [string] country: string country-subdivision: string gender: string languages: [string] population-source: string cost: cost-per-response-nanos: string currency-code: string max-cost-per-response-nanos: string nanos: string customer-data: string description: string owners: [string] rejection-reason: explanation: string type: string state: string survey-url-id: string title: string wanted-response-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audience ages=amet Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+'] Each invocation of this argument appends the given value to the array. country=duo Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom. country-subdivision=ipsum Country subdivision (states/provinces/etc) that surveys should be targeted to. For all countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-UKC' for North East England). gender=sed Optional gender to target. languages=ut Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification. Each invocation of this argument appends the given value to the array. population-source=gubergren Online population source where the respondents are sampled from. ..cost cost-per-response-nanos=rebum. Cost per survey response in nano units of the given currency. To get the total cost for a survey, multiply this value by wanted_response_count. currency-code=est Currency code that the cost is given in. max-cost-per-response-nanos=ipsum Deprecated Threshold to start a survey automatically if the quoted price is at most this value. When a survey has a Screener (threshold) question, it must go through an incidence pricing test to determine the final cost per response. Typically you will have to make a followup call to start the survey giving the final computed cost per response. If the survey has no threshold_answers, setting this property will return an error. By specifying this property, you indicate the max price per response you are willing to pay in advance of the incidence test. If the price turns out to be lower than the specified value, the survey will begin immediately and you will be charged at the rate determined by the incidence pricing test. If the price turns out to be greater than the specified value the survey will not be started and you will instead be notified what price was determined by the incidence test. At that point, you must raise the value of this property to be greater than or equal to that cost before attempting to start the survey again. This will immediately start the survey as long the incidence test was run within the last 21 days. This will no longer be available after June 2018. nanos=ipsum Cost of survey in nano units of the given currency. DEPRECATED in favor of cost_per_response_nanos .. customer-data=est Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes. description=gubergren Text description of the survey. owners=ea List of email addresses for survey owners. Must contain at least the address of the user making the API call. Each invocation of this argument appends the given value to the array. rejection-reason explanation=dolor A human-readable explanation of what was wrong with the survey. type=lorem Which category of rejection this was. See the Google Surveys Help Center for additional details on each category. .. state=eos State that the survey is in. survey-url-id=labore Unique survey ID, that is viewable in the URL of the Survey Creator UI title=sed Optional name that will be given to the survey. wanted-response-count=31 Number of responses desired for the survey. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Update"},{"location":"surveys_update/#scopes","text":"You will need authorization for at least one of the following scopes to make a valid call: https://www.googleapis.com/auth/surveys https://www.googleapis.com/auth/userinfo.email If unset, the scope for this method defaults to https://www.googleapis.com/auth/surveys . You can set the scope for this method like this: surveys2 --scope <scope> surveys update ...","title":"Scopes"},{"location":"surveys_update/#required-scalar-argument","text":"<survey-url-id> (string) External URL ID for the survey.","title":"Required Scalar Argument"},{"location":"surveys_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Survey: audience: ages: [string] country: string country-subdivision: string gender: string languages: [string] population-source: string cost: cost-per-response-nanos: string currency-code: string max-cost-per-response-nanos: string nanos: string customer-data: string description: string owners: [string] rejection-reason: explanation: string type: string state: string survey-url-id: string title: string wanted-response-count: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .audience ages=amet Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+'] Each invocation of this argument appends the given value to the array. country=duo Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom. country-subdivision=ipsum Country subdivision (states/provinces/etc) that surveys should be targeted to. For all countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-UKC' for North East England). gender=sed Optional gender to target. languages=ut Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification. Each invocation of this argument appends the given value to the array. population-source=gubergren Online population source where the respondents are sampled from. ..cost cost-per-response-nanos=rebum. Cost per survey response in nano units of the given currency. To get the total cost for a survey, multiply this value by wanted_response_count. currency-code=est Currency code that the cost is given in. max-cost-per-response-nanos=ipsum Deprecated Threshold to start a survey automatically if the quoted price is at most this value. When a survey has a Screener (threshold) question, it must go through an incidence pricing test to determine the final cost per response. Typically you will have to make a followup call to start the survey giving the final computed cost per response. If the survey has no threshold_answers, setting this property will return an error. By specifying this property, you indicate the max price per response you are willing to pay in advance of the incidence test. If the price turns out to be lower than the specified value, the survey will begin immediately and you will be charged at the rate determined by the incidence pricing test. If the price turns out to be greater than the specified value the survey will not be started and you will instead be notified what price was determined by the incidence test. At that point, you must raise the value of this property to be greater than or equal to that cost before attempting to start the survey again. This will immediately start the survey as long the incidence test was run within the last 21 days. This will no longer be available after June 2018. nanos=ipsum Cost of survey in nano units of the given currency. DEPRECATED in favor of cost_per_response_nanos .. customer-data=est Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes. description=gubergren Text description of the survey. owners=ea List of email addresses for survey owners. Must contain at least the address of the user making the API call. Each invocation of this argument appends the given value to the array. rejection-reason explanation=dolor A human-readable explanation of what was wrong with the survey. type=lorem Which category of rejection this was. See the Google Surveys Help Center for additional details on each category. .. state=eos State that the survey is in. survey-url-id=labore Unique survey ID, that is viewable in the URL of the Survey Creator UI title=sed Optional name that will be given to the survey. wanted-response-count=31 Number of responses desired for the survey.","title":"Required Request Value"},{"location":"surveys_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"surveys_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"surveys_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p alt=string Data format for the response. -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string An opaque string that represents a user for quota purposes. Must not exceed 40 characters. -p user-ip=string Deprecated. Please use quotaUser instead.","title":"Optional General Properties"}]}