(function() {var type_impls = {
"core_foundation":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToVoid%3CCFString%3E-for-*const+__CFString\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/string.rs.html#29\">source</a><a href=\"#impl-ToVoid%3CCFString%3E-for-*const+__CFString\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.ToVoid.html\" title=\"trait core_foundation::base::ToVoid\">ToVoid</a>&lt;<a class=\"struct\" href=\"core_foundation/string/struct.CFString.html\" title=\"struct core_foundation::string::CFString\">CFString</a>&gt; for <a class=\"type\" href=\"core_foundation/string/type.CFStringRef.html\" title=\"type core_foundation::string::CFStringRef\">CFStringRef</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/string.rs.html#29\">source</a><a href=\"#method.to_void\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"core_foundation/base/trait.ToVoid.html#tymethod.to_void\" class=\"fn\">to_void</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/1.76.0/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h4></section></div></details>","ToVoid<CFString>","core_foundation::runloop::CFRunLoopMode"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()