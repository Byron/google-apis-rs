{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The androidpublisher3 command-line interface (CLI) allows to use most features of the Google Android Publisher service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Android Publisher API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-androidpublisher3-cli Find the source code on github . Usage This documentation was generated from the Android Publisher API at revision 20240229 . The CLI is at version 5.0.4 . androidpublisher3 [options] applications data-safety <package-name> (-r <kv>)... [-p <v>]... [-o <out>] device-tier-configs-create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] device-tier-configs-get <package-name> <device-tier-config-id> [-p <v>]... [-o <out>] device-tier-configs-list <package-name> [-p <v>]... [-o <out>] apprecovery add-targeting <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] app-recoveries <package-name> [-p <v>]... [-o <out>] cancel <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] deploy <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] edits apks-addexternallyhosted <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] apks-list <package-name> <edit-id> [-p <v>]... [-o <out>] apks-upload <package-name> <edit-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] bundles-list <package-name> <edit-id> [-p <v>]... [-o <out>] bundles-upload <package-name> <edit-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] commit <package-name> <edit-id> [-p <v>]... [-o <out>] countryavailability-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] delete <package-name> <edit-id> [-p <v>]... deobfuscationfiles-upload <package-name> <edit-id> <apk-version-code> <deobfuscation-file-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] details-get <package-name> <edit-id> [-p <v>]... [-o <out>] details-patch <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] details-update <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-get <package-name> <edit-id> <apk-version-code> <expansion-file-type> [-p <v>]... [-o <out>] expansionfiles-patch <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-update <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-upload <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] get <package-name> <edit-id> [-p <v>]... [-o <out>] images-delete <package-name> <edit-id> <language> <image-type> <image-id> [-p <v>]... images-deleteall <package-name> <edit-id> <language> <image-type> [-p <v>]... [-o <out>] images-list <package-name> <edit-id> <language> <image-type> [-p <v>]... [-o <out>] images-upload <package-name> <edit-id> <language> <image-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] insert <package-name> (-r <kv>)... [-p <v>]... [-o <out>] listings-delete <package-name> <edit-id> <language> [-p <v>]... listings-deleteall <package-name> <edit-id> [-p <v>]... listings-get <package-name> <edit-id> <language> [-p <v>]... [-o <out>] listings-list <package-name> <edit-id> [-p <v>]... [-o <out>] listings-patch <package-name> <edit-id> <language> (-r <kv>)... [-p <v>]... [-o <out>] listings-update <package-name> <edit-id> <language> (-r <kv>)... [-p <v>]... [-o <out>] testers-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] testers-patch <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] testers-update <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] tracks-create <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] tracks-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] tracks-list <package-name> <edit-id> [-p <v>]... [-o <out>] tracks-patch <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] tracks-update <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] validate <package-name> <edit-id> [-p <v>]... [-o <out>] externaltransactions createexternaltransaction <parent> (-r <kv>)... [-p <v>]... [-o <out>] getexternaltransaction <name> [-p <v>]... [-o <out>] refundexternaltransaction <name> (-r <kv>)... [-p <v>]... [-o <out>] generatedapks download <package-name> <version-code> <download-id> [-p <v>]... [-o <out>] list <package-name> <version-code> [-p <v>]... [-o <out>] grants create <parent> (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... patch <name> (-r <kv>)... [-p <v>]... [-o <out>] inappproducts batch-delete <package-name> (-r <kv>)... [-p <v>]... batch-get <package-name> [-p <v>]... [-o <out>] batch-update <package-name> (-r <kv>)... [-p <v>]... [-o <out>] delete <package-name> <sku> [-p <v>]... get <package-name> <sku> [-p <v>]... [-o <out>] insert <package-name> (-r <kv>)... [-p <v>]... [-o <out>] list <package-name> [-p <v>]... [-o <out>] patch <package-name> <sku> (-r <kv>)... [-p <v>]... [-o <out>] update <package-name> <sku> (-r <kv>)... [-p <v>]... [-o <out>] internalappsharingartifacts uploadapk <package-name> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] uploadbundle <package-name> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] monetization convert-region-prices <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-archive <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-activate <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-batch-migrate-prices <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-batch-update-states <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-deactivate <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-delete <package-name> <product-id> <base-plan-id> [-p <v>]... subscriptions-base-plans-migrate-prices <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-activate <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-get <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-update <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-update-states <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-create <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-deactivate <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-delete <package-name> <product-id> <base-plan-id> <offer-id> [-p <v>]... subscriptions-base-plans-offers-get <package-name> <product-id> <base-plan-id> <offer-id> [-p <v>]... [-o <out>] subscriptions-base-plans-offers-list <package-name> <product-id> <base-plan-id> [-p <v>]... [-o <out>] subscriptions-base-plans-offers-patch <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-batch-get <package-name> [-p <v>]... [-o <out>] subscriptions-batch-update <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-delete <package-name> <product-id> [-p <v>]... subscriptions-get <package-name> <product-id> [-p <v>]... [-o <out>] subscriptions-list <package-name> [-p <v>]... [-o <out>] subscriptions-patch <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] orders refund <package-name> <order-id> [-p <v>]... purchases products-acknowledge <package-name> <product-id> <token> (-r <kv>)... [-p <v>]... products-consume <package-name> <product-id> <token> [-p <v>]... products-get <package-name> <product-id> <token> [-p <v>]... [-o <out>] subscriptions-acknowledge <package-name> <subscription-id> <token> (-r <kv>)... [-p <v>]... subscriptions-cancel <package-name> <subscription-id> <token> [-p <v>]... subscriptions-defer <package-name> <subscription-id> <token> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-get <package-name> <subscription-id> <token> [-p <v>]... [-o <out>] subscriptions-refund <package-name> <subscription-id> <token> [-p <v>]... subscriptions-revoke <package-name> <subscription-id> <token> [-p <v>]... subscriptionsv2-get <package-name> <token> [-p <v>]... [-o <out>] subscriptionsv2-revoke <package-name> <token> (-r <kv>)... [-p <v>]... [-o <out>] voidedpurchases-list <package-name> [-p <v>]... [-o <out>] reviews get <package-name> <review-id> [-p <v>]... [-o <out>] list <package-name> [-p <v>]... [-o <out>] reply <package-name> <review-id> (-r <kv>)... [-p <v>]... [-o <out>] systemapks variants-create <package-name> <version-code> (-r <kv>)... [-p <v>]... [-o <out>] variants-download <package-name> <version-code> <variant-id> [-p <v>]... [-o <out>] variants-get <package-name> <version-code> <variant-id> [-p <v>]... [-o <out>] variants-list <package-name> <version-code> [-p <v>]... [-o <out>] users create <parent> (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... list <parent> [-p <v>]... [-o <out>] patch <name> (-r <kv>)... [-p <v>]... [-o <out>] androidpublisher3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with androidpublisher3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/androidpublisher3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/androidpublisher3-secret.json , assuming that the required androidpublisher API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. androidpublisher3 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-androidpublisher3-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Android Publisher API at revision 20240229 . The CLI is at version 5.0.4 . androidpublisher3 [options] applications data-safety <package-name> (-r <kv>)... [-p <v>]... [-o <out>] device-tier-configs-create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] device-tier-configs-get <package-name> <device-tier-config-id> [-p <v>]... [-o <out>] device-tier-configs-list <package-name> [-p <v>]... [-o <out>] apprecovery add-targeting <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] app-recoveries <package-name> [-p <v>]... [-o <out>] cancel <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] deploy <package-name> <app-recovery-id> (-r <kv>)... [-p <v>]... [-o <out>] edits apks-addexternallyhosted <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] apks-list <package-name> <edit-id> [-p <v>]... [-o <out>] apks-upload <package-name> <edit-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] bundles-list <package-name> <edit-id> [-p <v>]... [-o <out>] bundles-upload <package-name> <edit-id> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] commit <package-name> <edit-id> [-p <v>]... [-o <out>] countryavailability-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] delete <package-name> <edit-id> [-p <v>]... deobfuscationfiles-upload <package-name> <edit-id> <apk-version-code> <deobfuscation-file-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] details-get <package-name> <edit-id> [-p <v>]... [-o <out>] details-patch <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] details-update <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-get <package-name> <edit-id> <apk-version-code> <expansion-file-type> [-p <v>]... [-o <out>] expansionfiles-patch <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-update <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-r <kv>)... [-p <v>]... [-o <out>] expansionfiles-upload <package-name> <edit-id> <apk-version-code> <expansion-file-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] get <package-name> <edit-id> [-p <v>]... [-o <out>] images-delete <package-name> <edit-id> <language> <image-type> <image-id> [-p <v>]... images-deleteall <package-name> <edit-id> <language> <image-type> [-p <v>]... [-o <out>] images-list <package-name> <edit-id> <language> <image-type> [-p <v>]... [-o <out>] images-upload <package-name> <edit-id> <language> <image-type> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] insert <package-name> (-r <kv>)... [-p <v>]... [-o <out>] listings-delete <package-name> <edit-id> <language> [-p <v>]... listings-deleteall <package-name> <edit-id> [-p <v>]... listings-get <package-name> <edit-id> <language> [-p <v>]... [-o <out>] listings-list <package-name> <edit-id> [-p <v>]... [-o <out>] listings-patch <package-name> <edit-id> <language> (-r <kv>)... [-p <v>]... [-o <out>] listings-update <package-name> <edit-id> <language> (-r <kv>)... [-p <v>]... [-o <out>] testers-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] testers-patch <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] testers-update <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] tracks-create <package-name> <edit-id> (-r <kv>)... [-p <v>]... [-o <out>] tracks-get <package-name> <edit-id> <track> [-p <v>]... [-o <out>] tracks-list <package-name> <edit-id> [-p <v>]... [-o <out>] tracks-patch <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] tracks-update <package-name> <edit-id> <track> (-r <kv>)... [-p <v>]... [-o <out>] validate <package-name> <edit-id> [-p <v>]... [-o <out>] externaltransactions createexternaltransaction <parent> (-r <kv>)... [-p <v>]... [-o <out>] getexternaltransaction <name> [-p <v>]... [-o <out>] refundexternaltransaction <name> (-r <kv>)... [-p <v>]... [-o <out>] generatedapks download <package-name> <version-code> <download-id> [-p <v>]... [-o <out>] list <package-name> <version-code> [-p <v>]... [-o <out>] grants create <parent> (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... patch <name> (-r <kv>)... [-p <v>]... [-o <out>] inappproducts batch-delete <package-name> (-r <kv>)... [-p <v>]... batch-get <package-name> [-p <v>]... [-o <out>] batch-update <package-name> (-r <kv>)... [-p <v>]... [-o <out>] delete <package-name> <sku> [-p <v>]... get <package-name> <sku> [-p <v>]... [-o <out>] insert <package-name> (-r <kv>)... [-p <v>]... [-o <out>] list <package-name> [-p <v>]... [-o <out>] patch <package-name> <sku> (-r <kv>)... [-p <v>]... [-o <out>] update <package-name> <sku> (-r <kv>)... [-p <v>]... [-o <out>] internalappsharingartifacts uploadapk <package-name> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] uploadbundle <package-name> (-u simple -f <file> [-m <mime>]) [-p <v>]... [-o <out>] monetization convert-region-prices <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-archive <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-activate <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-batch-migrate-prices <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-batch-update-states <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-deactivate <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-delete <package-name> <product-id> <base-plan-id> [-p <v>]... subscriptions-base-plans-migrate-prices <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-activate <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-get <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-update <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-batch-update-states <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-create <package-name> <product-id> <base-plan-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-deactivate <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-base-plans-offers-delete <package-name> <product-id> <base-plan-id> <offer-id> [-p <v>]... subscriptions-base-plans-offers-get <package-name> <product-id> <base-plan-id> <offer-id> [-p <v>]... [-o <out>] subscriptions-base-plans-offers-list <package-name> <product-id> <base-plan-id> [-p <v>]... [-o <out>] subscriptions-base-plans-offers-patch <package-name> <product-id> <base-plan-id> <offer-id> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-batch-get <package-name> [-p <v>]... [-o <out>] subscriptions-batch-update <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-create <package-name> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-delete <package-name> <product-id> [-p <v>]... subscriptions-get <package-name> <product-id> [-p <v>]... [-o <out>] subscriptions-list <package-name> [-p <v>]... [-o <out>] subscriptions-patch <package-name> <product-id> (-r <kv>)... [-p <v>]... [-o <out>] orders refund <package-name> <order-id> [-p <v>]... purchases products-acknowledge <package-name> <product-id> <token> (-r <kv>)... [-p <v>]... products-consume <package-name> <product-id> <token> [-p <v>]... products-get <package-name> <product-id> <token> [-p <v>]... [-o <out>] subscriptions-acknowledge <package-name> <subscription-id> <token> (-r <kv>)... [-p <v>]... subscriptions-cancel <package-name> <subscription-id> <token> [-p <v>]... subscriptions-defer <package-name> <subscription-id> <token> (-r <kv>)... [-p <v>]... [-o <out>] subscriptions-get <package-name> <subscription-id> <token> [-p <v>]... [-o <out>] subscriptions-refund <package-name> <subscription-id> <token> [-p <v>]... subscriptions-revoke <package-name> <subscription-id> <token> [-p <v>]... subscriptionsv2-get <package-name> <token> [-p <v>]... [-o <out>] subscriptionsv2-revoke <package-name> <token> (-r <kv>)... [-p <v>]... [-o <out>] voidedpurchases-list <package-name> [-p <v>]... [-o <out>] reviews get <package-name> <review-id> [-p <v>]... [-o <out>] list <package-name> [-p <v>]... [-o <out>] reply <package-name> <review-id> (-r <kv>)... [-p <v>]... [-o <out>] systemapks variants-create <package-name> <version-code> (-r <kv>)... [-p <v>]... [-o <out>] variants-download <package-name> <version-code> <variant-id> [-p <v>]... [-o <out>] variants-get <package-name> <version-code> <variant-id> [-p <v>]... [-o <out>] variants-list <package-name> <version-code> [-p <v>]... [-o <out>] users create <parent> (-r <kv>)... [-p <v>]... [-o <out>] delete <name> [-p <v>]... list <parent> [-p <v>]... [-o <out>] patch <name> (-r <kv>)... [-p <v>]... [-o <out>] androidpublisher3 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with androidpublisher3- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/androidpublisher3-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/androidpublisher3-secret.json , assuming that the required androidpublisher API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. androidpublisher3 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"applications_data-safety/","text":"Writes the Safety Labels declaration of an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications data-safety ... Required Scalar Argument <package-name> (string) Required. Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SafetyLabelsUpdateRequest: safety-labels: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . safety-labels=et Required. Contents of the CSV file containing Data Safety responses. For the format of this file, see the Help Center documentation at https://support.google.com/googleplay/android-developer/answer/10787469?#zippy=%2Cunderstand-the-csv-format To download an up to date template, follow the steps at https://support.google.com/googleplay/android-developer/answer/10787469?#zippy=%2Cexport-to-a-csv-file About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Data Safety"},{"location":"applications_data-safety/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications data-safety ...","title":"Scopes"},{"location":"applications_data-safety/#required-scalar-argument","text":"<package-name> (string) Required. Package name of the app.","title":"Required Scalar Argument"},{"location":"applications_data-safety/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SafetyLabelsUpdateRequest: safety-labels: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . safety-labels=et Required. Contents of the CSV file containing Data Safety responses. For the format of this file, see the Help Center documentation at https://support.google.com/googleplay/android-developer/answer/10787469?#zippy=%2Cunderstand-the-csv-format To download an up to date template, follow the steps at https://support.google.com/googleplay/android-developer/answer/10787469?#zippy=%2Cexport-to-a-csv-file","title":"Required Request Value"},{"location":"applications_data-safety/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"applications_data-safety/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"applications_data-safety/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"applications_device-tier-configs-create/","text":"Creates a new device tier config for an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-create ... Required Scalar Argument <package-name> (string) Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeviceTierConfig: device-tier-config-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . device-tier-config-id=magna Output only. The device tier config ID. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-unknown-devices=boolean Whether the service should accept device IDs that are unknown to Play's device catalog. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Device Tier Configs Create"},{"location":"applications_device-tier-configs-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-create ...","title":"Scopes"},{"location":"applications_device-tier-configs-create/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"applications_device-tier-configs-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeviceTierConfig: device-tier-config-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . device-tier-config-id=magna Output only. The device tier config ID.","title":"Required Request Value"},{"location":"applications_device-tier-configs-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"applications_device-tier-configs-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"applications_device-tier-configs-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-unknown-devices=boolean Whether the service should accept device IDs that are unknown to Play's device catalog.","title":"Optional Method Properties"},{"location":"applications_device-tier-configs-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"applications_device-tier-configs-get/","text":"Returns a particular device tier config. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <device-tier-config-id> (string) Required. Id of an existing device tier config. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Device Tier Configs Get"},{"location":"applications_device-tier-configs-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-get ...","title":"Scopes"},{"location":"applications_device-tier-configs-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <device-tier-config-id> (string) Required. Id of an existing device tier config.","title":"Required Scalar Arguments"},{"location":"applications_device-tier-configs-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"applications_device-tier-configs-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"applications_device-tier-configs-list/","text":"Returns created device tier configs, ordered by descending creation time. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-list ... Required Scalar Argument <package-name> (string) Package name of the app. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time. -p page-token=string A page token, received from a previous ListDeviceTierConfigs call. Provide this to retrieve the subsequent page. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Device Tier Configs List"},{"location":"applications_device-tier-configs-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> applications device-tier-configs-list ...","title":"Scopes"},{"location":"applications_device-tier-configs-list/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"applications_device-tier-configs-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"applications_device-tier-configs-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time. -p page-token=string A page token, received from a previous ListDeviceTierConfigs call. Provide this to retrieve the subsequent page.","title":"Optional Method Properties"},{"location":"applications_device-tier-configs-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"apprecovery_add-targeting/","text":"Incrementally update targeting for a recovery action. Note that only the criteria selected during the creation of recovery action can be expanded. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery add-targeting ... Required Scalar Arguments <package-name> (string) Required. Package name of the app for which recovery action is to be updated. <app-recovery-id> (string) Required. ID corresponding to the app recovery action. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetingRequest: targeting-update: all-users: is-all-users-requested: boolean android-sdks: sdk-levels: [string] regions: region-code: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .targeting-update.all-users is-all-users-requested=true Required. Set to true if all set of users are needed. ..android-sdks sdk-levels=voluptua. Android api levels of devices targeted by recovery action. See https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels for different api levels in android. Each invocation of this argument appends the given value to the array. ..regions region-code=at Regions targeted by the recovery action. Region codes are ISO 3166 Alpha-2 country codes. For example, US stands for United States of America. See https://www.iso.org/iso-3166-country-codes.html for the complete list of country codes. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Add Targeting"},{"location":"apprecovery_add-targeting/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery add-targeting ...","title":"Scopes"},{"location":"apprecovery_add-targeting/#required-scalar-arguments","text":"<package-name> (string) Required. Package name of the app for which recovery action is to be updated. <app-recovery-id> (string) Required. ID corresponding to the app recovery action.","title":"Required Scalar Arguments"},{"location":"apprecovery_add-targeting/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AddTargetingRequest: targeting-update: all-users: is-all-users-requested: boolean android-sdks: sdk-levels: [string] regions: region-code: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .targeting-update.all-users is-all-users-requested=true Required. Set to true if all set of users are needed. ..android-sdks sdk-levels=voluptua. Android api levels of devices targeted by recovery action. See https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels for different api levels in android. Each invocation of this argument appends the given value to the array. ..regions region-code=at Regions targeted by the recovery action. Region codes are ISO 3166 Alpha-2 country codes. For example, US stands for United States of America. See https://www.iso.org/iso-3166-country-codes.html for the complete list of country codes. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"apprecovery_add-targeting/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"apprecovery_add-targeting/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"apprecovery_add-targeting/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"apprecovery_app-recoveries/","text":"List all app recovery action resources associated with a particular package name and app version. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery app-recoveries ... Required Scalar Argument <package-name> (string) Required. Package name of the app for which list of recovery actions is requested. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p version-code=string Required. Version code targeted by the list of recovery actions. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"App Recoveries"},{"location":"apprecovery_app-recoveries/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery app-recoveries ...","title":"Scopes"},{"location":"apprecovery_app-recoveries/#required-scalar-argument","text":"<package-name> (string) Required. Package name of the app for which list of recovery actions is requested.","title":"Required Scalar Argument"},{"location":"apprecovery_app-recoveries/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"apprecovery_app-recoveries/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p version-code=string Required. Version code targeted by the list of recovery actions.","title":"Optional Method Properties"},{"location":"apprecovery_app-recoveries/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"apprecovery_cancel/","text":"Cancel an already executing app recovery action. Note that this action changes status of the recovery action to CANCELED. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery cancel ... Required Scalar Arguments <package-name> (string) Required. Package name of the app for which recovery action cancellation is requested. <app-recovery-id> (string) Required. ID corresponding to the app recovery action. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelAppRecoveryRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Cancel"},{"location":"apprecovery_cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery cancel ...","title":"Scopes"},{"location":"apprecovery_cancel/#required-scalar-arguments","text":"<package-name> (string) Required. Package name of the app for which recovery action cancellation is requested. <app-recovery-id> (string) Required. ID corresponding to the app recovery action.","title":"Required Scalar Arguments"},{"location":"apprecovery_cancel/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CancelAppRecoveryRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"apprecovery_cancel/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"apprecovery_cancel/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"apprecovery_cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"apprecovery_create/","text":"Create an app recovery action with recovery status as DRAFT. Note that this action does not execute the recovery action. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery create ... Required Scalar Argument <package-name> (string) Required. Package name of the app on which recovery action is performed. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateDraftAppRecoveryRequest: remote-in-app-update: is-remote-in-app-update-requested: boolean targeting: all-users: is-all-users-requested: boolean android-sdks: sdk-levels: [string] regions: region-code: [string] version-list: version-codes: [string] version-range: version-code-end: string version-code-start: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .remote-in-app-update is-remote-in-app-update-requested=false Required. Set to true if Remote In-App Update action type is needed. ..targeting.all-users is-all-users-requested=true Required. Set to true if all set of users are needed. ..android-sdks sdk-levels=amet. Android api levels of devices targeted by recovery action. See https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels for different api levels in android. Each invocation of this argument appends the given value to the array. ..regions region-code=duo Regions targeted by the recovery action. Region codes are ISO 3166 Alpha-2 country codes. For example, US stands for United States of America. See https://www.iso.org/iso-3166-country-codes.html for the complete list of country codes. Each invocation of this argument appends the given value to the array. ..version-list version-codes=ipsum List of app version codes. Each invocation of this argument appends the given value to the array. ..version-range version-code-end=gubergren Highest app version in the range, inclusive. version-code-start=lorem Lowest app version in the range, inclusive. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create"},{"location":"apprecovery_create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery create ...","title":"Scopes"},{"location":"apprecovery_create/#required-scalar-argument","text":"<package-name> (string) Required. Package name of the app on which recovery action is performed.","title":"Required Scalar Argument"},{"location":"apprecovery_create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: CreateDraftAppRecoveryRequest: remote-in-app-update: is-remote-in-app-update-requested: boolean targeting: all-users: is-all-users-requested: boolean android-sdks: sdk-levels: [string] regions: region-code: [string] version-list: version-codes: [string] version-range: version-code-end: string version-code-start: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .remote-in-app-update is-remote-in-app-update-requested=false Required. Set to true if Remote In-App Update action type is needed. ..targeting.all-users is-all-users-requested=true Required. Set to true if all set of users are needed. ..android-sdks sdk-levels=amet. Android api levels of devices targeted by recovery action. See https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels for different api levels in android. Each invocation of this argument appends the given value to the array. ..regions region-code=duo Regions targeted by the recovery action. Region codes are ISO 3166 Alpha-2 country codes. For example, US stands for United States of America. See https://www.iso.org/iso-3166-country-codes.html for the complete list of country codes. Each invocation of this argument appends the given value to the array. ..version-list version-codes=ipsum List of app version codes. Each invocation of this argument appends the given value to the array. ..version-range version-code-end=gubergren Highest app version in the range, inclusive. version-code-start=lorem Lowest app version in the range, inclusive.","title":"Required Request Value"},{"location":"apprecovery_create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"apprecovery_create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"apprecovery_create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"apprecovery_deploy/","text":"Deploy an already created app recovery action with recovery status DRAFT. Note that this action activates the recovery action for all targeted users and changes its status to ACTIVE. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery deploy ... Required Scalar Arguments <package-name> (string) Required. Package name of the app for which recovery action is deployed. <app-recovery-id> (string) Required. ID corresponding to the app recovery action to deploy. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeployAppRecoveryRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deploy"},{"location":"apprecovery_deploy/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> apprecovery deploy ...","title":"Scopes"},{"location":"apprecovery_deploy/#required-scalar-arguments","text":"<package-name> (string) Required. Package name of the app for which recovery action is deployed. <app-recovery-id> (string) Required. ID corresponding to the app recovery action to deploy.","title":"Required Scalar Arguments"},{"location":"apprecovery_deploy/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeployAppRecoveryRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"apprecovery_deploy/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"apprecovery_deploy/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"apprecovery_deploy/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_apks-addexternallyhosted/","text":"Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-addexternallyhosted ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ApksAddExternallyHostedRequest: externally-hosted-apk: application-label: string certificate-base64s: [string] externally-hosted-url: string file-sha1-base64: string file-sha256-base64: string file-size: string icon-base64: string maximum-sdk: integer minimum-sdk: integer native-codes: [string] package-name: string uses-features: [string] version-code: integer version-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .externally-hosted-apk application-label=gubergren The application label. certificate-base64s=eos A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array. Each invocation of this argument appends the given value to the array. externally-hosted-url=dolor The URL at which the APK is hosted. This must be an https URL. file-sha1-base64=ea The sha1 checksum of this APK, represented as a base64 encoded byte array. file-sha256-base64=ipsum The sha256 checksum of this APK, represented as a base64 encoded byte array. file-size=invidunt The file size in bytes of this APK. icon-base64=amet The icon image from the APK, as a base64 encoded byte array. maximum-sdk=81 The maximum SDK supported by this APK (optional). minimum-sdk=51 The minimum SDK targeted by this APK. native-codes=sed The native code environments supported by this APK (optional). Each invocation of this argument appends the given value to the array. package-name=ut The package name. uses-features=gubergren The features required by this APK (optional). Each invocation of this argument appends the given value to the array. version-code=85 The version code of this APK. version-name=est The version name of this APK. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Apks Addexternallyhosted"},{"location":"edits_apks-addexternallyhosted/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-addexternallyhosted ...","title":"Scopes"},{"location":"edits_apks-addexternallyhosted/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_apks-addexternallyhosted/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ApksAddExternallyHostedRequest: externally-hosted-apk: application-label: string certificate-base64s: [string] externally-hosted-url: string file-sha1-base64: string file-sha256-base64: string file-size: string icon-base64: string maximum-sdk: integer minimum-sdk: integer native-codes: [string] package-name: string uses-features: [string] version-code: integer version-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .externally-hosted-apk application-label=gubergren The application label. certificate-base64s=eos A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array. Each invocation of this argument appends the given value to the array. externally-hosted-url=dolor The URL at which the APK is hosted. This must be an https URL. file-sha1-base64=ea The sha1 checksum of this APK, represented as a base64 encoded byte array. file-sha256-base64=ipsum The sha256 checksum of this APK, represented as a base64 encoded byte array. file-size=invidunt The file size in bytes of this APK. icon-base64=amet The icon image from the APK, as a base64 encoded byte array. maximum-sdk=81 The maximum SDK supported by this APK (optional). minimum-sdk=51 The minimum SDK targeted by this APK. native-codes=sed The native code environments supported by this APK (optional). Each invocation of this argument appends the given value to the array. package-name=ut The package name. uses-features=gubergren The features required by this APK (optional). Each invocation of this argument appends the given value to the array. version-code=85 The version code of this APK. version-name=est The version name of this APK.","title":"Required Request Value"},{"location":"edits_apks-addexternallyhosted/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_apks-addexternallyhosted/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_apks-addexternallyhosted/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_apks-list/","text":"Lists all current APKs of the app and edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Apks List"},{"location":"edits_apks-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-list ...","title":"Scopes"},{"location":"edits_apks-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_apks-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_apks-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_apks-upload/","text":"Uploads an APK and adds to the current edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-upload ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Apks Upload"},{"location":"edits_apks-upload/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits apks-upload ...","title":"Scopes"},{"location":"edits_apks-upload/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_apks-upload/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"edits_apks-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_apks-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_bundles-list/","text":"Lists all current Android App Bundles of the app and edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits bundles-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Bundles List"},{"location":"edits_bundles-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits bundles-list ...","title":"Scopes"},{"location":"edits_bundles-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_bundles-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_bundles-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_bundles-upload/","text":"Uploads a new Android App Bundle to this edit. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See Timeouts and Errors for an example in java. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits bundles-upload ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ack-bundle-installation-warning=boolean Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB). -p device-tier-config-id=string Device tier config (DTC) to be used for generating deliverables (APKs). Contains id of the DTC or \"LATEST\" for last uploaded DTC. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Bundles Upload"},{"location":"edits_bundles-upload/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits bundles-upload ...","title":"Scopes"},{"location":"edits_bundles-upload/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_bundles-upload/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"edits_bundles-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_bundles-upload/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ack-bundle-installation-warning=boolean Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB). -p device-tier-config-id=string Device tier config (DTC) to be used for generating deliverables (APKs). Contains id of the DTC or \"LATEST\" for last uploaded DTC.","title":"Optional Method Properties"},{"location":"edits_bundles-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_commit/","text":"Commits an app edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits commit ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p changes-not-sent-for-review=boolean Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Commit"},{"location":"edits_commit/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits commit ...","title":"Scopes"},{"location":"edits_commit/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_commit/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_commit/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p changes-not-sent-for-review=boolean Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review.","title":"Optional Method Properties"},{"location":"edits_commit/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_countryavailability-get/","text":"Gets country availability. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits countryavailability-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to read from. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Countryavailability Get"},{"location":"edits_countryavailability-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits countryavailability-get ...","title":"Scopes"},{"location":"edits_countryavailability-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to read from.","title":"Required Scalar Arguments"},{"location":"edits_countryavailability-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_countryavailability-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_delete/","text":"Deletes an app edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits delete ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"edits_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits delete ...","title":"Scopes"},{"location":"edits_delete/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_deobfuscationfiles-upload/","text":"Uploads a new deobfuscation file and attaches to the specified APK. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits deobfuscationfiles-upload ... Required Scalar Arguments <package-name> (string) Unique identifier for the Android app. <edit-id> (string) Unique identifier for this edit. <apk-version-code> (integer) The version code of the APK whose Deobfuscation File is being uploaded. <deobfuscation-file-type> (string) The type of the deobfuscation file. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Deobfuscationfiles Upload"},{"location":"edits_deobfuscationfiles-upload/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits deobfuscationfiles-upload ...","title":"Scopes"},{"location":"edits_deobfuscationfiles-upload/#required-scalar-arguments","text":"<package-name> (string) Unique identifier for the Android app. <edit-id> (string) Unique identifier for this edit. <apk-version-code> (integer) The version code of the APK whose Deobfuscation File is being uploaded. <deobfuscation-file-type> (string) The type of the deobfuscation file.","title":"Required Scalar Arguments"},{"location":"edits_deobfuscationfiles-upload/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"edits_deobfuscationfiles-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_deobfuscationfiles-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_details-get/","text":"Gets details of an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Details Get"},{"location":"edits_details-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-get ...","title":"Scopes"},{"location":"edits_details-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_details-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_details-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_details-patch/","text":"Patches details of an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppDetails: contact-email: string contact-phone: string contact-website: string default-language: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . contact-email=ipsum The user-visible support email for this app. contact-phone=ipsum The user-visible support telephone number for this app. contact-website=est The user-visible website for this app. default-language=gubergren Default language code, in BCP 47 format (eg \"en-US\"). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Details Patch"},{"location":"edits_details-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-patch ...","title":"Scopes"},{"location":"edits_details-patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_details-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppDetails: contact-email: string contact-phone: string contact-website: string default-language: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . contact-email=ipsum The user-visible support email for this app. contact-phone=ipsum The user-visible support telephone number for this app. contact-website=est The user-visible website for this app. default-language=gubergren Default language code, in BCP 47 format (eg \"en-US\").","title":"Required Request Value"},{"location":"edits_details-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_details-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_details-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_details-update/","text":"Updates details of an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-update ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppDetails: contact-email: string contact-phone: string contact-website: string default-language: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . contact-email=ea The user-visible support email for this app. contact-phone=dolor The user-visible support telephone number for this app. contact-website=lorem The user-visible website for this app. default-language=eos Default language code, in BCP 47 format (eg \"en-US\"). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Details Update"},{"location":"edits_details-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits details-update ...","title":"Scopes"},{"location":"edits_details-update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_details-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppDetails: contact-email: string contact-phone: string contact-website: string default-language: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . contact-email=ea The user-visible support email for this app. contact-phone=dolor The user-visible support telephone number for this app. contact-website=lorem The user-visible website for this app. default-language=eos Default language code, in BCP 47 format (eg \"en-US\").","title":"Required Request Value"},{"location":"edits_details-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_details-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_details-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_expansionfiles-get/","text":"Fetches the expansion file configuration for the specified APK. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the file configuration which is being read or modified. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Expansionfiles Get"},{"location":"edits_expansionfiles-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-get ...","title":"Scopes"},{"location":"edits_expansionfiles-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the file configuration which is being read or modified.","title":"Required Scalar Arguments"},{"location":"edits_expansionfiles-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_expansionfiles-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_expansionfiles-patch/","text":"Patches the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the expansion file configuration which is being updated. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExpansionFile: file-size: string references-version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-size=labore If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes. references-version=58 If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Expansionfiles Patch"},{"location":"edits_expansionfiles-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-patch ...","title":"Scopes"},{"location":"edits_expansionfiles-patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the expansion file configuration which is being updated.","title":"Required Scalar Arguments"},{"location":"edits_expansionfiles-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExpansionFile: file-size: string references-version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-size=labore If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes. references-version=58 If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.","title":"Required Request Value"},{"location":"edits_expansionfiles-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_expansionfiles-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_expansionfiles-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_expansionfiles-update/","text":"Updates the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-update ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the file configuration which is being read or modified. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExpansionFile: file-size: string references-version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-size=duo If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes. references-version=21 If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Expansionfiles Update"},{"location":"edits_expansionfiles-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-update ...","title":"Scopes"},{"location":"edits_expansionfiles-update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the file configuration which is being read or modified.","title":"Required Scalar Arguments"},{"location":"edits_expansionfiles-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExpansionFile: file-size: string references-version: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . file-size=duo If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes. references-version=21 If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.","title":"Required Request Value"},{"location":"edits_expansionfiles-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_expansionfiles-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_expansionfiles-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_expansionfiles-upload/","text":"Uploads a new expansion file and attaches to the specified APK. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-upload ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the expansion file configuration which is being updated. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Expansionfiles Upload"},{"location":"edits_expansionfiles-upload/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits expansionfiles-upload ...","title":"Scopes"},{"location":"edits_expansionfiles-upload/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <apk-version-code> (integer) The version code of the APK whose expansion file configuration is being read or modified. <expansion-file-type> (string) The file type of the expansion file configuration which is being updated.","title":"Required Scalar Arguments"},{"location":"edits_expansionfiles-upload/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"edits_expansionfiles-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_expansionfiles-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_get/","text":"Gets an app edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"edits_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits get ...","title":"Scopes"},{"location":"edits_get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_images-delete/","text":"Deletes the image (specified by id) from the edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-delete ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). <image-type> (string) Type of the Image. <image-id> (string) Unique identifier an image within the set of images attached to this edit. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Images Delete"},{"location":"edits_images-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-delete ...","title":"Scopes"},{"location":"edits_images-delete/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). <image-type> (string) Type of the Image. <image-id> (string) Unique identifier an image within the set of images attached to this edit.","title":"Required Scalar Arguments"},{"location":"edits_images-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_images-deleteall/","text":"Deletes all images for the specified language and image type. Returns an empty response if no images are found. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-deleteall ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op. <image-type> (string) Type of the Image. Providing an image type that refers to no images is a no-op. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Images Deleteall"},{"location":"edits_images-deleteall/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-deleteall ...","title":"Scopes"},{"location":"edits_images-deleteall/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op. <image-type> (string) Type of the Image. Providing an image type that refers to no images is a no-op.","title":"Required Scalar Arguments"},{"location":"edits_images-deleteall/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_images-deleteall/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_images-list/","text":"Lists all images. The response may be empty. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language. <image-type> (string) Type of the Image. Providing an image type that refers to no images will return an empty response. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Images List"},{"location":"edits_images-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-list ...","title":"Scopes"},{"location":"edits_images-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language. <image-type> (string) Type of the Image. Providing an image type that refers to no images will return an empty response.","title":"Required Scalar Arguments"},{"location":"edits_images-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_images-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_images-upload/","text":"Uploads an image of the specified language and image type, and adds to the edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-upload ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op. <image-type> (string) Type of the Image. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Images Upload"},{"location":"edits_images-upload/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits images-upload ...","title":"Scopes"},{"location":"edits_images-upload/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op. <image-type> (string) Type of the Image.","title":"Required Scalar Arguments"},{"location":"edits_images-upload/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"edits_images-upload/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_images-upload/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_insert/","text":"Creates a new edit for an app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits insert ... Required Scalar Argument <package-name> (string) Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppEdit: expiry-time-seconds: string id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . expiry-time-seconds=no Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use. id=stet Output only. Identifier of the edit. Can be used in subsequent API calls. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"edits_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits insert ...","title":"Scopes"},{"location":"edits_insert/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"edits_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: AppEdit: expiry-time-seconds: string id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . expiry-time-seconds=no Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use. id=stet Output only. Identifier of the edit. Can be used in subsequent API calls.","title":"Required Request Value"},{"location":"edits_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-delete/","text":"Deletes a localized store listing. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-delete ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings Delete"},{"location":"edits_listings-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-delete ...","title":"Scopes"},{"location":"edits_listings-delete/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).","title":"Required Scalar Arguments"},{"location":"edits_listings-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-deleteall/","text":"Deletes all store listings. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-deleteall ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings Deleteall"},{"location":"edits_listings-deleteall/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-deleteall ...","title":"Scopes"},{"location":"edits_listings-deleteall/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_listings-deleteall/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-get/","text":"Gets a localized store listing. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings Get"},{"location":"edits_listings-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-get ...","title":"Scopes"},{"location":"edits_listings-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).","title":"Required Scalar Arguments"},{"location":"edits_listings-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_listings-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-list/","text":"Lists all localized store listings. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings List"},{"location":"edits_listings-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-list ...","title":"Scopes"},{"location":"edits_listings-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_listings-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_listings-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-patch/","text":"Patches a localized store listing. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Listing: full-description: string language: string short-description: string title: string video: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . full-description=kasd Full description of the app. language=et Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). short-description=sed Short description of the app. title=et Localized title of the app. video=et URL of a promotional YouTube video for the app. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings Patch"},{"location":"edits_listings-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-patch ...","title":"Scopes"},{"location":"edits_listings-patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).","title":"Required Scalar Arguments"},{"location":"edits_listings-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Listing: full-description: string language: string short-description: string title: string video: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . full-description=kasd Full description of the app. language=et Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). short-description=sed Short description of the app. title=et Localized title of the app. video=et URL of a promotional YouTube video for the app.","title":"Required Request Value"},{"location":"edits_listings-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_listings-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_listings-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_listings-update/","text":"Creates or updates a localized store listing. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-update ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Listing: full-description: string language: string short-description: string title: string video: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . full-description=vero Full description of the app. language=erat Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). short-description=sed Short description of the app. title=duo Localized title of the app. video=dolore URL of a promotional YouTube video for the app. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Listings Update"},{"location":"edits_listings-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits listings-update ...","title":"Scopes"},{"location":"edits_listings-update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <language> (string) Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).","title":"Required Scalar Arguments"},{"location":"edits_listings-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Listing: full-description: string language: string short-description: string title: string video: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . full-description=vero Full description of the app. language=erat Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). short-description=sed Short description of the app. title=duo Localized title of the app. video=dolore URL of a promotional YouTube video for the app.","title":"Required Request Value"},{"location":"edits_listings-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_listings-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_listings-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_testers-get/","text":"Gets testers. Note: Testers resource does not support email lists. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to read from. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Testers Get"},{"location":"edits_testers-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-get ...","title":"Scopes"},{"location":"edits_testers-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to read from.","title":"Required Scalar Arguments"},{"location":"edits_testers-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_testers-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_testers-patch/","text":"Patches testers. Note: Testers resource does not support email lists. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Testers: google-groups: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . google-groups=et All testing Google Groups, as email addresses. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Testers Patch"},{"location":"edits_testers-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-patch ...","title":"Scopes"},{"location":"edits_testers-patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to update.","title":"Required Scalar Arguments"},{"location":"edits_testers-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Testers: google-groups: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . google-groups=et All testing Google Groups, as email addresses. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"edits_testers-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_testers-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_testers-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_testers-update/","text":"Updates testers. Note: Testers resource does not support email lists. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-update ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to update. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Testers: google-groups: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . google-groups=voluptua. All testing Google Groups, as email addresses. Each invocation of this argument appends the given value to the array. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Testers Update"},{"location":"edits_testers-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits testers-update ...","title":"Scopes"},{"location":"edits_testers-update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) The track to update.","title":"Required Scalar Arguments"},{"location":"edits_testers-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Testers: google-groups: [string] can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . google-groups=voluptua. All testing Google Groups, as email addresses. Each invocation of this argument appends the given value to the array.","title":"Required Request Value"},{"location":"edits_testers-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_testers-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_testers-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_tracks-create/","text":"Creates a new track. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-create ... Required Scalar Arguments <package-name> (string) Required. Package name of the app. <edit-id> (string) Required. Identifier of the edit. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TrackConfig: form-factor: string track: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . form-factor=amet. Required. Form factor of the new track. Defaults to the default track. track=consetetur Required. Identifier of the new track. For default tracks, this field consists of the track alias only. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . This prefix must match the value of the form_factor field, if it is not a default track. More on track name type=diam Required. Type of the new track. Currently, the only supported value is closedTesting. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Tracks Create"},{"location":"edits_tracks-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-create ...","title":"Scopes"},{"location":"edits_tracks-create/#required-scalar-arguments","text":"<package-name> (string) Required. Package name of the app. <edit-id> (string) Required. Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_tracks-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: TrackConfig: form-factor: string track: string type: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . form-factor=amet. Required. Form factor of the new track. Defaults to the default track. track=consetetur Required. Identifier of the new track. For default tracks, this field consists of the track alias only. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . This prefix must match the value of the form_factor field, if it is not a default track. More on track name type=diam Required. Type of the new track. Currently, the only supported value is closedTesting.","title":"Required Request Value"},{"location":"edits_tracks-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_tracks-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_tracks-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_tracks-get/","text":"Gets a track. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Tracks Get"},{"location":"edits_tracks-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-get ...","title":"Scopes"},{"location":"edits_tracks-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name","title":"Required Scalar Arguments"},{"location":"edits_tracks-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_tracks-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_tracks-list/","text":"Lists all tracks. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Tracks List"},{"location":"edits_tracks-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-list ...","title":"Scopes"},{"location":"edits_tracks-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_tracks-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_tracks-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_tracks-patch/","text":"Patches a track. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Track: track: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . track=dolor Identifier of the track. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . More on track name About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Tracks Patch"},{"location":"edits_tracks-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-patch ...","title":"Scopes"},{"location":"edits_tracks-patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name","title":"Required Scalar Arguments"},{"location":"edits_tracks-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Track: track: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . track=dolor Identifier of the track. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . More on track name","title":"Required Request Value"},{"location":"edits_tracks-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_tracks-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_tracks-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_tracks-update/","text":"Updates a track. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-update ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Track: track: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . track=et Identifier of the track. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . More on track name About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Tracks Update"},{"location":"edits_tracks-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits tracks-update ...","title":"Scopes"},{"location":"edits_tracks-update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. <track> (string) Identifier of the track. More on track name","title":"Required Scalar Arguments"},{"location":"edits_tracks-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Track: track: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . track=et Identifier of the track. Form factor tracks have a special prefix as an identifier, for example wear:production , automotive:production . More on track name","title":"Required Request Value"},{"location":"edits_tracks-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"edits_tracks-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_tracks-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"edits_validate/","text":"Validates an app edit. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits validate ... Required Scalar Arguments <package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Validate"},{"location":"edits_validate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> edits validate ...","title":"Scopes"},{"location":"edits_validate/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <edit-id> (string) Identifier of the edit.","title":"Required Scalar Arguments"},{"location":"edits_validate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"edits_validate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"externaltransactions_createexternaltransaction/","text":"Creates a new external transaction. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions createexternaltransaction ... Required Scalar Argument <parent> (string) Required. The parent resource where this external transaction will be created. Format: applications/{package_name} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExternalTransaction: create-time: string current-pre-tax-amount: currency: string price-micros: string current-tax-amount: currency: string price-micros: string external-transaction-id: string one-time-transaction: external-transaction-token: string original-pre-tax-amount: currency: string price-micros: string original-tax-amount: currency: string price-micros: string package-name: string recurring-transaction: external-subscription: subscription-type: string external-transaction-token: string initial-external-transaction-id: string migrated-transaction-program: string transaction-state: string transaction-time: string user-tax-address: administrative-area: string region-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The time when this transaction was created. This is the time when Google was notified of the transaction. current-pre-tax-amount currency=sadipscing 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=stet Price in 1/million of the currency base unit, represented as a string. ..current-tax-amount currency=dolor 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=duo Price in 1/million of the currency base unit, represented as a string. .. external-transaction-id=vero Output only. The id of this transaction. All transaction ids under the same package name must be unique. Set when creating the external transaction. one-time-transaction external-transaction-token=vero Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched. ..original-pre-tax-amount currency=invidunt 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=stet Price in 1/million of the currency base unit, represented as a string. ..original-tax-amount currency=vero 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=elitr Price in 1/million of the currency base unit, represented as a string. .. package-name=lorem Output only. The resource name of the external transaction. The package name of the application the inapp products were sold (for example, 'com.some.app'). recurring-transaction.external-subscription subscription-type=diam Required. The type of the external subscription. .. external-transaction-token=no Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched. Required only for the initial purchase. initial-external-transaction-id=ipsum The external transaction id of the first transaction of this recurring series of transactions. For example, for a subscription this would be the transaction id of the first payment. Required when creating recurring external transactions. migrated-transaction-program=accusam Input only. Provided during the call to Create. Must only be used when migrating a subscription from manual monthly reporting to automated reporting. .. transaction-state=takimata Output only. The current state of the transaction. transaction-time=consetetur Required. The time when the transaction was completed. user-tax-address administrative-area=voluptua. Optional. Top-level administrative subdivision of the country/region. Only required for transactions in India. Valid values are \"ANDAMAN AND NICOBAR ISLANDS\", \"ANDHRA PRADESH\", \"ARUNACHAL PRADESH\", \"ASSAM\", \"BIHAR\", \"CHANDIGARH\", \"CHHATTISGARH\", \"DADRA AND NAGAR HAVELI\", \"DADRA AND NAGAR HAVELI AND DAMAN AND DIU\", \"DAMAN AND DIU\", \"DELHI\", \"GOA\", \"GUJARAT\", \"HARYANA\", \"HIMACHAL PRADESH\", \"JAMMU AND KASHMIR\", \"JHARKHAND\", \"KARNATAKA\", \"KERALA\", \"LADAKH\", \"LAKSHADWEEP\", \"MADHYA PRADESH\", \"MAHARASHTRA\", \"MANIPUR\", \"MEGHALAYA\", \"MIZORAM\", \"NAGALAND\", \"ODISHA\", \"PUDUCHERRY\", \"PUNJAB\", \"RAJASTHAN\", \"SIKKIM\", \"TAMIL NADU\", \"TELANGANA\", \"TRIPURA\", \"UTTAR PRADESH\", \"UTTARAKHAND\", and \"WEST BENGAL\". region-code=et Required. Two letter region code based on ISO-3166-1 Alpha-2 (UN region codes). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-transaction-id=string Required. The id to use for the external transaction. Must be unique across all other transactions for the app. This value should be 1-63 characters and valid characters are /a-z0-9_-/. Do not use this field to store any Personally Identifiable Information (PII) such as emails. Attempting to store PII in this field may result in requests being blocked. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Createexternaltransaction"},{"location":"externaltransactions_createexternaltransaction/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions createexternaltransaction ...","title":"Scopes"},{"location":"externaltransactions_createexternaltransaction/#required-scalar-argument","text":"<parent> (string) Required. The parent resource where this external transaction will be created. Format: applications/{package_name}","title":"Required Scalar Argument"},{"location":"externaltransactions_createexternaltransaction/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ExternalTransaction: create-time: string current-pre-tax-amount: currency: string price-micros: string current-tax-amount: currency: string price-micros: string external-transaction-id: string one-time-transaction: external-transaction-token: string original-pre-tax-amount: currency: string price-micros: string original-tax-amount: currency: string price-micros: string package-name: string recurring-transaction: external-subscription: subscription-type: string external-transaction-token: string initial-external-transaction-id: string migrated-transaction-program: string transaction-state: string transaction-time: string user-tax-address: administrative-area: string region-code: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . create-time=et Output only. The time when this transaction was created. This is the time when Google was notified of the transaction. current-pre-tax-amount currency=sadipscing 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=stet Price in 1/million of the currency base unit, represented as a string. ..current-tax-amount currency=dolor 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=duo Price in 1/million of the currency base unit, represented as a string. .. external-transaction-id=vero Output only. The id of this transaction. All transaction ids under the same package name must be unique. Set when creating the external transaction. one-time-transaction external-transaction-token=vero Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched. ..original-pre-tax-amount currency=invidunt 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=stet Price in 1/million of the currency base unit, represented as a string. ..original-tax-amount currency=vero 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=elitr Price in 1/million of the currency base unit, represented as a string. .. package-name=lorem Output only. The resource name of the external transaction. The package name of the application the inapp products were sold (for example, 'com.some.app'). recurring-transaction.external-subscription subscription-type=diam Required. The type of the external subscription. .. external-transaction-token=no Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched. Required only for the initial purchase. initial-external-transaction-id=ipsum The external transaction id of the first transaction of this recurring series of transactions. For example, for a subscription this would be the transaction id of the first payment. Required when creating recurring external transactions. migrated-transaction-program=accusam Input only. Provided during the call to Create. Must only be used when migrating a subscription from manual monthly reporting to automated reporting. .. transaction-state=takimata Output only. The current state of the transaction. transaction-time=consetetur Required. The time when the transaction was completed. user-tax-address administrative-area=voluptua. Optional. Top-level administrative subdivision of the country/region. Only required for transactions in India. Valid values are \"ANDAMAN AND NICOBAR ISLANDS\", \"ANDHRA PRADESH\", \"ARUNACHAL PRADESH\", \"ASSAM\", \"BIHAR\", \"CHANDIGARH\", \"CHHATTISGARH\", \"DADRA AND NAGAR HAVELI\", \"DADRA AND NAGAR HAVELI AND DAMAN AND DIU\", \"DAMAN AND DIU\", \"DELHI\", \"GOA\", \"GUJARAT\", \"HARYANA\", \"HIMACHAL PRADESH\", \"JAMMU AND KASHMIR\", \"JHARKHAND\", \"KARNATAKA\", \"KERALA\", \"LADAKH\", \"LAKSHADWEEP\", \"MADHYA PRADESH\", \"MAHARASHTRA\", \"MANIPUR\", \"MEGHALAYA\", \"MIZORAM\", \"NAGALAND\", \"ODISHA\", \"PUDUCHERRY\", \"PUNJAB\", \"RAJASTHAN\", \"SIKKIM\", \"TAMIL NADU\", \"TELANGANA\", \"TRIPURA\", \"UTTAR PRADESH\", \"UTTARAKHAND\", and \"WEST BENGAL\". region-code=et Required. Two letter region code based on ISO-3166-1 Alpha-2 (UN region codes).","title":"Required Request Value"},{"location":"externaltransactions_createexternaltransaction/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"externaltransactions_createexternaltransaction/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"externaltransactions_createexternaltransaction/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p external-transaction-id=string Required. The id to use for the external transaction. Must be unique across all other transactions for the app. This value should be 1-63 characters and valid characters are /a-z0-9_-/. Do not use this field to store any Personally Identifiable Information (PII) such as emails. Attempting to store PII in this field may result in requests being blocked.","title":"Optional Method Properties"},{"location":"externaltransactions_createexternaltransaction/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"externaltransactions_getexternaltransaction/","text":"Gets an existing external transaction. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions getexternaltransaction ... Required Scalar Argument <name> (string) Required. The name of the external transaction to retrieve. Format: applications/{package_name}/externalTransactions/{external_transaction} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Getexternaltransaction"},{"location":"externaltransactions_getexternaltransaction/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions getexternaltransaction ...","title":"Scopes"},{"location":"externaltransactions_getexternaltransaction/#required-scalar-argument","text":"<name> (string) Required. The name of the external transaction to retrieve. Format: applications/{package_name}/externalTransactions/{external_transaction}","title":"Required Scalar Argument"},{"location":"externaltransactions_getexternaltransaction/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"externaltransactions_getexternaltransaction/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"externaltransactions_refundexternaltransaction/","text":"Refunds or partially refunds an existing external transaction. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions refundexternaltransaction ... Required Scalar Argument <name> (string) Required. The name of the external transaction that will be refunded. Format: applications/{package_name}/externalTransactions/{external_transaction} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RefundExternalTransactionRequest: partial-refund: refund-id: string refund-pre-tax-amount: currency: string price-micros: string refund-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .partial-refund refund-id=erat Required. A unique id distinguishing this partial refund. If the refund is successful, subsequent refunds with the same id will fail. Must be unique across refunds for one individual transaction. refund-pre-tax-amount currency=consetetur 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=amet. Price in 1/million of the currency base unit, represented as a string. ... refund-time=sed Required. The time that the transaction was refunded. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Refundexternaltransaction"},{"location":"externaltransactions_refundexternaltransaction/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> externaltransactions refundexternaltransaction ...","title":"Scopes"},{"location":"externaltransactions_refundexternaltransaction/#required-scalar-argument","text":"<name> (string) Required. The name of the external transaction that will be refunded. Format: applications/{package_name}/externalTransactions/{external_transaction}","title":"Required Scalar Argument"},{"location":"externaltransactions_refundexternaltransaction/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RefundExternalTransactionRequest: partial-refund: refund-id: string refund-pre-tax-amount: currency: string price-micros: string refund-time: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .partial-refund refund-id=erat Required. A unique id distinguishing this partial refund. If the refund is successful, subsequent refunds with the same id will fail. Must be unique across refunds for one individual transaction. refund-pre-tax-amount currency=consetetur 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=amet. Price in 1/million of the currency base unit, represented as a string. ... refund-time=sed Required. The time that the transaction was refunded.","title":"Required Request Value"},{"location":"externaltransactions_refundexternaltransaction/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"externaltransactions_refundexternaltransaction/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"externaltransactions_refundexternaltransaction/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"generatedapks_download/","text":"Downloads a single signed APK generated from an app bundle. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> generatedapks download ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (integer) Version code of the app bundle. <download-id> (string) Download ID, which uniquely identifies the APK to download. Can be obtained from the response of generatedapks.list method. Optional Output Flags The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Download"},{"location":"generatedapks_download/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> generatedapks download ...","title":"Scopes"},{"location":"generatedapks_download/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (integer) Version code of the app bundle. <download-id> (string) Download ID, which uniquely identifies the APK to download. Can be obtained from the response of generatedapks.list method.","title":"Required Scalar Arguments"},{"location":"generatedapks_download/#optional-output-flags","text":"The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"generatedapks_download/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"generatedapks_list/","text":"Returns download metadata for all APKs that were generated from a given app bundle. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> generatedapks list ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (integer) Version code of the app bundle. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"generatedapks_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> generatedapks list ...","title":"Scopes"},{"location":"generatedapks_list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (integer) Version code of the app bundle.","title":"Required Scalar Arguments"},{"location":"generatedapks_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"generatedapks_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"grants_create/","text":"Grant access for a user to the given package. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants create ... Required Scalar Argument <parent> (string) Required. The user which needs permission. Format: developers/{developer}/users/{user} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Grant: app-level-permissions: [string] name: string package-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-level-permissions=takimata The permissions granted to the user for this app. Each invocation of this argument appends the given value to the array. name=dolores Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name. package-name=gubergren Immutable. The package name of the app. This will be empty for draft apps. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create"},{"location":"grants_create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants create ...","title":"Scopes"},{"location":"grants_create/#required-scalar-argument","text":"<parent> (string) Required. The user which needs permission. Format: developers/{developer}/users/{user}","title":"Required Scalar Argument"},{"location":"grants_create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Grant: app-level-permissions: [string] name: string package-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-level-permissions=takimata The permissions granted to the user for this app. Each invocation of this argument appends the given value to the array. name=dolores Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name. package-name=gubergren Immutable. The package name of the app. This will be empty for draft apps.","title":"Required Request Value"},{"location":"grants_create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"grants_create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"grants_create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"grants_delete/","text":"Removes all access for the user to the given package or developer account. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants delete ... Required Scalar Argument <name> (string) Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name} Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"grants_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants delete ...","title":"Scopes"},{"location":"grants_delete/#required-scalar-argument","text":"<name> (string) Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name}","title":"Required Scalar Argument"},{"location":"grants_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"grants_patch/","text":"Updates access for the user to the given package. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants patch ... Required Scalar Argument <name> (string) Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Grant: app-level-permissions: [string] name: string package-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-level-permissions=et The permissions granted to the user for this app. Each invocation of this argument appends the given value to the array. name=accusam Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name. package-name=voluptua. Immutable. The package name of the app. This will be empty for draft apps. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Optional. The list of fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"grants_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> grants patch ...","title":"Scopes"},{"location":"grants_patch/#required-scalar-argument","text":"<name> (string) Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.","title":"Required Scalar Argument"},{"location":"grants_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Grant: app-level-permissions: [string] name: string package-name: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . app-level-permissions=et The permissions granted to the user for this app. Each invocation of this argument appends the given value to the array. name=accusam Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name. package-name=voluptua. Immutable. The package name of the app. This will be empty for draft apps.","title":"Required Request Value"},{"location":"grants_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"grants_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"grants_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Optional. The list of fields to be updated.","title":"Optional Method Properties"},{"location":"grants_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_batch-delete/","text":"Deletes in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should not be used to delete subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-delete ... Required Scalar Argument <package-name> (string) Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InappproductsBatchDeleteRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Delete"},{"location":"inappproducts_batch-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-delete ...","title":"Scopes"},{"location":"inappproducts_batch-delete/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"inappproducts_batch-delete/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InappproductsBatchDeleteRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"inappproducts_batch-delete/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inappproducts_batch-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_batch-get/","text":"Reads multiple in-app products, which can be managed products or subscriptions. This method should not be used to retrieve subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-get ... Required Scalar Argument <package-name> (string) Package name of the app. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p sku=string Unique identifier for the in-app products. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Get"},{"location":"inappproducts_batch-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-get ...","title":"Scopes"},{"location":"inappproducts_batch-get/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"inappproducts_batch-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_batch-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p sku=string Unique identifier for the in-app products.","title":"Optional Method Properties"},{"location":"inappproducts_batch-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_batch-update/","text":"Updates or inserts one or more in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should no longer be used to update subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-update ... Required Scalar Argument <package-name> (string) Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InappproductsBatchUpdateRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Batch Update"},{"location":"inappproducts_batch-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts batch-update ...","title":"Scopes"},{"location":"inappproducts_batch-update/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"inappproducts_batch-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InappproductsBatchUpdateRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"inappproducts_batch-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inappproducts_batch-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_batch-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_delete/","text":"Deletes an in-app product (a managed product or a subscription). This method should no longer be used to delete subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts delete ... Required Scalar Arguments <package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"inappproducts_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts delete ...","title":"Scopes"},{"location":"inappproducts_delete/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product.","title":"Required Scalar Arguments"},{"location":"inappproducts_delete/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.","title":"Optional Method Properties"},{"location":"inappproducts_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_get/","text":"Gets an in-app product, which can be a managed product or a subscription. This method should no longer be used to retrieve subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts get ... Required Scalar Arguments <package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"inappproducts_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts get ...","title":"Scopes"},{"location":"inappproducts_get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product.","title":"Required Scalar Arguments"},{"location":"inappproducts_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_insert/","text":"Creates an in-app product (a managed product or a subscription). This method should no longer be used to create subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts insert ... Required Scalar Argument <package-name> (string) Package name of the app. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=dolore Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=dolore 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=dolore Price in 1/million of the currency base unit, represented as a string. .. grace-period=voluptua. Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=amet. Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=lorem Package name of the parent app. purchase-type=invidunt The type of the product, e.g. a recurring subscription. sku=no Stock-keeping-unit (SKU) of the product, unique within an app. status=est The status of the product, e.g. whether it's active. subscription-period=at Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=sed Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=et Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"inappproducts_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts insert ...","title":"Scopes"},{"location":"inappproducts_insert/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"inappproducts_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=dolore Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=dolore 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=dolore Price in 1/million of the currency base unit, represented as a string. .. grace-period=voluptua. Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=amet. Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=lorem Package name of the parent app. purchase-type=invidunt The type of the product, e.g. a recurring subscription. sku=no Stock-keeping-unit (SKU) of the product, unique within an app. status=est The status of the product, e.g. whether it's active. subscription-period=at Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=sed Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=et Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).","title":"Required Request Value"},{"location":"inappproducts_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inappproducts_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_insert/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.","title":"Optional Method Properties"},{"location":"inappproducts_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_list/","text":"Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field tokenPagination.nextPageToken will be set and the caller should provide its value as a token request parameter to retrieve the next page. This method should no longer be used to retrieve subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts list ... Required Scalar Argument <package-name> (string) Package name of the app. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Deprecated and ignored. The page size is determined by the server. -p start-index=integer Deprecated and ignored. Set the token parameter to retrieve the next page. -p token=string Pagination token. If empty, list starts at the first product. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"inappproducts_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts list ...","title":"Scopes"},{"location":"inappproducts_list/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"inappproducts_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer Deprecated and ignored. The page size is determined by the server. -p start-index=integer Deprecated and ignored. Set the token parameter to retrieve the next page. -p token=string Pagination token. If empty, list starts at the first product.","title":"Optional Method Properties"},{"location":"inappproducts_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_patch/","text":"Patches an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts patch ... Required Scalar Arguments <package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=tempor Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=aliquyam 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=ipsum Price in 1/million of the currency base unit, represented as a string. .. grace-period=et Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=sanctus Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=est Package name of the parent app. purchase-type=sed The type of the product, e.g. a recurring subscription. sku=diam Stock-keeping-unit (SKU) of the product, unique within an app. status=dolores The status of the product, e.g. whether it's active. subscription-period=dolores Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=et Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=no Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"inappproducts_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts patch ...","title":"Scopes"},{"location":"inappproducts_patch/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product.","title":"Required Scalar Arguments"},{"location":"inappproducts_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=tempor Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=aliquyam 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=ipsum Price in 1/million of the currency base unit, represented as a string. .. grace-period=et Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=sanctus Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=est Package name of the parent app. purchase-type=sed The type of the product, e.g. a recurring subscription. sku=diam Stock-keeping-unit (SKU) of the product, unique within an app. status=dolores The status of the product, e.g. whether it's active. subscription-period=dolores Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=et Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=no Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).","title":"Required Request Value"},{"location":"inappproducts_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inappproducts_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.","title":"Optional Method Properties"},{"location":"inappproducts_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"inappproducts_update/","text":"Updates an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See this article for more information. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts update ... Required Scalar Arguments <package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=et Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=elitr 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=sed Price in 1/million of the currency base unit, represented as a string. .. grace-period=no Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=nonumy Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=sadipscing Package name of the parent app. purchase-type=aliquyam The type of the product, e.g. a recurring subscription. sku=dolores Stock-keeping-unit (SKU) of the product, unique within an app. status=sadipscing The status of the product, e.g. whether it's active. subscription-period=erat Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=aliquyam Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=est Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days). About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"inappproducts_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> inappproducts update ...","title":"Scopes"},{"location":"inappproducts_update/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <sku> (string) Unique identifier for the in-app product.","title":"Required Scalar Arguments"},{"location":"inappproducts_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: InAppProduct: default-language: string default-price: currency: string price-micros: string grace-period: string managed-product-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean package-name: string purchase-type: string sku: string status: string subscription-period: string subscription-taxes-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean trial-period: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . default-language=et Default language of the localized data, as defined by BCP-47. e.g. \"en-US\". default-price currency=elitr 3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java price-micros=sed Price in 1/million of the currency base unit, represented as a string. .. grace-period=no Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days). managed-product-taxes-and-compliance-settings eea-withdrawal-right-type=nonumy Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=false Whether this in-app product is declared as a product representing a tokenized digital asset. .. package-name=sadipscing Package name of the parent app. purchase-type=aliquyam The type of the product, e.g. a recurring subscription. sku=dolores Stock-keeping-unit (SKU) of the product, unique within an app. status=sadipscing The status of the product, e.g. whether it's active. subscription-period=erat Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year). subscription-taxes-and-compliance-settings eea-withdrawal-right-type=aliquyam Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset. .. trial-period=est Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).","title":"Required Request Value"},{"location":"inappproducts_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"inappproducts_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"inappproducts_update/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created. -p auto-convert-missing-prices=boolean If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.","title":"Optional Method Properties"},{"location":"inappproducts_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"internalappsharingartifacts_uploadapk/","text":"Uploads an APK to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See Timeouts and Errors for an example in java. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> internalappsharingartifacts uploadapk ... Required Scalar Argument <package-name> (string) Package name of the app. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Uploadapk"},{"location":"internalappsharingartifacts_uploadapk/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> internalappsharingartifacts uploadapk ...","title":"Scopes"},{"location":"internalappsharingartifacts_uploadapk/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"internalappsharingartifacts_uploadapk/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"internalappsharingartifacts_uploadapk/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"internalappsharingartifacts_uploadapk/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"internalappsharingartifacts_uploadbundle/","text":"Uploads an app bundle to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See Timeouts and Errors for an example in java. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> internalappsharingartifacts uploadbundle ... Required Scalar Argument <package-name> (string) Package name of the app. Required Upload Flags This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Uploadbundle"},{"location":"internalappsharingartifacts_uploadbundle/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> internalappsharingartifacts uploadbundle ...","title":"Scopes"},{"location":"internalappsharingartifacts_uploadbundle/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"internalappsharingartifacts_uploadbundle/#required-upload-flags","text":"This method supports the upload of data, which requires all of the following flags to be set: -u simple simple - Upload media all at once. -f file Path to file to upload. It must be seekable. The following flag may be set: -m mime the mime type, like 'application/octet-stream', which is the default","title":"Required Upload Flags"},{"location":"internalappsharingartifacts_uploadbundle/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"internalappsharingartifacts_uploadbundle/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_convert-region-prices/","text":"Calculates the region prices, using today's exchange rate and country-specific pricing patterns, based on the price in the request for a set of regions. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization convert-region-prices ... Required Scalar Argument <package-name> (string) Required. The app package name. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConvertRegionPricesRequest: price: currency-code: string nanos: integer units: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .price currency-code=et The three-letter currency code defined in ISO 4217. nanos=91 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=consetetur The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Convert Region Prices"},{"location":"monetization_convert-region-prices/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization convert-region-prices ...","title":"Scopes"},{"location":"monetization_convert-region-prices/#required-scalar-argument","text":"<package-name> (string) Required. The app package name.","title":"Required Scalar Argument"},{"location":"monetization_convert-region-prices/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConvertRegionPricesRequest: price: currency-code: string nanos: integer units: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .price currency-code=et The three-letter currency code defined in ISO 4217. nanos=91 Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If units is positive, nanos must be positive or zero. If units is zero, nanos can be positive, zero, or negative. If units is negative, nanos must be negative or zero. For example $-1.75 is represented as units =-1 and nanos =-750,000,000. units=consetetur The whole units of the amount. For example if currencyCode is &#34;USD&#34; , then 1 unit is one US dollar.","title":"Required Request Value"},{"location":"monetization_convert-region-prices/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_convert-region-prices/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_convert-region-prices/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-archive/","text":"Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-archive ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the app of the subscription to delete. <product-id> (string) Required. The unique product ID of the subscription to delete. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ArchiveSubscriptionRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Archive"},{"location":"monetization_subscriptions-archive/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-archive ...","title":"Scopes"},{"location":"monetization_subscriptions-archive/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the app of the subscription to delete. <product-id> (string) Required. The unique product ID of the subscription to delete.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-archive/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ArchiveSubscriptionRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-archive/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-archive/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-archive/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-activate/","text":"Activates a base plan. Once activated, base plans will be available to new subscribers. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-activate ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the base plan to activate. <product-id> (string) Required. The parent subscription (ID) of the base plan to activate. <base-plan-id> (string) Required. The unique base plan ID of the base plan to activate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateBasePlanRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=consetetur Required. The unique base plan ID of the base plan to activate. latency-tolerance=stet Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=est Required. The parent app (package name) of the base plan to activate. product-id=aliquyam Required. The parent subscription (ID) of the base plan to activate. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Activate"},{"location":"monetization_subscriptions-base-plans-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-activate ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-activate/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the base plan to activate. <product-id> (string) Required. The parent subscription (ID) of the base plan to activate. <base-plan-id> (string) Required. The unique base plan ID of the base plan to activate.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateBasePlanRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=consetetur Required. The unique base plan ID of the base plan to activate. latency-tolerance=stet Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=est Required. The parent app (package name) of the base plan to activate. product-id=aliquyam Required. The parent subscription (ID) of the base plan to activate.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/","text":"Batch variant of the MigrateBasePlanPrices endpoint. Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-batch-migrate-prices ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) for which the subscriptions should be created or updated. Must be equal to the package_name field on all the Subscription resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this batch update spans multiple subscriptions, set this field to \"-\". Must be set. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchMigrateBasePlanPricesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Batch Migrate Prices"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-batch-migrate-prices ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be created or updated. Must be equal to the package_name field on all the Subscription resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this batch update spans multiple subscriptions, set this field to \"-\". Must be set.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchMigrateBasePlanPricesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-batch-migrate-prices/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-batch-update-states/","text":"Activates or deactivates base plans across one or multiple subscriptions. Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-batch-update-states ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the updated base plans. <product-id> (string) Required. The product ID of the parent subscription, if all updated base plans belong to the same subscription. If this batch update spans multiple subscriptions, set this field to \"-\". Must be set. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateBasePlanStatesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Batch Update States"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-batch-update-states ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the updated base plans. <product-id> (string) Required. The product ID of the parent subscription, if all updated base plans belong to the same subscription. If this batch update spans multiple subscriptions, set this field to \"-\". Must be set.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateBasePlanStatesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-batch-update-states/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-deactivate/","text":"Deactivates a base plan. Once deactivated, the base plan will become unavailable to new subscribers, but existing subscribers will maintain their subscription Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-deactivate ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the base plan to deactivate. <product-id> (string) Required. The parent subscription (ID) of the base plan to deactivate. <base-plan-id> (string) Required. The unique base plan ID of the base plan to deactivate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateBasePlanRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=elitr Required. The unique base plan ID of the base plan to deactivate. latency-tolerance=duo Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=diam Required. The parent app (package name) of the base plan to deactivate. product-id=est Required. The parent subscription (ID) of the base plan to deactivate. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Deactivate"},{"location":"monetization_subscriptions-base-plans-deactivate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-deactivate ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-deactivate/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the base plan to deactivate. <product-id> (string) Required. The parent subscription (ID) of the base plan to deactivate. <base-plan-id> (string) Required. The unique base plan ID of the base plan to deactivate.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-deactivate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateBasePlanRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=elitr Required. The unique base plan ID of the base plan to deactivate. latency-tolerance=duo Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=diam Required. The parent app (package name) of the base plan to deactivate. product-id=est Required. The parent subscription (ID) of the base plan to deactivate.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-deactivate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-deactivate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-deactivate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-delete/","text":"Deletes a base plan. Can only be done for draft base plans. This action is irreversible. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-delete ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the base plan to delete. <product-id> (string) Required. The parent subscription (ID) of the base plan to delete. <base-plan-id> (string) Required. The unique offer ID of the base plan to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Delete"},{"location":"monetization_subscriptions-base-plans-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-delete ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-delete/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the base plan to delete. <product-id> (string) Required. The parent subscription (ID) of the base plan to delete. <base-plan-id> (string) Required. The unique offer ID of the base plan to delete.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-migrate-prices/","text":"Migrates subscribers who are receiving an historical subscription price to the currently-offered price for the specified region. Requests will cause price change notifications to be sent to users who are currently receiving an historical price older than the supplied timestamp. Subscribers who do not agree to the new price will have their subscription ended at the next renewal. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-migrate-prices ... Required Scalar Arguments <package-name> (string) Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource. <product-id> (string) Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource. <base-plan-id> (string) Required. The unique base plan ID of the base plan to update prices on. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MigrateBasePlanPricesRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string regions-version: version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=sit Required. The unique base plan ID of the base plan to update prices on. latency-tolerance=sed Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=eos Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource. product-id=lorem Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource. regions-version version=ea Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Migrate Prices"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-migrate-prices ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#required-scalar-arguments","text":"<package-name> (string) Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource. <product-id> (string) Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource. <base-plan-id> (string) Required. The unique base plan ID of the base plan to update prices on.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: MigrateBasePlanPricesRequest: base-plan-id: string latency-tolerance: string package-name: string product-id: string regions-version: version: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=sit Required. The unique base plan ID of the base plan to update prices on. latency-tolerance=sed Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. package-name=eos Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource. product-id=lorem Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource. regions-version version=ea Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-migrate-prices/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-activate/","text":"Activates a subscription offer. Once activated, subscription offers will be available to new subscribers. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-activate ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the offer to activate. <product-id> (string) Required. The parent subscription (ID) of the offer to activate. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to activate. <offer-id> (string) Required. The unique offer ID of the offer to activate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateSubscriptionOfferRequest: base-plan-id: string latency-tolerance: string offer-id: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=stet Required. The parent base plan (ID) of the offer to activate. latency-tolerance=dolores Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. offer-id=eos Required. The unique offer ID of the offer to activate. package-name=et Required. The parent app (package name) of the offer to activate. product-id=sea Required. The parent subscription (ID) of the offer to activate. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Activate"},{"location":"monetization_subscriptions-base-plans-offers-activate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-activate ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-activate/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the offer to activate. <product-id> (string) Required. The parent subscription (ID) of the offer to activate. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to activate. <offer-id> (string) Required. The unique offer ID of the offer to activate.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-activate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ActivateSubscriptionOfferRequest: base-plan-id: string latency-tolerance: string offer-id: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=stet Required. The parent base plan (ID) of the offer to activate. latency-tolerance=dolores Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. offer-id=eos Required. The unique offer ID of the offer to activate. package-name=et Required. The parent app (package name) of the offer to activate. product-id=sea Required. The parent subscription (ID) of the offer to activate.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-activate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-activate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-activate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/","text":"Reads one or more subscription offers. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-get ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) for which the subscriptions should be created or updated. Must be equal to the package_name field on all the requests. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read offers from multiple base plans. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetSubscriptionOffersRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Batch Get"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-get ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be created or updated. Must be equal to the package_name field on all the requests. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read offers from multiple base plans.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchGetSubscriptionOffersRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-batch-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/","text":"Updates a batch of subscription offer states. Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-update-states ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the updated subscription offers. Must be equal to the package_name field on all the updated SubscriptionOffer resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be updated. May be specified as '-' to update offers from multiple base plans. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionOfferStatesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Batch Update States"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-update-states ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the updated subscription offers. Must be equal to the package_name field on all the updated SubscriptionOffer resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be updated. May be specified as '-' to update offers from multiple base plans.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionOfferStatesRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-batch-update-states/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/","text":"Updates a batch of subscription offers. Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-update ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the updated subscription offers. Must be equal to the package_name field on all the updated SubscriptionOffer resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be updated. May be specified as '-' to update offers from multiple base plans. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionOffersRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Batch Update"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-batch-update ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the updated subscription offers. Must be equal to the package_name field on all the updated SubscriptionOffer resources. <product-id> (string) Required. The product ID of the parent subscription, if all updated offers belong to the same subscription. If this request spans multiple subscriptions, set this field to \"-\". Must be set. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be updated. May be specified as '-' to update offers from multiple base plans.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionOffersRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-batch-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-create/","text":"Creates a new subscription offer. Only auto-renewing base plans can have subscription offers. The offer state will be DRAFT until it is activated. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-create ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) for which the offer should be created. Must be equal to the package_name field on the Subscription resource. <product-id> (string) Required. The parent subscription (ID) for which the offer should be created. Must be equal to the product_id field on the SubscriptionOffer resource. <base-plan-id> (string) Required. The parent base plan (ID) for which the offer should be created. Must be equal to the base_plan_id field on the SubscriptionOffer resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionOffer: base-plan-id: string offer-id: string other-regions-config: other-regions-new-subscriber-availability: boolean package-name: string product-id: string state: string targeting: acquisition-rule: scope: specific-subscription-in-app: string upgrade-rule: billing-period-duration: string once-per-user: boolean scope: specific-subscription-in-app: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=et Required. Immutable. The ID of the base plan to which this offer is an extension. offer-id=at Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan. other-regions-config other-regions-new-subscriber-availability=false Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false. .. package-name=eirmod Required. Immutable. The package name of the app the parent subscription belongs to. product-id=lorem Required. Immutable. The ID of the parent subscription this offer belongs to. state=accusam Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active. targeting.acquisition-rule.scope specific-subscription-in-app=amet The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. ...upgrade-rule billing-period-duration=erat The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched. once-per-user=true Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer. scope specific-subscription-in-app=erat The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p offer-id=string Required. The ID to use for the offer. For the requirements on this format, see the documentation of the offer_id field on the SubscriptionOffer resource. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Create"},{"location":"monetization_subscriptions-base-plans-offers-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-create ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-create/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) for which the offer should be created. Must be equal to the package_name field on the Subscription resource. <product-id> (string) Required. The parent subscription (ID) for which the offer should be created. Must be equal to the product_id field on the SubscriptionOffer resource. <base-plan-id> (string) Required. The parent base plan (ID) for which the offer should be created. Must be equal to the base_plan_id field on the SubscriptionOffer resource.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionOffer: base-plan-id: string offer-id: string other-regions-config: other-regions-new-subscriber-availability: boolean package-name: string product-id: string state: string targeting: acquisition-rule: scope: specific-subscription-in-app: string upgrade-rule: billing-period-duration: string once-per-user: boolean scope: specific-subscription-in-app: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=et Required. Immutable. The ID of the base plan to which this offer is an extension. offer-id=at Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan. other-regions-config other-regions-new-subscriber-availability=false Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false. .. package-name=eirmod Required. Immutable. The package name of the app the parent subscription belongs to. product-id=lorem Required. Immutable. The ID of the parent subscription this offer belongs to. state=accusam Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active. targeting.acquisition-rule.scope specific-subscription-in-app=amet The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. ...upgrade-rule billing-period-duration=erat The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched. once-per-user=true Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer. scope specific-subscription-in-app=erat The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p offer-id=string Required. The ID to use for the offer. For the requirements on this format, see the documentation of the offer_id field on the SubscriptionOffer resource. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-base-plans-offers-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/","text":"Deactivates a subscription offer. Once deactivated, existing subscribers will maintain their subscription, but the offer will become unavailable to new subscribers. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-deactivate ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the offer to deactivate. <product-id> (string) Required. The parent subscription (ID) of the offer to deactivate. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to deactivate. <offer-id> (string) Required. The unique offer ID of the offer to deactivate. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateSubscriptionOfferRequest: base-plan-id: string latency-tolerance: string offer-id: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=accusam Required. The parent base plan (ID) of the offer to deactivate. latency-tolerance=sea Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. offer-id=takimata Required. The unique offer ID of the offer to deactivate. package-name=lorem Required. The parent app (package name) of the offer to deactivate. product-id=et Required. The parent subscription (ID) of the offer to deactivate. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Deactivate"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-deactivate ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the offer to deactivate. <product-id> (string) Required. The parent subscription (ID) of the offer to deactivate. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to deactivate. <offer-id> (string) Required. The unique offer ID of the offer to deactivate.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: DeactivateSubscriptionOfferRequest: base-plan-id: string latency-tolerance: string offer-id: string package-name: string product-id: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=accusam Required. The parent base plan (ID) of the offer to deactivate. latency-tolerance=sea Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. offer-id=takimata Required. The unique offer ID of the offer to deactivate. package-name=lorem Required. The parent app (package name) of the offer to deactivate. product-id=et Required. The parent subscription (ID) of the offer to deactivate.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-deactivate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-delete/","text":"Deletes a subscription offer. Can only be done for draft offers. This action is irreversible. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-delete ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the offer to delete. <product-id> (string) Required. The parent subscription (ID) of the offer to delete. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to delete. <offer-id> (string) Required. The unique offer ID of the offer to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Delete"},{"location":"monetization_subscriptions-base-plans-offers-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-delete ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-delete/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the offer to delete. <product-id> (string) Required. The parent subscription (ID) of the offer to delete. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to delete. <offer-id> (string) Required. The unique offer ID of the offer to delete.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-get/","text":"Reads a single offer Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-get ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the offer to get. <product-id> (string) Required. The parent subscription (ID) of the offer to get. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to get. <offer-id> (string) Required. The unique offer ID of the offer to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Get"},{"location":"monetization_subscriptions-base-plans-offers-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-get ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-get/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the offer to get. <product-id> (string) Required. The parent subscription (ID) of the offer to get. <base-plan-id> (string) Required. The parent base plan (ID) of the offer to get. <offer-id> (string) Required. The unique offer ID of the offer to get.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-list/","text":"Lists all offers under a given subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-list ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) for which the subscriptions should be read. <product-id> (string) Required. The parent subscription (ID) for which the offers should be read. May be specified as '-' to read all offers under an app. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read all offers under a subscription or an app. Must be specified as '-' if product_id is specified as '-'. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string A page token, received from a previous ListSubscriptionsOffers call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSubscriptionOffers must match the call that provided the page token. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers List"},{"location":"monetization_subscriptions-base-plans-offers-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-list ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-list/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be read. <product-id> (string) Required. The parent subscription (ID) for which the offers should be read. May be specified as '-' to read all offers under an app. <base-plan-id> (string) Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read all offers under a subscription or an app. Must be specified as '-' if product_id is specified as '-'.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string A page token, received from a previous ListSubscriptionsOffers call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSubscriptionOffers must match the call that provided the page token.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-base-plans-offers-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-base-plans-offers-patch/","text":"Updates an existing subscription offer. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-patch ... Required Scalar Arguments <package-name> (string) Required. Immutable. The package name of the app the parent subscription belongs to. <product-id> (string) Required. Immutable. The ID of the parent subscription this offer belongs to. <base-plan-id> (string) Required. Immutable. The ID of the base plan to which this offer is an extension. <offer-id> (string) Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionOffer: base-plan-id: string offer-id: string other-regions-config: other-regions-new-subscriber-availability: boolean package-name: string product-id: string state: string targeting: acquisition-rule: scope: specific-subscription-in-app: string upgrade-rule: billing-period-duration: string once-per-user: boolean scope: specific-subscription-in-app: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=at Required. Immutable. The ID of the base plan to which this offer is an extension. offer-id=dolor Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan. other-regions-config other-regions-new-subscriber-availability=true Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false. .. package-name=erat Required. Immutable. The package name of the app the parent subscription belongs to. product-id=sea Required. Immutable. The ID of the parent subscription this offer belongs to. state=nonumy Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active. targeting.acquisition-rule.scope specific-subscription-in-app=et The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. ...upgrade-rule billing-period-duration=gubergren The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched. once-per-user=true Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer. scope specific-subscription-in-app=consetetur The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean Optional. If set to true, and the subscription offer with the given package_name, product_id, base_plan_id and offer_id doesn't exist, an offer will be created. If a new offer is created, update_mask is ignored. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. -p update-mask=string Required. The list of fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Base Plans Offers Patch"},{"location":"monetization_subscriptions-base-plans-offers-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-base-plans-offers-patch ...","title":"Scopes"},{"location":"monetization_subscriptions-base-plans-offers-patch/#required-scalar-arguments","text":"<package-name> (string) Required. Immutable. The package name of the app the parent subscription belongs to. <product-id> (string) Required. Immutable. The ID of the parent subscription this offer belongs to. <base-plan-id> (string) Required. Immutable. The ID of the base plan to which this offer is an extension. <offer-id> (string) Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-base-plans-offers-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionOffer: base-plan-id: string offer-id: string other-regions-config: other-regions-new-subscriber-availability: boolean package-name: string product-id: string state: string targeting: acquisition-rule: scope: specific-subscription-in-app: string upgrade-rule: billing-period-duration: string once-per-user: boolean scope: specific-subscription-in-app: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . base-plan-id=at Required. Immutable. The ID of the base plan to which this offer is an extension. offer-id=dolor Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan. other-regions-config other-regions-new-subscriber-availability=true Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false. .. package-name=erat Required. Immutable. The package name of the app the parent subscription belongs to. product-id=sea Required. Immutable. The ID of the parent subscription this offer belongs to. state=nonumy Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active. targeting.acquisition-rule.scope specific-subscription-in-app=et The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app. ...upgrade-rule billing-period-duration=gubergren The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched. once-per-user=true Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer. scope specific-subscription-in-app=consetetur The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.","title":"Required Request Value"},{"location":"monetization_subscriptions-base-plans-offers-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-base-plans-offers-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-base-plans-offers-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean Optional. If set to true, and the subscription offer with the given package_name, product_id, base_plan_id and offer_id doesn't exist, an offer will be created. If a new offer is created, update_mask is ignored. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. -p update-mask=string Required. The list of fields to be updated.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-base-plans-offers-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-batch-get/","text":"Reads one or more subscriptions. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-batch-get ... Required Scalar Argument <package-name> (string) Required. The parent app (package name) for which the subscriptions should be retrieved. Must be equal to the package_name field on all the requests. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p product-ids=string Required. A list of up to 100 subscription product IDs to retrieve. All the IDs must be different. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Batch Get"},{"location":"monetization_subscriptions-batch-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-batch-get ...","title":"Scopes"},{"location":"monetization_subscriptions-batch-get/#required-scalar-argument","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be retrieved. Must be equal to the package_name field on all the requests.","title":"Required Scalar Argument"},{"location":"monetization_subscriptions-batch-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-batch-get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p product-ids=string Required. A list of up to 100 subscription product IDs to retrieve. All the IDs must be different.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-batch-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-batch-update/","text":"Updates a batch of subscriptions. Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-batch-update ... Required Scalar Argument <package-name> (string) Required. The parent app (package name) for which the subscriptions should be updated. Must be equal to the package_name field on all the Subscription resources. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Batch Update"},{"location":"monetization_subscriptions-batch-update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-batch-update ...","title":"Scopes"},{"location":"monetization_subscriptions-batch-update/#required-scalar-argument","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be updated. Must be equal to the package_name field on all the Subscription resources.","title":"Required Scalar Argument"},{"location":"monetization_subscriptions-batch-update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: BatchUpdateSubscriptionsRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"monetization_subscriptions-batch-update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-batch-update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-batch-update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-create/","text":"Creates a new subscription. Newly added base plans will remain in draft state until activated. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-create ... Required Scalar Argument <package-name> (string) Required. The parent app (package name) for which the subscription should be created. Must be equal to the package_name field on the Subscription resource. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: archived: boolean package-name: string product-id: string tax-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . archived=false Output only. Deprecated: subscription archiving is not supported. package-name=aliquyam Immutable. Package name of the parent app. product-id=eos Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length. tax-and-compliance-settings eea-withdrawal-right-type=at Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p product-id=string Required. The ID to use for the subscription. For the requirements on this format, see the documentation of the product_id field on the Subscription resource. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Create"},{"location":"monetization_subscriptions-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-create ...","title":"Scopes"},{"location":"monetization_subscriptions-create/#required-scalar-argument","text":"<package-name> (string) Required. The parent app (package name) for which the subscription should be created. Must be equal to the package_name field on the Subscription resource.","title":"Required Scalar Argument"},{"location":"monetization_subscriptions-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: archived: boolean package-name: string product-id: string tax-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . archived=false Output only. Deprecated: subscription archiving is not supported. package-name=aliquyam Immutable. Package name of the parent app. product-id=eos Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length. tax-and-compliance-settings eea-withdrawal-right-type=at Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset.","title":"Required Request Value"},{"location":"monetization_subscriptions-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-create/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p product-id=string Required. The ID to use for the subscription. For the requirements on this format, see the documentation of the product_id field on the Subscription resource. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-delete/","text":"Deletes a subscription. A subscription can only be deleted if it has never had a base plan published. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-delete ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the app of the subscription to delete. <product-id> (string) Required. The unique product ID of the subscription to delete. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Delete"},{"location":"monetization_subscriptions-delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-delete ...","title":"Scopes"},{"location":"monetization_subscriptions-delete/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the app of the subscription to delete. <product-id> (string) Required. The unique product ID of the subscription to delete.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-get/","text":"Reads a single subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-get ... Required Scalar Arguments <package-name> (string) Required. The parent app (package name) of the subscription to get. <product-id> (string) Required. The unique product ID of the subscription to get. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Get"},{"location":"monetization_subscriptions-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-get ...","title":"Scopes"},{"location":"monetization_subscriptions-get/#required-scalar-arguments","text":"<package-name> (string) Required. The parent app (package name) of the subscription to get. <product-id> (string) Required. The unique product ID of the subscription to get.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-list/","text":"Lists all subscriptions under a given app. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-list ... Required Scalar Argument <package-name> (string) Required. The parent app (package name) for which the subscriptions should be read. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string A page token, received from a previous ListSubscriptions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSubscriptions must match the call that provided the page token. -p show-archived=boolean Deprecated: subscription archiving is not supported. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions List"},{"location":"monetization_subscriptions-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-list ...","title":"Scopes"},{"location":"monetization_subscriptions-list/#required-scalar-argument","text":"<package-name> (string) Required. The parent app (package name) for which the subscriptions should be read.","title":"Required Scalar Argument"},{"location":"monetization_subscriptions-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. -p page-token=string A page token, received from a previous ListSubscriptions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSubscriptions must match the call that provided the page token. -p show-archived=boolean Deprecated: subscription archiving is not supported.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"monetization_subscriptions-patch/","text":"Updates an existing subscription. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-patch ... Required Scalar Arguments <package-name> (string) Immutable. Package name of the parent app. <product-id> (string) Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: archived: boolean package-name: string product-id: string tax-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . archived=true Output only. Deprecated: subscription archiving is not supported. package-name=dolor Immutable. Package name of the parent app. product-id=aliquyam Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length. tax-and-compliance-settings eea-withdrawal-right-type=no Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean Optional. If set to true, and the subscription with the given package_name and product_id doesn't exist, the subscription will be created. If a new subscription is created, update_mask is ignored. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. -p update-mask=string Required. The list of fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Patch"},{"location":"monetization_subscriptions-patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> monetization subscriptions-patch ...","title":"Scopes"},{"location":"monetization_subscriptions-patch/#required-scalar-arguments","text":"<package-name> (string) Immutable. Package name of the parent app. <product-id> (string) Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length.","title":"Required Scalar Arguments"},{"location":"monetization_subscriptions-patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Subscription: archived: boolean package-name: string product-id: string tax-and-compliance-settings: eea-withdrawal-right-type: string is-tokenized-digital-asset: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . archived=true Output only. Deprecated: subscription archiving is not supported. package-name=dolor Immutable. Package name of the parent app. product-id=aliquyam Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length. tax-and-compliance-settings eea-withdrawal-right-type=no Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the Help Center article for more information. is-tokenized-digital-asset=true Whether this subscription is declared as a product representing a tokenized digital asset.","title":"Required Request Value"},{"location":"monetization_subscriptions-patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"monetization_subscriptions-patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"monetization_subscriptions-patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p allow-missing=boolean Optional. If set to true, and the subscription with the given package_name and product_id doesn't exist, the subscription will be created. If a new subscription is created, update_mask is ignored. -p latency-tolerance=string Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive. -p regions-version-version=string Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in this article . Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02. -p update-mask=string Required. The list of fields to be updated.","title":"Optional Method Properties"},{"location":"monetization_subscriptions-patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"orders_refund/","text":"Refunds a user's subscription or in-app purchase order. Orders older than 3 years cannot be refunded. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> orders refund ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing'). <order-id> (string) The order ID provided to the user when the subscription or in-app order was purchased. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p revoke=boolean Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional). Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Refund"},{"location":"orders_refund/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> orders refund ...","title":"Scopes"},{"location":"orders_refund/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing'). <order-id> (string) The order ID provided to the user when the subscription or in-app order was purchased.","title":"Required Scalar Arguments"},{"location":"orders_refund/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p revoke=boolean Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional).","title":"Optional Method Properties"},{"location":"orders_refund/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_products-acknowledge/","text":"Acknowledges a purchase of an inapp item. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-acknowledge ... Required Scalar Arguments <package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductPurchasesAcknowledgeRequest: developer-payload: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . developer-payload=lorem Payload to attach to the purchase. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Products Acknowledge"},{"location":"purchases_products-acknowledge/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-acknowledge ...","title":"Scopes"},{"location":"purchases_products-acknowledge/#required-scalar-arguments","text":"<package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_products-acknowledge/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ProductPurchasesAcknowledgeRequest: developer-payload: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . developer-payload=lorem Payload to attach to the purchase.","title":"Required Request Value"},{"location":"purchases_products-acknowledge/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"purchases_products-acknowledge/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_products-consume/","text":"Consumes a purchase for an inapp item. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-consume ... Required Scalar Arguments <package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Products Consume"},{"location":"purchases_products-consume/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-consume ...","title":"Scopes"},{"location":"purchases_products-consume/#required-scalar-arguments","text":"<package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_products-consume/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_products-get/","text":"Checks the purchase and consumption status of an inapp item. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-get ... Required Scalar Arguments <package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Products Get"},{"location":"purchases_products-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases products-get ...","title":"Scopes"},{"location":"purchases_products-get/#required-scalar-arguments","text":"<package-name> (string) The package name of the application the inapp product was sold in (for example, 'com.some.thing'). <product-id> (string) The inapp product SKU (for example, 'com.some.thing.inapp1'). <token> (string) The token provided to the user's device when the inapp product was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_products-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_products-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-acknowledge/","text":"Acknowledges a subscription purchase. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-acknowledge ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionPurchasesAcknowledgeRequest: developer-payload: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . developer-payload=accusam Payload to attach to the purchase. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Acknowledge"},{"location":"purchases_subscriptions-acknowledge/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-acknowledge ...","title":"Scopes"},{"location":"purchases_subscriptions-acknowledge/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-acknowledge/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionPurchasesAcknowledgeRequest: developer-payload: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . developer-payload=accusam Payload to attach to the purchase.","title":"Required Request Value"},{"location":"purchases_subscriptions-acknowledge/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"purchases_subscriptions-acknowledge/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-cancel/","text":"Cancels a user's subscription purchase. The subscription remains valid until its expiration time. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-cancel ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Cancel"},{"location":"purchases_subscriptions-cancel/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-cancel ...","title":"Scopes"},{"location":"purchases_subscriptions-cancel/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-cancel/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-defer/","text":"Defers a user's subscription purchase until a specified future expiration time. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-defer ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionPurchasesDeferRequest: deferral-info: desired-expiry-time-millis: string expected-expiry-time-millis: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .deferral-info desired-expiry-time-millis=gubergren The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription. expected-expiry-time-millis=sadipscing The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Defer"},{"location":"purchases_subscriptions-defer/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-defer ...","title":"Scopes"},{"location":"purchases_subscriptions-defer/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-defer/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: SubscriptionPurchasesDeferRequest: deferral-info: desired-expiry-time-millis: string expected-expiry-time-millis: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .deferral-info desired-expiry-time-millis=gubergren The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription. expected-expiry-time-millis=sadipscing The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur.","title":"Required Request Value"},{"location":"purchases_subscriptions-defer/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"purchases_subscriptions-defer/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_subscriptions-defer/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-get/","text":"Checks whether a user's subscription purchase is valid and returns its expiry time. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-get ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Get"},{"location":"purchases_subscriptions-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-get ...","title":"Scopes"},{"location":"purchases_subscriptions-get/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_subscriptions-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-refund/","text":"Refunds a user's subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-refund ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) \"The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Refund"},{"location":"purchases_subscriptions-refund/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-refund ...","title":"Scopes"},{"location":"purchases_subscriptions-refund/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) \"The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-refund/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptions-revoke/","text":"Refunds and immediately revokes a user's subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-revoke ... Required Scalar Arguments <package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptions Revoke"},{"location":"purchases_subscriptions-revoke/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptions-revoke ...","title":"Scopes"},{"location":"purchases_subscriptions-revoke/#required-scalar-arguments","text":"<package-name> (string) The package name of the application for which this subscription was purchased (for example, 'com.some.thing'). <subscription-id> (string) The purchased subscription ID (for example, 'monthly001'). <token> (string) The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptions-revoke/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptionsv2-get/","text":"Get metadata about a subscription Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptionsv2-get ... Required Scalar Arguments <package-name> (string) The package of the application for which this subscription was purchased (for example, 'com.some.thing'). <token> (string) Required. The token provided to the user's device when the subscription was purchased. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptionsv2 Get"},{"location":"purchases_subscriptionsv2-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptionsv2-get ...","title":"Scopes"},{"location":"purchases_subscriptionsv2-get/#required-scalar-arguments","text":"<package-name> (string) The package of the application for which this subscription was purchased (for example, 'com.some.thing'). <token> (string) Required. The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptionsv2-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_subscriptionsv2-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_subscriptionsv2-revoke/","text":"Revoke a subscription purchase for the user. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptionsv2-revoke ... Required Scalar Arguments <package-name> (string) Required. The package of the application for which this subscription was purchased (for example, 'com.some.thing'). <token> (string) Required. The token provided to the user's device when the subscription was purchased. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RevokeSubscriptionPurchaseRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Subscriptionsv2 Revoke"},{"location":"purchases_subscriptionsv2-revoke/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases subscriptionsv2-revoke ...","title":"Scopes"},{"location":"purchases_subscriptionsv2-revoke/#required-scalar-arguments","text":"<package-name> (string) Required. The package of the application for which this subscription was purchased (for example, 'com.some.thing'). <token> (string) Required. The token provided to the user's device when the subscription was purchased.","title":"Required Scalar Arguments"},{"location":"purchases_subscriptionsv2-revoke/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: RevokeSubscriptionPurchaseRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"purchases_subscriptionsv2-revoke/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"purchases_subscriptionsv2-revoke/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_subscriptionsv2-revoke/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"purchases_voidedpurchases-list/","text":"Lists the purchases that were canceled, refunded or charged-back. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases voidedpurchases-list ... Required Scalar Argument <package-name> (string) The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing'). Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-time=string The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response. -p max-results=integer Defines how many results the list operation should return. The default number depends on the resource collection. -p start-index=integer Defines the index of the first element to return. This can only be used if indexed paging is enabled. -p start-time=string The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response. -p token=string Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled. -p type=integer The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Voidedpurchases List"},{"location":"purchases_voidedpurchases-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> purchases voidedpurchases-list ...","title":"Scopes"},{"location":"purchases_voidedpurchases-list/#required-scalar-argument","text":"<package-name> (string) The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing').","title":"Required Scalar Argument"},{"location":"purchases_voidedpurchases-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"purchases_voidedpurchases-list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p end-time=string The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response. -p max-results=integer Defines how many results the list operation should return. The default number depends on the resource collection. -p start-index=integer Defines the index of the first element to return. This can only be used if indexed paging is enabled. -p start-time=string The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response. -p token=string Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled. -p type=integer The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken.","title":"Optional Method Properties"},{"location":"purchases_voidedpurchases-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reviews_get/","text":"Gets a single review. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews get ... Required Scalar Arguments <package-name> (string) Package name of the app. <review-id> (string) Unique identifier for a review. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p translation-language=string Language localization code. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"reviews_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews get ...","title":"Scopes"},{"location":"reviews_get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <review-id> (string) Unique identifier for a review.","title":"Required Scalar Arguments"},{"location":"reviews_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reviews_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p translation-language=string Language localization code.","title":"Optional Method Properties"},{"location":"reviews_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reviews_list/","text":"Lists all reviews. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews list ... Required Scalar Argument <package-name> (string) Package name of the app. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer How many results the list operation should return. -p start-index=integer The index of the first element to return. -p token=string Pagination token. If empty, list starts at the first review. -p translation-language=string Language localization code. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"reviews_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews list ...","title":"Scopes"},{"location":"reviews_list/#required-scalar-argument","text":"<package-name> (string) Package name of the app.","title":"Required Scalar Argument"},{"location":"reviews_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reviews_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p max-results=integer How many results the list operation should return. -p start-index=integer The index of the first element to return. -p token=string Pagination token. If empty, list starts at the first review. -p translation-language=string Language localization code.","title":"Optional Method Properties"},{"location":"reviews_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reviews_reply/","text":"Replies to a single review, or updates an existing reply. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews reply ... Required Scalar Arguments <package-name> (string) Package name of the app. <review-id> (string) Unique identifier for a review. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReviewsReplyRequest: reply-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reply-text=at The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Reply"},{"location":"reviews_reply/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> reviews reply ...","title":"Scopes"},{"location":"reviews_reply/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <review-id> (string) Unique identifier for a review.","title":"Required Scalar Arguments"},{"location":"reviews_reply/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReviewsReplyRequest: reply-text: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . reply-text=at The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped.","title":"Required Request Value"},{"location":"reviews_reply/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"reviews_reply/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reviews_reply/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"systemapks_variants-create/","text":"Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-create ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Variant: device-spec: screen-density: integer supported-abis: [string] supported-locales: [string] options: rotated: boolean uncompressed-dex-files: boolean uncompressed-native-libraries: boolean variant-id: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-spec screen-density=48 Screen dpi. supported-abis=duo Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\". Each invocation of this argument appends the given value to the array. supported-locales=sit All installed locales represented as BCP-47 strings, e.g. \"en-US\". Each invocation of this argument appends the given value to the array. ..options rotated=false Whether to use the rotated key for signing the system APK. uncompressed-dex-files=true Whether system APK was generated with uncompressed dex files. uncompressed-native-libraries=false Whether system APK was generated with uncompressed native libraries. .. variant-id=49 Output only. The ID of a previously created system APK variant. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Variants Create"},{"location":"systemapks_variants-create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-create ...","title":"Scopes"},{"location":"systemapks_variants-create/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle.","title":"Required Scalar Arguments"},{"location":"systemapks_variants-create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: Variant: device-spec: screen-density: integer supported-abis: [string] supported-locales: [string] options: rotated: boolean uncompressed-dex-files: boolean uncompressed-native-libraries: boolean variant-id: integer can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r .device-spec screen-density=48 Screen dpi. supported-abis=duo Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\". Each invocation of this argument appends the given value to the array. supported-locales=sit All installed locales represented as BCP-47 strings, e.g. \"en-US\". Each invocation of this argument appends the given value to the array. ..options rotated=false Whether to use the rotated key for signing the system APK. uncompressed-dex-files=true Whether system APK was generated with uncompressed dex files. uncompressed-native-libraries=false Whether system APK was generated with uncompressed native libraries. .. variant-id=49 Output only. The ID of a previously created system APK variant.","title":"Required Request Value"},{"location":"systemapks_variants-create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"systemapks_variants-create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"systemapks_variants-create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"systemapks_variants-download/","text":"Downloads a previously created system APK which is suitable for inclusion in a system image. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-download ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. <variant-id> (integer) The ID of a previously created system APK variant. Optional Output Flags The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Variants Download"},{"location":"systemapks_variants-download/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-download ...","title":"Scopes"},{"location":"systemapks_variants-download/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. <variant-id> (integer) The ID of a previously created system APK variant.","title":"Required Scalar Arguments"},{"location":"systemapks_variants-download/#optional-output-flags","text":"The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"systemapks_variants-download/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"systemapks_variants-get/","text":"Returns a previously created system APK variant. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-get ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. <variant-id> (integer) The ID of a previously created system APK variant. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Variants Get"},{"location":"systemapks_variants-get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-get ...","title":"Scopes"},{"location":"systemapks_variants-get/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. <variant-id> (integer) The ID of a previously created system APK variant.","title":"Required Scalar Arguments"},{"location":"systemapks_variants-get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"systemapks_variants-get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"systemapks_variants-list/","text":"Returns the list of previously created system APK variants. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-list ... Required Scalar Arguments <package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Variants List"},{"location":"systemapks_variants-list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> systemapks variants-list ...","title":"Scopes"},{"location":"systemapks_variants-list/#required-scalar-arguments","text":"<package-name> (string) Package name of the app. <version-code> (string) The version code of the App Bundle.","title":"Required Scalar Arguments"},{"location":"systemapks_variants-list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"systemapks_variants-list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_create/","text":"Grant access for a user to the given developer account. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users create ... Required Scalar Argument <parent> (string) Required. The developer account to add the user to. Format: developers/{developer} Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: User: access-state: string developer-account-permissions: [string] email: string expiration-time: string name: string partial: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-state=no Output only. The state of the user's access to the Play Console. developer-account-permissions=nonumy Permissions for the user which apply across the developer account. Each invocation of this argument appends the given value to the array. email=sed Immutable. The user's email address. expiration-time=kasd The time at which the user's access expires, if set. When setting this value, it must always be in the future. name=lorem Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\". partial=true Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also true if this user is the account owner. If this field is true , it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Create"},{"location":"users_create/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users create ...","title":"Scopes"},{"location":"users_create/#required-scalar-argument","text":"<parent> (string) Required. The developer account to add the user to. Format: developers/{developer}","title":"Required Scalar Argument"},{"location":"users_create/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: User: access-state: string developer-account-permissions: [string] email: string expiration-time: string name: string partial: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-state=no Output only. The state of the user's access to the Play Console. developer-account-permissions=nonumy Permissions for the user which apply across the developer account. Each invocation of this argument appends the given value to the array. email=sed Immutable. The user's email address. expiration-time=kasd The time at which the user's access expires, if set. When setting this value, it must always be in the future. name=lorem Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\". partial=true Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also true if this user is the account owner. If this field is true , it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.","title":"Required Request Value"},{"location":"users_create/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"users_create/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_create/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_delete/","text":"Removes all access for the user to the given developer account. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users delete ... Required Scalar Argument <name> (string) Required. The name of the user to delete. Format: developers/{developer}/users/{email} Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Delete"},{"location":"users_delete/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users delete ...","title":"Scopes"},{"location":"users_delete/#required-scalar-argument","text":"<name> (string) Required. The name of the user to delete. Format: developers/{developer}/users/{email}","title":"Required Scalar Argument"},{"location":"users_delete/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_list/","text":"Lists all users with access to a developer account. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users list ... Required Scalar Argument <parent> (string) Required. The developer account to fetch users from. Format: developers/{developer} Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of results to return. This must be set to -1 to disable pagination. -p page-token=string A token received from a previous call to this method, in order to retrieve further results. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"users_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users list ...","title":"Scopes"},{"location":"users_list/#required-scalar-argument","text":"<parent> (string) Required. The developer account to fetch users from. Format: developers/{developer}","title":"Required Scalar Argument"},{"location":"users_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_list/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p page-size=integer The maximum number of results to return. This must be set to -1 to disable pagination. -p page-token=string A token received from a previous call to this method, in order to retrieve further results.","title":"Optional Method Properties"},{"location":"users_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"users_patch/","text":"Updates access for the user to the developer account. Scopes You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users patch ... Required Scalar Argument <name> (string) Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\". Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: User: access-state: string developer-account-permissions: [string] email: string expiration-time: string name: string partial: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-state=nonumy Output only. The state of the user's access to the Play Console. developer-account-permissions=rebum. Permissions for the user which apply across the developer account. Each invocation of this argument appends the given value to the array. email=tempor Immutable. The user's email address. expiration-time=dolore The time at which the user's access expires, if set. When setting this value, it must always be in the future. name=eos Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\". partial=true Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also true if this user is the account owner. If this field is true , it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Optional. The list of fields to be updated. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Patch"},{"location":"users_patch/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/androidpublisher scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/androidpublisher . You can set the scope for this method like this: androidpublisher3 --scope <scope> users patch ...","title":"Scopes"},{"location":"users_patch/#required-scalar-argument","text":"<name> (string) Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".","title":"Required Scalar Argument"},{"location":"users_patch/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: User: access-state: string developer-account-permissions: [string] email: string expiration-time: string name: string partial: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . access-state=nonumy Output only. The state of the user's access to the Play Console. developer-account-permissions=rebum. Permissions for the user which apply across the developer account. Each invocation of this argument appends the given value to the array. email=tempor Immutable. The user's email address. expiration-time=dolore The time at which the user's access expires, if set. When setting this value, it must always be in the future. name=eos Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\". partial=true Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also true if this user is the account owner. If this field is true , it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.","title":"Required Request Value"},{"location":"users_patch/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"users_patch/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"users_patch/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p update-mask=string Optional. The list of fields to be updated.","title":"Optional Method Properties"},{"location":"users_patch/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}