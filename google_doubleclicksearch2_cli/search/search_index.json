{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The doubleclicksearch2 command-line interface (CLI) allows to use most features of the Google Doubleclicksearch service from the comfort of your terminal. By default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's capabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero. If data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools. Everything else about the Doubleclicksearch API can be found at the official documentation site . Installation and Source Code Install the command-line interface with cargo using: cargo install google-doubleclicksearch2-cli Find the source code on github . Usage This documentation was generated from the Doubleclicksearch API at revision 20240227 . The CLI is at version 5.0.4 . doubleclicksearch2 [options] conversion get <agency-id> <advertiser-id> <engine-account-id> <end-date> <row-count> <start-date> <start-row> [-p <v>]... [-o <out>] get-by-customer-id <customer-id> <end-date> <row-count> <start-date> <start-row> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] update-availability (-r <kv>)... [-p <v>]... [-o <out>] reports generate (-r <kv>)... [-p <v>]... [-o <out>] get <report-id> [-p <v>]... [-o <out>] get-file <report-id> <report-fragment> [-p <v>]... [-o <out>] get-id-mapping-file <agency-id> <advertiser-id> [-p <v>]... [-o <out>] request (-r <kv>)... [-p <v>]... [-o <out>] saved-columns list <agency-id> <advertiser-id> [-p <v>]... [-o <out>] doubleclicksearch2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli] Configuration The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with doubleclicksearch2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs. Authentication Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/doubleclicksearch2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation . Application Secrets In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/doubleclicksearch2-secret.json , assuming that the required doubleclicksearch API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation . Debugging Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. doubleclicksearch2 --debug <resource> <method> [options] 2>debug.txt .","title":"Home"},{"location":"#installation-and-source-code","text":"Install the command-line interface with cargo using: cargo install google-doubleclicksearch2-cli Find the source code on github .","title":"Installation and Source Code"},{"location":"#usage","text":"This documentation was generated from the Doubleclicksearch API at revision 20240227 . The CLI is at version 5.0.4 . doubleclicksearch2 [options] conversion get <agency-id> <advertiser-id> <engine-account-id> <end-date> <row-count> <start-date> <start-row> [-p <v>]... [-o <out>] get-by-customer-id <customer-id> <end-date> <row-count> <start-date> <start-row> [-p <v>]... [-o <out>] insert (-r <kv>)... [-p <v>]... [-o <out>] update (-r <kv>)... [-p <v>]... [-o <out>] update-availability (-r <kv>)... [-p <v>]... [-o <out>] reports generate (-r <kv>)... [-p <v>]... [-o <out>] get <report-id> [-p <v>]... [-o <out>] get-file <report-id> <report-fragment> [-p <v>]... [-o <out>] get-id-mapping-file <agency-id> <advertiser-id> [-p <v>]... [-o <out>] request (-r <kv>)... [-p <v>]... [-o <out>] saved-columns list <agency-id> <advertiser-id> [-p <v>]... [-o <out>] doubleclicksearch2 --help Configuration: [--scope <url>]... Specify the authentication a method should be executed in. Each scope requires the user to grant this application permission to use it. If unset, it defaults to the shortest scope url for a particular method. --config-dir <folder> A directory into which we will store our persistent data. Defaults to a user-writable directory that we will create during the first invocation. [default: ~/.google-service-cli]","title":"Usage"},{"location":"#configuration","text":"The program will store all persistent data in the ~/.google-service-cli directory in JSON files prefixed with doubleclicksearch2- . You can change the directory used to store configuration with the --config-dir flag on a per-invocation basis. More information about the various kinds of persistent data are given in the following paragraphs.","title":"Configuration"},{"location":"#authentication","text":"Most APIs require a user to authenticate any request. If this is the case, the scope determines the set of permissions granted. The granularity of these is usually no more than read-only or full-access . If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a method that is read-only, it will ask only for a read-only scope. You may use the --scope flag to specify a scope directly. All applicable scopes are documented in the respective method's CLI documentation. The first time a scope is used, the user is asked for permission. Follow the instructions given by the CLI to grant permissions, or to decline. If a scope was authenticated by the user, the respective information will be stored as JSON in the configuration directory, e.g. ~/.google-service-cli/doubleclicksearch2-token-<scope-hash>.json . No manual management of these tokens is necessary. To revoke granted authentication, please refer to the official documentation .","title":"Authentication"},{"location":"#application-secrets","text":"In order to allow any application to use Google services, it will need to be registered using the Google Developer Console . APIs the application may use are then enabled for it one by one. Most APIs can be used for free and have a daily quota. To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI comes with a default application secret that is configured accordingly. This also means that heavy usage all around the world may deplete the daily quota. You can workaround this limitation by putting your own secrets file at this location: ~/.google-service-cli/doubleclicksearch2-secret.json , assuming that the required doubleclicksearch API was enabled for it. Such a secret file can be downloaded in the Google Developer Console at APIs & auth -> Credentials -> Download JSON and used as is. Learn more about how to setup Google projects and enable APIs using the official documentation .","title":"Application Secrets"},{"location":"#debugging","text":"Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know what exactly led to a particular issue. This is done by allowing all client-server communication to be output to standard error as-is . The --debug flag will print errors using the Debug representation to standard error. You may consider redirecting standard error into a file for ease of use, e.g. doubleclicksearch2 --debug <resource> <method> [options] 2>debug.txt .","title":"Debugging"},{"location":"conversion_get-by-customer-id/","text":"Retrieves a list of conversions from a DoubleClick Search engine account. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion get-by-customer-id ... Required Scalar Arguments <customer-id> (string) Customer ID of a client account in the new Search Ads 360 experience. <end-date> (integer) Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <row-count> (integer) The number of conversions to return per call. <start-date> (integer) First date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <start-row> (integer) The 0-based starting index for retrieving conversions results. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ad-group-id=string Numeric ID of the ad group. -p ad-id=string Numeric ID of the ad. -p advertiser-id=string Numeric ID of the advertiser. -p agency-id=string Numeric ID of the agency. -p campaign-id=string Numeric ID of the campaign. -p criterion-id=string Numeric ID of the criterion. -p engine-account-id=string Numeric ID of the engine account. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get By Customer Id"},{"location":"conversion_get-by-customer-id/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion get-by-customer-id ...","title":"Scopes"},{"location":"conversion_get-by-customer-id/#required-scalar-arguments","text":"<customer-id> (string) Customer ID of a client account in the new Search Ads 360 experience. <end-date> (integer) Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <row-count> (integer) The number of conversions to return per call. <start-date> (integer) First date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <start-row> (integer) The 0-based starting index for retrieving conversions results.","title":"Required Scalar Arguments"},{"location":"conversion_get-by-customer-id/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"conversion_get-by-customer-id/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ad-group-id=string Numeric ID of the ad group. -p ad-id=string Numeric ID of the ad. -p advertiser-id=string Numeric ID of the advertiser. -p agency-id=string Numeric ID of the agency. -p campaign-id=string Numeric ID of the campaign. -p criterion-id=string Numeric ID of the criterion. -p engine-account-id=string Numeric ID of the engine account.","title":"Optional Method Properties"},{"location":"conversion_get-by-customer-id/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"conversion_get/","text":"Retrieves a list of conversions from a DoubleClick Search engine account. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion get ... Required Scalar Arguments <agency-id> (string) Numeric ID of the agency. <advertiser-id> (string) Numeric ID of the advertiser. <engine-account-id> (string) Numeric ID of the engine account. <end-date> (integer) Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <row-count> (integer) The number of conversions to return per call. <start-date> (integer) First date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <start-row> (integer) The 0-based starting index for retrieving conversions results. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional Method Properties You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ad-group-id=string Numeric ID of the ad group. -p ad-id=string Numeric ID of the ad. -p campaign-id=string Numeric ID of the campaign. -p criterion-id=string Numeric ID of the criterion. -p customer-id=string Customer ID of a client account in the new Search Ads 360 experience. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"conversion_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion get ...","title":"Scopes"},{"location":"conversion_get/#required-scalar-arguments","text":"<agency-id> (string) Numeric ID of the agency. <advertiser-id> (string) Numeric ID of the advertiser. <engine-account-id> (string) Numeric ID of the engine account. <end-date> (integer) Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <row-count> (integer) The number of conversions to return per call. <start-date> (integer) First date (inclusive) on which to retrieve conversions. Format is yyyymmdd. <start-row> (integer) The 0-based starting index for retrieving conversions results.","title":"Required Scalar Arguments"},{"location":"conversion_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"conversion_get/#optional-method-properties","text":"You may set the following properties to further configure the call. Please note that -p is followed by one or more key-value-pairs, and is called like this -p k1=v1 k2=v2 even though the listing below repeats the -p for completeness. -p ad-group-id=string Numeric ID of the ad group. -p ad-id=string Numeric ID of the ad. -p campaign-id=string Numeric ID of the campaign. -p criterion-id=string Numeric ID of the criterion. -p customer-id=string Customer ID of a client account in the new Search Ads 360 experience.","title":"Optional Method Properties"},{"location":"conversion_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"conversion_insert/","text":"Inserts a batch of new conversions into DoubleClick Search. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion insert ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConversionList: kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=et Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Insert"},{"location":"conversion_insert/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion insert ...","title":"Scopes"},{"location":"conversion_insert/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConversionList: kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=et Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.","title":"Required Request Value"},{"location":"conversion_insert/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"conversion_insert/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"conversion_insert/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"conversion_update-availability/","text":"Updates the availabilities of a batch of floodlight activities in DoubleClick Search. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion update-availability ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpdateAvailabilityRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update Availability"},{"location":"conversion_update-availability/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion update-availability ...","title":"Scopes"},{"location":"conversion_update-availability/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: UpdateAvailabilityRequest: can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.","title":"Required Request Value"},{"location":"conversion_update-availability/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"conversion_update-availability/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"conversion_update-availability/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"conversion_update/","text":"Updates a batch of conversions in DoubleClick Search. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion update ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConversionList: kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=magna Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList. About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Update"},{"location":"conversion_update/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> conversion update ...","title":"Scopes"},{"location":"conversion_update/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ConversionList: kind: string can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . kind=magna Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.","title":"Required Request Value"},{"location":"conversion_update/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"conversion_update/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"conversion_update/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_generate/","text":"Generates and returns a report immediately. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports generate ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportRequest: download-format: string include-deleted-entities: boolean include-removed-entities: boolean max-rows-per-file: integer report-scope: ad-group-id: string ad-id: string advertiser-id: string agency-id: string campaign-id: string engine-account-id: string keyword-id: string report-type: string row-count: integer start-row: integer statistics-currency: string time-range: changed-attributes-since-timestamp: string changed-metrics-since-timestamp: string end-date: string start-date: string verify-single-time-zone: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . download-format=no Format that the report should be returned in. Currently csv or tsv is supported. include-deleted-entities=true Determines if removed entities should be included in the report. Defaults to false . Deprecated, please use includeRemovedEntities instead. include-removed-entities=false Determines if removed entities should be included in the report. Defaults to false . max-rows-per-file=99 Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000 , inclusive. report-scope ad-group-id=takimata DS ad group ID. ad-id=amet. DS ad ID. advertiser-id=duo DS advertiser ID. agency-id=ipsum DS agency ID. campaign-id=gubergren DS campaign ID. engine-account-id=lorem DS engine account ID. keyword-id=gubergren DS keyword ID. .. report-type=eos Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword , each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type. row-count=97 Synchronous report only. The maximum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000 , inclusive. Defaults to 10000 . start-row=84 Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000 , inclusive. Defaults to 0 . statistics-currency=ipsum Specifies the currency in which monetary will be returned. Possible values are: usd , agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower). time-range changed-attributes-since-timestamp=invidunt Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed attribute reports work. changed-metrics-since-timestamp=amet Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed metrics reports work. end-date=duo Inclusive date in YYYY-MM-DD format. start-date=ipsum Inclusive date in YYYY-MM-DD format. .. verify-single-time-zone=false If true , the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Generate"},{"location":"reports_generate/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports generate ...","title":"Scopes"},{"location":"reports_generate/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportRequest: download-format: string include-deleted-entities: boolean include-removed-entities: boolean max-rows-per-file: integer report-scope: ad-group-id: string ad-id: string advertiser-id: string agency-id: string campaign-id: string engine-account-id: string keyword-id: string report-type: string row-count: integer start-row: integer statistics-currency: string time-range: changed-attributes-since-timestamp: string changed-metrics-since-timestamp: string end-date: string start-date: string verify-single-time-zone: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . download-format=no Format that the report should be returned in. Currently csv or tsv is supported. include-deleted-entities=true Determines if removed entities should be included in the report. Defaults to false . Deprecated, please use includeRemovedEntities instead. include-removed-entities=false Determines if removed entities should be included in the report. Defaults to false . max-rows-per-file=99 Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000 , inclusive. report-scope ad-group-id=takimata DS ad group ID. ad-id=amet. DS ad ID. advertiser-id=duo DS advertiser ID. agency-id=ipsum DS agency ID. campaign-id=gubergren DS campaign ID. engine-account-id=lorem DS engine account ID. keyword-id=gubergren DS keyword ID. .. report-type=eos Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword , each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type. row-count=97 Synchronous report only. The maximum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000 , inclusive. Defaults to 10000 . start-row=84 Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000 , inclusive. Defaults to 0 . statistics-currency=ipsum Specifies the currency in which monetary will be returned. Possible values are: usd , agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower). time-range changed-attributes-since-timestamp=invidunt Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed attribute reports work. changed-metrics-since-timestamp=amet Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed metrics reports work. end-date=duo Inclusive date in YYYY-MM-DD format. start-date=ipsum Inclusive date in YYYY-MM-DD format. .. verify-single-time-zone=false If true , the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false .","title":"Required Request Value"},{"location":"reports_generate/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"reports_generate/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_generate/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_get-file/","text":"Downloads a report file encoded in UTF-8. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get-file ... Required Scalar Arguments <report-id> (string) ID of the report. <report-fragment> (integer) The index of the report fragment to download. Optional Output Flags The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get File"},{"location":"reports_get-file/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get-file ...","title":"Scopes"},{"location":"reports_get-file/#required-scalar-arguments","text":"<report-id> (string) ID of the report. <report-fragment> (integer) The index of the report fragment to download.","title":"Required Scalar Arguments"},{"location":"reports_get-file/#optional-output-flags","text":"The method's return value is a byte stream of the downloadable resource. -o out out specifies the destination to which to write the server's result to. It will be a byte stream of the downloadable resource. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_get-file/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_get-id-mapping-file/","text":"Downloads a csv file(encoded in UTF-8) that contains ID mappings between legacy SA360 and new SA360. The file includes all children entities of the given advertiser(e.g. engine accounts, campaigns, ad groups, etc.) that exist in both legacy SA360 and new SA360. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get-id-mapping-file ... Required Scalar Arguments <agency-id> (string) Legacy SA360 agency ID. <advertiser-id> (string) Legacy SA360 advertiser ID. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get Id Mapping File"},{"location":"reports_get-id-mapping-file/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get-id-mapping-file ...","title":"Scopes"},{"location":"reports_get-id-mapping-file/#required-scalar-arguments","text":"<agency-id> (string) Legacy SA360 agency ID. <advertiser-id> (string) Legacy SA360 advertiser ID.","title":"Required Scalar Arguments"},{"location":"reports_get-id-mapping-file/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. As this method supports media download , you may specify the -p alt=media flag to set the output to be an octet stream of the underlying media. In that case, you will not receive JSON output anymore. -o out out specifies the destination to which to write the server's result to. It will either be a JSON-encoded structure, or the media file you are downloading. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_get-id-mapping-file/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_get/","text":"Polls for the status of a report request. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get ... Required Scalar Argument <report-id> (string) ID of the report request being polled. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Get"},{"location":"reports_get/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports get ...","title":"Scopes"},{"location":"reports_get/#required-scalar-argument","text":"<report-id> (string) ID of the report request being polled.","title":"Required Scalar Argument"},{"location":"reports_get/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_get/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"reports_request/","text":"Inserts a report request into the reporting system. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports request ... Required Request Value The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportRequest: download-format: string include-deleted-entities: boolean include-removed-entities: boolean max-rows-per-file: integer report-scope: ad-group-id: string ad-id: string advertiser-id: string agency-id: string campaign-id: string engine-account-id: string keyword-id: string report-type: string row-count: integer start-row: integer statistics-currency: string time-range: changed-attributes-since-timestamp: string changed-metrics-since-timestamp: string end-date: string start-date: string verify-single-time-zone: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . download-format=ut Format that the report should be returned in. Currently csv or tsv is supported. include-deleted-entities=true Determines if removed entities should be included in the report. Defaults to false . Deprecated, please use includeRemovedEntities instead. include-removed-entities=true Determines if removed entities should be included in the report. Defaults to false . max-rows-per-file=51 Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000 , inclusive. report-scope ad-group-id=est DS ad group ID. ad-id=gubergren DS ad ID. advertiser-id=ea DS advertiser ID. agency-id=dolor DS agency ID. campaign-id=lorem DS campaign ID. engine-account-id=eos DS engine account ID. keyword-id=labore DS keyword ID. .. report-type=sed Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword , each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type. row-count=31 Synchronous report only. The maximum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000 , inclusive. Defaults to 10000 . start-row=21 Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000 , inclusive. Defaults to 0 . statistics-currency=no Specifies the currency in which monetary will be returned. Possible values are: usd , agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower). time-range changed-attributes-since-timestamp=stet Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed attribute reports work. changed-metrics-since-timestamp=kasd Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed metrics reports work. end-date=et Inclusive date in YYYY-MM-DD format. start-date=sed Inclusive date in YYYY-MM-DD format. .. verify-single-time-zone=true If true , the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false . About Cursors The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Request"},{"location":"reports_request/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> reports request ...","title":"Scopes"},{"location":"reports_request/#required-request-value","text":"The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure. In the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely. For example, a structure like this: ReportRequest: download-format: string include-deleted-entities: boolean include-removed-entities: boolean max-rows-per-file: integer report-scope: ad-group-id: string ad-id: string advertiser-id: string agency-id: string campaign-id: string engine-account-id: string keyword-id: string report-type: string row-count: integer start-row: integer statistics-currency: string time-range: changed-attributes-since-timestamp: string changed-metrics-since-timestamp: string end-date: string start-date: string verify-single-time-zone: boolean can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time. -r . download-format=ut Format that the report should be returned in. Currently csv or tsv is supported. include-deleted-entities=true Determines if removed entities should be included in the report. Defaults to false . Deprecated, please use includeRemovedEntities instead. include-removed-entities=true Determines if removed entities should be included in the report. Defaults to false . max-rows-per-file=51 Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000 , inclusive. report-scope ad-group-id=est DS ad group ID. ad-id=gubergren DS ad ID. advertiser-id=ea DS advertiser ID. agency-id=dolor DS agency ID. campaign-id=lorem DS campaign ID. engine-account-id=eos DS engine account ID. keyword-id=labore DS keyword ID. .. report-type=sed Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword , each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type. row-count=31 Synchronous report only. The maximum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000 , inclusive. Defaults to 10000 . start-row=21 Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000 , inclusive. Defaults to 0 . statistics-currency=no Specifies the currency in which monetary will be returned. Possible values are: usd , agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower). time-range changed-attributes-since-timestamp=stet Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed attribute reports work. changed-metrics-since-timestamp=kasd Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z . See additional references on how changed metrics reports work. end-date=et Inclusive date in YYYY-MM-DD format. start-date=sed Inclusive date in YYYY-MM-DD format. .. verify-single-time-zone=true If true , the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false .","title":"Required Request Value"},{"location":"reports_request/#about-cursors","text":"The cursor position is key to comfortably set complex nested structures. The following rules apply: The cursor position is always set relative to the current one, unless the field name starts with the . character. Fields can be nested such as in -r f.s.o . The cursor position is set relative to the top-level structure if it starts with . , e.g. -r .s.s You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify -r struct.sub_struct=bar . You can move the cursor one level up by using .. . Each additional . moves it up one additional level. E.g. ... would go three levels up.","title":"About Cursors"},{"location":"reports_request/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"reports_request/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"},{"location":"saved-columns_list/","text":"Retrieve the list of saved columns for a specified advertiser. Scopes You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> saved-columns list ... Required Scalar Arguments <agency-id> (string) DS ID of the agency. <advertiser-id> (string) DS ID of the advertiser. Optional Output Flags The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output. Optional General Properties The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"List"},{"location":"saved-columns_list/#scopes","text":"You will need authorization for the https://www.googleapis.com/auth/doubleclicksearch scope to make a valid call. If unset, the scope for this method defaults to https://www.googleapis.com/auth/doubleclicksearch . You can set the scope for this method like this: doubleclicksearch2 --scope <scope> saved-columns list ...","title":"Scopes"},{"location":"saved-columns_list/#required-scalar-arguments","text":"<agency-id> (string) DS ID of the agency. <advertiser-id> (string) DS ID of the advertiser.","title":"Required Scalar Arguments"},{"location":"saved-columns_list/#optional-output-flags","text":"The method's return value a JSON encoded structure, which will be written to standard output by default. -o out out specifies the destination to which to write the server's result to. It will be a JSON-encoded structure. The destination may be - to indicate standard output, or a filepath that is to contain the received bytes. If unset, it defaults to standard output.","title":"Optional Output Flags"},{"location":"saved-columns_list/#optional-general-properties","text":"The following properties can configure any call, and are not specific to this method. -p $-xgafv=string V1 error format. -p access-token=string OAuth access token. -p alt=string Data format for response. -p callback=string JSONP -p fields=string Selector specifying which fields to include in a partial response. -p key=string API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. -p oauth-token=string OAuth 2.0 token for the current user. -p pretty-print=boolean Returns response with indentations and line breaks. -p quota-user=string Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. -p upload-type=string Legacy upload protocol for media (e.g. \"media\", \"multipart\"). -p upload-protocol=string Upload protocol for media (e.g. \"raw\", \"multipart\").","title":"Optional General Properties"}]}